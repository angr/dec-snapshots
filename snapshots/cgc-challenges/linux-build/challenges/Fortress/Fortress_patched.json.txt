{"4206592:_init": "extern struct_0 *g_40e564;\n
\n
int _init()\n
{\n
    if (g_40e564)\n
    {\n
        g_40e564();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__cxa_atexit": "// attributes: PLT stub\n
int __cxa_atexit()\n
{\n
    ::libstdc++.so::__cxa_atexit();\n
    return;\n
}\n
", "4206688:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4206720:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4206736:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4206752:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206768:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libstdc++.so::cgc_deallocate();\n
    return;\n
}\n
", "4206784:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4206800:sub_4030d0": "int sub_4030d0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206806:sub_4030d6": null, "4206816:_GLOBAL__sub_I_service.cc": "extern char __dso_handle;\n
extern unsigned int cgc_g_fort;\n
\n
int _GLOBAL__sub_I_service.cc()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = v5;\n
    CFortress::__ctor__();\n
    v0 = &__dso_handle;\n
    return __cxa_atexit(CFortress::__base_dtor__, &cgc_g_fort);\n
}\n
", "4206875:sub_40311b": null, "4206880:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206923:sub_40314b": null, "4206924:sub_40314c": "int sub_40314c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206928:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206932:sub_403154": null, "4206944:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 46087;\n
    v6 = v5 + 874;\n
    v7 = v5 + 874;\n
    if (v7 == v6)\n
        return v5 + 874;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4206995:sub_403193": "int sub_403193()\n
{\n
}\n
", "4207001:sub_403199": "int sub_403199()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207008:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 46023;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 874;\n
    v9 = (v6 + 874 - (v6 + 874) >> 31) + (874 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207079:sub_4031e7": "int sub_4031e7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207088:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40e558;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40e558)\n
    {\n
        v0 = __dso_handle;\n
        sub_4030d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207163:sub_40323b": "int sub_40323b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207168:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207177:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207181:sub_40324d": null, "4207184:cgc_calloc": "extern unsigned int g_heap;\n
\n
int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v4;  // eax\n
\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, ecx<4>, Load(addr=stack_base+8, size=4, endness=Iend_LE), 0x0<32>))\n
        return 0;\n
    v4 = cgc_malloc_alloc(&g_heap);\n
    if (v4)\n
    {\n
        v0 = v1 * a0;\n
        cgc_memset(v4, 0);\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4207274:sub_4032aa": null, "4207280:cgc_isascii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isascii(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 1;\n
}\n
", "4207308:sub_4032cc": null, "4207312:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 2;\n
}\n
", "4207340:sub_4032ec": null, "4207344:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 16;\n
}\n
", "4207372:sub_40330c": null, "4207376:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 14;\n
}\n
", "4207404:sub_40332c": null, "4207408:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 12;\n
}\n
", "4207436:sub_40334c": null, "4207440:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 4;\n
}\n
", "4207468:sub_40336c": null, "4207472:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 8;\n
}\n
", "4207500:sub_40338c": null, "4207504:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 64;\n
}\n
", "4207532:sub_4033ac": null, "4207536:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 32;\n
}\n
", "4207564:sub_4033cc": null, "4207568:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[17764 + v0] & 4294967168;\n
}\n
", "4207596:sub_4033ec": null, "4207600:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[17764 + v1] & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[17764 + (v1 ^ 32)] & 2) >> 1);\n
    return v1 - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[17764 + v1] & 2) >> 1);\n
}\n
", "4207658:sub_40342a": null, "4207664:cgc_toupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[17764 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4207697:sub_403451": null, "4207712:cgc_digittoint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_digittoint(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = v1 ^ 32;\n
    if (!((&_GLOBAL_OFFSET_TABLE_)[17764 + v1] & 8))\n
        v2 = v1;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[17764 + v2] & 2))\n
        return v2 - 48;\n
    v3 = v2 - 65;\n
    v4 = v2 - 55;\n
    if (v3 < 6)\n
        return v4;\n
    return 0;\n
}\n
", "4207773:sub_40349d": null, "4207776:cgc_tolower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[17764 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4207809:sub_4034c1": null, "4207824:__cxa_pure_virtual": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxa_pure_virtual()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc__terminate();\n
    cgc_exit();\n
    return;\n
}\n
", "4207856:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v2;\n
    cgc__terminate();\n
    cgc_fflush();\n
    return;\n
}\n
", "4207888:cgc_fflush": "int cgc_fflush(unsigned int v3[4])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4[4];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
    void* v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v3;\n
    v5 = v4[2];\n
    if (v5 == -1)\n
        return 0;\n
    if (v4[1] != 1)\n
    {\n
        v1 = v4[0];\n
        v6 = 16 + v4 + v5;\n
        v7 = v4[3] - v5;\n
        v8 = 0;\n
        while (v7 > v8)\n
        {\n
            v0 = &v2;\n
            v9 = cgc_transmit(v1, v6 + v8, v7 - v8);\n
            v8 += *(&v2);\n
            if (v9)\n
            {\n
                v10 = -1;\n
                v4 = v3;\n
                goto LABEL_403589;\n
            }\n
        }\n
        v4 = v3;\n
    }\n
    v10 = 0;\n
LABEL_403589:\n
    *((v4 + 12)) = 0;\n
    *((v4 + 8)) = 0;\n
    return v10;\n
}\n
", "4208031:sub_40359f": null, "4208032:cgc_fbuffered": "int cgc_fbuffered(unsigned int v4[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v5;  // edx\n
    unsigned int v6[4];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // eax\n
    void* v11;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v12;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = a0;\n
    v6 = v4;\n
    v7 = v6[2];\n
    if (v7 == -1)\n
    {\n
        *((v6 + 8)) = -(v5 < 1);\n
        *((v6 + 12)) = 0;\n
        return -(v5 < 1);\n
    }\n
    if (v6[1] == 1)\n
    {\n
        v12 = &v6[3];\n
    }\n
    else\n
    {\n
        v2 = v6[0];\n
        v8 = 16 + v6 + v7;\n
        v1 = &v6[3];\n
        v9 = v6[3] - v7;\n
        v11 = 0;\n
        while (v9 > v11)\n
        {\n
            v0 = &v3;\n
            v10 = cgc_transmit(v2, v8 + v11, v9 - v11);\n
            v11 += *(&v3);\n
            if (v10)\n
                break;\n
        }\n
        v6 = v4;\n
        v5 = a0;\n
        v12 = v1;\n
    }\n
    *(v12) = 0;\n
}\n
", "4208188:sub_40363c": null, "4208192:cgc_fread": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1[4])\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4[4];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // edi\n
    void* v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edx\n
    unsigned int v12;  // ecx\n
\n
    v4 = a1;\n
    v5 = v4[2];\n
    if (v5 == v4[3])\n
    {\n
        v4[3] = 0;\n
        v4[2] = 0;\n
        v0 = &v2;\n
        if (!cgc_receive(v4[0], v4 + 1, 0x400))\n
        {\n
            v6 = *(&v2);\n
            if (v6)\n
                v4[3] = v6;\n
        }\n
        v5 = v4[2];\n
    }\n
    v7 = a0;\n
    v10 = v3;\n
    if (v5 != -1)\n
    {\n
        v8 = v4[3] - v5;\n
        if (v4[3] - v5 > v7)\n
            v8 = v7;\n
        v1 = v8;\n
        cgc_memcpy();\n
        v9 = v4[2] + v8;\n
        v4[2] = v9;\n
        if (v9 == v4[3])\n
        {\n
            v4[3] = 0;\n
            v4[2] = 0;\n
        }\n
        v10 = v3;\n
        if (!(v8 < v7))\n
            goto LABEL_40372f;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        if (0 >= v7)\n
        {\n
LABEL_40372f:\n
            return v8;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = &v1;\n
        if (cgc_receive(v4[0], v10 + v8, v7 - v8))\n
            return -1;\n
        v12 = v1;\n
        v10 = v3;\n
        if (!v12)\n
            return -1;\n
        v8 += v12;\n
        if (v8 >= v7)\n
            return v8;\n
    }\n
}\n
", "4208441:sub_403739": null, "4208448:cgc_freaduntil": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_freaduntil(unsigned int v6, unsigned int a0, char a1, unsigned int a2[4])\n
{\n
    int tmp_19;  // tmp #19\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    char *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7[4];  // ebp\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    struct_0 *v13;  // eax, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
    char *v15;  // esi, Other Possible Types: unsigned int\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    struct_0 *v18;  // eax, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // eax\n
\n
    v7 = a2;\n
    v8 = a0;\n
    v9 = a1;\n
    tmp_19 = v8;\n
    if (tmp_19 == 1)\n
    {\n
        v16 = 0;\n
        if (!(0 == v2))\n
            goto LABEL_4038fb;\n
    }\n
    else\n
    {\n
        v3 = v7 + 1;\n
        v15 = 0;\n
        v2 = v8 - 1;\n
        while (true)\n
        {\n
            v12 = v7[2];\n
            if (v12 == -1)\n
            {\n
                v0 = &v4;\n
                if (!cgc_receive(v7[0], &v1, 1))\n
                {\n
                    v13 = &v1;\n
                    if (!(!*(&v4)))\n
                        goto LABEL_40381e;\n
                    goto LABEL_4038f0;\n
                }\n
            }\n
            if (v12 == v7[3])\n
            {\n
                v7[3] = 0;\n
                v7[2] = 0;\n
                v0 = &v5;\n
                if (!(!cgc_receive(v7[0], v3, 0x400)))\n
                    goto LABEL_4038f0;\n
                v11 = *(&v5);\n
                if (!v11)\n
                    goto LABEL_4038f0;\n
                v7[3] = v11;\n
                if ([D] x86g_calculate_condition(0x8<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
                    goto LABEL_4038f0;\n
                v12 = v7[2];\n
            }\n
            v7[2] = v12 + 1;\n
            v13 = 16 + v12 + v7;\n
LABEL_40381e:\n
            v14 = *(v13);\n
            if (v14 == v9)\n
                break;\n
            *((v6 + v15)) = v14;\n
            v15 += 1;\n
            v16 = v2;\n
            if (v16 == v15)\n
                goto LABEL_403858;\n
        }\n
        v16 = v15;\n
        if (!(v15 == v2))\n
            goto LABEL_4038fb;\n
    }\n
LABEL_403858:\n
    v2 = v16;\n
    v3 = v7 + 1;\n
    while (true)\n
    {\n
        v17 = v7[2];\n
        if (v17 == -1)\n
            break;\n
        if (v17 == v7[3])\n
        {\n
            v7[3] = 0;\n
            v7[2] = 0;\n
            v0 = &v5;\n
            if (!(!cgc_receive(v7[0], v3, 0x400)))\n
                goto LABEL_4038f0;\n
            v19 = *(&v5);\n
            if (!v19)\n
                goto LABEL_4038f0;\n
            v7[3] = v19;\n
            if ([D] x86g_calculate_condition(0x8<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
                goto LABEL_4038f0;\n
            v17 = v7[2];\n
        }\n
        v7[2] = v17 + 1;\n
        v18 = 16 + v17 + v7;\n
LABEL_40387b:\n
        v20 = *(v18);\n
        if (v20 == v9)\n
        {\n
            v16 = v2;\n
LABEL_4038fb:\n
            *((v6 + v16)) = 0;\n
            return v16;\n
        }\n
    }\n
    v0 = &v4;\n
    if (!cgc_receive(v7[0], &v1, 1))\n
    {\n
        v18 = &v1;\n
        if (!(!*(&v4)))\n
            goto LABEL_40387b;\n
    }\n
LABEL_4038f0:\n
    return -1;\n
}\n
", "4208609:sub_4037e1": null, "4208745:sub_403869": null, "4208844:sub_4038cc": null, "4208907:sub_40390b": null, "4208912:cgc_free": "extern unsigned int g_heap;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return malloc_free(&g_heap);\n
}\n
", "4208952:sub_403938": null, "4208960:cgc_fwrite": "int cgc_fwrite(unsigned int v2, unsigned int a0, unsigned int a1[4])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3[4];  // edi\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ebp\n
    void* v7;  // edi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    void* v9;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v10[4];  // ecx\n
\n
    v3 = a1;\n
    v4 = a0;\n
    if (v3[2] != -1)\n
    {\n
        if (v4 >= 0x400)\n
        {\n
            cgc_fflush(v3);\n
        }\n
        else\n
        {\n
            v5 = v3[3];\n
            v9 = 0;\n
            if (v5 + v4 >= 0x400)\n
            {\n
                v9 = 0x400 - v5;\n
                cgc_memcpy(16 + v5 + v3, v2);\n
                v3[3] = v3[3] + v9;\n
                cgc_fflush(v3);\n
            }\n
            if (v9 >= v4)\n
                return v9;\n
            v10 = v3;\n
            cgc_memcpy(16 + v10[3] + v10, v2 + v9);\n
            a1[3] = a1[3] + v4 - v9;\n
            return a0;\n
        }\n
    }\n
    v6 = v3[0];\n
    v7 = 0;\n
    while (true)\n
    {\n
        if (v7 >= v4)\n
            return a0;\n
        v0 = &v1;\n
        v8 = cgc_transmit(v6, v2 + v7, v4 - v7);\n
        v7 += *(&v1);\n
        if (v8)\n
            return -1;\n
    }\n
}\n
", "4209192:sub_403a28": null, "4209200:cgc_malloc": "extern unsigned int g_heap;\n
\n
int cgc_malloc(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc_malloc_alloc(&g_heap);\n
}\n
", "4209240:sub_403a58": null, "4209248:cgc_malloc_alloc": "extern char g_40a108;\n
extern char g_40a13a;\n
\n
int cgc_malloc_alloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v4;  // [bp-0x14]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edi\n
    unsigned int v43;  // eax\n
\n
    v9 = 0;\n
    if (a0 < 0)\n
    {\n
LABEL_403d74:\n
        return v9;\n
    }\n
    v10 = v8;\n
    v11 = a0 + 3 & -0x4;\n
    if (!(a0 + 3 & -0x4))\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 <= 15)\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 > 131071)\n
    {\n
        v14 = v11 + 4103 & -0x1000;\n
        v0 = &v4;\n
        v9 = 0;\n
        if (!cgc_allocate(v14, 0))\n
        {\n
            v17 = *(&v4);\n
            *(v17) = v8;\n
            *((v17 + 4)) = v14;\n
            v9 = v17 + 8;\n
            goto LABEL_403d74;\n
        }\n
    }\n
    v12 = v11 + 23;\n
    v13 = v12 & -0x10;\n
    v2 = v13;\n
    if (!(v12 & -0x10))\n
    {\n
        v15 = -1;\n
        v16 = *((v10 + -0x4));\n
        if (!v16)\n
            goto LABEL_0x403ce4;\n
        else\n
            goto LABEL_0x403d00;\n
    }\n
    else if (v13 < 513)\n
    {\n
        v15 = (v12 >> 4) + 2;\n
        v16 = 0;\n
    }\n
    else if (v13 <= 0x1200)\n
    {\n
        v15 = (v13 - 0x200 >> 7) + 34;\n
        v16 = *((v10 + v15 * 4));\n
        if (!v16)\n
            goto LABEL_0x403ce4;\n
        else\n
            goto LABEL_0x403d00;\n
    }\n
    else\n
    {\n
        v15 = 130;\n
        if (v13 <= 0x20000)\n
        {\n
            v15 = (v13 - 0x1200 >> 11) + 66;\n
            v16 = *((v10 + v15 * 4));\n
            if (!v16)\n
                goto LABEL_0x403ce4;\n
            else\n
                goto LABEL_0x403d00;\n
        }\n
    }\n
}\n
", "4210096:tiny_alloc": "int tiny_alloc()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned short *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned short *v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edi\n
    struct struct_0 *v9[1160];  // ecx\n
    struct struct_0 *v10[1160];  // esi\n
    unsigned int v11;  // ebp\n
    unsigned short *v12;  // eax, Other Possible Types: unsigned int\n
    unsigned short v13[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edi\n
\n
    v8 = v7;\n
    v10 = v9;\n
    if (v7 <= 15)\n
    {\n
        v11 = v7 / 4 - 1;\n
    }\n
    else if (v7 <= 0x200)\n
    {\n
        v11 = (v7 >> 4) + 2;\n
    }\n
    else if (v7 <= 0x1200)\n
    {\n
        v11 = (v7 - 0x200 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v11 = 130;\n
        if (v7 <= 0x20000)\n
            v11 = (v7 - 0x1200 >> 11) + 66;\n
    }\n
    v12 = v9[v11];\n
    if (v12)\n
    {\n
        v9[v11] = *(&v12);\n
        return v9[v11];\n
    }\n
    v13 = v9[1155 + v11];\n
    if (v13)\n
    {\n
        v14 = v13[0];\n
        v15 = v13[1];\n
    }\n
    else\n
    {\n
        v16 = v10[1158];\n
        if (v16)\n
        {\n
            v12 = v10[1159];\n
        }\n
        else\n
        {\n
            v0 = &v5;\n
            if (cgc_allocate(0x200000, 0))\n
            {\n
                v10[1158] = 0;\n
                return 0;\n
            }\n
            v17 = *(&v5);\n
            v4 = v17 + 1048575;\n
            v16 = v4 & -0x100000;\n
            v1 = v17;\n
            v2 = v16;\n
            if (v16 > v1)\n
            {\n
                cgc_deallocate(v1);\n
                v16 = v2;\n
            }\n
            v18 = v1 + 0x200000;\n
            v3 = v16 + 0x100000;\n
            v1 = v18 - v3;\n
            if (v18 > v3)\n
            {\n
                cgc_deallocate(v3);\n
                v16 = v2;\n
            }\n
            *(524 + &v10[0] + (v4 >> 20)) = 1;\n
            v10[1158] = v16;\n
            v12 = 0;\n
            if (!v16)\n
                return 0;\n
        }\n
        v13 = v12 + v16;\n
        v10[1155 + v11] = v13;\n
        *((v12 + v16)) = v8;\n
        *((v12 + v16 + 2)) = v8;\n
        v19 = v12 + 0x1000;\n
        v10[1159] = v19;\n
        if (v19 == 0x100000)\n
            v10[1158] = 0;\n
        v14 = v8;\n
        v15 = v8;\n
    }\n
    v20 = v8 + v15;\n
    *((v13 + 2)) = v20;\n
    if (v14 + v20 < 4097)\n
        return v15 + v13;\n
    v10[1155 + v11] = 0;\n
}\n
", "4210527:sub_403f5f": null, "4210528:malloc_free": "int malloc_free(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v15;  // cl\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // edx\n
    unsigned int v38;  // eax\n
\n
    v7 = v11;\n
    v6 = v12;\n
    v5 = v13;\n
    v38 = a0;\n
    if (!v38)\n
    {\n
LABEL_404281:\n
        return v38;\n
    }\n
    v23 = v10;\n
    v15 = *((v23 + (v38 >> 20) + 524));\n
    if (v15 != 2)\n
    {\n
        if (v15 == 1)\n
        {\n
            v24 = *((v38 & -0x1000));\n
            if (v24 <= 15)\n
            {\n
                v17 = v24 / 4 - 1;\n
                goto LABEL_4040e6;\n
            }\n
            if (v24 <= 0x200)\n
            {\n
                v17 = (v24 >> 4) + 2;\n
                goto LABEL_4040e6;\n
            }\n
        }\n
        if (!(!v15))\n
            goto LABEL_404281;\n
        if ((v38 & 4095) != 8)\n
        {\n
            v19 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_4042cd;\n
        }\n
        else\n
        {\n
            v20 = *((v38 - 8));\n
            if (v20 != v23)\n
            {\n
                v22 = \"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\";\n
                v1 = v23;\n
            }\n
            else\n
            {\n
                v20 = *((v38 - 4));\n
                if (v20 - 0x20000 <= 2147356671 && !(v20 & 4095))\n
                {\n
                    v38 = cgc_deallocate(v38 - 8);\n
                    goto LABEL_404281;\n
                }\n
                v22 = \"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\";\n
            }\n
            v0 = v20;\n
            v38 = cgc_heap_error(v22, v38);\n
        }\n
    }\n
    else if (!(v38 & 7))\n
    {\n
        v24 = v38 - 8;\n
        v16 = *((v24 + 4));\n
        if ((v16 & 1))\n
        {\n
            v19 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_4042cd;\n
        }\n
        else if (v16 - 131073 <= -131058)\n
        {\n
            v19 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_4042cd;\n
        }\n
        else\n
        {\n
            v21 = *(v24);\n
            v12 = v24 - *(v24);\n
            if (!*(v24))\n
                v12 = v21;\n
            v23 = v16 + v24;\n
            v2 = v24;\n
            if (v12)\n
            {\n
                v4 = v23;\n
                v3 = *((v12 + 4));\n
                if (!((v3 & -2) == v21))\n
                    goto LABEL_4042e4;\n
                v23 = v4;\n
                v24 = v3;\n
                if (*(v23) == v16)\n
                {\n
                    if ((v24 & 1))\n
                    {\n
                        if (v21 <= 15)\n
                        {\n
                            v25 = v24 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v21 <= 0x200)\n
                            {\n
                                v25 = (v24 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v21 <= 0x1200)\n
                                {\n
                                    v25 = (v21 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v25 = 130;\n
                                    if (v21 <= 0x20000)\n
                                        v25 = (v21 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v12 + 4)) = v21;\n
                        v26 = *((v12 + 8));\n
                        if (v26)\n
                            *((v26 + 12)) = *((v12 + 12));\n
                        v27 = *((v12 + 12));\n
                        if (v27)\n
                            *((v27 + 8)) = v26;\n
                        if (*((v10 + (v25 << 2))) == v12)\n
                            *((v10 + v25 * 4)) = v27;\n
                        *((v12 + 8)) = 0;\n
                        *((v12 + 12)) = 0;\n
                        v28 = v21 + *((v2 + 4));\n
                        *((v12 + 4)) = v28;\n
                        *(v23) = v28;\n
                        v2 = v12;\n
                    }\n
LABEL_40416c:\n
                    v29 = *((v23 + 4));\n
                    v30 = v10;\n
                    v12 = v2;\n
                    if ((v29 & 1))\n
                    {\n
                        v31 = v29 & -2;\n
                        if (v31 <= 15)\n
                        {\n
                            v32 = v29 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v31 <= 0x200)\n
                            {\n
                                v32 = (v29 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v31 <= 0x1200)\n
                                {\n
                                    v32 = (v31 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v32 = 130;\n
                                    if (v31 <= 0x20000)\n
                                        v32 = (v31 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v23 + 4)) = v31;\n
                        v33 = *((v23 + 8));\n
                        if (v33)\n
                            *((v33 + 12)) = *((v23 + 12));\n
                        v34 = *((v23 + 12));\n
                        if (*((v23 + 12)))\n
                            *((v34 + 8)) = v33;\n
                        v30 = v10;\n
                        if (*((v30 + (v32 << 2))) == v23)\n
                            *((v30 + v32 * 4)) = v34;\n
                        *((v23 + 8)) = 0;\n
                        *((v23 + 12)) = 0;\n
                        v12 = v2;\n
                        v35 = v31 + *((v12 + 4));\n
                        *((v12 + 4)) = v35;\n
                        *((v12 + v35)) = v35;\n
                    }\n
                    v36 = *((v12 + 4));\n
                    if (v36 <= 15)\n
                    {\n
                        v37 = v36 / 4 - 1;\n
                    }\n
                    else\n
                    {\n
                        if (v36 <= 0x200)\n
                        {\n
                            v37 = (v36 >> 4) + 2;\n
                        }\n
                        else\n
                        {\n
                            if (v36 <= 0x1200)\n
                            {\n
                                v37 = (v36 - 0x200 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v37 = 130;\n
                                if (v36 <= 0x20000)\n
                                    v37 = (v36 - 0x1200 >> 11) + 66;\n
                            }\n
                        }\n
                    }\n
                    if (!(!(v36 & 1)))\n
                        goto LABEL_4042d4;\n
                    *((v12 + 4)) = v36 | 1;\n
                    *((v12 + 8)) = 0;\n
                    *((v12 + 12)) = *((v30 + v37 * 4));\n
                    *((v30 + v37 * 4)) = v12;\n
                    v38 = *((v12 + 12));\n
                    if (v38)\n
                    {\n
                        *((v38 + 8)) = v12;\n
                        goto LABEL_404281;\n
                    }\n
                }\n
            }\n
            else if (*((v24 + v16)) == v16)\n
            {\n
                goto LABEL_40416c;\n
            }\n
            v0 = v38;\n
            v38 = cgc_heap_error(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v23);\n
            v17 = (v24 <= 0x1200 ? (v24 - 0x1200 >> 11) + 66 : (v24 - 0x200 >> 7) + 34);\n
LABEL_4040e6:\n
            *(v38) = *((v23 + v17 * 4));\n
            *((v23 + v17 * 4)) = v38;\n
            goto LABEL_404281;\n
        }\n
    }\n
    v19 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_4042cd:\n
    v8 = v38;\n
    v7 = v19;\n
    cgc_heap_error(*(&v9));\n
LABEL_4042d4:\n
    v6 = v12;\n
    v5 = \"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
    v38 = cgc_heap_error(*(&v9));\n
LABEL_4042e4:\n
    v7 = v38;\n
    v6 = v12;\n
    v5 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    cgc_heap_error(v10, a0);\n
    return cgc_malloc_size(v10, a0);\n
}\n
", "4211456:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_size(unsigned int v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ecx\n
    char v2;  // dl\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *((v0 + (v1 >> 20) + 524));\n
    if (!(v2 & 253))\n
        return *(&v1->field_0) - 8;\n
    v3 = 0;\n
    if (v2 != 1)\n
        return v3;\n
    v3 = *((v1 & -0x1000));\n
}\n
", "4211505:sub_404331": null, "4211520:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_realloc(unsigned int v1, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // ebp\n
    char v6;  // dl\n
    void* v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    v3 = 0;\n
    if (v2 < 0)\n
    {\n
LABEL_404415:\n
        return v3;\n
    }\n
    v4 = a0;\n
    v7 = v1;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
    {\n
LABEL_40440d:\n
        malloc_free(v1, a0);\n
        goto LABEL_404415;\n
    }\n
    if (!v4)\n
    {\n
        v11 = cgc_malloc_alloc(v7, v2);\n
        return v11;\n
    }\n
    v5 = v4 / 0x100000;\n
    v6 = *(524 + v7 + (v4 >> 20));\n
    if ((*(524 + v7 + (v4 >> 20)) & 253))\n
    {\n
        v7 = 0;\n
        if (v6 == 1)\n
            v7 = *((v4 & -0x1000));\n
        if (!(v7 < v2))\n
            goto LABEL_4043f0;\n
    }\n
    else if (*(&v4->field_0) - 8 >= v2)\n
    {\n
LABEL_4043f0:\n
        v3 = v4;\n
        goto LABEL_404415;\n
    }\n
    v8 = cgc_malloc_alloc(v1, v2);\n
    if (!v8)\n
        goto LABEL_404415;\n
    v3 = v8;\n
    v9 = v1;\n
    *(&v7) = *((v9 + v5 + 524));\n
    if (!(*((v9 + v5 + 524)) & 253))\n
    {\n
        v10 = *(&v4->field_0) - 8;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        if (v7 == 1)\n
            v10 = *((v4 & -0x1000));\n
    }\n
    v0 = v10;\n
    cgc_memcpy(v3, v4);\n
    goto LABEL_40440d;\n
}\n
", "4211743:sub_40441f": null, "4211744:cgc_heap_error": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stderr;\n
\n
int cgc_heap_error()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v6;\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v5;\n
    v1 = &v5;\n
    v0 = v4;\n
    cgc_vfprintf(cgc_stderr, v0);\n
    cgc__terminate(1, v0);\n
    cgc_memchr();\n
    return;\n
}\n
", "4211808:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = v0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
            return v2;\n
        v2 += 1;\n
        tmp_5 = v1;\n
        v1 -= 1;\n
        if (tmp_5 == 1)\n
            return 0;\n
    }\n
}\n
", "4211863:sub_404497": null, "4211872:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) != *((a0 + v2)))\n
            return *((v0 + v2)) - *((a0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4211935:sub_4044df": null, "4211936:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4212066:sub_404562": null, "4212080:cgc_memmove": "int cgc_memmove(char *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ebp\n
    char *v4;  // ecx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    char *v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    char *v17;  // edx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    char *v21;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v15 = v1;\n
    if (v15 > v4)\n
    {\n
        if (!v3)\n
            return v15;\n
        v5 = v3 - 1;\n
        v16 = v3 & 3;\n
        v14 = 0;\n
        if (v5 >= 3)\n
        {\n
            v0 = v16;\n
            v7 = v3;\n
            v8 = v15 + v5;\n
            v9 = &v4[v5];\n
            v11 = 0;\n
            do\n
            {\n
                v8[v11] = *((v9 + v11));\n
                v8[1 + v11] = *((v9 + v11 - 1));\n
                v8[2 + v11] = *((v9 + v11 - 2));\n
                v8[3 + v11] = *((v9 + v11 - 3));\n
                v11 -= 4;\n
            } while (-(v7 & -0x4) != v11);\n
            v14 = -(v11);\n
            v15 = v1;\n
            v3 = a1;\n
            v16 = v0;\n
        }\n
        if (!v16)\n
            return v15;\n
        v20 = ~(v14) + v3;\n
        v21 = v15 + v20;\n
        v23 = -(v16);\n
        v24 = 0;\n
        do\n
        {\n
            v21[v24] = v4[v24 + v20];\n
            v24 -= 1;\n
        } while (v23 != v24);\n
        return v15;\n
    }\n
    else\n
    {\n
        if (!v3)\n
            return v15;\n
        v6 = v3 & 3;\n
        v13 = 0;\n
        if (v3 - 1 >= 3)\n
        {\n
            v12 = v3 & -0x4;\n
            v13 = 0;\n
            do\n
            {\n
                *((v15 + v13)) = v4[v13];\n
                *((v15 + v13 + 1)) = v4[1 + v13];\n
                *((v15 + v13 + 2)) = v4[2 + v13];\n
                *((v15 + v13 + 3)) = v4[3 + v13];\n
                v13 += 4;\n
            } while (v12 != v13);\n
        }\n
        if (!v6)\n
            return v1;\n
        v17 = v15 + v13;\n
        v18 = &v4[v13];\n
        v19 = 0;\n
        do\n
        {\n
            v17[v19] = *((v18 + v19));\n
            v19 += 1;\n
        } while (v6 != v19);\n
        return v1;\n
    }\n
}\n
", "4212374:sub_404696": null, "4212384:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edi\n
    char *v2;  // eax\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // esi\n
    char *v7;  // esi\n
    unsigned int v8;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 7;\n
    v5 = 0;\n
    if (v1 - 1 >= 7)\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2[v5] = v3;\n
            v2[1 + v5] = v3;\n
            v2[2 + v5] = v3;\n
            v2[3 + v5] = v3;\n
            v2[4 + v5] = v3;\n
            v2[5 + v5] = v3;\n
            v2[6 + v5] = v3;\n
            v2[7 + v5] = v3;\n
            v5 += 8;\n
        } while ((v1 & -8) != v5);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v5];\n
    v8 = 0;\n
    do\n
    {\n
        v7[v8] = v3;\n
        v8 += 1;\n
    } while (v4 != v8);\n
    return v0;\n
}\n
", "4212494:sub_40470e": null, "4212496:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_printf(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0x8]\n
    unsigned int v4;  // esi\n
\n
    v1 = &v3;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v0 = 0;\n
        v4 = cgc__vsfprintf(cgc_stdout);\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = cgc__vsfprintf(cgc_stdout);\n
    return v4;\n
}\n
", "4212609:sub_404781": null, "4212624:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v2;  // eax\n
\n
    if (cgc_stdout->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v2 = cgc__vsfprintf(cgc_stdout);\n
        return v2;\n
    }\n
    cgc_stdout->field_8 = 0;\n
    v0 = 0;\n
    v2 = cgc__vsfprintf(cgc_stdout);\n
    cgc_fflush(cgc_stdout);\n
    cgc_stdout->field_8 = -1;\n
    return v2;\n
}\n
", "4212731:sub_4047fb": null, "4212736:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_fprintf(struct_0 *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0xc]\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v4 = v2;\n
    v1 = &v3;\n
    if (v4->field_8 == -1)\n
    {\n
        v4->field_8 = 0;\n
        v0 = 0;\n
        v5 = cgc__vsfprintf(v4);\n
        cgc_fflush(v4);\n
        v4->field_8 = -1;\n
        return v5;\n
    }\n
    v0 = 0;\n
    v5 = cgc__vsfprintf(v4);\n
    return v5;\n
}\n
", "4212845:sub_40486d": null, "4212848:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_vfprintf(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x18]\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
\n
    v2 = v1;\n
    if (v2->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v3 = cgc__vsfprintf(v2);\n
        return v3;\n
    }\n
    v2->field_8 = 0;\n
    v0 = 0;\n
    v3 = cgc__vsfprintf(v2);\n
    cgc_fflush(v2);\n
    v2->field_8 = -1;\n
    return v3;\n
}\n
", "4212951:sub_4048d7": null, "4212960:cgc_sprintf": "int cgc_sprintf(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    char v3;  // [bp+0xc]\n
\n
    v1 = &v3;\n
    v0 = v2;\n
    return cgc__vsfprintf(0);\n
}\n
", "4213008:cgc_vsprintf": "int cgc_vsprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc__vsfprintf(0);\n
}\n
", "4213051:sub_40493b": null, "4213056:cgc__vsfprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__vsfprintf()\n
{\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x58]\n
    char v8;  // [bp-0x50]\n
    unsigned int v11;  // [bp-0x8]\n
    char v13;  // [bp+0x8]\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // ebx\n
    unsigned int v33;  // ecx\n
    unsigned int v40;  // edx\n
    unsigned int v77;  // esi\n
    char v78;  // eax\n
    unsigned int v79;  // ebp\n
\n
    v11 = v31;\n
    v32 = *(&v13);\n
    v79 = v33 + 1;\n
    v3 = v33 + 1;\n
    v78 = *(v33);\n
    if (!*(v33))\n
    {\n
        v77 = 0;\n
    }\n
    else\n
    {\n
        v4 = v40;\n
        v6 = 20 + -0x1 * &v8;\n
        v77 = 0;\n
        v1 = &_GLOBAL_OFFSET_TABLE_;\n
    }\n
}\n
", "4213126:sub_404986": null, "4214656:cgc_realloc": "extern unsigned int g_heap;\n
\n
int cgc_realloc(void* v0, unsigned int a0)\n
{\n
    return cgc_malloc_realloc(&g_heap, v0, a0);\n
}\n
", "4214700:sub_404fac": null, "4214704:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // al, Other Possible Types: char\n
    struct_0 *v3;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v3 = v0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v2 = cgc_tolower(v2);\n
            if (v2 != cgc_tolower(*(v1)))\n
                return *((v3 - 1)) - *(v1);\n
            v1 += 1;\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4214822:sub_405026": null, "4214832:cgc_strcasestr": "int cgc_strcasestr(char v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_7;  // tmp #7\n
    char v2[2];  // esi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (!v2[0])\n
        return 0;\n
    while (true)\n
    {\n
        v0 = cgc_strlen();\n
        if (!cgc_strncasecmp(v2, a0))\n
            return v2;\n
        tmp_7 = *((v2 + 1));\n
        v2 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4214921:sub_405089": null, "4214928:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx\n
    unsigned int v3;  // bl, Other Possible Types: char\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v2);\n
    v4 = 0;\n
    if (*(v2))\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            if (v3 == v1)\n
                return &v0[v4];\n
            v3 = v2[1 + v4];\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v5 = (!v1 ? 0 : &v2[v4]);\n
    return v5;\n
}\n
", "4214998:sub_4050d6": null, "4215008:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4215076:sub_405124": null, "4215088:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char *v3;  // ecx, Other Possible Types: unsigned int\n
    char v4;  // dl\n
    char *v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v1);\n
    v5 = v2;\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        v5 = v2;\n
        do\n
        {\n
            *(v5) = v4;\n
            v5 += 1;\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (v4);\n
    }\n
    *(v5) = 0;\n
    return v0;\n
}\n
", "4215140:sub_405164": null, "4215152:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    char *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4215232:cgc_strlen": "int cgc_strlen(char *v0)\n
{\n
    char *v1;  // ecx\n
    void* v2;  // edx, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!*(v1))\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = v1[1 + v2];\n
        v2 += 1;\n
    } while (v3);\n
    return v2;\n
}\n
", "4215264:cgc_strncasecmp": "int cgc_strncasecmp(char v1[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v4;  // al, Other Possible Types: char\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v0 = &v1[a1];\n
    v4 = v1[0];\n
    if (v1[0])\n
    {\n
        while (*(v2))\n
        {\n
            v5 = cgc_tolower(v4);\n
            if (v5 != cgc_tolower(*(v2)))\n
                break;\n
            if (v3 >= v0)\n
                break;\n
            v2 += 1;\n
            v4 = *((v3 + 1));\n
            v3 += 1;\n
            if (!v4)\n
                break;\n
        }\n
    }\n
    v6 = (v3 == v0 ? *(v3) - *(v2) : 0);\n
    return v6;\n
}\n
", "4215392:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi\n
    char *v3;  // eax\n
    char v4;  // bl\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = *(v2);\n
    v6 = 0;\n
    v5 = v3;\n
    if (*(v2) && v1)\n
    {\n
        v6 = 0;\n
        while (true)\n
        {\n
            v3[v6] = v4;\n
            v4 = v2[1 + v6];\n
            v6 += 1;\n
            if (!v4)\n
                break;\n
            if (v6 >= v1)\n
                break;\n
        }\n
        v5 = &v3[v6];\n
    }\n
    if (v6 >= v1)\n
        return v0;\n
    v7 = v5 - v3;\n
    do\n
    {\n
        *(v5) = 0;\n
        v5 += 1;\n
        v7 += 1;\n
    } while (v7 < v1);\n
    return v0;\n
}\n
", "4215473:sub_4052b1": null, "4215488:cgc_strndup": "int cgc_strndup(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // eax\n
    char *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = a0;\n
    v2 = cgc_strlen(v0);\n
    v3 = (!(v2 <= v1) ? v2 : v1);\n
    v4 = cgc_malloc(v3 + 1);\n
    if (v4)\n
    {\n
        cgc_memcpy(v4, v0, v3);\n
        v3[v4] = 0;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4215577:sub_405319": null, "4215584:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v1, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // edi, Other Possible Types: unsigned int\n
    void* v5;  // ebp, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // ecx, Other Possible Types: unsigned int\n
\n
    v2 = *(v1);\n
    if (!v2)\n
        return v2;\n
    v3 = *(v2);\n
    v0 = v2;\n
    if (!*(v2))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v2 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v6 = v4 - 1;\n
                v2 = v0;\n
                v7 = v1;\n
                if (!(!*((v4 - 1))))\n
                    goto LABEL_405381;\n
                goto LABEL_40537f;\n
            }\n
            v5 += 1;\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        goto LABEL_405381;\n
    }\n
    v2 = v0;\n
    v6 = &v2[v5];\n
    v7 = v1;\n
LABEL_40537f:\n
    v4 = 0;\n
LABEL_405381:\n
    *(v7) = v4;\n
    *(v6) = 0;\n
    return v2;\n
}\n
", "4215714:sub_4053a2": null, "4215728:cgc_strstr": "int cgc_strstr(char v0[2], char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v1[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    while (true)\n
    {\n
        if (!cgc_strcmp(v1, a0))\n
            return v1;\n
        tmp_7 = *((v1 + 1));\n
        v1 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4215816:sub_405408": null, "4215824:cgc_strtol": "int cgc_strtol(char v6[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_2;  // tmp #2\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    char v10[2];  // esi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // esi\n
    void* v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v22;  // eax, Other Possible Types: unsigned int\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // ecx\n
    char v25[2];  // ebp, Other Possible Types: unsigned int\n
    void* v26;  // esi, Other Possible Types: unsigned int\n
    char v27[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v10 = v6;\n
    v12 = cgc_isspace(v10[0]);\n
    v25 = v10;\n
    if (v12)\n
    {\n
        v25 = v10;\n
        do\n
        {\n
            if (!*(v25))\n
            {\n
                v21 = 0;\n
                v23 = 1;\n
                v24 = 1;\n
                v26 = 0;\n
                v22 = a0;\n
                if (!v22)\n
                    goto LABEL_405600;\n
            }\n
            v11 = *((v25 + 1));\n
            v25 += 1;\n
            v12 = cgc_isspace(v11);\n
        } while (v12);\n
    }\n
    v13 = a1;\n
    if (*(v25) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v25) == 43)\n
            v25 += 1;\n
        if (!v13)\n
            goto LABEL_4054d8;\n
    }\n
    else\n
    {\n
        v25 += 1;\n
        v0 = -1;\n
        if (!v13)\n
        {\n
LABEL_4054d8:\n
            *(&v12) = *(v25);\n
            if (*(v25) != 48)\n
            {\n
LABEL_405513:\n
                v12 = cgc_isdigit(v12);\n
                v13 = 10;\n
                if (!v12)\n
                    goto LABEL_4055e0;\n
LABEL_40552b:\n
                *(&v12) = *(v25);\n
LABEL_40552e:\n
                if (!v12)\n
                {\n
LABEL_4055e0:\n
                    v21 = 0;\n
                    v24 = 1;\n
                    v26 = 0;\n
                    v22 = a0;\n
                    v23 = v0;\n
                    if (!v22)\n
                        goto LABEL_405600;\n
LABEL_4055f5:\n
                    tmp_2 = v24;\n
                    v27 = v6;\n
                    if (!tmp_2)\n
                        v27 = v25;\n
                    *(v22) = v27;\n
                    goto LABEL_405600;\n
                }\n
LABEL_405536:\n
                v26 = 0;\n
                v21 = 0;\n
                v24 = 1;\n
                v1 = v13;\n
                do\n
                {\n
                    v2 = v24;\n
                    v14 = cgc_isdigit(v12);\n
                    v15 = *(v25);\n
                    if (v14)\n
                    {\n
                        v16 = v15 - 48;\n
                        v17 = v1;\n
                        if (!(v16 < v17))\n
                            goto LABEL_405623;\n
                    }\n
                    else\n
                    {\n
                        v19 = *(v25);\n
                        if (cgc_islower(v15))\n
                        {\n
                            v16 = v19 - 87;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_405623;\n
                        }\n
                        else if (!cgc_isupper(v19))\n
                        {\n
LABEL_405623:\n
                            v22 = a0;\n
                            v23 = v0;\n
                            v24 = v2;\n
                            if (!v22)\n
                                goto LABEL_405600;\n
                            goto LABEL_4055f5;\n
                        }\n
                        else\n
                        {\n
                            v16 = *(v25) - 55;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_405623;\n
                        }\n
                    }\n
                    v20 = v17 * v26;\n
                    tmp_5 = v20;\n
                    v26 = v20 + v16;\n
                    if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, t5, ecx<4>, 0x0<32>))\n
                        v21 = 1;\n
                    v12 = *((v25 + 1));\n
                    v25 += 1;\n
                    v24 = 0;\n
                } while (v12);\n
                goto LABEL_4055f5;\n
            }\n
            else\n
            {\n
                *(&v12) = *((v25 + 1));\n
                if ((v12 & 248) == 48)\n
                {\n
                    v25 += 1;\n
                    v13 = 8;\n
                    goto LABEL_405536;\n
                }\n
                v12 = cgc_tolower(v12);\n
                if (v12 != 120)\n
                {\n
                    *(&v12) = *(v25);\n
                    goto LABEL_405513;\n
                }\n
                else\n
                {\n
                    v25 += 2;\n
                }\n
            }\n
LABEL_405509:\n
            v13 = 16;\n
            goto LABEL_40552b;\n
        }\n
    }\n
    if (!(v13 == 16))\n
        goto LABEL_40552b;\n
    *(&v12) = *(v25);\n
    v13 = 16;\n
    if (!(*(v25) == 48))\n
        goto LABEL_40552e;\n
    v25 += (cgc_tolower(*((v25 + 1))) == 120) * 2;\n
    goto LABEL_405509;\n
LABEL_405600:\n
    v28 = (!v21 ? 0x80000000 : -(v26));\n
    v29 = ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>) ? 2147483647 : v26);\n
    if (v23 < 0)\n
        v29 = v28;\n
    return v29;\n
}\n
", "4216183:sub_405577": null, "4216373:sub_405635": null, "4216384:cgc_strtoul": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoul(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_2;  // tmp #2\n
    int tmp_67;  // tmp #67\n
    int tmp_41;  // tmp #41\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // ebp\n
    unsigned int v27;  // ebx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // ebp\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // edx\n
    unsigned int v37;  // ecx\n
    unsigned int v38;  // ecx\n
    unsigned int v39;  // ebx\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // cc_dep2\n
    unsigned int v43;  // eax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v12 = v8;\n
    v34 = v12;\n
    if (cgc_isspace(*(v12)))\n
    {\n
        v34 = v12;\n
        do\n
        {\n
            if (!*(v34))\n
            {\n
                v14 = 0;\n
                v36 = 1;\n
                goto LABEL_40573c;\n
            }\n
            v13 = *((v34 + 1));\n
            v34 += 1;\n
        } while (cgc_isspace(v13));\n
    }\n
    v0 = a1;\n
    if (*(v34) != 45)\n
    {\n
        v36 = 1;\n
        if (*(v34) == 43)\n
            v34 += 1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (!v15)\n
            goto LABEL_405706;\n
        goto LABEL_4056b0;\n
    }\n
    else\n
    {\n
        v34 += 1;\n
        v36 = -1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (v15)\n
        {\n
LABEL_4056b0:\n
            if (v15 == 16)\n
            {\n
                *(&v15) = *(v34);\n
                if (*(v34) == 48)\n
                {\n
                    v34 += (cgc_tolower(*((v34 + 1))) == 120) * 2;\n
                    v0 = 16;\n
                    goto LABEL_4057a5;\n
                }\n
                else\n
                {\n
                    v0 = 16;\n
                    if (!(!v15))\n
                        goto LABEL_4057ac;\n
                    goto LABEL_40573a;\n
                }\n
            }\n
        }\n
        else\n
        {\n
LABEL_405706:\n
            *(&v15) = *(v34);\n
            if (*(v34) == 48)\n
            {\n
                *(&v15) = *((v34 + 1));\n
                if ((v15 & 248) == 48)\n
                {\n
                    v1 = v36;\n
                    v34 += 1;\n
                    v0 = 8;\n
                    goto LABEL_4057b0;\n
                }\n
                v15 = cgc_tolower(v15);\n
                if (v15 != 120)\n
                {\n
                    *(&v15) = *(v34);\n
                }\n
                else\n
                {\n
                    v34 += 2;\n
                    v0 = 16;\n
                    goto LABEL_4057a5;\n
                }\n
            }\n
            v1 = v36;\n
            v15 = cgc_isdigit(v15);\n
            v0 = 10;\n
            if (!v15)\n
            {\n
                v14 = 0;\n
                v37 = 1;\n
                v2 = 0;\n
                v16 = 0;\n
                v35 = a0;\n
                v36 = v1;\n
                if (!v35)\n
                    goto LABEL_4058c7;\n
LABEL_4058bc:\n
                tmp_2 = v37;\n
                v38 = v8;\n
                if (!tmp_2)\n
                    v38 = v34;\n
                *(v35) = v38;\n
            }\n
            else\n
            {\n
                v36 = v1;\n
LABEL_4057a5:\n
                *(&v15) = *(v34);\n
                if (*(v34))\n
                {\n
LABEL_4057ac:\n
                    v1 = v36;\n
LABEL_4057b0:\n
                    v2 = 0;\n
                    v18 = 0;\n
                    v14 = 0;\n
                    v37 = 1;\n
                    do\n
                    {\n
                        v3 = v37;\n
                        v19 = cgc_isdigit(v15);\n
                        v20 = *(v34);\n
                        if (v19)\n
                        {\n
                            v21 = v20 - 48;\n
                            v22 = v0;\n
                            if (!(v21 < v22))\n
                                goto LABEL_40588d;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v34);\n
                            if (cgc_islower(v20))\n
                            {\n
                                v21 = v24 - 87;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_40588d;\n
                            }\n
                            else if (!cgc_isupper(v24))\n
                            {\n
LABEL_40588d:\n
                                v35 = a0;\n
                                v36 = v1;\n
                                v37 = v3;\n
                                if (!v35)\n
                                    goto LABEL_4058c7;\n
                                goto LABEL_4058bc;\n
                            }\n
                            else\n
                            {\n
                                v21 = *(v34) - 55;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_40588d;\n
                            }\n
                        }\n
                        v3 = v34;\n
                        v25 = v2;\n
                        v26 = v25 * (v22 >> 31);\n
                        v27 = v14;\n
                        v28 = v22;\n
                        tmp_67 = v25 * v22;\n
                        v29 = v25 * v22 >> 32;\n
                        v30 = tmp_67;\n
                        v31 = v28 * v18 + v26 + v29;\n
                        v32 = v3;\n
                        v33 = v21 >> 31;\n
                        v2 = v30 + v21;\n
                        tmp_41 = v33;\n
                        v18 = v33 + v31 + (v30 + v21 < v30);\n
                        v14 = ([D] x86g_calculate_condition(0x5<32>, 0x9<32>, t41, Xor(edx<4>, Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))), Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))) ? v27 : 1);\n
                        v15 = *((v32 + 1));\n
                        v34 = v32 + 1;\n
                        v37 = 0;\n
                    } while (v15);\n
                    goto LABEL_4058c7;\n
                }\n
LABEL_40573a:\n
                v14 = 0;\n
LABEL_40573c:\n
                v37 = 1;\n
                v2 = 0;\n
                v17 = 0;\n
                v35 = a0;\n
                if (!v35)\n
                    goto LABEL_4058c7;\n
                goto LABEL_4058bc;\n
            }\n
        }\n
    }\n
LABEL_4058c7:\n
    v39 = v2;\n
    v40 = -(v39);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v40 = v39;\n
    v41 = -(0 < v14) | v40;\n
    v42 = v39 < 2147483649;\n
    v43 = ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, cc_dep2<4>, cc_dep2<4>) ? -1 : v41);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v43 = v41;\n
    return v43;\n
}\n
", "4216827:sub_4057fb": null, "4217080:sub_4058f8": null, "4217088:_ZN9CExplorerC2EPKc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[17];\n
    unsigned short field_25;\n
} struct_0;\n
\n
extern char g_40e434;\n
\n
int CExplorer::__base_ctor__(struct_0 *v1, char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v3->field_0 = &g_40e434;\n
    v3->field_4 = 1000;\n
    v3->field_8 = 1;\n
    v3->field_10 = 0;\n
    v3->field_c = 0;\n
    *(&(&v3->padding_14)[1]) = 1;\n
    return cgc_strcpy(&v1->padding_14, cgc_strndup(a0, 16));\n
}\n
", "4217186:sub_405962": null, "4217200:_ZN9CExplorer10GetNextExpEv": "int CExplorer::GetNextExp(unsigned int v3[3])\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_3;  // tmp #3\n
    unsigned short v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xe]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ftop\n
    unsigned int v8;  // ftop\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
\n
    v4 = v3[2];\n
    if (v4 <= 0)\n
        return 1000 - v3[1];\n
    v5 = v4 & 7;\n
    [D] PutI(72:F64x8)[t10,0] = t13\n
    [D] PutI(136:I8x8)[t10,0] = 0x01\n
    v11 = v6 - 1 - 1;\n
    [D] PutI(72:F64x8)[t20,0] = t23\n
    [D] PutI(136:I8x8)[t20,0] = 0x01\n
    if (v4 - 1 >= 7)\n
    {\n
        [D] PutI(72:F64x8)[t5,0] = t6\n
        [D] PutI(136:I8x8)[t5,0] = 0x01\n
        [D] PutI(136:I8x8)[t5,0] = 0x00\n
        v8 = v11 + 1;\n
        [D] PutI(72:F64x8)[t17,0] = t18\n
        [D] PutI(136:I8x8)[t17,0] = 0x01\n
        [D] PutI(136:I8x8)[t17,0] = 0x00\n
        v13 = v4 & -8;\n
        v10 = v8 + 1 - 1;\n
        [D] PutI(72:F64x8)[t29,0] = t32\n
        [D] PutI(136:I8x8)[t29,0] = 0x01\n
        v11 = v10 - 1;\n
        [D] PutI(72:F64x8)[t39,0] = t42\n
        [D] PutI(136:I8x8)[t39,0] = 0x01\n
        [D] PutI(72:F64x8)[t52,0] = t56\n
        [D] PutI(136:I8x8)[t52,0] = 0x01\n
        [D] PutI(72:F64x8)[t52,1] = t49\n
        [D] PutI(136:I8x8)[t52,1] = 0x01\n
        do\n
        {\n
            [D] PutI(72:F64x8)[t7,1] = t8\n
            [D] PutI(136:I8x8)[t7,1] = 0x01\n
            [D] PutI(136:I8x8)[t7,0] = 0x00\n
            v12 = v11 - 0;\n
            [D] PutI(72:F64x8)[t21,0] = t24\n
            [D] PutI(136:I8x8)[t21,0] = 0x01\n
            [D] PutI(72:F64x8)[t31,1] = t32\n
            [D] PutI(136:I8x8)[t31,1] = 0x01\n
            [D] PutI(72:F64x8)[t48,1] = t49\n
            [D] PutI(136:I8x8)[t48,1] = 0x01\n
            [D] PutI(72:F64x8)[t65,1] = t66\n
            [D] PutI(136:I8x8)[t65,1] = 0x01\n
            [D] PutI(72:F64x8)[t82,1] = t83\n
            [D] PutI(136:I8x8)[t82,1] = 0x01\n
            [D] PutI(72:F64x8)[t99,1] = t100\n
            [D] PutI(136:I8x8)[t99,1] = 0x01\n
            [D] PutI(72:F64x8)[t116,1] = t117\n
            [D] PutI(136:I8x8)[t116,1] = 0x01\n
            [D] PutI(72:F64x8)[t133,1] = t134\n
            [D] PutI(136:I8x8)[t133,1] = 0x01\n
            [D] PutI(72:F64x8)[t150,1] = t151\n
            [D] PutI(136:I8x8)[t150,1] = 0x01\n
            [D] PutI(136:I8x8)[t150,0] = 0x00\n
            v11 = v12 - 0;\n
            [D] PutI(72:F64x8)[t177,0] = t180\n
            [D] PutI(136:I8x8)[t177,0] = 0x01\n
            tmp_4 = v13;\n
            v13 -= 8;\n
            [D] PutI(72:F64x8)[t189,0] = t193\n
            [D] PutI(136:I8x8)[t189,0] = 0x01\n
            [D] PutI(72:F64x8)[t189,1] = t186\n
            [D] PutI(136:I8x8)[t189,1] = 0x01\n
        } while (tmp_4 != 8);\n
    }\n
    if (v5)\n
    {\n
        [D] PutI(72:F64x8)[t2,0] = t3\n
        [D] PutI(136:I8x8)[t2,0] = 0x01\n
        [D] PutI(136:I8x8)[t2,0] = 0x00\n
        v14 = v11 - 0;\n
        [D] PutI(72:F64x8)[t14,0] = t17\n
        [D] PutI(136:I8x8)[t14,0] = 0x01\n
        [D] PutI(72:F64x8)[t27,0] = t31\n
        [D] PutI(136:I8x8)[t27,0] = 0x01\n
        [D] PutI(72:F64x8)[t27,1] = t24\n
        [D] PutI(136:I8x8)[t27,1] = 0x01\n
        do\n
        {\n
            [D] PutI(72:F64x8)[t6,1] = t7\n
            [D] PutI(136:I8x8)[t6,1] = 0x01\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
            v15 = v14 + 1;\n
            [D] PutI(72:F64x8)[t20,0] = t21\n
            [D] PutI(136:I8x8)[t20,0] = 0x01\n
            tmp_3 = v5;\n
            v5 -= 1;\n
            v14 = v15 - 1;\n
            [D] PutI(72:F64x8)[t31,0] = t34\n
            [D] PutI(136:I8x8)[t31,0] = 0x01\n
            [D] PutI(72:F64x8)[t44,0] = t48\n
            [D] PutI(136:I8x8)[t44,0] = 0x01\n
            [D] PutI(72:F64x8)[t44,1] = t41\n
            [D] PutI(136:I8x8)[t44,1] = 0x01\n
        } while (tmp_3 != 1);\n
    }\n
    [D] PutI(72:F64x8)[t15,1] = t16\n
    [D] PutI(136:I8x8)[t15,1] = 0x01\n
    [D] PutI(136:I8x8)[t15,0] = 0x00\n
    [D] PutI(72:F64x8)[t29,0] = t30\n
    [D] PutI(136:I8x8)[t29,0] = 0x01\n
    v0 = [D] x86g_create_fpucw(fpround<4>);\n
    v1 = v0 | 0xc00;\n
    v2 = ([D] GetI(136:I8x8)[t63,0] ? [D] GetI(72:F64x8)[t63,0] : nan);\n
    [D] PutI(136:I8x8)[t63,0] = 0x00\n
    return v2 - v3[1];\n
}\n
", "4217385:sub_405a29": null, "4217392:_ZN9CExplorer7GainExpEi": "int CExplorer::GainExp(unsigned int v7[3], unsigned int a0)\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_3;  // tmp #3\n
    unsigned short v0;  // [bp-0x28]\n
    unsigned short v1;  // [bp-0x26]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v8[3];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ftop\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // edx\n
    void* v29;  // ebx, Other Possible Types: unsigned int\n
\n
    v8 = v7;\n
    v9 = v7[2];\n
    if (v9 == 100)\n
        return 0;\n
    v11 = a0;\n
    v15 = v8[1];\n
    if (!([D] x86g_calculate_condition(0xc<32>, 0x6<32>, ebx<4>, 0x64<32>, 0x0<32>)))\n
    {\n
        v28 = v9;\n
        v27 = v11;\n
    }\n
    else\n
    {\n
        v3 = v15;\n
        v4 = v9 - 1;\n
        v28 = v9;\n
        v29 = 0;\n
        v2 = v28;\n
        do\n
        {\n
            v5 = v29;\n
            if (v28 <= 0)\n
            {\n
                v15 = 1000;\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t10,0] = t13\n
                [D] PutI(136:I8x8)[t10,0] = 0x01\n
                v14 = ftop<4> - 1 - 1;\n
                [D] PutI(72:F64x8)[t20,0] = t23\n
                [D] PutI(136:I8x8)[t20,0] = 0x01\n
                if (v4 + v29 >= 7)\n
                {\n
                    [D] PutI(72:F64x8)[t5,0] = t6\n
                    [D] PutI(136:I8x8)[t5,0] = 0x01\n
                    [D] PutI(136:I8x8)[t5,0] = 0x00\n
                    v16 = v14 + 1;\n
                    [D] PutI(72:F64x8)[t17,0] = t18\n
                    [D] PutI(136:I8x8)[t17,0] = 0x01\n
                    [D] PutI(136:I8x8)[t17,0] = 0x00\n
                    v18 = v28 & -8;\n
                    v19 = v16 + 1 - 1;\n
                    [D] PutI(72:F64x8)[t30,0] = t33\n
                    [D] PutI(136:I8x8)[t30,0] = 0x01\n
                    v14 = v19 - 1;\n
                    [D] PutI(72:F64x8)[t40,0] = t43\n
                    [D] PutI(136:I8x8)[t40,0] = 0x01\n
                    [D] PutI(72:F64x8)[t53,0] = t57\n
                    [D] PutI(136:I8x8)[t53,0] = 0x01\n
                    [D] PutI(72:F64x8)[t53,1] = t50\n
                    [D] PutI(136:I8x8)[t53,1] = 0x01\n
                    do\n
                    {\n
                        [D] PutI(72:F64x8)[t7,1] = t8\n
                        [D] PutI(136:I8x8)[t7,1] = 0x01\n
                        [D] PutI(136:I8x8)[t7,0] = 0x00\n
                        v20 = v14 - 0;\n
                        [D] PutI(72:F64x8)[t21,0] = t24\n
                        [D] PutI(136:I8x8)[t21,0] = 0x01\n
                        [D] PutI(72:F64x8)[t31,1] = t32\n
                        [D] PutI(136:I8x8)[t31,1] = 0x01\n
                        [D] PutI(72:F64x8)[t48,1] = t49\n
                        [D] PutI(136:I8x8)[t48,1] = 0x01\n
                        [D] PutI(72:F64x8)[t65,1] = t66\n
                        [D] PutI(136:I8x8)[t65,1] = 0x01\n
                        [D] PutI(72:F64x8)[t82,1] = t83\n
                        [D] PutI(136:I8x8)[t82,1] = 0x01\n
                        [D] PutI(72:F64x8)[t99,1] = t100\n
                        [D] PutI(136:I8x8)[t99,1] = 0x01\n
                        [D] PutI(72:F64x8)[t116,1] = t117\n
                        [D] PutI(136:I8x8)[t116,1] = 0x01\n
                        [D] PutI(72:F64x8)[t133,1] = t134\n
                        [D] PutI(136:I8x8)[t133,1] = 0x01\n
                        [D] PutI(72:F64x8)[t150,1] = t151\n
                        [D] PutI(136:I8x8)[t150,1] = 0x01\n
                        [D] PutI(136:I8x8)[t150,0] = 0x00\n
                        v14 = v20 - 0;\n
                        [D] PutI(72:F64x8)[t177,0] = t180\n
                        [D] PutI(136:I8x8)[t177,0] = 0x01\n
                        tmp_4 = v18;\n
                        v18 -= 8;\n
                        [D] PutI(72:F64x8)[t189,0] = t193\n
                        [D] PutI(136:I8x8)[t189,0] = 0x01\n
                        [D] PutI(72:F64x8)[t189,1] = t186\n
                        [D] PutI(136:I8x8)[t189,1] = 0x01\n
                    } while (tmp_4 != 8);\n
                }\n
                if ((v28 & 7))\n
                {\n
                    [D] PutI(72:F64x8)[t5,0] = t6\n
                    [D] PutI(136:I8x8)[t5,0] = 0x01\n
                    [D] PutI(136:I8x8)[t5,0] = 0x00\n
                    v21 = v14 + 1;\n
                    v22 = v28 & 7;\n
                    v14 = v21 - 1;\n
                    [D] PutI(72:F64x8)[t18,0] = t21\n
                    [D] PutI(136:I8x8)[t18,0] = 0x01\n
                    [D] PutI(72:F64x8)[t31,0] = t35\n
                    [D] PutI(136:I8x8)[t31,0] = 0x01\n
                    [D] PutI(72:F64x8)[t31,1] = t28\n
                    [D] PutI(136:I8x8)[t31,1] = 0x01\n
                    do\n
                    {\n
                        [D] PutI(72:F64x8)[t6,1] = t7\n
                        [D] PutI(136:I8x8)[t6,1] = 0x01\n
                        [D] PutI(136:I8x8)[t6,0] = 0x00\n
                        v23 = v14 + 1;\n
                        [D] PutI(72:F64x8)[t20,0] = t21\n
                        [D] PutI(136:I8x8)[t20,0] = 0x01\n
                        tmp_3 = v22;\n
                        v22 -= 1;\n
                        v14 = v23 - 1;\n
                        [D] PutI(72:F64x8)[t31,0] = t34\n
                        [D] PutI(136:I8x8)[t31,0] = 0x01\n
                        [D] PutI(72:F64x8)[t44,0] = t48\n
                        [D] PutI(136:I8x8)[t44,0] = 0x01\n
                        [D] PutI(72:F64x8)[t44,1] = t41\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                    } while (tmp_3 != 1);\n
                }\n
                [D] PutI(72:F64x8)[t15,1] = t16\n
                [D] PutI(136:I8x8)[t15,1] = 0x01\n
                [D] PutI(136:I8x8)[t15,0] = 0x00\n
                v24 = v14 + 1;\n
                [D] PutI(72:F64x8)[t29,0] = t30\n
                [D] PutI(136:I8x8)[t29,0] = 0x01\n
                v0 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-40, size=2, endness=Iend_LE)))));\n
                v1 = v0 | 0xc00;\n
                v6 = ([D] GetI(136:I8x8)[t63,0] ? [D] GetI(72:F64x8)[t63,0] : nan);\n
                [D] PutI(136:I8x8)[t63,0] = 0x00\n
                v25 = v24 + 1;\n
                v15 = v6;\n
            }\n
            v26 = v3;\n
            v27 = v11 - (v15 - v26);\n
            if (v11 < v15 - v26)\n
            {\n
                v15 = v26;\n
                v27 = v11;\n
                v9 = v2;\n
                v8 = v7;\n
                goto LABEL_405b80;\n
            }\n
            v28 += 1;\n
            v8 = v7;\n
            v7[2] = v28;\n
            v29 = v5 + 1;\n
            v3 = v15;\n
            v11 = v27;\n
        } while (v28 != 100);\n
        v28 = 100;\n
        v9 = v2;\n
    }\n
LABEL_405b80:\n
    v10 = v15 + v27;\n
    *((v8 + 4)) = v10;\n
    *(&v10) = v9 < v28;\n
    return v10;\n
}\n
", "4217644:sub_405b2c": null, "4217746:sub_405b92": null, "4217760:_ZN9CExplorer12ReplaceSkillEP6CSkilli": "int CExplorer::ReplaceSkill(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = a1;\n
    if (v1 <= 1)\n
        *((v0 + v1 * 4 + 12)) = a0;\n
    return a1;\n
}\n
", "4217782:sub_405bb6": null, "4217792:_ZN9CExplorer11GetCountersEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CExplorer::GetCounters(struct struct_0 *v0[5])\n
{\n
    struct struct_0 *v1[5];  // ecx\n
    struct_0 *v2;  // eax\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v4;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = v1[3];\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        v4 = v1[4];\n
        if (!v4)\n
            return 0;\n
    }\n
    else\n
    {\n
        v3 = v2->field_4;\n
        v4 = v1[4];\n
        if (!v4)\n
            return v3;\n
    }\n
    v3 |= *((v4 + 4));\n
    return v3;\n
}\n
", "4217828:sub_405be4": null, "4217840:_ZN9CExplorer10ChangeNameEPKc": "int CExplorer::ChangeName(unsigned int v0, char *a0)\n
{\n
    return cgc_strcpy(v0 + 20, a0);\n
}\n
", "4217881:sub_405c19": null, "4217888:_ZN9CFortressC1Ev": "int CFortress::__ctor__(unsigned int v0[17])\n
{\n
    unsigned int v1[17];  // eax\n
\n
    v1 = v0;\n
    v1[5] = 50;\n
    v1[6] = 1;\n
    v1[7] = 0;\n
    v1[8] = 0;\n
    v1[9] = 0;\n
    v1[10] = 0;\n
    v1[11] = 0;\n
    v1[12] = 0;\n
    v1[13] = 0;\n
    v1[14] = 0;\n
    v1[15] = 0;\n
    v1[16] = 0;\n
    return cgc_memset(v0, 0, 17);\n
}\n
", "4218010:sub_405c9a": null, "4218016:_ZN9CFortressD2Ev": "typedef struct struct_1 {\n
    char padding_0[28];\n
    struct struct_0 *field_1c;\n
    unsigned int field_20;\n
    struct struct_0 *field_24;\n
    unsigned int field_28;\n
    struct struct_0 *field_2c;\n
    unsigned int field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CFortress::__base_dtor__(struct_1 *v0)\n
{\n
    struct_1 *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // ecx\n
    unsigned int v4;  // eax\n
    struct_0 *v5;  // ecx\n
    unsigned int v6;  // eax\n
    struct_0 *v7;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_30;\n
    if (v2)\n
    {\n
        do\n
        {\n
            v3 = v1->field_2c;\n
            v1->field_2c = v3->field_4;\n
            v1->field_30 = v2 - 1;\n
            operator delete(v3);\n
            v2 = v1->field_30;\n
        } while (v2);\n
    }\n
    while (true)\n
    {\n
        v4 = v1->field_28;\n
        if (!v4)\n
            break;\n
        v5 = v1->field_24;\n
        v1->field_24 = v5->field_4;\n
        v1->field_28 = v4 - 1;\n
        operator delete(v5);\n
    }\n
    while (true)\n
    {\n
        v6 = v1->field_20;\n
        if (!v6)\n
            break;\n
        v7 = v1->field_1c;\n
        v1->field_1c = v7->field_4;\n
        v1->field_20 = v6 - 1;\n
        operator delete(v7);\n
    }\n
    return v0->field_20;\n
}\n
", "4218148:sub_405d24": null, "4218160:_ZN9CFortress9GetSupplyEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int CFortress::GetSupply(struct_0 *v0)\n
{\n
    return v0->field_14;\n
}\n
", "4218168:sub_405d38": null, "4218176:_ZN9CFortress9AddSupplyEi": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
short CFortress::AddSupply(struct_0 *v0, unsigned int a0)\n
{\n
    int tmp_23;  // tmp #23\n
    struct_0 *v1;  // ecx\n
    unsigned int v2;  // edx\n
    char v3;  // ah\n
    unsigned int v4;  // edx\n
    char v6;  // al\n
\n
    v1 = v0;\n
    v2 = a0;\n
    tmp_23 = v2 / 0x80000000 & 1;\n
    v3 = v2 / 0x80000000 & 1;\n
    v4 = v2 + v1->field_14;\n
    if (!(!(v4 < 2001) & tmp_23))\n
        v1->field_14 = v4;\n
    v6 = !(v4 < 2001) & tmp_23 ^ 1;\n
    return ax<2>;\n
}\n
", "4218211:sub_405d63": null, "4218224:_ZN9CFortress9SubSupplyEi": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int CFortress::SubSupply(struct_0 *v0, unsigned int a0)\n
{\n
    int tmp_4;  // tmp #4\n
    char v1;  // eax\n
    struct_0 *v2;  // ecx\n
    unsigned int v3;  // edx\n
    unsigned int v4;  // edx\n
\n
    v1 = a0;\n
    if (v1 < 0)\n
        return 0;\n
    v2 = v0;\n
    v3 = v2->field_14;\n
    tmp_4 = v3;\n
    v4 = v3 - v1;\n
    if (tmp_4 - v1 < 0)\n
        return 0;\n
    v2->field_14 = v4;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4218252:sub_405d8c": null, "4218256:_ZN9CFortress6GetDayEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
int CFortress::GetDay(struct_0 *v0)\n
{\n
    return v0->field_18;\n
}\n
", "4218264:sub_405d98": null, "4218272:_ZN9CFortress7NextDayEi": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_stdout;\n
\n
int CFortress::NextDay(unsigned int v11, unsigned int a0)\n
{\n
    int tmp_10;  // tmp #10\n
    unsigned int v0;  // [bp-0x44]\n
    int tmp_2;  // tmp #2\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    char v3;  // [bp-0x2d]\n
    char v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // edx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // edi\n
    unsigned int v29;  // ebp\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // esi\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // eax\n
    unsigned int v35;  // ecx\n
    unsigned int v36;  // ebp\n
    unsigned int v37;  // eax\n
    unsigned int v38;  // ecx\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // edx\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // edi\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // edx\n
    unsigned int v45;  // edi\n
    unsigned int v46;  // edi\n
    unsigned int v47;  // eax\n
    unsigned int v48;  // eax\n
    unsigned int v49;  // ecx\n
    unsigned int v50;  // ebx\n
    unsigned int v51;  // edx\n
    unsigned int v52;  // esi\n
    unsigned int v53;  // ebp\n
    unsigned int v54;  // eax\n
    unsigned int v55;  // ecx\n
    unsigned int v56;  // edx\n
    unsigned int v57;  // esi\n
    unsigned int v58;  // edi\n
    unsigned int v59;  // edx\n
    unsigned int v60;  // esi\n
\n
    v12 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = v11;\n
    *((v13 + 24)) = *((v13 + 24)) + a0;\n
    v9 = 0;\n
    if (!*((v13 + 32)))\n
    {\n
        v3 = 1;\n
        v46 = 0;\n
        v47 = *((v13 + 20));\n
        if (!(v47 <= 999))\n
            goto LABEL_4061ce;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        v8 = cgc_stdout;\n
        v43 = 0;\n
        v42 = 0;\n
        v7 = &_GLOBAL_OFFSET_TABLE_;\n
        do\n
        {\n
            v16 = *((v13 + 28));\n
            v5 = v43;\n
            v6 = v42;\n
            if (v43 >= 1)\n
            {\n
                v14 = v43 - 1;\n
                if ((v43 & 7))\n
                {\n
                    v15 = v43 & 7;\n
                    v17 = 0;\n
                    do\n
                    {\n
                        v16 = *((v16 + 4));\n
                        v17 += 1;\n
                    } while (v15 != v17);\n
                    v43 = v5 - v17;\n
                }\n
                if (v14 >= 7)\n
                {\n
                    do\n
                    {\n
                        v16 = *((*((*((*((*((*((*((*((v16 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v43;\n
                        v43 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v18 = *(v16);\n
            if (CMission::IsAvail())\n
            {\n
LABEL_405df0:\n
                v42 = v6;\n
                continue;\n
            }\n
            else\n
            {\n
                *((v18 + 16)) = *((v18 + 16)) - a0;\n
                if (!(CMission::GetDuration() <= 0))\n
                    goto LABEL_405df0;\n
                v4 = v18;\n
                if (!CMission::Complete())\n
                {\n
                    v20 = v8;\n
                    cgc_fprintf(v20, v12 - 16751);\n
                    v0 = CMission::GetName(v18);\n
                    cgc_fprintf(v20, v12 - 16723);\n
LABEL_406026:\n
                    v37 = operator new(8);\n
                    *(v37) = v4;\n
                    *((v37 + 4)) = 0;\n
                    v38 = &v9;\n
                    v39 = v6;\n
                    if (v39)\n
                    {\n
                        v40 = v9;\n
                        do\n
                        {\n
                            v41 = v40;\n
                            v40 = *((v40 + 4));\n
                        } while (v40);\n
                        v38 = v41 + 4;\n
                    }\n
                    *(v38) = v37;\n
                    v42 = v39 + 1;\n
                }\n
                else\n
                {\n
                    v19 = v8;\n
                    cgc_fprintf(v19, v12 - 16848);\n
                    v0 = CMission::GetName(v18);\n
                    cgc_fprintf(v19, v12 - 16819);\n
                    v21 = *((v18 + 28));\n
                    v22 = v11;\n
                    v23 = *((v22 + 20)) + v21;\n
                    if (v21 < 0 && !(v23 <= 2000))\n
                        goto LABEL_405ef9;\n
                    *((v22 + 20)) = v23;\n
LABEL_405ef9:\n
                    v0 = v21;\n
                    cgc_fprintf(v8, v12 - 16807);\n
                    v24 = *((v18 + 40));\n
                    if (*((v24 + 4)))\n
                    {\n
                        v25 = 0;\n
                        v10 = v24;\n
                        do\n
                        {\n
                            v26 = *(v24);\n
                            v27 = v25 - 1;\n
                            v28 = v25;\n
                            if (v25 < 1)\n
                            {\n
                                v29 = v4;\n
                            }\n
                            else\n
                            {\n
                                if ((v25 & 7))\n
                                {\n
                                    v30 = v25 & 7;\n
                                    v31 = 0;\n
                                    do\n
                                    {\n
                                        v26 = *((v26 + 4));\n
                                        v31 += 1;\n
                                    } while (v30 != v31);\n
                                    v25 = v28 - v31;\n
                                }\n
                                v29 = v4;\n
                                if (v27 >= 7)\n
                                {\n
                                    do\n
                                    {\n
                                        v26 = *((*((*((*((*((*((*((*((v26 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                                        tmp_10 = v25;\n
                                        v25 -= 8;\n
                                    } while (tmp_10 != 8);\n
                                }\n
                            }\n
                            v32 = *(v26);\n
                            v33 = CExplorer::GainExp(v32, *((v29 + 24)));\n
                            v35 = *((v29 + 24));\n
                            v36 = v7 - 15408;\n
                            if (v33)\n
                                v36 = v12 - 16763;\n
                            v2 = v36;\n
                            v12 = v7;\n
                            v1 = v35;\n
                            v0 = v32 + 20;\n
                            cgc_fprintf(v8, v12 - 16791);\n
                            v25 = v28 + 1;\n
                            v24 = v10;\n
                        } while (v25 < *((v24 + 4)));\n
                    }\n
                    goto LABEL_406026;\n
                }\n
            }\n
            v13 = v11;\n
            v43 = v5 + 1;\n
        } while (v43 < *((v13 + 32)));\n
        if (v42)\n
        {\n
            v4 = !v42;\n
            v6 = v42;\n
            v44 = 0;\n
            v45 = v9;\n
            v5 = v45;\n
            while (true)\n
            {\n
                v48 = v45;\n
                v49 = v44 - 1;\n
                v50 = v44;\n
                if (v44 >= 1)\n
                {\n
                    v48 = v45;\n
                    if ((v50 & 7))\n
                    {\n
                        v51 = v44 & 7;\n
                        v52 = 0;\n
                        v48 = v45;\n
                        do\n
                        {\n
                            v48 = *((v48 + 4));\n
                            v52 += 1;\n
                        } while (v51 != v52);\n
                        v44 = v50 - v52;\n
                    }\n
                    if (v49 >= 7)\n
                    {\n
                        do\n
                        {\n
                            v48 = *((*((*((*((*((*((*((*((v48 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                            tmp_10 = v44;\n
                            v44 -= 8;\n
                        } while (tmp_10 != 8);\n
                    }\n
                }\n
                v53 = *(v48);\n
                v54 = *((v11 + 32));\n
                if (v54)\n
                {\n
                    v55 = *((v11 + 28));\n
                    if (!v55)\n
                        goto LABEL_406176;\n
                    v56 = v55;\n
                    if (*(v55) != v53)\n
                    {\n
                        v57 = v56;\n
                        v56 = *((v56 + 4));\n
                        if (!v56)\n
                            goto LABEL_406176;\n
                        if (!(*(v56) == v53))\n
                            continue;\n
                        if (v56 != v55)\n
                        {\n
                            v58 = v50;\n
                            *((v57 + 4)) = *((v56 + 4));\n
                            v55 = v56;\n
                            v59 = v11;\n
                            goto LABEL_40615e;\n
                        }\n
                    }\n
                    v58 = v50;\n
                    v60 = v11;\n
                    *((v60 + 28)) = *((v55 + 4));\n
                    v59 = v60;\n
LABEL_40615e:\n
                    *((v59 + 32)) = v54 - 1;\n
                    operator delete(v55);\n
                    v50 = v58;\n
                    v45 = v5;\n
                }\n
LABEL_406176:\n
                if (v53)\n
                {\n
                    CMission::__dtor__();\n
                    operator delete(v53);\n
                }\n
                v44 = v50 + 1;\n
                if (v44 == v6)\n
                    break;\n
            }\n
            v3 = v4;\n
            v46 = v6;\n
            v13 = v11;\n
            v47 = *((v13 + 20));\n
            if (!(v47 <= 999))\n
                goto LABEL_4061ce;\n
        }\n
        else\n
        {\n
            v46 = 0;\n
            v47 = *((v13 + 20));\n
            if (!(v47 <= 999))\n
                goto LABEL_4061ce;\n
        }\n
    }\n
    v47 += 100;\n
    *((v13 + 20)) = v47;\n
LABEL_4061ce:\n
    if (v3)\n
        return v47;\n
    v47 = v9;\n
    do\n
    {\n
        operator delete(v47);\n
        v47 = *((v47 + 4));\n
        tmp_2 = v46;\n
        v46 -= 1;\n
    } while (tmp_2 != 1);\n
    return v47;\n
}\n
", "4218347:sub_405deb": null, "4218664:sub_405f28": null, "4219013:sub_406085": null, "4219201:sub_406141": null, "4219400:sub_406208": null, "4219408:_ZN9CFortress11GetMissionsEv": "int CFortress::GetMissions(unsigned int v0)\n
{\n
    return v0 + 28;\n
}\n
", "4219416:sub_406218": null, "4219424:_ZN9CFortress12GetExplorersEv": "int CFortress::GetExplorers(unsigned int v0)\n
{\n
    return v0 + 36;\n
}\n
", "4219432:sub_406228": null, "4219440:_ZN9CFortress9GetSkillsEv": "int CFortress::GetSkills(unsigned int v0)\n
{\n
    return v0 + 44;\n
}\n
", "4219448:sub_406238": null, "4219456:_ZN9CFortress23GetNumAvailableMissionsEv": "typedef struct struct_1 {\n
    char padding_0[28];\n
    struct struct_0 *field_1c;\n
    unsigned int field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CFortress::GetNumAvailableMissions(struct_1 *v2)\n
{\n
    int tmp_10;  // tmp #10\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_1 *v3;  // ebp, Other Possible Types: unsigned int\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edi\n
    struct_1 *v7;  // ebx\n
    unsigned int v8;  // edx\n
    struct_0 *v9;  // eax, Other Possible Types: unsigned int\n
    void* v10;  // ebp, Other Possible Types: unsigned int\n
    void* v11;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    if (!v2->field_20)\n
        return 0;\n
    v4 = 0;\n
    v11 = 0;\n
    do\n
    {\n
        v9 = *((v3 + 28));\n
        v5 = v11 - 1;\n
        v6 = v11;\n
        if (v11 >= 1)\n
        {\n
            if ((v11 & 7))\n
            {\n
                v7 = v3;\n
                v8 = v11 & 7;\n
                v10 = 0;\n
                do\n
                {\n
                    v9 = *((v9 + 4));\n
                    v10 += 1;\n
                } while (v8 != v10);\n
                v11 = v6 - v10;\n
                v3 = v7;\n
            }\n
            if (v5 >= 7)\n
            {\n
                do\n
                {\n
                    v9 = *((*((*((*((*((*((*((*((v9 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v11;\n
                    v11 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        v0 = *(v9);\n
        v4 += CMission::IsAvail();\n
        v11 = v6 + 1;\n
    } while (v11 < *((v3 + 32)));\n
    return v4;\n
}\n
", "4219499:sub_40626b": null, "4219643:sub_4062fb": null, "4219648:_ZN9CFortress24GetNumAvailableExplorersEv": "typedef struct struct_2 {\n
    char padding_0[36];\n
    struct struct_0 *field_24;\n
    unsigned int field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[37];\n
    char field_25;\n
    char field_26;\n
} struct_1;\n
\n
int CFortress::GetNumAvailableExplorers(struct_2 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    int tmp_10;  // tmp #10\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_2 *v4;  // eax\n
    unsigned int v5;  // edi\n
    void* v6;  // eax, Other Possible Types: unsigned int\n
    void* v7;  // edx, Other Possible Types: unsigned int\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // esi\n
    void* v10;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v11;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v12;  // ecx\n
    char v13[39];  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v15;  // ecx\n
    void* v16;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = v3;\n
    v5 = v4->field_28;\n
    if (!v5)\n
        return 0;\n
    v0 = v4->field_24;\n
    v6 = 0;\n
    v7 = 0;\n
    v1 = v5;\n
    do\n
    {\n
        if (v7 < 1)\n
        {\n
            v13 = v0->field_0;\n
            if (!(!v13[37]))\n
                goto LABEL_406420;\n
            goto LABEL_406330;\n
        }\n
        else\n
        {\n
            v2 = v7 - 1;\n
            v8 = v7 & 7;\n
            v9 = v7 - 1;\n
            v11 = v0;\n
            v12 = v7;\n
            if ((v7 & 7))\n
            {\n
                v10 = 0;\n
                v11 = v0;\n
                do\n
                {\n
                    v11 = *((v11 + 4));\n
                    v10 += 1;\n
                } while (v8 != v10);\n
                v12 = v7 - v10;\n
                v5 = v1;\n
            }\n
            if (v9 >= 7)\n
            {\n
                do\n
                {\n
                    v11 = *((*((*((*((*((*((*((*((v11 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v12;\n
                    v12 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
            if (!*((*(v11) + 37)))\n
            {\n
LABEL_406330:\n
                v13 = 0;\n
                continue;\n
            }\n
            else\n
            {\n
                v14 = v0;\n
                v15 = v7;\n
                if ((v7 & 7))\n
                {\n
                    v16 = 0;\n
                    v14 = v0;\n
                    do\n
                    {\n
                        v14 = *((v14 + 4));\n
                        v16 += 1;\n
                    } while (v8 != v16);\n
                    v15 = v7 - v16;\n
                }\n
                if (v2 >= 7)\n
                {\n
                    do\n
                    {\n
                        v14 = *((*((*((*((*((*((*((*((v14 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v15;\n
                        v15 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
                v13 = *(v14);\n
LABEL_406420:\n
                *(&v13) = *((v13 + 38));\n
            }\n
        }\n
        v6 += v13;\n
        v7 += 1;\n
    } while (v7 != v5);\n
    return v6;\n
}\n
", "4219686:sub_406326": null, "4219738:sub_40635a": null, "4219958:sub_406436": null, "4219968:_ZN9CFortress20GetNumHiredExplorersEv": "int CFortress::GetNumHiredExplorers(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    int tmp_10;  // tmp #10\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ecx\n
\n
    v3 = v2;\n
    v4 = *((v3 + 40));\n
    if (!v4)\n
        return 0;\n
    v11 = *((v3 + 36));\n
    v5 = 0;\n
    v12 = 0;\n
    v1 = v4;\n
    v0 = v11;\n
    do\n
    {\n
        v7 = v11;\n
        v6 = v12 - 1;\n
        if (v12 >= 1)\n
        {\n
            v7 = v11;\n
            v10 = v12;\n
            if ((v12 & 7))\n
            {\n
                v7 = v11;\n
                v8 = v12 & 7;\n
                v9 = 0;\n
                do\n
                {\n
                    v7 = *((v7 + 4));\n
                    v9 += 1;\n
                } while (v8 != v9);\n
                v10 = v12 - v9;\n
                v4 = v1;\n
                v11 = v0;\n
            }\n
            if (v6 >= 7)\n
            {\n
                do\n
                {\n
                    v7 = *((*((*((*((*((*((*((*((v7 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v10;\n
                    v10 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        v5 += *((*(v7) + 38));\n
        v12 += 1;\n
    } while (v12 != v4);\n
    return v5;\n
}\n
", "4220006:sub_406466": null, "4220137:sub_4064e9": null, "4220144:_ZN9CFortress11GetAvgLevelEv": "typedef struct struct_2 {\n
    char padding_0[36];\n
    struct struct_1 *field_24;\n
    unsigned int field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[26];\n
    char field_26;\n
} struct_0;\n
\n
int CFortress::GetAvgLevel(struct_2 *v4)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    int tmp_10;  // tmp #10\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_2 *v5;  // ecx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // eax\n
    void* v8;  // edx, Other Possible Types: unsigned int\n
    void* v9;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // esi\n
    struct_1 *v13;  // edi, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    void* v15;  // ebp, Other Possible Types: unsigned int\n
    void* v16;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v17;  // edi, Other Possible Types: unsigned int\n
    unsigned int v18;  // edx\n
    void* v19;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v20;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = v4;\n
    v6 = v5->field_28;\n
    if (!v6)\n
        return 1;\n
    v0 = v5->field_24;\n
    v8 = 0;\n
    v16 = 0;\n
    v9 = 0;\n
    v1 = v6;\n
    do\n
    {\n
        v10 = v9 - 1;\n
        if (v9 < 1)\n
        {\n
            v20 = v0->field_0;\n
            if (!v20->field_26)\n
                continue;\n
        }\n
        else\n
        {\n
            v2 = v8;\n
            v11 = v9 & 7;\n
            v12 = v9 - 1;\n
            v13 = v0;\n
            v14 = v9;\n
            if ((v9 & 7))\n
            {\n
                v3 = v16;\n
                v15 = 0;\n
                v13 = v0;\n
                do\n
                {\n
                    v13 = *((v13 + 4));\n
                    v15 += 1;\n
                } while (v11 != v15);\n
                v14 = v9 - v15;\n
                v16 = v3;\n
            }\n
            if (v12 >= 7)\n
            {\n
                do\n
                {\n
                    v13 = *((*((*((*((*((*((*((*((v13 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v14;\n
                    v14 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
            if (*((*(v13) + 38)))\n
            {\n
                v17 = v0;\n
                v18 = v9;\n
                if ((v9 & 7))\n
                {\n
                    v19 = 0;\n
                    v17 = v0;\n
                    do\n
                    {\n
                        v17 = *((v17 + 4));\n
                        v19 += 1;\n
                    } while (v11 != v19);\n
                    v18 = v9 - v19;\n
                }\n
                if (v10 >= 7)\n
                {\n
                    do\n
                    {\n
                        v17 = *((*((*((*((*((*((*((*((v17 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v18;\n
                        v18 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
                v20 = *(v17);\n
                v8 = v2;\n
                v6 = v1;\n
            }\n
            else\n
            {\n
                v8 = v2;\n
                v6 = v1;\n
                continue;\n
            }\n
        }\n
        v8 += *((v20 + 8));\n
        v16 += 1;\n
        v9 += 1;\n
    } while (v9 != v6);\n
    if (!v16)\n
        return 1;\n
    v7 = (v8 >> 31 CONCAT v8) /m v16;\n
    if (v7)\n
        return (v8 >> 31 CONCAT v8) /m v16;\n
    return 1;\n
}\n
", "4220189:sub_40651d": null, "4220239:sub_40654f": null, "4220481:sub_406641": null, "4220496:_ZN9CFortress8SetOwnerEPc": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
int CFortress::SetOwner(char *v0, struct_0 *a0)\n
{\n
    a0->field_10 = 0;\n
    return cgc_strcpy(v0, a0);\n
}\n
", "4220539:sub_40667b": null, "4220544:_ZN8CMissionC1EPKcRK12CRequirementRK7CReward": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char field_20;\n
    char padding_21[3];\n
    unsigned int field_24;\n
} struct_0;\n
\n
int CMission::__ctor__(struct_0 *v0, char *a0, unsigned int a1[5], unsigned int a2[2])\n
{\n
    unsigned int v1[2];  // ecx\n
    struct_0 *v2;  // esi\n
    unsigned int v3[5];  // edx\n
    unsigned int v4;  // edi\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
\n
    v1 = a2;\n
    v2 = v0;\n
    v3 = a1;\n
    v2->field_14 = v3[4];\n
    v2->field_10 = v3[3];\n
    v2->field_c = v3[2];\n
    v4 = v3[0];\n
    v2->field_8 = v3[1];\n
    v2->field_4 = v4;\n
    v6 = v1[1];\n
    v2->field_18 = v1[0];\n
    v2->field_1c = v6;\n
    v2->field_20 = 1;\n
    v2->field_24 = 0;\n
    v7 = cgc_strndup(a0, 32);\n
    v2->field_0 = v7;\n
    return v7;\n
}\n
", "4220646:sub_4066e6": null, "4220656:_ZN8CMissionD1Ev": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[36];\n
    struct struct_1 *field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CMission::__dtor__(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    struct_1 *v2;  // edi\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // ecx\n
\n
    v1 = v0;\n
    cgc_free(v1->field_0);\n
    v2 = v1->field_28;\n
    if (v2)\n
    {\n
        v3 = v2->field_4;\n
        if (v3)\n
        {\n
            do\n
            {\n
                v4 = v2->field_0;\n
                v2->field_0 = v4->field_4;\n
                v2->field_4 = v3 - 1;\n
                operator delete(v4);\n
                v3 = v2->field_4;\n
            } while (v3);\n
        }\n
        operator delete(v2);\n
    }\n
    CReward::__dtor__();\n
    return CRequirement::__base_dtor__();\n
}\n
", "4220776:sub_406768": null, "4220784:_ZN8CMission14SetRequirementERK12CRequirement": "int CMission::SetRequirement(unsigned int v0[6], unsigned int a0[5])\n
{\n
    unsigned int v1[6];  // eax\n
    unsigned int v2[5];  // ecx\n
    unsigned int v3;  // edx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    v1[5] = v2[4];\n
    v1[4] = v2[3];\n
    v1[3] = v2[2];\n
    v3 = v2[0];\n
    v1[2] = v2[1];\n
    v1[1] = v3;\n
    return v0;\n
}\n
", "4220822:sub_406796": null, "4220832:_ZN8CMission14GetRequirementEv": "int CMission::GetRequirement(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4220840:sub_4067a8": null, "4220848:_ZN8CMission9SetRewardERK7CReward": "int CMission::SetReward(unsigned int v0[8], unsigned int a0[2])\n
{\n
    unsigned int v1[8];  // eax\n
    unsigned int v2[2];  // ecx\n
    unsigned int v3;  // edx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    v3 = v2[0];\n
    v1[7] = v2[1];\n
    v1[6] = v3;\n
    return v0;\n
}\n
", "4220868:sub_4067c4": null, "4220880:_ZN8CMission9GetRewardEv": "int CMission::GetReward(unsigned int v0)\n
{\n
    return v0 + 24;\n
}\n
", "4220888:sub_4067d8": null, "4220896:_ZN8CMission7IsAvailEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
} struct_0;\n
\n
int CMission::IsAvail(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = v1->field_20;\n
    return v1;\n
}\n
", "4220904:sub_4067e8": null, "4220912:_ZN8CMission7GetNameEv": "int CMission::GetName(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4220919:sub_4067f7": null, "4220928:_ZN8CMission11GetReqLevelEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CMission::GetReqLevel(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4220936:sub_406808": null, "4220944:_ZN8CMission11GetReqGroupEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int CMission::GetReqGroup(struct_0 *v0)\n
{\n
    return v0->field_14;\n
}\n
", "4220952:sub_406818": null, "4220960:_ZN8CMission12GetReqSupplyEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int CMission::GetReqSupply(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4220968:sub_406828": null, "4220976:_ZN8CMission11GetDurationEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int CMission::GetDuration(struct_0 *v0)\n
{\n
    return v0->field_10;\n
}\n
", "4220984:sub_406838": null, "4220992:_ZN8CMission16GetReqTypeStringEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CMission::GetReqTypeString(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = v1->field_4;\n
    return CRequirement::ReqTypeToString();\n
}\n
", "4221028:sub_406864": null, "4221040:_ZN8CMission12EvalCountersERK5CListIP9CExplorerE": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0[5];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMission::EvalCounters(struct_3 *v1, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_10;  // tmp #10\n
    struct_2 *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ebp\n
    struct_2 *v6;  // ebx\n
    unsigned int v7;  // edx\n
    void* v8;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v9;  // eax, Other Possible Types: unsigned int\n
    void* v10;  // edx, Other Possible Types: unsigned int\n
    void* v11;  // esi, Other Possible Types: unsigned int\n
    unsigned int v12;  // esi\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a0;\n
    if (!v2->field_4)\n
        return -1 & v1->field_4;\n
    v10 = 0;\n
    v11 = 0;\n
    do\n
    {\n
        v9 = *(v2);\n
        v4 = v10 - 1;\n
        v5 = v10;\n
        if (v10 >= 1)\n
        {\n
            if ((v10 & 7))\n
            {\n
                v6 = v2;\n
                v7 = v10 & 7;\n
                v8 = 0;\n
                do\n
                {\n
                    v9 = *((v9 + 4));\n
                    v8 += 1;\n
                } while (v7 != v8);\n
                v10 = v5 - v8;\n
                v2 = v6;\n
            }\n
            if (v4 >= 7)\n
            {\n
                do\n
                {\n
                    v9 = *((*((*((*((*((*((*((*((v9 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v10;\n
                    v10 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        v11 |= CExplorer::GetCounters(*(v9));\n
        v10 = v5 + 1;\n
    } while (v10 < *((v2 + 4)));\n
    v12 = ~(v11);\n
    return v12 & v1->field_4;\n
}\n
", "4221087:sub_40689f": null, "4221241:sub_406939": null, "4221248:_ZN8CMission7ExecuteERK5CListIP9CExplorerE": "int CMission::Execute(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_10;  // tmp #10\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ebp\n
\n
    v2 = v1;\n
    v3 = a0;\n
    *((v2 + 32)) = 0;\n
    v11 = operator new(8);\n
    *(v11) = 0;\n
    *((v11 + 4)) = 0;\n
    v12 = *(v3);\n
    if (!*(v3))\n
    {\n
        *((v2 + 40)) = v11;\n
        return v11;\n
    }\n
    v0 = v11;\n
    v11 = 0;\n
    do\n
    {\n
        v4 = v11;\n
        v5 = operator new(8);\n
        *(v5) = *(v12);\n
        v6 = v4;\n
        *((v5 + 4)) = 0;\n
        if (!v4)\n
        {\n
            v7 = v0;\n
            v10 = v7;\n
        }\n
        else\n
        {\n
            v7 = v0;\n
            v8 = *(v7);\n
            do\n
            {\n
                v9 = v8;\n
                v8 = *((v8 + 4));\n
            } while (v8);\n
            v10 = v9 + 4;\n
        }\n
        *(v10) = v5;\n
        v11 = v6 + 1;\n
        *((v7 + 4)) = v11;\n
        v12 = *((v12 + 4));\n
    } while (v12);\n
    v13 = v0;\n
    *((v1 + 40)) = v13;\n
    if (!v11)\n
        return v6 + 1;\n
    v14 = *(v13);\n
    v15 = 0;\n
    v0 = v14;\n
    do\n
    {\n
        v16 = v14;\n
        v17 = v15 - 1;\n
        if (v15 >= 1)\n
        {\n
            v16 = v14;\n
            v18 = v15;\n
            if ((v15 & 7))\n
            {\n
                v16 = v14;\n
                v19 = v15 & 7;\n
                v20 = 0;\n
                do\n
                {\n
                    v16 = *((v16 + 4));\n
                    v20 += 1;\n
                } while (v19 != v20);\n
                v18 = v15 - v20;\n
                v14 = v0;\n
            }\n
            if (v17 >= 7)\n
            {\n
                do\n
                {\n
                    v16 = *((*((*((*((*((*((*((*((v16 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v18;\n
                    v18 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        *((*(v16) + 37)) = 0;\n
        v11 = v15 + 1;\n
        v15 = v11;\n
    } while (v6);\n
    return v11;\n
}\n
", "4221322:sub_40698a": null, "4221431:sub_4069f7": null, "4221562:sub_406a7a": null, "4221568:_ZN8CMission8CompleteEv": "typedef struct struct_3 {\n
    char padding_0[40];\n
    struct struct_2 *field_28;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[37];\n
    char field_25;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_4 *cgc_g_rand;\n
extern unsigned int cgc_g_randIdx;\n
\n
int CMission::Complete(struct_3 *v5)\n
{\n
    struct_2 *v0;  // [bp-0x28]\n
    int tmp_10;  // tmp #10\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // esi\n
    struct_3 *v7;  // esi\n
    unsigned int *v8;  // eax\n
    unsigned int v9;  // edi\n
    char v10;  // bl\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ebx\n
    struct_2 *v14;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v15;  // ebp\n
    void* v16;  // edx, Other Possible Types: unsigned int\n
    struct_1 *v17;  // edi, Other Possible Types: unsigned int\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    void* v21;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v7 = v5;\n
    v0 = v7->field_28;\n
    v8 = CMission::Check(v7);\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_g_randIdx + 4095;\n
    if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
        v9 = cgc_g_randIdx;\n
    v10 = cgc_g_rand[cgc_g_randIdx + -1 * (v9 & -0x1000)].field_0;\n
    cgc_g_randIdx = cgc_g_randIdx + 2;\n
    v2 = v8;\n
    v11 = *(v8);\n
    if (v11)\n
    {\n
        v12 = v10 - (v10 * 163 >> 14) * 101;\n
        *(&v12) = !(v11 < v12);\n
        v1 = v12;\n
        v14 = v7->field_28;\n
        v13 = v14->field_4;\n
        if (!v13)\n
            goto LABEL_406b9f;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        v14 = v7->field_28;\n
        v13 = *((v14 + 4));\n
        if (!v13)\n
            goto LABEL_406b9f;\n
    }\n
    v15 = *(v14);\n
    v16 = 0;\n
    do\n
    {\n
        v17 = v15;\n
        v18 = v16 - 1;\n
        if (v16 >= 1)\n
        {\n
            v17 = v15;\n
            v19 = v16;\n
            if ((v16 & 7))\n
            {\n
                v20 = v16 & 7;\n
                v21 = 0;\n
                v17 = v15;\n
                do\n
                {\n
                    v17 = *((v17 + 4));\n
                    v21 += 1;\n
                } while (v20 != v21);\n
                v19 = v16 - v21;\n
            }\n
            if (v18 >= 7)\n
            {\n
                do\n
                {\n
                    v17 = *((*((*((*((*((*((*((*((v17 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v19;\n
                    v19 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        *((*(v17) + 37)) = 1;\n
        v16 += 1;\n
    } while (v16 != v13);\n
LABEL_406b9f:\n
    operator delete(v2);\n
    return v1;\n
}\n
", "4221739:sub_406b2b": null, "4221883:sub_406bbb": null, "4221888:_ZN8CMission5CheckERK5CListIP9CExplorerE": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CMission::Check(unsigned int v4[6], struct_2 *a0)\n
{\n
    unsigned int v0[4];  // [bp-0x20]\n
    int tmp_10;  // tmp #10\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_1 *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_2 *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // edx\n
    void* v10;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v11;  // eax, Other Possible Types: unsigned int\n
    void* v12;  // edx, Other Possible Types: unsigned int\n
    void* v13;  // edi, Other Possible Types: unsigned int\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // edi\n
    unsigned int v16[6];  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // ecx\n
    struct_1 *v19;  // ebp, Other Possible Types: unsigned int\n
    void* v20;  // ebx, Other Possible Types: unsigned int\n
    struct_1 *v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // ecx\n
    void* v25;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edi\n
    void* v28;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ecx\n
\n
    v5 = a0;\n
    v6 = operator new(16);\n
    v0[0] = v6;\n
    if (!v5->field_4)\n
    {\n
        v15 = -1;\n
        v14 = 0;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v13 = 0;\n
        do\n
        {\n
            v11 = *(v5);\n
            v7 = v12 - 1;\n
            v8 = v12;\n
            if (v12 >= 1)\n
            {\n
                if ((v12 & 7))\n
                {\n
                    v9 = v12 & 7;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v11 = *((v11 + 4));\n
                        v10 += 1;\n
                    } while (v9 != v10);\n
                    v12 = v8 - v10;\n
                }\n
                if (v7 >= 7)\n
                {\n
                    do\n
                    {\n
                        v11 = *((*((*((*((*((*((*((*((v11 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v12;\n
                        v12 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v13 |= CExplorer::GetCounters(*(v11));\n
            v12 = v8 + 1;\n
            v5 = a0;\n
            v14 = a0->field_4;\n
        } while (v12 < v14);\n
        v15 = ~(v13);\n
        v6 = v0;\n
    }\n
    v16 = v4;\n
    tmp_1 = v15 & v16[1];\n
    v17 = v15 & v16[1];\n
    *((v6 + 4)) = v17;\n
    v18 = v16[5];\n
    *((v6 + 8)) = v18;\n
    *((v6 + 12)) = v14;\n
    v1 = v18;\n
    if (tmp_1)\n
    {\n
        v29 = ((((v17 - (v17 >> 1 & 1431655765) >> 2 & 858993459) + (v17 - (v17 >> 1 & 1431655765) & 858993459) >> 4) + (v17 - (v17 >> 1 & 1431655765) >> 2 & 858993459) + (v17 - (v17 >> 1 & 1431655765) & 858993459) & 252645135) * 16843009 >> 24) * -25 + 100;\n
        *(v6) = v29;\n
        if (!v14)\n
            goto LABEL_406da8;\n
    }\n
    else\n
    {\n
        v29 = 100;\n
        *(v6) = 100;\n
        if (!v14)\n
            goto LABEL_406da8;\n
    }\n
    v19 = *(v5);\n
    v3 = v16[2];\n
    v20 = 0;\n
    v2 = v19;\n
    do\n
    {\n
        v21 = v19;\n
        v22 = v20 - 1;\n
        if (v20 >= 1)\n
        {\n
            v21 = v19;\n
            v23 = v20;\n
            if ((v20 & 7))\n
            {\n
                v24 = v20 & 7;\n
                v21 = v19;\n
                v25 = 0;\n
                do\n
                {\n
                    v21 = *((v21 + 4));\n
                    v25 += 1;\n
                } while (v24 != v25);\n
                v23 = v20 - v25;\n
                v19 = v2;\n
            }\n
            if (v22 >= 7)\n
            {\n
                do\n
                {\n
                    v21 = *((*((*((*((*((*((*((*((v21 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v23;\n
                    v23 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        v26 = *((*(v21) + 8));\n
        v27 = v3;\n
        v28 = -((v27 - v26) * 5);\n
        if (v27 <= v26)\n
            v28 = 0;\n
        v29 = v29 + v28 + 5;\n
        v20 += 1;\n
    } while (v20 != v14);\n
    v6 = v0;\n
    *(v6) = v29;\n
LABEL_406da8:\n
    v30 = 0;\n
    if (v29 >= 0 && v14 >= v1)\n
    {\n
        v30 = 100;\n
        if (v29 < 101)\n
            return v6;\n
    }\n
    *(v6) = v30;\n
    return v6;\n
}\n
", "4221943:sub_406bf7": null, "4222222:sub_406d0e": null, "4222408:sub_406dc8": null, "4222416:_ZN12CRequirementC1ENS_4TypeEiiii": "int CRequirement::__ctor__(unsigned int v3[5], unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // esi\n
    unsigned int v7[5];  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // ebx\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = v6;\n
    v7 = v3;\n
    v7[0] = a0;\n
    v7[1] = a1;\n
    v7[2] = a2;\n
    v7[3] = a3;\n
    v7[4] = a4;\n
    v8 = v0;\n
    v9 = v1;\n
    v10 = v2;\n
    return a4;\n
}\n
", "4222461:sub_406dfd": null, "4222464:_ZN12CRequirementD2Ev": "int CRequirement::__base_dtor__()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4222465:sub_406e01": null, "4222480:_ZN12CRequirement15ReqTypeToStringENS_4TypeE": "int CRequirement::ReqTypeToString(unsigned int v0)\n
{\n
    char *v1;  // eax\n
    char *v2;  // esi\n
    char *v3;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = cgc_malloc(0x200);\n
    v2 = v1;\n
    cgc_memset(v1, 0, 0x200);\n
    v3 = v1;\n
    if (!(v0 & 1))\n
    {\n
        if (!(!(v0 & 2)))\n
            goto LABEL_406ee8;\n
        goto LABEL_406e61;\n
    }\n
    else\n
    {\n
        cgc_strcpy(v1, \"GROUND,\");\n
        v3 = &v1[cgc_strlen(\"GROUND,\")];\n
        if (!(v0 & 2))\n
        {\n
LABEL_406e61:\n
            if (!(!(v0 & 4)))\n
                goto LABEL_406f10;\n
            goto LABEL_406e6d;\n
        }\n
        else\n
        {\n
LABEL_406ee8:\n
            cgc_strcpy(v3, \"AERIAL,\");\n
            v3 += cgc_strlen(\"AERIAL,\");\n
            if (!(v0 & 4))\n
            {\n
LABEL_406e6d:\n
                if (!(!(v0 & 8)))\n
                    goto LABEL_406f38;\n
                goto LABEL_406e79;\n
            }\n
            else\n
            {\n
LABEL_406f10:\n
                cgc_strcpy(v3, \"NAVAL,\");\n
                v3 += cgc_strlen(\"NAVAL,\");\n
                if (!(v0 & 8))\n
                {\n
LABEL_406e79:\n
                    if (!(!(v0 & 16)))\n
                        goto LABEL_406f60;\n
                    goto LABEL_406e85;\n
                }\n
                else\n
                {\n
LABEL_406f38:\n
                    cgc_strcpy(v3, \"INTEL,\");\n
                    v3 += cgc_strlen(\"INTEL,\");\n
                    if (!(v0 & 16))\n
                    {\n
LABEL_406e85:\n
                        if (!(v0 & 32))\n
                            goto LABEL_406ea7;\n
                        goto LABEL_406e8d;\n
                    }\n
                    else\n
                    {\n
LABEL_406f60:\n
                        cgc_strcpy(v3, \"SPECIAL,\");\n
                        v3 += cgc_strlen(\"SPECIAL,\");\n
                        if (!(v0 & 32))\n
                            goto LABEL_406ea7;\n
LABEL_406e8d:\n
                        cgc_strcpy(v3, \"RESCUE,\");\n
                        cgc_strlen(\"RESCUE,\");\n
                    }\n
                }\n
            }\n
        }\n
    }\n
LABEL_406ea7:\n
    v2[1 + cgc_strlen(v2)] = 0;\n
    return v2;\n
}\n
", "4222861:sub_406f8d": null, "4222864:_ZN7CRewardC2Eii": "int CReward::__base_ctor__(unsigned int v0[2], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1[2];  // edx\n
\n
    v1 = v0;\n
    v1[0] = a0;\n
    v1[1] = a1;\n
    return a1;\n
}\n
", "4222882:sub_406fa2": null, "4222896:_ZN7CRewardD1Ev": "int CReward::__dtor__()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4222897:sub_406fb1": null, "4222912:_Z18CreateMoreMissionsv": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[877];\n
extern struct_0 *cgc_g_rand;\n
extern unsigned int cgc_g_randIdx;\n
\n
int CreateMoreMissions()\n
{\n
    void* v0;  // [bp-0x4c], Other Possible Types: unsigned int\n
    int tmp_45;  // tmp #45\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2[877];  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6[5];  // [bp-0x34]\n
    unsigned int v7[2];  // [bp-0x1c]\n
    char v9;  // [bp+0xd90]\n
    unsigned int v10[877];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v11;  // edx\n
    char *v12;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // eax\n
    void* v18;  // esi, Other Possible Types: unsigned int\n
    unsigned int v19;  // ebp\n
    unsigned int v20;  // edx\n
    unsigned int v21[877];  // ebp\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // edi\n
    char v24;  // dl\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ecx\n
    unsigned int v30;  // eax\n
    void* v31;  // edi\n
    void* v33;  // esi\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // edx\n
    struct_2 *v36;  // edi\n
    unsigned int v37[2];  // eax\n
    unsigned int v38;  // ecx\n
    struct_1 *v39;  // esi, Other Possible Types: unsigned int\n
    struct_2 *v40;  // edx, Other Possible Types: unsigned int\n
    struct_1 *v41;  // edx\n
    unsigned int v42[877];  // ebx\n
\n
    v10 = &_GLOBAL_OFFSET_TABLE_[0];\n
    v11 = cgc_g_randIdx + 4095;\n
    if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
        v11 = cgc_g_randIdx;\n
    v12 = cgc_g_rand;\n
    v3 = (cgc_g_rand[cgc_g_randIdx + -1 * (v11 & -0x1000)].field_0 & 3) + 1;\n
    v13 = cgc_g_randIdx + 2;\n
    cgc_g_randIdx = v13;\n
    v0 = 0;\n
    v2[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    while (true)\n
    {\n
        v14 = v13 + 4095;\n
        if ((v13 >> 31 & 1 ^ 1))\n
            v14 = v13;\n
        v15 = *((v12 + v13 - (v14 & -0x1000)));\n
        *(&v15) = v15 - (v15 * 171 >> 9) * 3;\n
        *((v10 + 3500)) = v13 + 2;\n
        v1 = v15;\n
        v16 = v15 + 1;\n
        v17 = v13 + 6;\n
        v18 = 0;\n
        do\n
        {\n
            v19 = v17 + 4091;\n
            if ((v17 + 4091 >> 31 & 1 ^ 1))\n
                v19 = v17 - 4;\n
            v20 = v12[4 + -(v19 & -0x1000) + v17];\n
            v21 = v2;\n
            v18 |= v2[855 + 3 * v20 + -9 * (v20 * 171 >> 9 & -2)];\n
            v2[875] = v17 - 2;\n
            v17 += 2;\n
            tmp_45 = v16;\n
            v16 -= 1;\n
        } while (tmp_45 != 1);\n
        v22 = v17 + 4091;\n
        if ((v22 >> 31 & 1 ^ 1))\n
            v22 = v17 - 4;\n
        v23 = v12[4 + -(v22 & -0x1000) + v17];\n
        v24 = (v23 * 137 >> 12) * 30;\n
        v25 = v23;\n
        *(&v25) = v25 - v24 + 1;\n
        v26 = v25;\n
        v21[875] = *(&v24);\n
        v27 = v17 + 4093;\n
        if ((*(&v24) >> 31 & 1 ^ 1))\n
            *(&v24) = v17 - 2;\n
        v28 = v12[2 + -(v27 & -0x1000) + v17];\n
        v21[875] = v17;\n
        v5 = v26;\n
        v4 = v28 - (v28 * 205 >> 10 & -2) * 5 + 1;\n
        v30 = v1;\n
        if (!v30)\n
            v30 = 1;\n
        v1 = v30;\n
        v31 = v21 + 1;\n
        CRequirement::__ctor__(v6, v18, CFortress::GetAvgLevel(v31), v5, v4, v30);\n
        CReward::__base_ctor__(v7, v1 * CFortress::GetAvgLevel(v31) * 100, v7 * (v7 & 3));\n
        v33 = operator new(44);\n
        v34 = *(&v9);\n
        v35 = v34 + 4095;\n
        if ((v34 >> 31 & 1 ^ 1))\n
            v35 = v34;\n
        CMission::__ctor__(v33, v21[794 + 2 * (*((v21[876] + v34 - (v35 & -0x1000))) - (*((v21[876] + v34 - (v35 & -0x1000))) * 205 >> 10 & -0x4) * 5)], v6, v7);\n
        v21[875] = v21[875] + 2;\n
        v36 = CFortress::GetMissions(v31);\n
        v37 = operator new(8);\n
        v37[0] = v33;\n
        v37[1] = 0;\n
        v38 = v36->field_4;\n
        if (!v38)\n
        {\n
            v40 = v36;\n
        }\n
        else\n
        {\n
            v39 = v36->field_0;\n
            do\n
            {\n
                v41 = v39;\n
                v39 = *((v39 + 4));\n
            } while (v39);\n
            v40 = &v41->field_4;\n
        }\n
        *(v40) = v37;\n
        v36->field_4 = v38 + 1;\n
        v42 = v2;\n
        v10 = v42;\n
        CReward::__dtor__();\n
        if (v0 == v3)\n
            break;\n
        v0 += 1;\n
        v12 = v42[876];\n
        v13 = v10[875];\n
    }\n
    return CRequirement::__base_dtor__();\n
}\n
", "4223598:sub_40726e": null, "4223681:sub_4072c1": null, "4223696:_Z18InitializeMissionsv": "int InitializeMissions()\n
{\n
    return CreateMoreMissions();\n
}\n
", "4223722:sub_4072ea": null, "4223728:_Z16InitializeSkillsv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern unsigned int cgc_g_fort;\n
extern unsigned int g_40f2c8;\n
extern unsigned int g_40f2cc;\n
extern unsigned int g_40f2d0;\n
extern unsigned int g_40f2d4;\n
extern unsigned int g_40f2d8;\n
extern unsigned int g_40f2dc;\n
extern unsigned int g_40f2e0;\n
extern unsigned int g_40f2e4;\n
extern unsigned int g_40f2e8;\n
extern unsigned int g_40f2ec;\n
extern unsigned int g_40f2f0;\n
extern unsigned int g_40f2f4;\n
extern unsigned int g_40f2f8;\n
extern unsigned int g_40f2fc;\n
extern unsigned int g_40f300;\n
extern unsigned int g_40f304;\n
extern unsigned int g_40f308;\n
extern unsigned int g_skills;\n
\n
int InitializeSkills()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v2;  // edi\n
    struct_1 *v3;  // esi\n
    unsigned int v4[2];  // eax\n
    unsigned int v5;  // ecx\n
    struct_0 *v6;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v7;  // edx\n
    struct_1 *v8;  // edx, Other Possible Types: unsigned int\n
    unsigned int v9;  // edi\n
    struct_1 *v10;  // esi\n
    unsigned int v11[2];  // eax\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v14;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v15;  // edx\n
    unsigned int v16;  // edi\n
    struct_1 *v17;  // esi\n
    unsigned int v18[2];  // eax\n
    unsigned int v19;  // ecx\n
    struct_0 *v20;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v21;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v22;  // edx\n
    unsigned int v23;  // edi\n
    struct_1 *v24;  // esi\n
    unsigned int v25[2];  // eax\n
    unsigned int v26;  // ecx\n
    struct_0 *v27;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v28;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v29;  // edx\n
    unsigned int v30;  // edi\n
    struct_1 *v31;  // esi\n
    unsigned int v32[2];  // eax\n
    unsigned int v33;  // ecx\n
    struct_0 *v34;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v35;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v36;  // edx\n
    unsigned int v37;  // edi\n
    struct_1 *v38;  // esi\n
    unsigned int v39[2];  // eax\n
    unsigned int v40;  // ecx\n
    struct_0 *v41;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v42;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v43;  // edx\n
\n
    v2 = operator new(12);\n
    v0 = g_40f2cc;\n
    CSkill::__base_ctor__(v2, g_skills, g_40f2c8);\n
    v3 = CFortress::GetSkills(&cgc_g_fort);\n
    v4 = operator new(8);\n
    v4[0] = v2;\n
    v4[1] = 0;\n
    v5 = v3->field_4;\n
    if (!v5)\n
    {\n
        v8 = v3;\n
    }\n
    else\n
    {\n
        v6 = v3->field_0;\n
        do\n
        {\n
            v7 = v6;\n
            v6 = *((v6 + 4));\n
        } while (v6);\n
        v8 = &v7->field_4;\n
    }\n
    *(v8) = v4;\n
    v3->field_4 = v5 + 1;\n
    v9 = operator new(12);\n
    v0 = g_40f2d8;\n
    CSkill::__base_ctor__(v9, g_40f2d0, g_40f2d4);\n
    v10 = CFortress::GetSkills(&cgc_g_fort);\n
    v11 = operator new(8);\n
    v11[0] = v9;\n
    v11[1] = 0;\n
    v12 = v10->field_4;\n
    if (!v12)\n
    {\n
        v14 = v10;\n
    }\n
    else\n
    {\n
        v13 = v10->field_0;\n
        do\n
        {\n
            v15 = v13;\n
            v13 = *((v13 + 4));\n
        } while (v13);\n
        v14 = &v15->field_4;\n
    }\n
    *(v14) = v11;\n
    v10->field_4 = v12 + 1;\n
    v16 = operator new(12);\n
    v0 = g_40f2e4;\n
    CSkill::__base_ctor__(v16, g_40f2dc, g_40f2e0);\n
    v17 = CFortress::GetSkills(&cgc_g_fort);\n
    v18 = operator new(8);\n
    v18[0] = v16;\n
    v18[1] = 0;\n
    v19 = v17->field_4;\n
    if (!v19)\n
    {\n
        v21 = v17;\n
    }\n
    else\n
    {\n
        v20 = v17->field_0;\n
        do\n
        {\n
            v22 = v20;\n
            v20 = *((v20 + 4));\n
        } while (v20);\n
        v21 = &v22->field_4;\n
    }\n
    *(v21) = v18;\n
    v17->field_4 = v19 + 1;\n
    v23 = operator new(12);\n
    v0 = g_40f2f0;\n
    CSkill::__base_ctor__(v23, g_40f2e8, g_40f2ec);\n
    v24 = CFortress::GetSkills(&cgc_g_fort);\n
    v25 = operator new(8);\n
    v25[0] = v23;\n
    v25[1] = 0;\n
    v26 = v24->field_4;\n
    if (!v26)\n
    {\n
        v28 = v24;\n
    }\n
    else\n
    {\n
        v27 = v24->field_0;\n
        do\n
        {\n
            v29 = v27;\n
            v27 = *((v27 + 4));\n
        } while (v27);\n
        v28 = &v29->field_4;\n
    }\n
    *(v28) = v25;\n
    v24->field_4 = v26 + 1;\n
    v30 = operator new(12);\n
    v0 = g_40f2fc;\n
    CSkill::__base_ctor__(v30, g_40f2f4, g_40f2f8);\n
    v31 = CFortress::GetSkills(&cgc_g_fort);\n
    v32 = operator new(8);\n
    v32[0] = v30;\n
    v32[1] = 0;\n
    v33 = v31->field_4;\n
    if (!v33)\n
    {\n
        v35 = v31;\n
    }\n
    else\n
    {\n
        v34 = v31->field_0;\n
        do\n
        {\n
            v36 = v34;\n
            v34 = *((v34 + 4));\n
        } while (v34);\n
        v35 = &v36->field_4;\n
    }\n
    *(v35) = v32;\n
    v31->field_4 = v33 + 1;\n
    v37 = operator new(12);\n
    v0 = g_40f308;\n
    CSkill::__base_ctor__(v37, g_40f300, g_40f304);\n
    v38 = CFortress::GetSkills(&cgc_g_fort);\n
    v39 = operator new(8);\n
    v39[0] = v37;\n
    v39[1] = 0;\n
    v40 = v38->field_4;\n
    if (!v40)\n
    {\n
        v42 = v38;\n
    }\n
    else\n
    {\n
        v41 = v38->field_0;\n
        do\n
        {\n
            v43 = v41;\n
            v41 = *((v41 + 4));\n
        } while (v41);\n
        v42 = &v43->field_4;\n
    }\n
    *(v42) = v39;\n
    v38->field_4 = v40 + 1;\n
    return v39;\n
}\n
", "4224432:_Z19InitializeExplorersv": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_g_fort;\n
extern struct_3 *cgc_g_rand;\n
extern unsigned int cgc_g_randIdx;\n
\n
int InitializeExplorers()\n
{\n
    void* v0;  // [bp-0x30]\n
    int tmp_10;  // tmp #10\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    void* v7;  // edi, Other Possible Types: unsigned int\n
    struct_2 *v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // esi\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    unsigned int v16;  // ecx\n
    struct_1 *v17;  // ebp, Other Possible Types: unsigned int\n
    struct_4 *v18;  // ebp\n
    unsigned int v19[2];  // eax\n
    unsigned int v20;  // ecx\n
    struct_4 *v21;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v22;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v23;  // edx\n
\n
    v0 = 0;\n
    v4 = operator new(12);\n
    CSkill::__base_ctor__(v4, \"No Skill\", 0);\n
    v7 = 0;\n
    v3 = &cgc_g_fort;\n
    do\n
    {\n
        v1 = v7;\n
        v2 = operator new(40);\n
        CExplorer::__base_ctor__(v2, *(&(&_GLOBAL_OFFSET_TABLE_)[3336 + 4 * v7]));\n
        v8 = CFortress::GetSkills(v3);\n
        v9 = cgc_g_randIdx + 4095;\n
        if ((cgc_g_randIdx >> 31 & 1 ^ 1))\n
            v9 = cgc_g_randIdx;\n
        v10 = cgc_g_rand[cgc_g_randIdx + -1 * (v9 & -0x1000)].field_0;\n
        v5 = v8->field_4;\n
        cgc_g_randIdx = cgc_g_randIdx + 2;\n
        v17 = v8->field_0;\n
        if (!v5)\n
        {\n
            v13 = v1;\n
            v14 = v2;\n
            continue;\n
        }\n
        else\n
        {\n
            v16 = (0 CONCAT v10) /m v5 >> 32;\n
            v11 = ((0 CONCAT v10) /m v5 >> 32) - 1;\n
            v12 = v16 & 7;\n
            if ((v16 & 7))\n
            {\n
                v15 = 0;\n
                v13 = v1;\n
                do\n
                {\n
                    v16 -= 1;\n
                    v17 = *((v17 + 4));\n
                    v15 += 1;\n
                } while (v15 != v12);\n
                v14 = v2;\n
                if (v11 < 7)\n
                    continue;\n
            }\n
            else\n
            {\n
                v13 = v1;\n
                v14 = v2;\n
                if (v11 < 7)\n
                    continue;\n
            }\n
            do\n
            {\n
                v17 = *((*((*((*((*((*((*((*((v17 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                tmp_10 = v16;\n
                v16 -= 8;\n
            } while (tmp_10 != 8);\n
        }\n
        CExplorer::ReplaceSkill(v14, *(v17), 0);\n
        CExplorer::ReplaceSkill(v14, v4, 1);\n
        v18 = CFortress::GetExplorers(v3);\n
        v19 = operator new(8);\n
        v19[0] = v14;\n
        v19[1] = 0;\n
        v20 = v18->field_4;\n
        if (!v20)\n
        {\n
            v21 = v18;\n
        }\n
        else\n
        {\n
            v22 = v18->field_0;\n
            do\n
            {\n
                v23 = v22;\n
                v22 = *((v22 + 4));\n
            } while (v22);\n
            v21 = &v23->field_4;\n
        }\n
        *(v21) = v19;\n
        v18->field_4 = v20 + 1;\n
        v7 = v13 + 1;\n
    } while (v7 != 20);\n
    return v19;\n
}\n
", "4224502:sub_4075f6": null, "4224712:sub_4076c8": null, "4224730:sub_4076da": null, "4224889:sub_407779": null, "4224896:_Z18PrintWelcomeBannerc": "extern unsigned int banner;\n
extern void* cgc_stdout;\n
\n
int PrintWelcomeBanner(char v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = v1;\n
    return cgc_fprintf(cgc_stdout, banner);\n
}\n
", "4224945:sub_4077b1": null, "4224960:_Z13PrintMainMenuv": "extern void cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
int PrintMainMenu()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // esi\n
\n
    cgc_fbuffered(cgc_stdout, 1);\n
    v8 = *((CFortress::GetMissions(&cgc_g_fort) + 4)) - CFortress::GetNumAvailableMissions(&cgc_g_fort);\n
    v5 = CFortress::GetDay(&cgc_g_fort);\n
    v4 = CFortress::GetNumHiredExplorers(&cgc_g_fort);\n
    v3 = CFortress::GetSupply(&cgc_g_fort);\n
    v2 = v4;\n
    v1 = v8;\n
    v0 = v5;\n
    v9 = cgc_fprintf(cgc_stdout, \"\\n
Day-%03d => [%d mission] | [%d explorer] | [%d supply]\\n
\");\n
    if (v9 >= 2)\n
    {\n
        v10 = v9 + 1;\n
        do\n
        {\n
            cgc_fprintf(cgc_stdout, \"-\");\n
            v10 -= 1;\n
        } while (v10 > 2);\n
    }\n
    cgc_fprintf(cgc_stdout, \"\\n
\");\n
    cgc_fprintf(cgc_stdout, \"0. Next day!\\n
\");\n
    cgc_fprintf(cgc_stdout, \"1. Missions\\n
\");\n
    cgc_fprintf(cgc_stdout, \"2. Explorers\\n
\");\n
    cgc_fprintf(cgc_stdout, \"3. Give up\\n
\");\n
    return cgc_fbuffered(cgc_stdout, 0);\n
}\n
", "4225254:sub_4078e6": null, "4225264:_Z16PrintMissionMenuv": "extern void cgc_g_fort;\n
extern unsigned int cgc_stdout[4];\n
\n
int PrintMissionMenu()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = v5;\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_fprintf(cgc_stdout, \"\\n
]]] Missions [[[\\n
\");\n
    v0 = CFortress::GetNumAvailableMissions(&cgc_g_fort);\n
    cgc_fprintf(cgc_stdout, \"1. Send mission (%d available)\\n
\");\n
    cgc_fprintf(cgc_stdout, \"2. View current missions\\n
\");\n
    cgc_fprintf(cgc_stdout, \"3. Back\\n
\");\n
    return cgc_fbuffered(cgc_stdout, 0);\n
}\n
", "4225395:sub_407973": null, "4225408:_Z17PrintExplorerMenuv": "extern void* cgc_stdout;\n
extern char g_hidden;\n
\n
int PrintExplorerMenu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = v4;\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_fprintf(cgc_stdout, \"\\n
]]] Explorers [[[\\n
\");\n
    cgc_fprintf(cgc_stdout, \"1. Hire explorer\\n
\");\n
    cgc_fprintf(cgc_stdout, \"2. View current explorers\\n
\");\n
    cgc_fprintf(cgc_stdout, \"3. Remove explorer\\n
\");\n
    cgc_fprintf(cgc_stdout, \"4. Learn skills\\n
\");\n
    cgc_fprintf(cgc_stdout, \"5. Back\\n
\");\n
    if (g_hidden)\n
        return cgc_fbuffered(cgc_stdout, 0);\n
    cgc_fprintf(cgc_stdout, \"6. Change explorer name\\n
\");\n
    return cgc_fbuffered(cgc_stdout, 0);\n
}\n
", "4225586:sub_407a32": null, "4225600:_Z13PrintMissionsR5CListIP8CMissionE": "typedef struct struct_2 {\n
    unsigned int field_-148;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int PrintMissions(struct_3 *v17)\n
{\n
    int tmp_10;  // tmp #10\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    struct_2 *v8;  // [bp-0x34]\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x14]\n
    struct_3 *v19;  // edx, Other Possible Types: unsigned int\n
    struct_2 *v20;  // ecx\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // ecx\n
    void* v23;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v24;  // eax, Other Possible Types: unsigned int\n
    unsigned int v25;  // ecx\n
    unsigned int v26[8];  // ebp\n
    unsigned int v27;  // edi\n
    void* v28;  // esi\n
    void* v29;  // edi, Other Possible Types: unsigned int\n
\n
    v8 = &_GLOBAL_OFFSET_TABLE_.field_-148;\n
    v19 = v17;\n
    if (!v19->field_4)\n
        return &_GLOBAL_OFFSET_TABLE_.field_-148;\n
    v20 = v8;\n
    v12 = v20[82].field_-148;\n
    v29 = 0;\n
    v11 = v20 + 3766;\n
    v10 = &v20[3753].field_-148 + 2;\n
    do\n
    {\n
        v24 = *(v19);\n
        v21 = v29 - 1;\n
        v9 = v29;\n
        if (v29 >= 1)\n
        {\n
            v25 = v29;\n
            if ((v25 & 7))\n
            {\n
                v22 = v29 & 7;\n
                v23 = 0;\n
                do\n
                {\n
                    v24 = *((v24 + 4));\n
                    v23 += 1;\n
                } while (v22 != v23);\n
                v25 = v9 - v23;\n
            }\n
            if (v21 >= 7)\n
            {\n
                do\n
                {\n
                    v24 = *((*((*((*((*((*((*((*((v24 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v25;\n
                    v25 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        v26 = *(v24);\n
        v27 = CMission::GetReqTypeString(*(v24));\n
        v15 = v27;\n
        v16 = CMission::GetName(v26);\n
        v14 = CMission::GetReqLevel(v26);\n
        v13 = CMission::GetReqGroup(v26);\n
        v5 = CMission::GetReqSupply(v26);\n
        v4 = CMission::GetDuration(v26);\n
        v3 = v13;\n
        v2 = v14;\n
        v1 = v16;\n
        v0 = v9;\n
        v28 = v12;\n
        cgc_fprintf(v28, v11);\n
        v7 = v26[6];\n
        v6 = v26[7];\n
        cgc_fprintf(v28, v10);\n
        v29 = v0 + 1;\n
        v19 = v17;\n
    } while (v29 < *((v19 + 4)));\n
    return cgc_free(v15);\n
}\n
", "4225962:sub_407baa": null, "4225968:_Z14PrintExplorersR5CListIP9CExplorerE": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_1 *field_c;\n
    struct struct_1 *field_10;\n
    char padding_14[18];\n
    char field_26;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern unsigned int cgc_stdout[4];\n
extern char g_40a93c;\n
\n
int PrintExplorers(struct_3 *v14)\n
{\n
    int tmp_10;  // tmp #10\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x40]\n
    void* v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    char *v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    unsigned int v9;  // [bp-0x24]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    struct_3 *v15;  // esi, Other Possible Types: unsigned int\n
    void* v16;  // edx, Other Possible Types: unsigned int\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // edx\n
    void* v20;  // esi, Other Possible Types: unsigned int\n
    struct_2 *v21;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v22;  // ebp\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // edx\n
    void* v25;  // edi\n
    char *v26;  // esi\n
    char *v28;  // esi\n
\n
    v15 = v14;\n
    v4 = cgc_stdout;\n
    cgc_fbuffered(cgc_stdout, 1);\n
    if (!v15->field_4)\n
        return cgc_fbuffered(v4, 0);\n
    v16 = 0;\n
    v11 = \"not-hired\";\n
    v10 = \"hired\";\n
    v9 = \"%d. %s [LVL %d] [EXP %d/%d] (%s)\\n
\";\n
    v6 = &g_40a93c;\n
    v5 = \"None\";\n
    v8 = \"   ==> Skill #1: %s <%s>\\n
\";\n
    v7 = \"   ==> Skill #2: %s <%s>\\n
\";\n
    do\n
    {\n
        v21 = *(v15);\n
        v17 = v16 - 1;\n
        v18 = v16;\n
        if (v16 >= 1)\n
        {\n
            if ((v16 & 7))\n
            {\n
                v19 = v16 & 7;\n
                v20 = 0;\n
                do\n
                {\n
                    v21 = *((v21 + 4));\n
                    v20 += 1;\n
                } while (v19 != v20);\n
                v16 = v18 - v20;\n
            }\n
            if (v17 >= 7)\n
            {\n
                do\n
                {\n
                    v21 = *((*((*((*((*((*((*((*((v21 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v16;\n
                    v16 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
        }\n
        v22 = *(v21);\n
        v23 = CExplorer::GetNextExp(*(v21)) + *((*(v21) + 4));\n
        v24 = v10;\n
        if (!v22->field_26)\n
            v24 = v11;\n
        v3 = v24;\n
        v2 = v23;\n
        v1 = &v22->padding_14;\n
        v13 = v18;\n
        v0 = v18;\n
        v25 = v4;\n
        cgc_fprintf(v25, v9);\n
        v26 = CRequirement::ReqTypeToString(v22->field_c->field_4);\n
        v12 = v22->field_c->field_0;\n
        v3 = (!cgc_strcmp(v26, v6) ? v26 : v5);\n
        v2 = v12;\n
        cgc_fprintf(v25, v8);\n
        cgc_free(v26);\n
        v28 = CRequirement::ReqTypeToString(v22->field_10->field_4);\n
        v3 = (!cgc_strcmp(v28, v6) ? v28 : v5);\n
        v2 = v22->field_10->field_0;\n
        cgc_fprintf(v4, v7);\n
        cgc_free(v28);\n
        v16 = v13 + 1;\n
        v15 = v14;\n
    } while (v16 < *((v15 + 4)));\n
    return cgc_fbuffered(v4, 0);\n
}\n
", "4226104:sub_407c38": null, "4226472:sub_407da8": null, "4226480:_Z17HandleSendMissionv": "typedef struct struct_8 {\n
    unsigned int field_-14c;\n
    unsigned int field_-148;\n
} struct_8;\n
\n
typedef struct struct_6 {\n
    struct struct_5 *field_0;\n
    unsigned int field_4;\n
} struct_6;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    struct struct_4 *field_4;\n
} struct_4;\n
\n
typedef struct struct_7 {\n
    void* field_0;\n
    struct struct_7 *field_4;\n
} struct_7;\n
\n
typedef struct struct_3 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    struct struct_5 *field_4;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[37];\n
    char field_25;\n
    char field_26;\n
} struct_1;\n
\n
extern struct_8 _GLOBAL_OFFSET_TABLE_;\n
extern void cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
int HandleSendMission()\n
{\n
    struct_6 *v0;  // [bp-0x94]\n
    int tmp_10;  // tmp #10\n
    int tmp_2;  // tmp #2\n
    struct_8 *v1;  // [bp-0x90]\n
    struct_2 *v2;  // [bp-0x8c]\n
    struct_3 *v3;  // [bp-0x88]\n
    struct_5 *v4;  // [bp-0x84], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x80], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x7c]\n
    struct_2 *v7;  // [bp-0x78]\n
    void* v8;  // [bp-0x74]\n
    void* v9;  // [bp-0x70]\n
    struct_2 *v10;  // [bp-0x6c]\n
    struct_2 *v11;  // [bp-0x68]\n
    struct_4 *v12;  // [bp-0x64]\n
    unsigned int v13;  // [bp-0x60]\n
    unsigned int v14[4];  // [bp-0x5c]\n
    char *v15;  // [bp-0x58]\n
    unsigned int v16;  // [bp-0x54]\n
    char v17;  // [bp-0x50]\n
    unsigned int v18;  // [bp-0x10]\n
    void* v19;  // [bp+0x4]\n
    unsigned int v20;  // [bp+0x8]\n
    unsigned int v21;  // esi\n
    struct_8 *v22;  // ebx, Other Possible Types: unsigned int\n
    struct_6 *v23;  // eax\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // esi\n
    unsigned int v26;  // edx\n
    void* v27;  // ebp, Other Possible Types: unsigned int\n
    struct_7 *v28;  // eax, Other Possible Types: unsigned int\n
    void* v29;  // edx, Other Possible Types: unsigned int\n
    unsigned int v30;  // ebp\n
    struct_6 *v31;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v32[2];  // eax\n
    struct struct_4 **v33;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v34;  // edx, Other Possible Types: unsigned int\n
    struct_4 *v35;  // ecx\n
    void* v36;  // edi, Other Possible Types: unsigned int\n
    void* v37;  // esi\n
    unsigned int v38;  // eax\n
    struct_4 *v39;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v40;  // edx\n
    void* v41;  // edi, Other Possible Types: unsigned int\n
    void* v42;  // edi\n
    struct_4 *v43;  // eax, Other Possible Types: unsigned int\n
    struct_2 *v44;  // edi, Other Possible Types: unsigned int\n
    struct_6 *v45;  // edx, Other Possible Types: unsigned int\n
    struct_2 *v46;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v47;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v48;  // ebx\n
    struct_6 *v49;  // edx\n
    void* v50;  // edi, Other Possible Types: unsigned int\n
    char v51[39];  // edi\n
    struct_3 *v52;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v53[2];  // eax\n
    struct struct_2 **v54;  // ecx, Other Possible Types: unsigned int\n
    struct_2 *v55;  // edx, Other Possible Types: unsigned int\n
    struct_2 *v56;  // ecx\n
    struct_8 *v57;  // ebx\n
    void* v58;  // esi\n
    unsigned int v59;  // eax\n
    char *v60;  // esi, Other Possible Types: unsigned int\n
    void* v61;  // edi, Other Possible Types: unsigned int\n
    unsigned int v62;  // eax\n
    struct_2 *v63;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v64;  // edx\n
    void* v65;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v66;  // ebp\n
    struct_5 *v67;  // esi, Other Possible Types: unsigned int\n
    struct_5 *v68;  // eax, Other Possible Types: unsigned int\n
    unsigned int v69[2];  // eax\n
    struct struct_5 **v70;  // ecx, Other Possible Types: unsigned int\n
    struct_5 *v71;  // ecx\n
    unsigned int v72[4];  // edi\n
    struct_8 *v73;  // ebx\n
    struct_2 *v74;  // ecx, Other Possible Types: unsigned int\n
    struct_6 *v75;  // esi\n
    char *v77;  // esi\n
    struct_6 *v78;  // ebp\n
    struct_3 *v79;  // edi\n
    struct_2 *v80;  // eax, Other Possible Types: unsigned int\n
    struct_2 *v81;  // edi\n
    struct_5 *v82;  // ecx\n
    unsigned int v83;  // ecx\n
    unsigned int v84;  // edi\n
\n
    v18 = v21;\n
    v22 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
    if (!CFortress::GetNumAvailableMissions(&cgc_g_fort))\n
    {\n
        v43 = cgc_fprintf(cgc_stdout, \"\\n
No missions available. Check back later.\\n
\");\n
        return v43;\n
    }\n
    v9 = &cgc_g_fort;\n
    v23 = CFortress::GetMissions(&cgc_g_fort);\n
    v12 = 0;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
    if (!v23->field_4)\n
    {\n
        v36 = 0;\n
    }\n
    else\n
    {\n
        v31 = v23;\n
        v29 = 0;\n
        v36 = 0;\n
        v0 = v23;\n
        do\n
        {\n
            v28 = *(v31);\n
            v24 = v29 - 1;\n
            v25 = v29;\n
            if (v29 >= 1)\n
            {\n
                if ((v29 & 7))\n
                {\n
                    v26 = v29 & 7;\n
                    v27 = 0;\n
                    do\n
                    {\n
                        v28 = *((v28 + 4));\n
                        v27 += 1;\n
                    } while (v26 != v27);\n
                    v29 = v25 - v27;\n
                }\n
                if (v24 >= 7)\n
                {\n
                    do\n
                    {\n
                        v28 = *((*((*((*((*((*((*((*((v28 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v29;\n
                        v29 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v30 = *(v28);\n
            if (!CMission::IsAvail(*(v28)))\n
            {\n
                v31 = v0;\n
            }\n
            else\n
            {\n
                v32 = operator new(8);\n
                v32[0] = v30;\n
                v32[1] = 0;\n
                v33 = &v12;\n
                v31 = v0;\n
                if (v36)\n
                {\n
                    v34 = v12;\n
                    do\n
                    {\n
                        v35 = v34;\n
                        v34 = *((v34 + 4));\n
                    } while (v34);\n
                    v33 = &v35->field_4;\n
                }\n
                *(v33) = v32;\n
                v36 += 1;\n
            }\n
            v29 = v25 + 1;\n
            v22 = v1;\n
        } while (v29 < *((v31 + 4)));\n
    }\n
    v6 = v36;\n
    v13 = v36;\n
    v37 = *((v22 - 328));\n
    cgc_fprintf(v37, v22 - 14835);\n
    PrintMissions(&v12);\n
    if (!CFortress::GetNumAvailableExplorers(v9))\n
    {\n
        goto LABEL_408048;\n
    }\n
    else\n
    {\n
        cgc_fprintf(v37, v22 - 14780);\n
        v14[0] = *((v22 - 332));\n
        if (cgc_freaduntil(&v17, 64, 10, v14) < 0)\n
            cgc_exit();\n
        v38 = cgc_strtoul(&v17, 0, 10);\n
        if (v38 < v6)\n
        {\n
            v39 = v12;\n
            v8 = v37;\n
            v16 = v22 - 14780;\n
            if (v38)\n
            {\n
                v40 = v38 - 1;\n
                if ((v38 & 7))\n
                {\n
                    v41 = 0;\n
                    do\n
                    {\n
                        v39 = *((v39 + 4));\n
                        v41 += 1;\n
                    } while ((v38 & 7) != v41);\n
                    v38 -= v41;\n
                }\n
                if (v40 >= 7)\n
                {\n
                    do\n
                    {\n
                        v39 = *((*((*((*((*((*((*((*((v39 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v38;\n
                        v38 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v52 = *(v39);\n
            v42 = v9;\n
            if (CMission::GetReqSupply(*(v39)) > CFortress::GetSupply(v42))\n
            {\n
                goto LABEL_408048;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                v5 = 0;\n
                v10 = 0;\n
                v2 = CFortress::GetExplorers(v42);\n
                v44 = v2->field_4;\n
                v3 = v52;\n
                if (!v44)\n
                {\n
                    v46 = 0;\n
                }\n
                else\n
                {\n
                    v45 = 0;\n
                    v46 = 0;\n
                    while (true)\n
                    {\n
                        v47 = v2->field_0;\n
                        v48 = v45 - 1;\n
                        v0 = v45;\n
                        v7 = v44;\n
                        if (v45 >= 1)\n
                        {\n
                            if ((v45 & 7))\n
                            {\n
                                v49 = v45 & 7;\n
                                v50 = 0;\n
                                do\n
                                {\n
                                    v47 = *((v47 + 4));\n
                                    v50 += 1;\n
                                } while (v49 != v50);\n
                                v45 = v0 - v50;\n
                            }\n
                            if (v48 >= 7)\n
                            {\n
                                do\n
                                {\n
                                    v47 = *((*((*((*((*((*((*((*((v47 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                                    tmp_10 = v45;\n
                                    v45 -= 8;\n
                                } while (tmp_10 != 8);\n
                            }\n
                        }\n
                        v51 = *(v47);\n
                        if (!v51[37])\n
                        {\n
LABEL_4080d0:\n
                            v52 = v3;\n
                            v44 = v7;\n
                            v45 = &v0->field_0 + 1;\n
                            if (v45 >= v44)\n
                                break;\n
                        }\n
                        else\n
                        {\n
                            if (!v51[38])\n
                                goto LABEL_4080d0;\n
                            v53 = operator new(8);\n
                            v53[0] = v51;\n
                            v53[1] = 0;\n
                            v54 = &v10;\n
                            v52 = v3;\n
                            if (v46)\n
                            {\n
                                v55 = v10;\n
                                do\n
                                {\n
                                    v56 = v55;\n
                                    v55 = *((v55 + 4));\n
                                } while (v55);\n
                                v54 = &v56->field_4;\n
                            }\n
                            *(v54) = v53;\n
                            v46 += 1;\n
                            v44 = v2->field_4;\n
                            v45 = &v0->field_0 + 1;\n
                            if (v45 >= v44)\n
                                break;\n
                        }\n
                    }\n
                }\n
                v7 = v46;\n
                v11 = v46;\n
                v57 = v1;\n
                v58 = v8;\n
                cgc_fprintf(v58, &v57[1840].field_-14c + 1);\n
                PrintExplorers(&v10);\n
                cgc_fprintf(v58, v16);\n
                if (cgc_freaduntil(&v17, 64, 10, v14) < 0)\n
                    cgc_exit();\n
                v15 = &v17;\n
                v0 = &v57[2088].field_-14c + 1;\n
                v59 = cgc_strsep(&v15, v0);\n
                if (v59)\n
                {\n
                    v60 = v59;\n
                    v61 = 0;\n
                    v2 = v10;\n
                    do\n
                    {\n
                        if (cgc_strlen(v60))\n
                        {\n
                            v62 = cgc_strtoul(v60, 0, 10);\n
                            if (!(v62 < v7))\n
                                continue;\n
                            v63 = v2;\n
                            if (v62)\n
                            {\n
                                v64 = v62 - 1;\n
                                if ((v62 & 7))\n
                                {\n
                                    v65 = 0;\n
                                    v63 = v2;\n
                                    do\n
                                    {\n
                                        v63 = *((v63 + 4));\n
                                        v65 += 1;\n
                                    } while ((v62 & 7) != v65);\n
                                    v62 -= v65;\n
                                    if (v64 < 7)\n
                                        goto LABEL_40832d;\n
                                }\n
                                else\n
                                {\n
                                    v63 = v2;\n
                                    if (v64 < 7)\n
                                        goto LABEL_40832d;\n
                                }\n
                                do\n
                                {\n
                                    v63 = *((*((*((*((*((*((*((*((v63 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                                    tmp_10 = v62;\n
                                    v62 -= 8;\n
                                } while (tmp_10 != 8);\n
                            }\n
LABEL_40832d:\n
                            v66 = *(v63);\n
                            v67 = v4;\n
                            if (v61)\n
                            {\n
                                v68 = v67;\n
                                if (v67)\n
                                {\n
                                    do\n
                                    {\n
                                        if (*(v68) == v66)\n
                                        {\n
                                            v52 = v3;\n
                                            goto LABEL_408279;\n
                                        }\n
                                        v68 = *((v68 + 4));\n
                                    } while (v68);\n
                                }\n
                            }\n
                            v69 = operator new(8);\n
                            v69[0] = v66;\n
                            v69[1] = 0;\n
                            v70 = &v4;\n
                            v52 = v3;\n
                            if (v61)\n
                            {\n
                                do\n
                                {\n
                                    v71 = v67;\n
                                    v67 = *((v67 + 4));\n
                                } while (v67);\n
                                v70 = &v71->field_4;\n
                            }\n
                            *(v70) = v69;\n
                            v61 += 1;\n
                            v5 = v61;\n
                        }\n
LABEL_408279:\n
                        v60 = cgc_strsep(&v15, v0);\n
                    } while (v60);\n
                    if (v61)\n
                    {\n
                        v72 = v8;\n
                        v73 = v1;\n
                        cgc_fbuffered(v72, 1);\n
                        v75 = CMission::Check(v52, &v4);\n
                        cgc_fprintf(v72, &v73[1833].field_-14c + 1);\n
                        CMission::GetName(v52);\n
                        cgc_fprintf(v72, &v73[1775].field_-148 + 3);\n
                        v2 = &v73[1833].field_-14c;\n
                        cgc_fprintf(v72, v2);\n
                        cgc_fprintf(v72, &v73[1829].field_-14c + 2);\n
                        v77 = CRequirement::ReqTypeToString(v75->field_4);\n
                        tmp_2 = cgc_strcmp(v77, v73 + 1926);\n
                        cgc_fprintf(v72, v73 + 1827);\n
                        cgc_free(v77);\n
                        cgc_fprintf(v72, v73 + 1825);\n
                        v0 = v75;\n
                        cgc_fprintf(v72, &v73[1823].field_-14c + 1);\n
                        cgc_fprintf(v72, v2);\n
                        cgc_fprintf(v72, v73 + 1821);\n
                        cgc_fbuffered(v72, 0);\n
                        if (cgc_freaduntil(&v17, 64, 10, v14) < 0)\n
                            cgc_exit();\n
                        v78 = v0;\n
                        if (cgc_strcmp(&v17, &v73[2068].field_-14c + 3) && !(!cgc_strcmp(&v17, &v73[1819].field_-148 + 1)))\n
                            goto LABEL_408583;\n
                        v79 = v3;\n
                        CMission::Execute(v79, &v4);\n
                        v79->field_24 = v78->field_0;\n
                        CFortress::SubSupply(v9, CMission::GetReqSupply(v79));\n
LABEL_408583:\n
                        operator delete(v78);\n
                        v74 = v7;\n
                        if (!v74)\n
                            goto LABEL_4085fa;\n
                        goto LABEL_4085b7;\n
                    }\n
                }\n
                cgc_fprintf(v8, &v1[1836].field_-14c + 3);\n
                v74 = v7;\n
                if (!v74)\n
                    goto LABEL_4085fa;\n
LABEL_4085b7:\n
                v80 = v10;\n
                do\n
                {\n
                    v81 = v74;\n
                    operator delete(v80);\n
                    v80 = *((v80 + 4));\n
                    v74 -= 1;\n
                } while (v81 != 1);\n
                while (true)\n
                {\n
LABEL_4085fa:\n
                    v43 = v5;\n
                    if (!v43)\n
                        break;\n
                    v82 = v4;\n
                    v4 = v82->field_4;\n
                    v5 = v43 - 1;\n
                    operator delete(v82);\n
                }\n
            }\n
        }\n
        else\n
        {\n
LABEL_408048:\n
            v43 = cgc_fprintf(v19, v20);\n
        }\n
    }\n
    v83 = v6;\n
    if (!v83)\n
        return v43;\n
    v43 = v12;\n
    do\n
    {\n
        v84 = v83;\n
        operator delete(v43);\n
        v43 = *((v43 + 4));\n
        v83 -= 1;\n
    } while (v84 != 1);\n
    return v43;\n
}\n
", "4226570:sub_407e0a": null, "4227274:sub_4080ca": null, "4227685:sub_408265": null, "4228568:sub_4085d8": null, "4228615:sub_408607": null, "4228624:_Z18HandleViewMissionsv": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern unsigned int cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
int HandleViewMissions()\n
{\n
    int tmp_10;  // tmp #10\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    void* v2;  // [bp-0x3c], Other Possible Types: char\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    void* v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x20]\n
    void* v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    struct_2 *v9;  // [bp-0x14]\n
    struct_2 *v11;  // eax\n
    struct_2 *v12;  // esi, Other Possible Types: unsigned int\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // edx\n
    void* v15;  // edi, Other Possible Types: unsigned int\n
    void* v16;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v17;  // eax, Other Possible Types: unsigned int\n
    unsigned int v18[8];  // ebp\n
    unsigned int v19;  // eax\n
\n
    v11 = CFortress::GetMissions(&cgc_g_fort);\n
    v12 = v11;\n
    v7 = cgc_stdout;\n
    cgc_fprintf(cgc_stdout, \"\\n
... Current missions ...\\n
\");\n
    if (v11->field_4)\n
    {\n
        v16 = 0;\n
        v8 = \"%d. %s [%d%%] -- %d days left\\n
\";\n
        v5 = 0;\n
        v9 = v11;\n
        do\n
        {\n
            v17 = *(v12);\n
            v13 = v16 - 1;\n
            v6 = v16;\n
            if (v16 >= 1)\n
            {\n
                if ((v16 & 7))\n
                {\n
                    v14 = v16 & 7;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v17 = *((v17 + 4));\n
                        v15 += 1;\n
                    } while (v14 != v15);\n
                    v16 = v6 - v15;\n
                }\n
                if (v13 >= 7)\n
                {\n
                    do\n
                    {\n
                        v17 = *((*((*((*((*((*((*((*((v17 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v16;\n
                        v16 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v18 = *(v17);\n
            v19 = CMission::IsAvail(*(v17));\n
            if (!v19)\n
            {\n
                CMission::GetDuration(v18);\n
                v1 = CMission::GetName(v18);\n
                v0 = v5;\n
                cgc_fprintf(*(&v2), v8);\n
                v4 = v18[6];\n
                v3 = v18[7];\n
                v2 = v7;\n
                v12 = v9;\n
                v19 = cgc_fprintf(v2, \"   ==> +%d supply, +%d experience\\n
\");\n
                v5 = v0 + 1;\n
            }\n
            v16 = v6 + 1;\n
        } while (v16 < *((v12 + 4)));\n
        if (v5)\n
            return v19;\n
    }\n
    v19 = cgc_fprintf(v7, \"No missions :(\\n
\");\n
    return v19;\n
}\n
", "4228730:sub_40867a": null, "4228994:sub_408782": null, "4229008:_Z18HandleHireExplorerv": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_g_fort;\n
extern char cgc_stdout;\n
\n
int HandleHireExplorer()\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    int tmp_10;  // tmp #10\n
    int tmp_2;  // tmp #2\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    char v6;  // [bp-0x30]\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // edx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // esi\n
    unsigned int v23;  // ebx\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // edx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // eax\n
\n
    v8 = CFortress::GetExplorers(&cgc_g_fort);\n
    cgc_fprintf(cgc_stdout, \"\\n
... Available explorers ...\\n
\");\n
    if (*((v8 + 4)) && CFortress::GetNumHiredExplorers(&cgc_g_fort) != *((v8 + 4)))\n
    {\n
        if (CFortress::GetNumHiredExplorers(&cgc_g_fort) == 15)\n
        {\n
            v9 = \"Can't hire more :(\\n
\";\n
        }\n
        else\n
        {\n
            v0 = &_GLOBAL_OFFSET_TABLE_;\n
            v2 = 0;\n
            v10 = *((v8 + 4));\n
            v4 = cgc_stdout;\n
            if (!v10)\n
            {\n
                v22 = 0;\n
            }\n
            else\n
            {\n
                v17 = 0;\n
                v22 = 0;\n
                v5 = v8;\n
                while (true)\n
                {\n
                    v15 = *(v8);\n
                    v11 = v17 - 1;\n
                    v1 = v17;\n
                    if (v17 >= 1)\n
                    {\n
                        if ((v17 & 7))\n
                        {\n
                            v12 = v17 & 7;\n
                            v13 = 0;\n
                            do\n
                            {\n
                                v15 = *((v15 + 4));\n
                                v13 += 1;\n
                            } while (v12 != v13);\n
                            v14 = v1 - v13;\n
                            if (v11 < 7)\n
                                goto LABEL_408840;\n
                        }\n
                        else\n
                        {\n
                            v14 = v17;\n
                            if (v11 < 7)\n
                                goto LABEL_408840;\n
                        }\n
                        do\n
                        {\n
                            v15 = *((*((*((*((*((*((*((*((v15 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                            tmp_10 = v14;\n
                            v14 -= 8;\n
                        } while (tmp_10 != 8);\n
                    }\n
LABEL_408840:\n
                    v16 = *(v15);\n
                    if (!*((v16 + 38)))\n
                    {\n
                        v18 = operator new(8);\n
                        *(v18) = v16;\n
                        *((v18 + 4)) = 0;\n
                        v19 = &v2;\n
                        v8 = v5;\n
                        if (v22)\n
                        {\n
                            v20 = v2;\n
                            do\n
                            {\n
                                v21 = v20;\n
                                v20 = *((v20 + 4));\n
                            } while (v20);\n
                            v19 = v21 + 4;\n
                        }\n
                        *(v19) = v18;\n
                        v22 += 1;\n
                        v10 = *((v8 + 4));\n
                        v17 = v1 + 1;\n
                        if (v17 >= v10)\n
                            break;\n
                    }\n
                    else\n
                    {\n
                        v8 = v5;\n
                        v17 = v1 + 1;\n
                        if (v17 >= v10)\n
                            break;\n
                    }\n
                }\n
            }\n
            v3 = v22;\n
            v23 = v0;\n
            PrintExplorers(&v2);\n
            cgc_fprintf(v4, v23 - 14780);\n
            if (cgc_freaduntil(&v6, 32, 10, *((v23 - 332))) < 0)\n
                cgc_exit();\n
            v24 = cgc_strtoul(&v6, 0, 10);\n
            v28 = v22;\n
            if (v24 >= v22)\n
            {\n
                v29 = cgc_fprintf(v4, v23 - 14436);\n
                if (!v22)\n
                    return v29;\n
            }\n
            else\n
            {\n
                v25 = v2;\n
                if (v24)\n
                {\n
                    v26 = v24 - 1;\n
                    if ((v24 & 7))\n
                    {\n
                        v27 = 0;\n
                        do\n
                        {\n
                            v25 = *((v25 + 4));\n
                            v27 += 1;\n
                        } while ((v24 & 7) != v27);\n
                        v24 -= v27;\n
                    }\n
                    if (v26 >= 7)\n
                    {\n
                        do\n
                        {\n
                            v25 = *((*((*((*((*((*((*((*((v25 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                            tmp_10 = v24;\n
                            v24 -= 8;\n
                        } while (tmp_10 != 8);\n
                    }\n
                }\n
                v29 = *(v25);\n
                *((v29 + 38)) = 1;\n
                if (!v22)\n
                    return *(v25);\n
            }\n
            v29 = v2;\n
            do\n
            {\n
                operator delete(v29);\n
                v29 = *((v29 + 4));\n
                tmp_2 = v28;\n
                v28 -= 1;\n
            } while (tmp_2 != 1);\n
            return v29;\n
        }\n
LABEL_4087e6:\n
        v29 = cgc_fprintf(cgc_stdout, v9);\n
        return v29;\n
    }\n
    v9 = \"No explorers to hire :(\\n
\";\n
    goto LABEL_4087e6;\n
}\n
", "4229172:sub_408834": null, "4229212:sub_40885c": null, "4229719:sub_408a57": null, "4229728:_Z19HandleViewExplorersv": "typedef struct struct_1 {\n
    unsigned int field_-148;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    unsigned int field_4;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_3 *field_4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[38];\n
    char field_26;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_g_fort;\n
\n
int HandleViewExplorers()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    int tmp_2;  // tmp #2\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    struct_1 *v5;  // [bp-0x1c]\n
    struct_4 *v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    struct_1 *v9;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    struct_3 *v16;  // ecx, Other Possible Types: unsigned int\n
    struct_2 *v18;  // edi\n
    void* v19;  // edx, Other Possible Types: unsigned int\n
    unsigned int v20[2];  // eax\n
    struct struct_0 **v21;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v22;  // edx\n
    struct_0 *v23;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v24;  // ecx\n
    void* v25;  // esi\n
    unsigned int v26;  // edi\n
    struct_0 *v27;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = &_GLOBAL_OFFSET_TABLE_.field_-148;\n
    v3 = 0;\n
    v6 = CFortress::GetExplorers(&cgc_g_fort);\n
    v10 = v6->field_4;\n
    if (!v10)\n
    {\n
        v19 = 0;\n
    }\n
    else\n
    {\n
        v11 = 0;\n
        v19 = 0;\n
        v5 = &_GLOBAL_OFFSET_TABLE_.field_-148;\n
        while (true)\n
        {\n
            v12 = v19;\n
            v16 = v6->field_0;\n
            v13 = v11 - 1;\n
            v2 = v11;\n
            v7 = v10;\n
            v18 = *(v16);\n
            if (v18->field_26)\n
            {\n
                v9 = v5;\n
                v20 = operator new(8);\n
                v20[0] = v18;\n
                v20[1] = 0;\n
                v21 = &v3;\n
                v22 = v12;\n
                if (v12)\n
                {\n
                    v23 = v3;\n
                    do\n
                    {\n
                        v24 = v23;\n
                        v23 = *((v23 + 4));\n
                    } while (v23);\n
                    v21 = &v24->field_4;\n
                    v22 = v12;\n
                }\n
                *(v21) = v20;\n
                v19 = v22 + 1;\n
                v10 = v6->field_4;\n
                v11 = v2 + 1;\n
                if (v11 >= v10)\n
                    break;\n
            }\n
            else\n
            {\n
                v19 = v12;\n
                v9 = v5;\n
                v10 = v7;\n
                v11 = v2 + 1;\n
                if (v11 >= v10)\n
                    break;\n
            }\n
        }\n
    }\n
    v4 = v19;\n
    v25 = *((v9 - 328));\n
    v0 = v19;\n
    v1 = 15;\n
    v26 = v19;\n
    cgc_fprintf(v25, v9 - 14417);\n
    if (!v19)\n
    {\n
        v27 = cgc_fprintf(v25, v9 - 14381);\n
        return v27;\n
    }\n
    PrintExplorers(&v3);\n
    v27 = v3;\n
    do\n
    {\n
        operator delete(v27);\n
        v27 = *((v27 + 4));\n
        tmp_2 = v26;\n
        v26 -= 1;\n
    } while (tmp_2 != 1);\n
    return v27;\n
}\n
", "4229794:sub_408aa2": null, "4230174:sub_408c1e": null, "4230176:_Z20HandleRemoveExplorerv": "typedef struct struct_5 {\n
    unsigned int field_-14c[4];\n
    unsigned int field_-148;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    struct struct_4 *field_4;\n
} struct_4;\n
\n
typedef struct struct_6 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_6;\n
\n
typedef struct struct_0 {\n
    unsigned int field_-14c;\n
    unsigned int field_-148;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[38];\n
    char field_26;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[37];\n
    char field_25;\n
    char field_26;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_g_fort;\n
\n
int HandleRemoveExplorer()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    int tmp_10;  // tmp #10\n
    int tmp_2;  // tmp #2\n
    struct_0 *v1;  // [bp-0x30]\n
    struct_4 *v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    struct_6 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x18]\n
    struct_5 *v8;  // ebx, Other Possible Types: unsigned int, struct_0 *\n
    unsigned int v9;  // edi\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    void* v11;  // esi, Other Possible Types: unsigned int\n
    unsigned int v12;  // edx\n
    struct_1 *v14;  // ecx, Other Possible Types: unsigned int\n
    char v17[39];  // edi\n
    unsigned int v18[2];  // eax\n
    struct struct_4 **v19;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v20;  // edx, Other Possible Types: unsigned int\n
    struct_4 *v21;  // ecx\n
    void* v22;  // esi\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // esi\n
    struct_3 *v25;  // eax, Other Possible Types: unsigned int\n
    void* v26;  // ebp, Other Possible Types: unsigned int\n
    struct_4 *v27;  // edx, Other Possible Types: unsigned int\n
    struct_4 *v28;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v29;  // edi\n
    unsigned int v30;  // eax\n
\n
    v8 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
    v2 = 0;\n
    v4 = CFortress::GetExplorers(&cgc_g_fort);\n
    v9 = v4->field_4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
    if (!v9)\n
    {\n
        v11 = 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        v11 = 0;\n
        while (true)\n
        {\n
            v14 = v4->field_0;\n
            v12 = v10 - 1;\n
            v0 = v10;\n
            v5 = v9;\n
            v17 = *(v14);\n
            if (!v17[38])\n
            {\n
                v8 = v1;\n
                goto LABEL_408c74;\n
            }\n
            else\n
            {\n
                v8 = v1;\n
                if (v17[37])\n
                {\n
                    v18 = operator new(8);\n
                    v18[0] = v17;\n
                    v18[1] = 0;\n
                    v19 = &v2;\n
                    if (v11)\n
                    {\n
                        v20 = v2;\n
                        do\n
                        {\n
                            v21 = v20;\n
                            v20 = *((v20 + 4));\n
                        } while (v20);\n
                        v19 = &v21->field_4;\n
                    }\n
                    *(v19) = v18;\n
                    v11 += 1;\n
                    v9 = v4->field_4;\n
                    v10 = v0 + 1;\n
                    if (v10 >= v9)\n
                        break;\n
                }\n
                else\n
                {\n
LABEL_408c74:\n
                    v9 = v5;\n
                    v10 = v0 + 1;\n
                    if (v10 >= v9)\n
                        break;\n
                }\n
            }\n
        }\n
    }\n
    v0 = v11;\n
    v3 = v11;\n
    v22 = *((v8 - 328));\n
    cgc_fprintf(v22, v8 - 14364);\n
    if (!v0)\n
    {\n
        v30 = cgc_fprintf(v22, v8 - 14381);\n
        return v30;\n
    }\n
    PrintExplorers(&v2);\n
    cgc_fprintf(v22, v8 - 14780);\n
    if (cgc_freaduntil(&v6, 8, 10, *((v8 - 332))) < 0)\n
        cgc_exit();\n
    v23 = cgc_strtoul(&v6, 0, 10);\n
    if (v23 >= v0)\n
    {\n
        cgc_fprintf(v22, v8 - 14436);\n
        v28 = v2;\n
    }\n
    else\n
    {\n
        v28 = v2;\n
        if (!v23)\n
        {\n
            v25 = v28->field_0;\n
        }\n
        else\n
        {\n
            v24 = v23 - 1;\n
            if ((v23 & 7))\n
            {\n
                v26 = 0;\n
                v27 = v28;\n
                do\n
                {\n
                    v27 = *((v27 + 4));\n
                    v26 += 1;\n
                } while ((v23 & 7) != v26);\n
                v23 -= v26;\n
                if (v24 < 7)\n
                    goto LABEL_408e6d;\n
            }\n
            else\n
            {\n
                v27 = v28;\n
                if (v24 < 7)\n
                    goto LABEL_408e6d;\n
            }\n
            do\n
            {\n
                v27 = *((*((*((*((*((*((*((*((v27 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                tmp_10 = v23;\n
                v23 -= 8;\n
            } while (tmp_10 != 8);\n
LABEL_408e6d:\n
            v25 = *(v27);\n
        }\n
        *((v25 + 38)) = 0;\n
    }\n
    v29 = v0;\n
    do\n
    {\n
        v30 = operator delete(v28);\n
        v28 = *((v28 + 4));\n
        tmp_2 = v29;\n
        v29 -= 1;\n
    } while (tmp_2 != 1);\n
    return v30;\n
}\n
", "4230242:sub_408c62": null, "4230871:sub_408ed7": null, "4230880:_Z17HandleLearnSkillsv": "typedef struct struct_4 {\n
    unsigned int field_-14c;\n
    unsigned int field_-148;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_9 {\n
    struct struct_10 *field_0;\n
    struct struct_9 *field_4;\n
} struct_9;\n
\n
typedef struct struct_7 {\n
    struct struct_8 *field_0;\n
    struct struct_7 *field_4;\n
} struct_7;\n
\n
typedef struct struct_6 {\n
    struct struct_5 *field_0;\n
    struct struct_6 *field_4;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_10 {\n
    char padding_0[37];\n
    char field_25;\n
    char field_26;\n
} struct_10;\n
\n
typedef struct struct_8 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_8;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[25];\n
    char field_25;\n
    char field_26;\n
} struct_1;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_g_fort;\n
\n
int HandleLearnSkills()\n
{\n
    int tmp_10;  // tmp #10\n
    unsigned int v0;  // [bp-0x74]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x70]\n
    struct_4 *v2;  // [bp-0x50]\n
    void* v3;  // [bp-0x4c], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    struct_3 *v6;  // [bp-0x40]\n
    void* v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x38]\n
    struct_0 *v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    unsigned int v11[4];  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x1c]\n
    char v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x8]\n
    void* v17;  // [bp+0x4]\n
    unsigned int v18;  // [bp+0x8]\n
    unsigned int v19;  // ebx\n
    unsigned int v20;  // edi\n
    void* v21;  // esi, Other Possible Types: unsigned int\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // ebx\n
    void* v24;  // edi, Other Possible Types: unsigned int\n
    struct_9 *v25;  // ecx, Other Possible Types: unsigned int\n
    void* v26;  // ebx, Other Possible Types: unsigned int\n
    char v27[39];  // edi\n
    unsigned int v28[2];  // eax\n
    struct struct_0 **v29;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v30;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v31;  // ecx\n
    struct_4 *v32;  // ebx, Other Possible Types: unsigned int\n
    void* v33;  // edi, Other Possible Types: unsigned int\n
    unsigned int v34;  // eax\n
    struct_0 *v35;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v36;  // edx\n
    unsigned int v37;  // ebp\n
    void* v38;  // edi, Other Possible Types: unsigned int\n
    struct_3 *v39;  // eax\n
    struct_4 *v40;  // ebp\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // edx\n
    void* v43;  // edi, Other Possible Types: unsigned int\n
    unsigned int v44;  // edx\n
    struct_7 *v45;  // eax, Other Possible Types: unsigned int\n
    unsigned int v46[2];  // esi\n
    unsigned int v47;  // eax\n
    void* v48;  // ebx, Other Possible Types: unsigned int\n
    struct_3 *v49;  // esi, Other Possible Types: unsigned int\n
    unsigned int v50;  // eax\n
    struct_3 *v51;  // ecx\n
    struct_6 *v52;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v53;  // edx\n
    void* v54;  // edi, Other Possible Types: unsigned int\n
    struct_5 *v55;  // esi\n
    unsigned int v56;  // eax\n
    struct_0 *v57;  // eax, Other Possible Types: unsigned int\n
    unsigned int v58;  // edi\n
\n
    v16 = v19;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
    v7 = &cgc_g_fort;\n
    v9 = 0;\n
    v6 = CFortress::GetExplorers(&cgc_g_fort);\n
    v20 = v6->field_4;\n
    if (!v20)\n
    {\n
        v21 = 0;\n
    }\n
    else\n
    {\n
        v26 = 0;\n
        v21 = 0;\n
        while (true)\n
        {\n
            v25 = v6->field_0;\n
            v22 = v26 - 1;\n
            v5 = v26;\n
            v3 = v20;\n
            if (v26 >= 1)\n
            {\n
                if ((v26 & 7))\n
                {\n
                    v23 = v26 & 7;\n
                    v24 = 0;\n
                    do\n
                    {\n
                        v25 = *((v25 + 4));\n
                        v24 += 1;\n
                    } while (v23 != v24);\n
                    v26 = v5 - v24;\n
                }\n
                if (v22 >= 7)\n
                {\n
                    do\n
                    {\n
                        v25 = *((*((*((*((*((*((*((*((v25 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v26;\n
                        v26 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v27 = *(v25);\n
            if (!v27[38])\n
            {\n
LABEL_408f30:\n
                v20 = v3;\n
                v26 = v5 + 1;\n
                if (v26 >= v20)\n
                    break;\n
            }\n
            else\n
            {\n
                if (!v27[37])\n
                    goto LABEL_408f30;\n
                v28 = operator new(8);\n
                v28[0] = v27;\n
                v28[1] = 0;\n
                v29 = &v9;\n
                if (v21)\n
                {\n
                    v30 = v9;\n
                    do\n
                    {\n
                        v31 = v30;\n
                        v30 = *((v30 + 4));\n
                    } while (v30);\n
                    v29 = &v31->field_4;\n
                }\n
                *(v29) = v28;\n
                v21 += 1;\n
                v20 = v6->field_4;\n
                v26 = v5 + 1;\n
                if (v26 >= v20)\n
                    break;\n
            }\n
        }\n
    }\n
    v8 = v21;\n
    v10 = v21;\n
    v32 = v2;\n
    v33 = v32[41].field_-14c;\n
    cgc_fprintf(v33, &v32[1840].field_-14c + 1);\n
    if (!v8)\n
    {\n
        v57 = cgc_fprintf(v33, &v32[1797].field_-148 + 1);\n
        return v57;\n
    }\n
    PrintExplorers(&v9);\n
    v13 = &v32[1847].field_-148;\n
    cgc_fprintf(v33, v13);\n
    v11[0] = v32[41].field_-148;\n
    if (cgc_freaduntil(&v15, 8, 10, v11) < 0)\n
        cgc_exit();\n
    v34 = cgc_strtoul(&v15, 0, 10);\n
    if (v34 >= v8)\n
    {\n
        cgc_fprintf(v33, &v32[1804].field_-148);\n
        v57 = v9;\n
    }\n
    else\n
    {\n
        v35 = v9;\n
        v4 = v35;\n
        if (v34)\n
        {\n
            v36 = v34 - 1;\n
            if ((v34 & 7))\n
            {\n
                v37 = v33;\n
                v38 = 0;\n
                v35 = v4;\n
                do\n
                {\n
                    v35 = *((v35 + 4));\n
                    v38 += 1;\n
                } while ((v34 & 7) != v38);\n
                v34 -= v38;\n
                v32 = v2;\n
                v33 = v37;\n
                if (v36 < 7)\n
                    goto LABEL_40911d;\n
            }\n
            else\n
            {\n
                v35 = v4;\n
                v32 = v2;\n
                if (v36 < 7)\n
                    goto LABEL_40911d;\n
            }\n
            do\n
            {\n
                v35 = *((*((*((*((*((*((*((*((v35 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                tmp_10 = v34;\n
                v34 -= 8;\n
            } while (tmp_10 != 8);\n
        }\n
LABEL_40911d:\n
        v12 = *(v35);\n
        v39 = CFortress::GetSkills(v7);\n
        v49 = v39;\n
        v3 = v33;\n
        cgc_fprintf(v33, v32 - 14334);\n
        v6 = v39;\n
        v40 = v32;\n
        if (v39->field_4)\n
        {\n
            v48 = 0;\n
            v14 = &v40[1789].field_-148 + 1;\n
            do\n
            {\n
                v45 = *(v49);\n
                v41 = v48 - 1;\n
                v5 = v48;\n
                if (v48 >= 1)\n
                {\n
                    if ((v48 & 7))\n
                    {\n
                        v42 = v48 & 7;\n
                        v43 = 0;\n
                        do\n
                        {\n
                            v45 = *((v45 + 4));\n
                            v43 += 1;\n
                        } while (v42 != v43);\n
                        v44 = v48 - v43;\n
                        if (v41 < 7)\n
                            continue;\n
                    }\n
                    else\n
                    {\n
                        v44 = v48;\n
                        if (v41 < 7)\n
                            continue;\n
                    }\n
                    do\n
                    {\n
                        v45 = *((*((*((*((*((*((*((*((v45 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v44;\n
                        v44 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
                v46 = *(v45);\n
                v47 = CRequirement::ReqTypeToString(v46[1]);\n
                v1 = v46[0];\n
                v0 = v5;\n
                cgc_fprintf(v3, v14);\n
                cgc_free(v47);\n
                v48 = v0 + 1;\n
                v49 = v6;\n
            } while (v48 < *((v49 + 4)));\n
        }\n
        cgc_fprintf(v3, v13);\n
        if (cgc_freaduntil(&v15, 8, 10, v11) < 0)\n
            cgc_exit();\n
        v50 = cgc_strtoul(&v15, 0, 10);\n
        v51 = v6;\n
        if (v50 >= v51->field_4)\n
        {\n
            goto LABEL_4093e0;\n
        }\n
        else\n
        {\n
            v52 = v51->field_0;\n
            if (v50)\n
            {\n
                v53 = v50 - 1;\n
                if ((v50 & 7))\n
                {\n
                    v54 = 0;\n
                    do\n
                    {\n
                        v52 = *((v52 + 4));\n
                        v54 += 1;\n
                    } while ((v50 & 7) != v54);\n
                    v50 -= v54;\n
                }\n
                if (v53 >= 7)\n
                {\n
                    do\n
                    {\n
                        v52 = *((*((*((*((*((*((*((*((v52 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v50;\n
                        v50 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
            }\n
            v55 = *(v52);\n
            if (v55->field_8 > CFortress::GetSupply(v7))\n
                goto LABEL_4093e0;\n
            cgc_fprintf(v3, &v2[1780].field_-14c + 1);\n
            if (cgc_freaduntil(&v15, 8, 10, v11) < 0)\n
                cgc_exit();\n
            v56 = cgc_strtoul(&v15, 0, 10);\n
            if (v56 - 3 > -3)\n
            {\n
                CExplorer::ReplaceSkill(v12, v55, v56 - 1);\n
                CFortress::SubSupply(v7, v55->field_8);\n
            }\n
            else\n
            {\n
LABEL_4093e0:\n
                cgc_fprintf(v17, v18);\n
            }\n
        }\n
        v57 = v4;\n
    }\n
    v58 = v8;\n
    do\n
    {\n
        operator delete(v57);\n
        v57 = *((v57 + 4));\n
        tmp_5 = v58;\n
        v58 -= 1;\n
    } while (tmp_5 != 1);\n
    return v57;\n
}\n
", "4230954:sub_408f2a": null, "4231529:sub_409169": null, "4232233:sub_409429": null, "4232240:_Z16HandleChangeNamev": "typedef struct struct_7 {\n
    struct struct_6 *field_-14c;\n
    unsigned int field_-148;\n
} struct_7;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_6 {\n
    struct struct_4 *field_0;\n
    unsigned int field_4;\n
} struct_6;\n
\n
typedef struct struct_4 {\n
    struct struct_5 *field_0;\n
    struct struct_4 *field_4;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[37];\n
    char field_25;\n
    char field_26;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_7 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_g_fort;\n
extern void* cgc_stdout;\n
\n
int HandleChangeName()\n
{\n
    void* v0;  // [bp-0x22c], Other Possible Types: unsigned int\n
    int tmp_10;  // tmp #10\n
    int tmp_5;  // tmp #5\n
    struct_7 *v1;  // [bp-0x228]\n
    void* v2;  // [bp-0x224], Other Possible Types: unsigned int\n
    struct_6 *v3;  // [bp-0x220]\n
    struct_2 *v4;  // [bp-0x21c]\n
    char v5;  // [bp-0x218]\n
    char v6;  // [bp-0x210]\n
    char v7;  // [bp-0x200]\n
    struct_7 *v9;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v10;  // edi\n
    void* v11;  // ebx, Other Possible Types: unsigned int\n
    void* v12;  // esi, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // ebx\n
    struct_4 *v16;  // ecx, Other Possible Types: unsigned int\n
    void* v17;  // edi, Other Possible Types: unsigned int\n
    unsigned int v18;  // ebp\n
    char v19[39];  // edi\n
    unsigned int v20[2];  // eax\n
    struct struct_2 **v21;  // ecx, Other Possible Types: unsigned int\n
    struct_2 *v22;  // edx, Other Possible Types: unsigned int\n
    struct_2 *v23;  // ecx\n
    unsigned int v24;  // ebp\n
    void* v25;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v26;  // ecx\n
    struct_2 *v27;  // eax, Other Possible Types: unsigned int\n
    unsigned int v28;  // edx\n
    unsigned int v29;  // edx\n
    void* v30;  // edi, Other Possible Types: unsigned int\n
    struct_7 *v31;  // ebx\n
    unsigned int v32;  // edx\n
    void* v33;  // edi, Other Possible Types: unsigned int\n
    unsigned int v34;  // eax\n
    struct_2 *v35;  // ecx, Other Possible Types: unsigned int\n
    struct struct_1 **v36;  // ebp\n
    unsigned int v37;  // ebp\n
    unsigned int v38;  // eax\n
    struct_2 *v39;  // esi, Other Possible Types: unsigned int\n
\n
    v9 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
    v4 = 0;\n
    v3 = CFortress::GetExplorers(&cgc_g_fort);\n
    v10 = v3->field_4;\n
    if (!v10)\n
    {\n
        v12 = cgc_stdout;\n
        cgc_fprintf(cgc_stdout, \"\\n
... Available explorers ...\\n
\");\n
    }\n
    else\n
    {\n
        v1 = &_GLOBAL_OFFSET_TABLE_.field_-14c;\n
        v11 = 0;\n
        v2 = 0;\n
        while (true)\n
        {\n
            v16 = v3->field_0;\n
            v13 = v11 - 1;\n
            v14 = v11;\n
            v0 = v10;\n
            if (v11 >= 1)\n
            {\n
                if ((v11 & 7))\n
                {\n
                    v15 = v11 & 7;\n
                    v17 = 0;\n
                    do\n
                    {\n
                        v16 = *((v16 + 4));\n
                        v17 += 1;\n
                    } while (v15 != v17);\n
                    v18 = v14 - v17;\n
                    if (v13 < 7)\n
                        goto LABEL_4094ed;\n
                }\n
                else\n
                {\n
                    v18 = v11;\n
                    if (v13 < 7)\n
                        goto LABEL_4094ed;\n
                }\n
                do\n
                {\n
                    v16 = *((*((*((*((*((*((*((*((v16 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                    tmp_10 = v18;\n
                    v18 -= 8;\n
                } while (tmp_10 != 8);\n
            }\n
LABEL_4094ed:\n
            v19 = *(v16);\n
            if (!v19[38])\n
            {\n
LABEL_409480:\n
                v10 = v0;\n
                v11 = v14 + 1;\n
                if (v11 >= v10)\n
                    break;\n
            }\n
            else\n
            {\n
                if (!v19[37])\n
                    goto LABEL_409480;\n
                v20 = operator new(8);\n
                v20[0] = v19;\n
                v20[1] = 0;\n
                v21 = &v4;\n
                if (v2)\n
                {\n
                    v22 = v4;\n
                    do\n
                    {\n
                        v23 = v22;\n
                        v22 = *((v22 + 4));\n
                    } while (v22);\n
                    v21 = &v23->field_4;\n
                }\n
                *(v21) = v20;\n
                v2 += 1;\n
                v10 = v3->field_4;\n
                v11 = v14 + 1;\n
                if (v11 >= v10)\n
                    break;\n
            }\n
        }\n
        v9 = v1;\n
        v12 = *((v9 - 328));\n
        cgc_fprintf(v12, v9 - 14721);\n
        if (v2)\n
        {\n
            v0 = v12;\n
            v39 = v4;\n
            v24 = v9 - 14211;\n
            v25 = 0;\n
            do\n
            {\n
                v26 = v25 - 1;\n
                if (v25 >= 1)\n
                {\n
                    v27 = v39;\n
                    v28 = v25;\n
                    if ((v25 & 7))\n
                    {\n
                        v29 = v25 & 7;\n
                        v30 = 0;\n
                        v27 = v39;\n
                        do\n
                        {\n
                            v27 = *((v27 + 4));\n
                            v30 += 1;\n
                        } while (v29 != v30);\n
                        v28 = v25 - v30;\n
                    }\n
                    if (v26 >= 7)\n
                    {\n
                        do\n
                        {\n
                            v27 = *((*((*((*((*((*((*((*((v27 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                            tmp_10 = v28;\n
                            v28 -= 8;\n
                        } while (tmp_10 != 8);\n
                    }\n
                }\n
                cgc_fprintf(v0, v24);\n
                v25 += 1;\n
            } while (v25 != v2);\n
            v31 = v1;\n
            cgc_fprintf(v0, &v31[1847].field_-148);\n
            v3 = v31[41].field_-148;\n
            if (cgc_freaduntil(&v5, 8, 10, v3) < 0)\n
                cgc_exit();\n
            v34 = cgc_strtoul(&v5, 0, 10);\n
            if (v34 >= v2)\n
            {\n
                cgc_fprintf(v0, &v31[1804].field_-148);\n
            }\n
            else\n
            {\n
                v35 = v39;\n
                if (v34)\n
                {\n
                    v32 = v34 - 1;\n
                    if ((v34 & 7))\n
                    {\n
                        v33 = 0;\n
                        v35 = v39;\n
                        do\n
                        {\n
                            v35 = *((v35 + 4));\n
                            v33 += 1;\n
                        } while ((v34 & 7) != v33);\n
                        v34 -= v33;\n
                        if (v32 < 7)\n
                            goto LABEL_4096ed;\n
                    }\n
                    else\n
                    {\n
                        v35 = v39;\n
                        if (v32 < 7)\n
                            goto LABEL_4096ed;\n
                    }\n
                    do\n
                    {\n
                        v35 = *((*((*((*((*((*((*((*((v35 + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4)) + 4));\n
                        tmp_10 = v34;\n
                        v34 -= 8;\n
                    } while (tmp_10 != 8);\n
                }\n
LABEL_4096ed:\n
                v36 = *(v35);\n
                cgc_fprintf(v0, &v1[1775].field_-14c + 3);\n
                if (cgc_freaduntil(&v6, 0x200, 10, v3) < 0)\n
                    cgc_exit();\n
                v7 = 0;\n
                *(v36)->field_0(v36);\n
            }\n
            v37 = v2;\n
            do\n
            {\n
                v38 = operator delete(v39);\n
                v39 = *((v39 + 4));\n
                tmp_5 = v37;\n
                v37 -= 1;\n
            } while (tmp_5 != 1);\n
            return v38;\n
        }\n
    }\n
    v38 = cgc_fprintf(v12, v9 - 14381);\n
    return v38;\n
}\n
", "4232319:sub_40947f": null, "4232609:sub_4095a1": null, "4233169:sub_4097d1": null, "4233184:main": "extern unsigned int banner;\n
extern char cgc_g_fort;\n
extern unsigned int cgc_g_rand;\n
extern unsigned int cgc_stdin[4];\n
extern void* cgc_stdout;\n
extern char g_40adff;\n
extern char g_40ae01;\n
extern char g_40ae03;\n
extern char g_hidden;\n
\n
int main()\n
{\n
    void* v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    char v2;  // [bp-0x3e]\n
    char v3;  // [bp-0x3d]\n
    unsigned int v4;  // [bp-0x38]\n
    char *v5;  // [bp-0x34]\n
    char v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v9;  // edi\n
    void* v10;  // edi\n
    unsigned int v12[4];  // edi\n
    void* v13;  // edi\n
\n
    v7 = v9;\n
    cgc_g_rand = 0x4347c000;\n
    if (cgc_freaduntil(&v6, 32, 10, cgc_stdin) < 0)\n
        cgc_exit();\n
    v0 = &cgc_g_fort;\n
    CFortress::SetOwner(&cgc_g_fort, &v6);\n
    cgc_fprintf(cgc_stdout, banner);\n
    CreateMoreMissions();\n
    InitializeSkills();\n
    InitializeExplorers();\n
    v5 = &L\"0123\u6e49\u6176\u696c\\u2064\u706f\u6974\u6e6f\u0a2e\u3400\u3500\u3600\u4200\u6f6f\u0a2e\u3200\";\n
    v1 = cgc_stdin;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    while (true)\n
                    {\n
                        PrintMainMenu();\n
                        v10 = v0;\n
                        v12 = v1;\n
                        *(&g_hidden) = (CFortress::GetSupply(v10) == 1337 ? 0 : CFortress::GetDay(v10) == 1) ^ 1;\n
                        if (cgc_freaduntil(&v2, 6, 10, v12) < 0)\n
                            return 0;\n
                        if (cgc_strcmp(&v2, v5))\n
                            break;\n
                        v13 = v0;\n
                        CFortress::NextDay(v13, 1);\n
                        if (CFortress::GetNumAvailableMissions(v13) <= 2)\n
                            CreateMoreMissions();\n
                    }\n
                    if (cgc_strtoul(&v2, 0, 10) != 1)\n
                        break;\n
                    while (true)\n
                    {\n
                        cgc_fbuffered(cgc_stdout, 1);\n
                        cgc_fprintf(cgc_stdout, \"\\n
]]] Missions [[[\\n
\");\n
                        CFortress::GetNumAvailableMissions(v0);\n
                        cgc_fprintf(cgc_stdout, \"1. Send mission (%d available)\\n
\");\n
                        cgc_fprintf(cgc_stdout, \"2. View current missions\\n
\");\n
                        cgc_fprintf(cgc_stdout, \"3. Back\\n
\");\n
                        cgc_fbuffered(cgc_stdout, 0);\n
                        if (cgc_freaduntil(&v2, 6, 10, v12) < 0)\n
                            break;\n
                        if (!cgc_strcmp(&v2, &g_40adff))\n
                        {\n
                            HandleSendMission();\n
                        }\n
                        else if (!cgc_strcmp(&v2, &g_40ae01))\n
                        {\n
                            HandleViewMissions();\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_strcmp(&v2, &g_40ae03))\n
                                break;\n
                            cgc_fprintf(cgc_stdout, \"Invalid option.\\n
\");\n
                        }\n
                    }\n
                }\n
                if (cgc_memcmp(&v2, \"2\", 2))\n
                    break;\n
                while (true)\n
                {\n
                    cgc_fbuffered(cgc_stdout, 1);\n
                    cgc_fprintf(cgc_stdout, \"\\n
]]] Explorers [[[\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"1. Hire explorer\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"2. View current explorers\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"3. Remove explorer\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"4. Learn skills\\n
\");\n
                    cgc_fprintf(cgc_stdout, \"5. Back\\n
\");\n
                    if (!g_hidden)\n
                        cgc_fprintf(cgc_stdout, \"6. Change explorer name\\n
\");\n
                    cgc_fbuffered(cgc_stdout, 0);\n
                    if (cgc_freaduntil(&v2, 6, 10, v12) < 0)\n
                        break;\n
                    if (!cgc_strcmp(&v2, &g_40adff))\n
                        HandleHireExplorer();\n
                    if (!cgc_strcmp(&v2, &g_40ae01))\n
                    {\n
                        HandleViewExplorers();\n
                        continue;\n
                    }\n
                    if (!cgc_strcmp(&v2, &g_40ae03))\n
                    {\n
                        HandleRemoveExplorer();\n
                        continue;\n
                    }\n
                    if (!cgc_strcmp(&v2, \"4\"))\n
                    {\n
                        HandleLearnSkills();\n
                        continue;\n
                    }\n
                    if (!cgc_strcmp(&v2, \"5\"))\n
                        break;\n
                    if (g_hidden)\n
                    {\n
LABEL_409c62:\n
                        cgc_fprintf(cgc_stdout, \"Invalid option.\\n
\");\n
                    }\n
                    else\n
                    {\n
                        if (!(!cgc_strcmp(&v2, \"6\")))\n
                            goto LABEL_409c62;\n
                        HandleChangeName();\n
                    }\n
                }\n
            }\n
            if (cgc_strcmp(&v2, &g_40ae03))\n
                break;\n
            cgc_fprintf(cgc_stdout, \"Boo.\\n
\");\n
            cgc_exit(0);\n
        }\n
        if (v2 != 45)\n
        {\n
LABEL_409884:\n
            cgc_fprintf(cgc_stdout, \"Invalid option.\\n
\");\n
        }\n
        else\n
        {\n
            if (!(!cgc_memcmp(&v3, \"1337\", 5)))\n
                goto LABEL_409884;\n
            v4 = CFortress::GetSupply(v0);\n
            if (v4 < cgc_strtoul(&v3, 0, 10))\n
                CFortress::AddSupply(v0, 1287);\n
            if (cgc_freaduntil(&v2, 6, 10, v12) < 0)\n
                return 0;\n
            CFortress::NextDay(v0, cgc_strtoul(&v2, 0, 10));\n
        }\n
    }\n
}\n
", "4233730:sub_409a02": null, "4233974:sub_409af6": null, "4233994:sub_409b0a": null, "4234362:sub_409c7a": null, "4234408:sub_409ca8": null, "4234506:sub_409d0a": null, "4234512:_ZN6CSkillC2EPKcN12CRequirement4TypeEi": "int CSkill::__base_ctor__(unsigned int v1[3], char *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3[3];  // esi\n
    unsigned int v4;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v3[1] = a1;\n
    v3[2] = a2;\n
    v4 = cgc_strndup(a0, 16);\n
    v3[0] = v4;\n
    return v4;\n
}\n
", "4234571:sub_409d4b": null, "4234576:_ZN6CSkillD1Ev": "int CSkill::__dtor__()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4234577:sub_409d51": null, "4234592:_ZN6CSkill9IsCounterEN12CRequirement4TypeE": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CSkill::IsCounter(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = !(~(a0) & v1->field_4);\n
    return v1;\n
}\n
", "4234612:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__cxa_atexit": null, "5242888:__libc_start_main": null, "5242892:cgc_receive": null, "5242896:cgc_allocate": null, "5242900:cgc__terminate": null, "5242904:_ZdlPv": null, "5242908:cgc_deallocate": null, "5242912:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}