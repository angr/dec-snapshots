{"4202496:_init": "extern struct_0 *g_40a118;\n
\n
int _init()\n
{\n
    if (g_40a118)\n
    {\n
        g_40a118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 32815;\n
    v6 = v5 + 19;\n
    v7 = v5 + 19;\n
    if (v7 == v6)\n
        return v5 + 19;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 32751;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 19;\n
    v9 = (v6 + 19 - (v6 + 19) >> 31) + (19 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x29]\n
    unsigned int v5;  // [bp-0x28]\n
    struct_0 *v6;  // [bp-0x24]\n
    unsigned int *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int *v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < v6->field_2c)\n
        v13 = v6->field_2c;\n
    if (v13 > 4095)\n
    {\n
        v12 = cgc_allocate_large_chunk();\n
        return v12;\n
    }\n
    v5 = cgc_log_base_two();\n
    v10 = v5 - cgc_log_base_two();\n
    if (v10 >= 8)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (!v11)\n
            v4 = v10 < 8;\n
        if (!(v4 & 1))\n
            break;\n
        v14 = v6;\n
        v15 = v10;\n
        v10 = v15 + 1;\n
        v0 = v13;\n
        v9 = cgc_list_find(&v14[1].padding_0[32 + 8 * v15], &v14[660].padding_0[20]);\n
        if (!v9)\n
            v3 = 0;\n
        else\n
            v3 = -5 + v9;\n
        v8 = v3;\n
        v11 = v8;\n
    }\n
    if (!v11)\n
    {\n
        v11 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v7 = v11;\n
        v2 = &v6[1].padding_0[32 + 8 + 8 * v10];\n
        if (!v7)\n
            v1 = 0;\n
        else\n
            v1 = v7 + 1;\n
        cgc_list_remove(v2);\n
    }\n
    cgc_mark_allocated();\n
    if ((*(v11) & -2) > v13)\n
        v11 = cgc_split_chunk(v11);\n
    v12 = cgc_chunk_to_ptr();\n
    return v12;\n
}\n
", "4203534:sub_40240e": null, "4203536:cgc_allocate_large_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_large_chunk(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = v5;\n
    cgc_mark_allocated();\n
    v3 = cgc_chunk_to_ptr();\n
    return v3;\n
}\n
", "4203658:sub_40248a": null, "4203664:cgc_log_base_two": "int cgc_log_base_two(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4203718:sub_4024c6": null, "4203728:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = a1;\n
        if (a0(v2))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = *(v2);\n
    }\n
}\n
", "4203852:sub_40254c": null, "4203856:cgc_find_fit": "int cgc_find_fit(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v4 = a0;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4203956:sub_4025b4": null, "4203968:cgc_grow_heap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_grow_heap()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0x1000;\n
    cgc_mark_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4204078:sub_40262e": null, "4204080:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4204190:sub_40269e": null, "4204192:cgc_mark_allocated": "int cgc_mark_allocated(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) | 1;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4204230:sub_4026c6": null, "4204240:cgc_split_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_sizes;\n
\n
int cgc_split_chunk(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4 + a0;\n
    v1 = *(v4) & -2;\n
    if ((*(v4) & -2) <= a0 + size_class_sizes)\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
    *(v4) = a0;\n
    cgc_mark_allocated(v4);\n
    *(v2) = v1 - a0;\n
    cgc_mark_allocated(v2);\n
    cgc_chunk_to_ptr();\n
    cgc_free();\n
    v3 = v4;\n
    return v3;\n
}\n
", "4204411:sub_40277b": null, "4204416:cgc_chunk_to_ptr": "int cgc_chunk_to_ptr(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4204434:sub_402792": null, "4204448:cgc_free": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc_ptr_to_chunk();\n
    v4 = v8;\n
    if (!v6)\n
        return v8;\n
    cgc_mark_free();\n
    v4 = cgc_coalesce();\n
    v1 = cgc_log_base_two(*(v4) & -2);\n
    v3 = v1 - cgc_log_base_two(v2->field_2c);\n
    if (v3 >= 8)\n
        v3 = 7;\n
    v9 = v2;\n
    v0 = &v9[626].padding_0[4];\n
    v8 = cgc_list_insert_in_order(&v9[1].padding_0[32 + 8 * v3], v4 + 1);\n
    return v8;\n
}\n
", "4204650:sub_40286a": null, "4204656:cgc_ptr_to_chunk": "int cgc_ptr_to_chunk(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4204725:sub_4028b5": null, "4204736:cgc_mark_free": "int cgc_mark_free(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) & -2;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4204774:sub_4028e6": null, "4204784:cgc_coalesce": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_1 *v12)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v12 & 4095))\n
        v10 = v12 + -(v12->field_0 & -2);\n
    if (((v12 + (v12->field_-4 & -2)) & 4095))\n
        v11 = v12 + (v12->field_-4 & -2);\n
    if (v10 && !(*(v10) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v10) & -2);\n
        v9 = v5 - cgc_log_base_two(v6->field_2c);\n
        if (v9 < 8)\n
        {\n
            v8 = v10;\n
            v4[0] = &v6[1].padding_0[32 + 8 * v9];\n
            if (!v8)\n
                v3 = 0;\n
            else\n
                v3 = v8 + 1;\n
            cgc_list_remove(v4, v3);\n
            *(v10) = (v12->field_-4 & -2) + (*(v10) & -2);\n
            cgc_mark_free(v10);\n
            v12 = v10;\n
        }\n
    }\n
    if (!v11)\n
    {\n
        return v12;\n
    }\n
    else if ((*(v11) & 1))\n
    {\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v11) & -2);\n
        v9 = v2 - cgc_log_base_two(v6->field_2c);\n
        if (v9 >= 8)\n
            return v12;\n
        v7 = v11;\n
        v1[0] = &v6[1].padding_0[32 + 8 * v9];\n
        if (!v7)\n
            v0 = 0;\n
        else\n
            v0 = v7 + 1;\n
        cgc_list_remove(v1, v0);\n
        *(v12) = (*(v12) & -2) + (*(v11) & -2);\n
        cgc_mark_free(v12);\n
    }\n
}\n
", "4205337:sub_402b19": null, "4205344:cgc_list_insert_in_order": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_in_order(struct struct_0 **v3, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = cgc_list_push_back(v3);\n
            return v4;\n
        }\n
        if (a1(a0) >= 0)\n
        {\n
            v0 = a0;\n
            v4 = cgc_list_insert_before(v3, v2);\n
            return v4;\n
        }\n
        v2 = *(v2);\n
    }\n
}\n
", "4205501:sub_402bbd": null, "4205504:cgc_size_cmp": "int cgc_size_cmp(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
\n
    v6 = v8;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4205655:sub_402c57": null, "4205664:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(v4);\n
    if (v2)\n
    {\n
        v0 = v4;\n
        cgc_memset(v2, 0);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4205753:sub_402cb9": null, "4205760:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v8)\n
    {\n
        v7 = cgc_malloc(a0);\n
        return v7;\n
    }\n
    v6 = (*(cgc_ptr_to_chunk(v8)) & -2) - 8;\n
    if (a0 == v6)\n
    {\n
        v7 = v8;\n
        return v7;\n
    }\n
    v5 = cgc_malloc(a0);\n
    v2 = v5;\n
    v3 = v8;\n
    if (a0 < v6)\n
        v1 = a0;\n
    else\n
        v1 = v6;\n
    v0 = v1;\n
    cgc_memcpy(v2, v3);\n
    cgc_free(v8);\n
    v7 = v5;\n
    return v7;\n
}\n
", "4205983:sub_402d9f": null, "4205984:cgc_list_insert_before": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_list_insert_before(struct_3 *v0, struct_0 *a0, unsigned int a1[2])\n
{\n
    struct_3 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4206240:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push_back(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_list_insert_after(v1, v1->field_4);\n
}\n
", "4206299:sub_402edb": null, "4206304:cgc_list_insert_after": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_after(void* *v1, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0)\n
    {\n
        v2 = cgc_list_insert_before(v1, *(a0), a1);\n
        return v2;\n
    }\n
    v2 = cgc_list_insert_before(v1, *(v1), a1);\n
    return v2;\n
}\n
", "4206416:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4206504:sub_402fa8": null, "4206512:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4206582:sub_402ff6": null, "4206592:cgc__prng_setup": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40cd80;\n
extern void* g_40cd84;\n
extern unsigned int g_40cd98;\n
\n
int cgc__prng_setup()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    g_40cd98 = 4;\n
    g_40cd80 = 2800;\n
    g_40cd84 = 0;\n
    for (v1 = 0; v1 < 2800; v1 = v3)\n
    {\n
        *((v0 + v1 * 4 + 152)) = 2000;\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4206699:sub_40306b": null, "4206704:cgc__prng_load_four": "extern unsigned int _GLOBAL_OFFSET_TABLE_[2845];\n
extern unsigned int g_40cd80;\n
\n
int cgc__prng_load_four()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2845];  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v17[2845];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v5 = g_40cd80;\n
    while (true)\n
    {\n
        v3 = v1[38 + v5] * 10000 + v3;\n
        v4 = v5 * 2 - 1;\n
        v1[38 + v5] = (v3 >> 31 CONCAT v3) /m v4 >> 32;\n
        v7 = v3;\n
        v3 = (v7 >> 31 CONCAT v7) /m v4;\n
        v5 -= 1;\n
        if (!v5)\n
            break;\n
        v3 *= v5;\n
    }\n
    v0 = v1[2840];\n
    v8 = v3;\n
    v2 = v0 + (v8 >> 31 CONCAT v8) /m 10000;\n
    v1[2844] = (v2 >> 31 CONCAT v2) /m 10 >> 32;\n
    v10 = v2;\n
    v11 = (v10 >> 31 CONCAT v10) /m 10;\n
    v1[2843] = (v11 >> 31 CONCAT v11) /m 10 >> 32;\n
    v12 = v2;\n
    v13 = (v12 >> 31 CONCAT v12) /m 100;\n
    v1[2842] = (v13 >> 31 CONCAT v13) /m 10 >> 32;\n
    v14 = v2;\n
    v15 = (v14 >> 31 CONCAT v14) /m 1000;\n
    v17 = v1;\n
    v17[2841] = (v15 >> 31 CONCAT v15) /m 10 >> 32;\n
    v17[2839] = v17[2839] - 14;\n
    v1[2840] = (v3 >> 31 CONCAT v3) /m 10000 >> 32;\n
    return 0;\n
}\n
", "4207047:sub_4031c7": null, "4207056:cgc_prng_get_next": "extern unsigned int _GLOBAL_OFFSET_TABLE_[2846];\n
extern unsigned int cgc_prng_setup;\n
\n
int cgc_prng_get_next()\n
{\n
    unsigned int v0[2846];  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3[2846];  // eax\n
    unsigned int v4[2846];  // eax\n
    unsigned int v5;  // ecx\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = 0;\n
    if (!cgc_prng_setup)\n
    {\n
        cgc__prng_setup();\n
        v3 = v0;\n
        v3[36] = v3[36] + 1;\n
    }\n
    if (v0[2839] <= 0 && v0[2845] > 3)\n
        cgc__prng_setup();\n
    if (v0[2845] > 3)\n
    {\n
        v1 = cgc__prng_load_four();\n
        v0[2845] = 0;\n
    }\n
    if (!v1)\n
    {\n
        v4 = v0;\n
        v5 = v4[2845];\n
        v4[2845] = v5 + 1;\n
        v1 = v4[2841 + v5];\n
    }\n
    return v1;\n
}\n
", "4207255:sub_403297": null, "4207264:cgc_recv_until_delim": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_until_delim(unsigned int v5, struct_0 *a0, unsigned int a1, char a2)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -9;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == a2)\n
                break;\n
        }\n
        if (*((a0 - 1)) != a2)\n
        {\n
            v4 = -9;\n
            return v4;\n
        }\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
}\n
", "4207529:sub_4033a9": null, "4207536:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    if (cgc_sendall(1, v3))\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4207622:sub_403406": null, "4207632:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = -6;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4207836:sub_4034dc": null, "4207840:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        v1[v2] = 0;\n
    }\n
    return v2;\n
}\n
", "4207995:sub_40357b": null, "4208000:cgc_create_card": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_card(char v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1[2];  // [bp-0x10]\n
    char v2[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_is_valid_suit() && cgc_is_valid_rank())\n
    {\n
        *(&v1) = 0;\n
        *(&v1) = cgc_calloc(4);\n
        v1[0] = v4;\n
        v1[1] = a0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    *(&v2) = 0;\n
    return v2;\n
}\n
", "4208148:sub_403614": null, "4208160:cgc_is_valid_suit": "int cgc_is_valid_suit(char v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (1 <= v1 && 4 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208228:sub_403664": null, "4208240:cgc_is_valid_rank": "int cgc_is_valid_rank(char v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (1 <= v1 && 13 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208308:sub_4036b4": null, "4208320:cgc_is_rank": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
int cgc_is_rank(struct_0 *v1, char a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -45;\n
        return v0;\n
    }\n
    else if (v1->field_1 != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4208399:sub_40370f": null, "4208400:cgc_destroy_card": "int cgc_destroy_card(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4208437:sub_403735": null, "4208448:cgc_is_equal": "int cgc_is_equal(char v1[2], char a0[2])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1 && !a0)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (v1 && a0)\n
    {\n
        if (v1[1] == a0[1] && v1[0] == a0[0])\n
        {\n
            v0 = 1;\n
            return v0;\n
        }\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208595:sub_4037d3": null, "4208608:cgc_is_set_equal": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_set_equal(char *v6[2], char *a0[2], char a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a1)\n
    {\n
        v5 = cgc_is_equal(*(v6), *(a0));\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < a1; v2 += 1)\n
    {\n
        for (v1 = 0; v1 < a1; v1 += 1)\n
        {\n
            if (cgc_is_equal(*((v6 + 0x4 * v2)), *((a0 + 0x4 * v1))) == 1)\n
            {\n
                v3 += 1;\n
                v4 += 1;\n
            }\n
        }\n
        if (1 < v3)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v3 = 0;\n
    }\n
    if (a1 != v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4208917:sub_403915": null, "4208928:cgc_create_deck": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_deck()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xf]\n
    char v2;  // [bp-0xe]\n
    char v3;  // [bp-0xd]\n
    char *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    char *v8;  // eax\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v4 = cgc_calloc(212);\n
    v3 = 0;\n
    for (v2 = 1; v2 < 5; v2 += 1)\n
    {\n
        for (v1 = 1; v1 < 14; v1 += 1)\n
        {\n
            *(&v4[4 + 4 * v3]) = cgc_create_card(v2, v1);\n
            v8 = v4;\n
            *(v8) = *(v8) + 1;\n
            v3 += 1;\n
        }\n
    }\n
    v9 = v5;\n
    return v4;\n
}\n
", "4209106:sub_4039d2": null, "4209120:cgc_shuffle_deck": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_shuffle_deck(unsigned int v7, char a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xe]\n
    char v5;  // [bp-0xd]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = -32;\n
        return v6;\n
    }\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v5 = (a0 >> 31 CONCAT a0) /m 52 >> 32;\n
    for (v2 = 0; v2 < 52; v2 += 1)\n
    {\n
        v5 = (v5 + v2 >> 31 CONCAT v5 + v2) /m 52 >> 32;\n
        v0 = v4;\n
        v4 = (v0 + cgc_prng_get_next() >> 31 CONCAT v0 + cgc_prng_get_next()) /m 52 >> 32;\n
        if (v5 != v4)\n
        {\n
            v3 = *((v7 + v5 * 4 + 4));\n
            *((v7 + v5 * 4 + 4)) = *((v7 + v4 * 4 + 4));\n
            *((v7 + v4 * 4 + 4)) = v3;\n
        }\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4209376:cgc_get_shuffled_deck": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_shuffled_deck(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_create_deck();\n
    cgc_shuffle_deck(v1, v3);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4209440:cgc_pop": "int cgc_pop(char *v2)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (*(v2))\n
    {\n
        v0 = 0;\n
        v3 = v2;\n
        *(v3) = *(v3) - 1;\n
        v0 = *(&v2[4 + 4 * *(v2)]);\n
        *(&v2[4 + 4 * *(v2)]) = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4209564:sub_403b9c": null, "4209568:cgc_is_deck_empty": "int cgc_is_deck_empty(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -32;\n
        return v0;\n
    }\n
    else if (*(v1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4209641:sub_403be9": null, "4209648:cgc_parse_xml_card": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_xml_card(char *v7, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x17]\n
    char v2;  // [bp-0x16]\n
    char v3;  // [bp-0x15]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 8;\n
    if (*(v7) != 69)\n
    {\n
        v6 = -62;\n
        return v6;\n
    }\n
    v7 += 1;\n
    if (*(v7) != 71)\n
    {\n
        if (*(v7) != 70)\n
        {\n
            v6 = -62;\n
            return v6;\n
        }\n
        v4 = 1;\n
        v7 += 1;\n
        v2 = *(v7);\n
        v7 += 1;\n
        if (*(v7) != 39)\n
        {\n
            v6 = -62;\n
            return v6;\n
        }\n
        v7 += 1;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        v7 += 1;\n
        v3 = *(v7);\n
        v7 += 1;\n
        if (*(v7) != 39)\n
        {\n
            v6 = -62;\n
            return v6;\n
        }\n
        v7 += 1;\n
    }\n
    if (*(v7) == 71 && !v5)\n
    {\n
        v7 += 1;\n
        v3 = *(v7);\n
        v7 += 1;\n
        if (*(v7) != 39)\n
        {\n
            v6 = -62;\n
            return v6;\n
        }\n
        v7 += 1;\n
        goto LABEL_403dfc;\n
    }\n
    if (*(v7) == 70 && !v4)\n
    {\n
        v7 += 1;\n
        v2 = *(v7);\n
        v7 += 1;\n
        if (*(v7) != 39)\n
        {\n
            v6 = -62;\n
            return v6;\n
        }\n
        v7 += 1;\n
LABEL_403dfc:\n
        if (*(v7) != 39)\n
        {\n
            v6 = -62;\n
            return v6;\n
        }\n
        *(a0) = cgc_create_card(v2, v3);\n
        if (!*(a0))\n
        {\n
            v6 = -42;\n
            return v6;\n
        }\n
        v6 = v1;\n
        return v6;\n
    }\n
    v6 = -62;\n
    return v6;\n
}\n
", "4210276:sub_403e64": null, "4210288:cgc_gen_xml_card": "int cgc_gen_xml_card(unsigned int v2, char a0[2])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    int tmp_93;  // tmp #93\n
    int tmp_111;  // tmp #111\n
    int tmp_133;  // tmp #133\n
    int tmp_152;  // tmp #152\n
    int tmp_170;  // tmp #170\n
    int tmp_194;  // tmp #194\n
    int tmp_213;  // tmp #213\n
    int tmp_231;  // tmp #231\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    tmp_93 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_93)) = 69;\n
    tmp_111 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_111)) = 70;\n
    tmp_133 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_133)) = a0[0];\n
    tmp_152 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_152)) = 39;\n
    tmp_170 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_170)) = 71;\n
    tmp_194 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_194)) = a0[1];\n
    tmp_213 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_213)) = 39;\n
    tmp_231 = v1;\n
    v1 += 1;\n
    *((v2 + tmp_231)) = 39;\n
    return v1;\n
}\n
", "4210488:sub_403f38": null, "4210496:cgc_parse_xml_player_name": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_xml_player_name(char v4[4], unsigned int *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (8 >= a1)\n
    {\n
        v3 = -62;\n
        return v3;\n
    }\n
    if (v4[0] == 40 && v4[1] == 66 && v4[2] == 67 && v4[3] == 86)\n
    {\n
        v2 = 0;\n
        v1 = a1 - 8;\n
        v2 = cgc_calloc(v1);\n
        cgc_strncpy(v2, v4 + 1, v1);\n
        *(a0) = v2;\n
        if (v4[1 + a1] == 39 && v4[3 + a1] == 39 && v4[2 + a1] == 39 && v4[1 + a1] == 41)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = -62;\n
        return v3;\n
    }\n
    v3 = -62;\n
    return v3;\n
}\n
", "4210858:sub_4040aa": null, "4210864:cgc_parse_xml_cards": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_xml_cards(char *v8, unsigned int a0, char a1)\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v8;\n
    v4 = 0;\n
    v3 = 0;\n
    memset(&v2, 0, 4);\n
    if (*(v5) != 40)\n
    {\n
        v6 = -62;\n
        return v6;\n
    }\n
    v5 += 1;\n
    if (*(v5) != 68)\n
    {\n
        v6 = -62;\n
        return v6;\n
    }\n
    v5 += 1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v5) != 39)\n
            v0 = v4 < a1;\n
        if (!(v0 & 1))\n
            break;\n
        v3 = cgc_parse_xml_card(v5, &v2);\n
        if (0 > v3)\n
        {\n
            v6 = v3;\n
            return v6;\n
        }\n
        v5 = v3 + v5;\n
        *((a0 + v4 * 4)) = *(&v2);\n
        v4 += 1;\n
    }\n
    if (*(v5) != 39)\n
    {\n
        v6 = -62;\n
        return v6;\n
    }\n
    v5 += 1;\n
    if (*(v5) != 41)\n
    {\n
        v6 = -62;\n
        return v6;\n
    }\n
    v5 += 1;\n
    v6 = v4;\n
    return v6;\n
}\n
", "4211255:sub_404237": null, "4211264:cgc_gen_xml_cards": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gen_xml_cards(unsigned int v5, unsigned int a0, char a1)\n
{\n
    int tmp_89;  // tmp #89\n
    int tmp_107;  // tmp #107\n
    char v0;  // [bp-0x11]\n
    int tmp_31;  // tmp #31\n
    int tmp_29;  // tmp #29\n
    int tmp_47;  // tmp #47\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xb]\n
    char v3;  // [bp-0xa]\n
    char v4;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = a1 * 8 + 4;\n
    tmp_89 = v4;\n
    v4 += 1;\n
    *((v5 + tmp_89)) = 40;\n
    tmp_107 = v4;\n
    v4 += 1;\n
    *((v5 + tmp_107)) = 68;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (0 < a1)\n
            v0 = !(v2 <= v4 + 2);\n
        if (!(v0 & 1))\n
            break;\n
        tmp_31 = v3;\n
        v3 += 1;\n
        v4 += cgc_gen_xml_card(v5 + v4, *((a0 + tmp_31 * 4)));\n
    }\n
    tmp_29 = v4;\n
    v4 += 1;\n
    *((v5 + tmp_29)) = 39;\n
    tmp_47 = v4;\n
    v4 += 1;\n
    *((v5 + tmp_47)) = 41;\n
    return v4;\n
}\n
", "4211528:sub_404348": null, "4211536:cgc_parse_xml_draw": "int cgc_parse_xml_draw(char v1[4])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1[0] == 40 && v1[1] == 80 && v1[2] == 39 && v1[3] == 41)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -62;\n
    return v0;\n
}\n
", "4211649:sub_4043c1": null, "4211664:cgc_parse_xml_go_fish": "int cgc_parse_xml_go_fish(char v1[5])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1[0] == 40 && v1[1] == 81 && v1[3] == 39 && v1[4] == 41)\n
    {\n
        v0 = v1[2];\n
        return v0;\n
    }\n
    v0 = -62;\n
    return v0;\n
}\n
", "4211780:sub_404444": null, "4211792:cgc_gen_xml_go_fish": "int cgc_gen_xml_go_fish(char v0[5], char a0)\n
{\n
    v0[0] = 40;\n
    v0[1] = 81;\n
    v0[2] = a0;\n
    v0[3] = 39;\n
    v0[4] = 41;\n
    return 5;\n
}\n
", "4211844:sub_404484": null, "4211856:cgc_parse_xml_ask": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_xml_ask(char v3[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3[0] == 40 && v3[1] == 83 && v3[2] == 71)\n
    {\n
        v1 = v3[3];\n
        if (!cgc_is_valid_rank(v1))\n
        {\n
            v2 = -44;\n
            return v2;\n
        }\n
        if (v3[4] == 39 && v3[5] == 39 && v3[6] == 41)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v2 = -62;\n
        return v2;\n
    }\n
    v2 = -62;\n
    return v2;\n
}\n
", "4212088:sub_404578": null, "4212096:cgc_gen_xml_ask": "int cgc_gen_xml_ask(char v0[7], char a0)\n
{\n
    v0[0] = 40;\n
    v0[1] = 83;\n
    v0[2] = 71;\n
    v0[3] = a0;\n
    v0[4] = 39;\n
    v0[5] = 39;\n
    v0[6] = 41;\n
    return 7;\n
}\n
", "4212162:sub_4045c2": null, "4212176:cgc_parse_xml_fishing": "int cgc_parse_xml_fishing(char v1[4])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1[0] == 40 && v1[1] == 82 && v1[2] == 39 && v1[3] == 41)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -62;\n
    return v0;\n
}\n
", "4212289:sub_404641": null, "4212304:cgc_parse_xml_books": "int cgc_parse_xml_books(char v2[5])\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2[0] == 40 && v2[1] == 84)\n
    {\n
        v0 = v2[2];\n
        if (v2[3] == 39 && v2[4] == 41)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v1 = -62;\n
        return v1;\n
    }\n
    v1 = -62;\n
    return v1;\n
}\n
", "4212440:sub_4046d8": null, "4212448:cgc_gen_xml_books": "int cgc_gen_xml_books(char v0[5], char a0)\n
{\n
    v0[0] = 40;\n
    v0[1] = 84;\n
    v0[2] = a0;\n
    v0[3] = 39;\n
    v0[4] = 41;\n
    return 5;\n
}\n
", "4212500:sub_404714": null, "4212512:cgc_gen_xml_turn": "int cgc_gen_xml_turn(char v0[9], char a0)\n
{\n
    v0[0] = 40;\n
    v0[1] = 85;\n
    v0[2] = 67;\n
    v0[3] = 73;\n
    v0[4] = a0;\n
    v0[5] = 39;\n
    v0[6] = 39;\n
    v0[7] = 39;\n
    v0[8] = 41;\n
    return 9;\n
}\n
", "4212592:cgc_gen_xml_final_results": "int cgc_gen_xml_final_results(char v0[20], char a0, char a1)\n
{\n
    v0[0] = 40;\n
    v0[1] = 66;\n
    v0[2] = 67;\n
    v0[3] = 73;\n
    v0[4] = 0;\n
    v0[5] = 39;\n
    v0[6] = 84;\n
    v0[7] = a0;\n
    v0[8] = 39;\n
    v0[9] = 39;\n
    v0[10] = 67;\n
    v0[11] = 73;\n
    v0[12] = 1;\n
    v0[13] = 39;\n
    v0[14] = 84;\n
    v0[15] = a1;\n
    v0[16] = 39;\n
    v0[17] = 39;\n
    v0[18] = 39;\n
    v0[19] = 41;\n
    return 20;\n
}\n
", "4212754:sub_404812": null, "4212768:cgc_gen_xml_error": "int cgc_gen_xml_error(char v0[5], char a0)\n
{\n
    v0[0] = 40;\n
    v0[1] = 72;\n
    v0[2] = a0;\n
    v0[3] = 39;\n
    v0[4] = 41;\n
    return 5;\n
}\n
", "4212820:sub_404854": null, "4212832:cgc_create_game": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_game(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xd]\n
    struct_0 *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v3 = cgc_calloc(16);\n
    v3->field_0 = 0;\n
    v2 = 0;\n
    if (*(v5))\n
        v2 = *(v5);\n
    v3->field_4 = cgc_get_shuffled_deck(v2);\n
    v3->field_8 = cgc_create_player(0);\n
    v1 = 0;\n
    v1 = cgc_calloc(4);\n
    cgc_strncpy(v1, v0 - 8476, 3);\n
    v3->field_c = cgc_create_player(1);\n
    v7 = v4;\n
    return v3;\n
}\n
", "4213064:sub_404948": null, "4213072:cgc_deal": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_deal(unsigned int v6[4])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = -54;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (v1 >= cgc_get_hand_size())\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = v6[1];\n
        v4 = cgc_take_top_card(v6[2]);\n
        if (0 > v4)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v0 = v6[1];\n
        v4 = cgc_take_top_card(v6[3]);\n
        if (0 > v4)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4213297:sub_404a31": null, "4213312:cgc_get_hand_size": "int cgc_get_hand_size()\n
{\n
    return 7;\n
}\n
", "4213322:sub_404a4a": null, "4213328:cgc_turn_complete": "int cgc_turn_complete(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -54;\n
        return v0;\n
    }\n
    *(v1) = (*(v1) + 1 >> 31 CONCAT *(v1) + 1) /m 2 >> 32;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4213397:sub_404a95": null, "4213408:cgc_is_player_turn": "int cgc_is_player_turn(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -54;\n
        return v0;\n
    }\n
    else if (*(v1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4213481:sub_404ae9": null, "4213488:cgc_is_game_over": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_game_over(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -54;\n
        return v1;\n
    }\n
    if (cgc_is_deck_empty(v2->field_4) == 1 && cgc_is_player_hand_empty() == 1 && cgc_is_player_hand_empty() == 1)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4213660:sub_404b9c": null, "4213664:cgc_create_hand": "int cgc_create_hand()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    v0 = cgc_calloc(212);\n
    return v0;\n
}\n
", "4213714:sub_404bd2": null, "4213728:cgc_consolidate_hand": "int cgc_consolidate_hand(char *v4)\n
{\n
    char v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x7]\n
    char v2;  // [bp-0x6]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
    void* v6;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v6 = 0;\n
        v0 = 0;\n
        if (v2 < 52)\n
        {\n
            v6 = v3;\n
            v0 = v6 < *(v4);\n
        }\n
        *(&v6) = v0;\n
        if (!(v0 & 1))\n
            break;\n
        if (!*(&v4[4 + 4 * v2]))\n
        {\n
            v2 += 1;\n
            goto LABEL_404cc4;\n
        }\n
        if (*(&v4[4 + 4 * v2]) && !*(&v4[4 + 4 * v1]))\n
        {\n
            *(&v4[4 + 4 * v1]) = *(&v4[4 + 4 * v2]);\n
            *(&v4[4 + 4 * v2]) = 0;\n
            goto LABEL_404cbf;\n
        }\n
        v2 += 1;\n
LABEL_404cbf:\n
        v1 += 1;\n
        v3 += 1;\n
LABEL_404cc4:\n
    }\n
    return v6;\n
}\n
", "4213966:sub_404cce": null, "4213968:cgc_add_card_to_hand": "int cgc_add_card_to_hand(char *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -23;\n
        return v0;\n
    }\n
    else if (!a0)\n
    {\n
        v0 = -43;\n
        return v0;\n
    }\n
    else if (52 > *(v1))\n
    {\n
        *(&v1[4 + 4 * *(v1)]) = a0;\n
        v3 = v1;\n
        *(v3) = *(v3) + 1;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -22;\n
        return v0;\n
    }\n
}\n
", "4214096:cgc_add_cards_to_hand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_cards_to_hand(char *v5, unsigned int *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x12]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!v5)\n
    {\n
        v4 = -23;\n
        return v4;\n
    }\n
    else if (52 < a1 + *(v5))\n
    {\n
        v4 = -52;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (v2 >= a1)\n
            {\n
                v1 = 0;\n
                while (true)\n
                {\n
                    if (v1 < a1)\n
                    {\n
                        v3 = cgc_add_card_to_hand(v5, a0[v1]);\n
                        if (v3)\n
                        {\n
                            v4 = v3;\n
                            return v4;\n
                        }\n
                        a0[v1] = 0;\n
                        v1 += 1;\n
                    }\n
                    else\n
                    {\n
                        v4 = v3;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            else if (a0[v2])\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v4 = -43;\n
                return v4;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v4 = -43;\n
        return v4;\n
    }\n
}\n
", "4214400:cgc_rm_card_from_hand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rm_card_from_hand(char *v2, char a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -23;\n
        return v1;\n
    }\n
    else if (*(v2) > a0)\n
    {\n
        *(a1) = *(&v2[4 + 4 * a0]);\n
        if (!*(a1))\n
        {\n
            v1 = -43;\n
            return v1;\n
        }\n
        *(&v2[4 + 4 * a0]) = 0;\n
        v3 = v2;\n
        *(v3) = *(v3) - 1;\n
        cgc_consolidate_hand(v2);\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -42;\n
        return v1;\n
    }\n
}\n
", "4214580:sub_404f34": null, "4214592:cgc_qty_of_rank_in_hand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_qty_of_rank_in_hand(char *v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = -23;\n
        return v3;\n
    }\n
    v2 = 0;\n
    for (v1 = 0; v1 < *(v4); v1 += 1)\n
    {\n
        if (cgc_is_rank(*((4 + v4 + 0x4 * v1)), a0) == 1)\n
            v2 += 1;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4214761:sub_404fe9": null, "4214768:cgc_get_all_of_rank_from_hand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_all_of_rank_from_hand(char *v7, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = -23;\n
        return v6;\n
    }\n
    else if (!a1)\n
    {\n
        v6 = -43;\n
        return v6;\n
    }\n
    else if (a0)\n
    {\n
        v5 = 0;\n
        v4 = *(v7);\n
        v3 = 0;\n
        v2 = 0;\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 < v4)\n
            {\n
                if (cgc_is_rank(*((4 + v7 + 0x4 * v5)), a0) != 1)\n
                {\n
                    v5 += 1;\n
                }\n
                else\n
                {\n
                    v2 = cgc_rm_card_from_hand(v7, v5, a1 + v3 * 4);\n
                    if (0 > v2)\n
                    {\n
                        v6 = v2;\n
                        return v6;\n
                    }\n
                    v3 += 1;\n
                }\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v6 = v3;\n
                return v6;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4215087:sub_40512f": null, "4215088:cgc_get_count_cards_in_hand": "int cgc_get_count_cards_in_hand(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -23;\n
        return v0;\n
    }\n
    v0 = *(v1);\n
    return v0;\n
}\n
", "4215135:sub_40515f": null, "4215136:cgc_get_rank_of_random_card_in_hand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_rank_of_random_card_in_hand(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x12]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -23;\n
        return v4;\n
    }\n
    v3 = cgc_get_count_cards_in_hand(v5);\n
    if (0 > v3)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    else if (v3)\n
    {\n
        v2 = 0;\n
        if (1 < v3)\n
        {\n
            v1 = cgc_prng_get_next();\n
            v2 = (v1 >> 31 CONCAT v1) /m v3 >> 32;\n
        }\n
        v4 = *((*(&v5[4 + 4 * v2]) + 1));\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -24;\n
        return v4;\n
    }\n
}\n
", "4215315:sub_405213": null, "4215328:cgc_is_hand_empty": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_hand_empty(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -23;\n
        return v1;\n
    }\n
    else if (cgc_get_count_cards_in_hand(v2))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
}\n
", "4215430:sub_405286": null, "4215440:cgc_get_latest_card": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_latest_card(char *v2, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -23;\n
        return v1;\n
    }\n
    else if (cgc_is_hand_empty(v2) != 1)\n
    {\n
        *(a0) = *(&v2[4 * *(v2)]);\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -24;\n
        return v1;\n
    }\n
}\n
", "4215569:sub_405311": null, "4215584:cgc_play_game": "typedef struct struct_2 {\n
    char padding_0[148];\n
    void* field_94;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[148];\n
    unsigned int field_94[4];\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_play_game()\n
{\n
    struct_2 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_recv_player_name(&v1, &_GLOBAL_OFFSET_TABLE_.padding_0[0], 0);\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v7 = v0;\n
    v7->field_94 = cgc_create_game(v1);\n
    v2 = cgc_deal(v7->field_94);\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v2 = cgc_send_initial_hand_to_player();\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!cgc_is_game_over(v0->field_94))\n
        {\n
            v2 = cgc_do_turn();\n
            if (v2)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            cgc_send_final_results();\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
}\n
", "4215868:sub_40543c": null, "4215872:cgc_do_turn": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *game;\n
\n
int cgc_do_turn()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_is_player_turn(game) == 1)\n
    {\n
        v1 = cgc_do_player_turn();\n
        return v1;\n
    }\n
    v1 = cgc_do_bot_turn();\n
    return v1;\n
}\n
", "4215966:sub_40549e": null, "4215968:cgc_do_player_turn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_player_turn()\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = 0;\n
    cgc_send_turn_notice();\n
    v2 = cgc_process_remote_player_empty_hand();\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v2 = cgc_process_remote_player_ask();\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v2 = cgc_process_remote_player_books();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4216129:sub_405541": null, "4216144:cgc_process_remote_player_empty_hand": "typedef struct struct_0 {\n
    char padding_0[148];\n
    struct struct_1 *field_94;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_remote_player_empty_hand()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_0 *v9;  // ebx\n
\n
    v6 = v8;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    if (cgc_is_player_hand_empty() == 1)\n
    {\n
        v4 = cgc_recv_draw_request();\n
        if (v4)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v9 = v3;\n
        v1 = v9->field_94->field_8;\n
        v2 = v9->field_94->field_4;\n
        v0 = cgc_get_hand_size();\n
        v4 = cgc_draw_new_hand(v1, v2);\n
        if (0 > v4 && v4 != -43)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v4 = 0;\n
        cgc_send_hand();\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4216383:sub_40563f": null, "4216384:cgc_process_remote_player_ask": "typedef struct struct_5 {\n
    char padding_0[148];\n
    struct struct_4 *field_94;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    struct struct_3 *field_8;\n
    unsigned int field_c;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_3;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_remote_player_ask()\n
{\n
    char v0;  // [bp-0x3c]\n
    char v1;  // [bp-0x38]\n
    char v2;  // [bp-0x2d]\n
    struct_5 *v3;  // [bp-0x2c]\n
    char v4;  // [bp-0x28]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    memset(&v4, 0, 16);\n
    v7 = cgc_recv_ask_and_get_rank(*(&v0), *(&v1));\n
    if (0 > v7)\n
    {\n
        v2 = 0;\n
        if (v7 == -44)\n
            v2 = 1 == cgc_is_hand_empty(v3->field_94->field_8->field_8);\n
        if (!(v2 & 1))\n
        {\n
            v8 = v7;\n
            return v8;\n
        }\n
    }\n
    v6 = cgc_have_cards_of_rank(v3->field_94->field_c, v7);\n
    if (0 <= v6)\n
        cgc_send_go_fish_notice();\n
    if (!v6)\n
    {\n
        v5 = cgc_process_remote_player_fishing();\n
    }\n
    else if (v6 == 1)\n
    {\n
LABEL_40578d:\n
        v5 = cgc_process_remote_player_accept_cards(&v4);\n
    }\n
    else\n
    {\n
        if (2 == v6)\n
            goto LABEL_40578d;\n
        if (3 == v6)\n
            goto LABEL_40578d;\n
        v5 = v6;\n
    }\n
    cgc_turn_complete(v3->field_94);\n
    v8 = v5;\n
    return v8;\n
}\n
", "4216792:sub_4057d8": null, "4216800:cgc_process_remote_player_fishing": "typedef struct struct_2 {\n
    char padding_0[148];\n
    struct struct_0 *field_94;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_remote_player_fishing(char v7)\n
{\n
    char v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x28]\n
    struct_2 *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: char\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    memset(&v3, 0, 4);\n
    v4 = cgc_recv_fish_request(*(&v0), *(&v1));\n
    if (v4)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    if (!v2->field_94->field_4->field_0)\n
    {\n
        cgc_send_cards(&v3);\n
    }\n
    else\n
    {\n
        v4 = cgc_take_top_card(v2->field_94->field_8);\n
        if (v4)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v4 = cgc_get_players_newest_card(v2->field_94->field_8);\n
        if (v4)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        cgc_send_cards(&v3);\n
        if (v7 == *((*(&v3) + 1)))\n
        {\n
            v4 = cgc_recv_and_match_cards(&v3);\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            v4 = cgc_recv_and_match_cards(&v3);\n
        }\n
        if (!v4)\n
            v4 = -42;\n
        else\n
            v4 = 0;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4217216:cgc_process_remote_player_accept_cards": "typedef struct struct_1 {\n
    char padding_0[148];\n
    struct struct_0 *field_94;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_remote_player_accept_cards(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    cgc_send_cards(v4);\n
    v0 = a0;\n
    v6 = v3;\n
    return cgc_accept_cards(v1->field_94->field_8, v4);\n
}\n
", "4217311:sub_4059df": null, "4217312:cgc_process_remote_player_books": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *game;\n
\n
int cgc_process_remote_player_books()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = game->field_8;\n
    v2 = cgc_play_books();\n
    if (0 > v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = v2;\n
    v2 = cgc_recv_and_match_count_books_played();\n
    if (v2 == 1)\n
    {\n
        v2 = 0;\n
    }\n
    else if (!v2)\n
    {\n
        v2 = -52;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4217464:sub_405a78": null, "4217472:cgc_do_bot_turn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_bot_turn()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = 1;\n
    cgc_send_turn_notice();\n
    v2 = cgc_process_bot_player_empty_hand();\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v2 = cgc_process_bot_player_ask();\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v2 = cgc_process_bot_player_books();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4217631:sub_405b1f": null, "4217632:cgc_process_bot_player_empty_hand": "typedef struct struct_0 {\n
    char padding_0[148];\n
    struct struct_1 *field_94;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_bot_player_empty_hand()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // ebx\n
\n
    v5 = v7;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    if (cgc_is_player_hand_empty() != 1)\n
        return v4;\n
    v8 = v3;\n
    v1 = v8->field_94->field_c;\n
    v2 = v8->field_94->field_4;\n
    v0 = cgc_get_hand_size();\n
    v4 = cgc_draw_new_hand(v1, v2);\n
    if (0 > v4 && !(-43 == v4))\n
        goto LABEL_405bbc;\n
    v4 = 0;\n
LABEL_405bbc:\n
    return v4;\n
}\n
", "4217802:sub_405bca": null, "4217808:cgc_process_bot_player_ask": "typedef struct struct_0 {\n
    char padding_0[148];\n
    struct struct_1 *field_94;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_bot_player_ask()\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x30]\n
    struct_0 *v3;  // [bp-0x2c]\n
    char v4;  // [bp-0x28]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    memset(&v4, 0, 16);\n
    v7 = cgc_select_random_card(v3->field_94->field_c, 0);\n
    if (0 > v7 && v7 != -24)\n
    {\n
        v8 = v7;\n
        return v8;\n
    }\n
    if (v7 == -24)\n
        v7 = 0;\n
    cgc_send_ask();\n
    v0 = v3->field_94->field_8;\n
    v1 = v7;\n
    v6 = cgc_have_cards_of_rank(v0, v1);\n
    v2 = v6;\n
    v5 = cgc_recv_go_fish_notice(v0, v1);\n
    if (v2 == v5)\n
    {\n
        if (!v6)\n
        {\n
            v5 = cgc_process_bot_player_fishing();\n
        }\n
        else\n
        {\n
            if (v6 != 1 && v6 != 2 && !(3 == v6))\n
                goto LABEL_405d4c;\n
            v5 = cgc_process_bot_player_accept_cards(&v4);\n
LABEL_405d4c:\n
        }\n
        cgc_turn_complete(v3->field_94);\n
        v8 = v5;\n
        return v8;\n
    }\n
    else if (0 > v5)\n
    {\n
        v8 = v5;\n
        return v8;\n
    }\n
    else\n
    {\n
        v8 = -52;\n
        return v8;\n
    }\n
}\n
", "4218225:sub_405d71": null, "4218240:cgc_process_bot_player_fishing": "typedef struct struct_2 {\n
    char padding_0[148];\n
    struct struct_0 *field_94;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_bot_player_fishing(char v5)\n
{\n
    struct_2 *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    memset(&v1, 0, 4);\n
    if (v0->field_94->field_4->field_0)\n
    {\n
        v2 = cgc_take_top_card(v0->field_94->field_c);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = cgc_get_players_newest_card(v0->field_94->field_c);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        else if (v5 != *((*(&v1) + 1)))\n
        {\n
            cgc_send_cards(&v1);\n
        }\n
        else\n
        {\n
            cgc_send_cards(&v1);\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4218529:sub_405ea1": null, "4218544:cgc_process_bot_player_accept_cards": "typedef struct struct_1 {\n
    char padding_0[148];\n
    struct struct_0 *field_94;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_bot_player_accept_cards(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v2 = cgc_recv_and_match_cards(v4);\n
    if (v2 == 1)\n
    {\n
        v0 = a0;\n
        v2 = cgc_accept_cards(v1->field_94->field_c, v4);\n
        return v2;\n
    }\n
    if (v2)\n
        return v2;\n
    v2 = -42;\n
}\n
", "4218686:sub_405f3e": null, "4218688:cgc_process_bot_player_books": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *game;\n
\n
int cgc_process_bot_player_books()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = game->field_c;\n
    v2 = cgc_play_books();\n
    if (0 > v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = v2;\n
    cgc_send_count_books_played();\n
    v3 = 0;\n
    return v3;\n
}\n
", "4218793:sub_405fa9": null, "4218800:cgc_create_player": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_player(char v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1 = cgc_calloc(12);\n
    v1->field_4 = a0;\n
    v1->field_0 = v3;\n
    v1->field_1 = 0;\n
    v1->field_8 = cgc_create_hand();\n
    v5 = v2;\n
    return v1;\n
}\n
", "4218899:sub_406013": null, "4218912:cgc_take_top_card": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_take_top_card(struct_0 *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    else if (a0)\n
    {\n
        v0 = v3->field_8;\n
        v2 = cgc_add_card_to_hand(v0, cgc_pop(a0));\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -32;\n
        return v2;\n
    }\n
}\n
", "4219039:sub_40609f": null, "4219040:cgc_have_cards_of_rank": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_have_cards_of_rank(struct_0 *v2, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -15;\n
        return v1;\n
    }\n
    v1 = cgc_get_all_of_rank_from_hand(v2->field_8, a0, a1);\n
    return v1;\n
}\n
", "4219140:sub_406104": null, "4219152:cgc_play_books": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    char *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_play_books(struct_0 *v10)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x28]\n
    char v3;  // [bp-0x24]\n
    char v4;  // [bp-0x20]\n
    char v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    struct_1 *v11;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v10)\n
    {\n
        v9 = -15;\n
        return v9;\n
    }\n
    else if (4 <= cgc_get_count_cards_in_hand(v10->field_8))\n
    {\n
        v8 = 0;\n
        v7 = 0;\n
        v6 = 0;\n
        memset(&v2, 0, 16);\n
        v1 = 1;\n
        while (true)\n
        {\n
            if (v1 < 14)\n
            {\n
                v8 = cgc_qty_of_rank_in_hand(v10->field_8, v1);\n
                if (0 > v8)\n
                {\n
                    v9 = v8;\n
                    return v9;\n
                }\n
                if (v8 == 4)\n
                {\n
                    v7 = cgc_get_all_of_rank_from_hand(v10->field_8, v1, &v2);\n
                    if (0 > v7)\n
                    {\n
                        v9 = v7;\n
                        return v9;\n
                    }\n
                    cgc_destroy_card(*(&v5));\n
                    cgc_destroy_card(*(&v4));\n
                    cgc_destroy_card(*(&v3));\n
                    cgc_destroy_card(*(&v2));\n
                    v11 = v10;\n
                    v11->field_1 = v11->field_1 + 1;\n
                    v6 += 1;\n
                }\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v9 = v6;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4219554:sub_4062a2": null, "4219568:cgc_is_player_hand_empty": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_player_hand_empty(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -15;\n
        return v1;\n
    }\n
    else if (cgc_is_hand_empty(v2->field_8) != 1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
}\n
", "4219676:sub_40631c": null, "4219680:cgc_draw_new_hand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_draw_new_hand(void* v4, char *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = -15;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        if (a1 && 7 >= a1)\n
        {\n
            v2 = 0;\n
            v1 = 0;\n
            while (true)\n
            {\n
                if (v1 < a1)\n
                {\n
                    v2 = cgc_take_top_card(v4, a0);\n
                    if (0 > v2)\n
                    {\n
                        v3 = v2;\n
                        return v3;\n
                    }\n
                    v1 += 1;\n
                }\n
                else\n
                {\n
                    v3 = v1;\n
                    return v3;\n
                }\n
            }\n
        }\n
        v3 = -52;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -32;\n
        return v3;\n
    }\n
}\n
", "4219909:sub_406405": null, "4219920:cgc_select_random_card": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_select_random_card(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -15;\n
        return v1;\n
    }\n
    else if (cgc_get_count_cards_in_hand(v2->field_8))\n
    {\n
        v1 = cgc_get_rank_of_random_card_in_hand(v2->field_8);\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -24;\n
        return v1;\n
    }\n
}\n
", "4220038:sub_406486": null, "4220048:cgc_accept_cards": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_accept_cards(struct_0 *v2, unsigned int *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -15;\n
        return v1;\n
    }\n
    else if (a0)\n
    {\n
        v1 = cgc_add_cards_to_hand(v2->field_8, a0, a1);\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -53;\n
        return v1;\n
    }\n
}\n
", "4220169:sub_406509": null, "4220176:cgc_get_players_newest_card": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_players_newest_card(struct_0 *v2, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -15;\n
        return v1;\n
    }\n
    else if (a0)\n
    {\n
        v1 = cgc_get_latest_card(v2->field_8, a0);\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -53;\n
        return v1;\n
    }\n
}\n
", "4220286:sub_40657e": null, "4220288:cgc_recv_player_name": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_player_name(unsigned int *v6)\n
{\n
    unsigned int v0;  // [bp-0x7c]\n
    char v1;  // [bp-0x78]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 100;\n
    memset(&v1, 0, 100);\n
    v3 = cgc_recv_until_delim(0, &v1, v2, 41);\n
    if (0 >= v3)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    v4 = cgc_parse_xml_player_name(&v1, v6, v3);\n
    return v4;\n
}\n
", "4220478:sub_40663e": null, "4220480:cgc_send_cards": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_cards(unsigned int v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0xd]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = a0 * 8 + 4;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_calloc(v3);\n
    v4 = cgc_gen_xml_cards(v2, v6, a0);\n
    if (0 >= v4)\n
    {\n
        v1 = v4;\n
    }\n
    else if (v3 != v4)\n
    {\n
        v1 = -62;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        cgc_send(v2, v4);\n
    }\n
    cgc_free(v2);\n
    return v1;\n
}\n
", "4220691:sub_406713": null, "4220704:cgc_recv_cards": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_cards(unsigned int v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = a0 * 8 + 4;\n
    v1 = 0;\n
    v1 = cgc_calloc(v2);\n
    v4 = cgc_recv_until_delim(0, v1, v2, 41);\n
    if (0 > v4)\n
    {\n
        v3 = v4;\n
    }\n
    else if (v2 != v4)\n
    {\n
        v3 = -9;\n
    }\n
    else\n
    {\n
        v3 = cgc_parse_xml_cards(v1, v6, a0);\n
        if (0 <= v3 && a0 != v3)\n
            v3 = -62;\n
    }\n
    cgc_free(v1);\n
    return v3;\n
}\n
", "4220977:sub_406831": null, "4220992:cgc_recv_draw_request": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_draw_request()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 4;\n
    memset(&v1, 0, 4);\n
    v3 = cgc_recv_until_delim(0, &v1, v2, 41);\n
    if (v2 != v3)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    v5 = cgc_parse_xml_draw(&v1);\n
    return v5;\n
}\n
", "4221156:sub_4068e4": null, "4221168:cgc_send_hand": "int cgc_send_hand(char *v0)\n
{\n
    return cgc_send_cards(v0 + 4, *(v0));\n
}\n
", "4221220:sub_406924": null, "4221232:cgc_send_go_fish_notice": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_go_fish_notice(char v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    memset(&v1, 0, 5);\n
    v2 = cgc_gen_xml_go_fish(&v1, v4);\n
    v6 = v3;\n
    return cgc_send(&v1, v2);\n
}\n
", "4221345:sub_4069a1": null, "4221360:cgc_recv_go_fish_notice": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_go_fish_notice()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 5;\n
    memset(&v1, 0, 5);\n
    v3 = cgc_recv_until_delim(0, &v1, v2, 41);\n
    if (v2 != v3)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    v5 = cgc_parse_xml_go_fish(&v1);\n
    return v5;\n
}\n
", "4221524:sub_406a54": null, "4221536:cgc_recv_fish_request": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_fish_request()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 4;\n
    memset(&v1, 0, 4);\n
    v3 = cgc_recv_until_delim(0, &v1, v2, 41);\n
    if (v2 != v3)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    v4 = cgc_parse_xml_fishing(&v1);\n
    return v4;\n
}\n
", "4221693:sub_406afd": null, "4221696:cgc_recv_and_match_cards": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_and_match_cards(char *v5[2], char a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3[2];  // [bp-0x10], Other Possible Types: void*\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (0 >= a0)\n
        v2 = 4;\n
    else\n
        v2 = a0 * 4;\n
    v3 = cgc_calloc(v2);\n
    v0 = a0;\n
    v4 = cgc_recv_cards(v3, a0);\n
    if (v0 != v4)\n
        v4 = 0;\n
    else\n
        v4 = cgc_is_set_equal(v3, v5, a0);\n
    cgc_free(v3);\n
    return v4;\n
}\n
", "4221910:sub_406bd6": null, "4221920:cgc_recv_ask_and_get_rank": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_ask_and_get_rank()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1b]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 7;\n
    memset(&v1, 0, 7);\n
    v3 = cgc_recv_until_delim(0, &v1, v2, 41);\n
    if (v2 != v3)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    v4 = cgc_parse_xml_ask(&v1);\n
    return v4;\n
}\n
", "4222077:sub_406c7d": null, "4222080:cgc_send_ask": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_ask(char v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x13]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    memset(&v1, 0, 7);\n
    v2 = cgc_gen_xml_ask(&v1, v4);\n
    v6 = v3;\n
    return cgc_send(&v1, v2);\n
}\n
", "4222193:sub_406cf1": null, "4222208:cgc_recv_and_match_count_books_played": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_and_match_count_books_played(char v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 5;\n
    memset(&v1, 0, 5);\n
    v3 = cgc_recv_until_delim(0, &v1, v2, 41);\n
    if (v2 != v3)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    v4 = cgc_parse_xml_books(&v1);\n
    if (0 > v4)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    else if (v4 != v7)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4222431:sub_406ddf": null, "4222432:cgc_send_count_books_played": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_count_books_played(char v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x13]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    memset(&v1, 0, 7);\n
    v2 = cgc_gen_xml_books(&v1, v4);\n
    v6 = v3;\n
    return cgc_send(&v1, v2);\n
}\n
", "4222545:sub_406e51": null, "4222560:cgc_send_turn_notice": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_turn_notice(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    memset(&v1, 0, 9);\n
    v2 = cgc_gen_xml_turn(&v1, v4);\n
    v6 = v3;\n
    return cgc_send(&v1, v2);\n
}\n
", "4222673:sub_406ed1": null, "4222688:cgc_send_initial_hand_to_player": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_send_initial_hand_to_player(struct_2 *v0)\n
{\n
    return cgc_send_cards(v0->field_8->field_8 + 4, v0->field_8->field_8->field_0);\n
}\n
", "4222752:cgc_send_final_results": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_final_results(struct struct_0 *v4[4])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    memset(&v1, 0, 20);\n
    v2 = cgc_gen_xml_final_results(&v1, v4[2]->field_1, v4[3]->field_1);\n
    v6 = v3;\n
    return cgc_send(&v1, v2);\n
}\n
", "4222887:sub_406fa7": null, "4222896:cgc_send_error": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_error(char v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    memset(&v1, 0, 5);\n
    v2 = cgc_gen_xml_error(&v1, v4);\n
    v6 = v3;\n
    return cgc_send(&v1, v2);\n
}\n
", "4223009:sub_407021": null, "4223024:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    v1 = cgc_play_game();\n
    if (0 > v1)\n
    {\n
        cgc_send_error(v1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4223112:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}