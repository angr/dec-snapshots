{"4202496:_init": "extern struct_0 *g_40a2b8;\n
\n
int _init()\n
{\n
    if (g_40a2b8)\n
    {\n
        g_40a2b8();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202678:sub_4020b6": null, "4202688:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202731:sub_4020eb": null, "4202732:sub_4020ec": "int sub_4020ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202736:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202740:sub_4020f4": null, "4202752:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33215;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202803:sub_402133": "int sub_402133()\n
{\n
}\n
", "4202809:sub_402139": "int sub_402139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202816:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33151;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202887:sub_402187": "int sub_402187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a2b4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a2b4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202971:sub_4021db": "int sub_4021db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202976:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 - 48 > 9)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203046:sub_402226": null, "4203056:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = -1;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v1[v5] != 45)\n
        v2 = 1;\n
    else\n
        v1 += 1;\n
    while (true)\n
    {\n
        if (!*((v5 + v1)))\n
        {\n
            v4 = v3 * v2;\n
            return v4;\n
        }\n
        else if (cgc_isdigit(*((v5 + v1))))\n
        {\n
            v3 = v3 * 10 + *((v5 + v1)) - 48;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4203288:sub_402318": null, "4203296:cgc_atox": "int cgc_atox(char v4[4])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x7]\n
    char v2;  // [bp-0x6]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
\n
    v0 = v5;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v4[2] > 47 && v4[2] < 58)\n
    {\n
        v3 = (v4[2] - 48) * 16;\n
        goto LABEL_402394;\n
    }\n
    if (v4[2] > 64 && v4[2] < 71)\n
        v3 = (v4[2] - 55) * 16;\n
LABEL_402394:\n
    if (v4[3] > 47 && v4[3] < 58)\n
    {\n
        v2 = v4[3] - 48;\n
        goto LABEL_4023f8;\n
    }\n
    if (v4[3] > 64 && v4[3] < 71)\n
        v2 = v4[3] - 55;\n
LABEL_4023f8:\n
    v1 = v3 + v2;\n
    return v1;\n
}\n
", "4203539:sub_402413": null, "4203552:cgc_bzero": "int cgc_bzero(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v0[v1] = v0[v1] ^ v0[v1];\n
    }\n
    return v0;\n
}\n
", "4203633:sub_402471": null, "4203648:cgc_fill_buffer": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* g_40a300;\n
extern void* g_40a304;\n
extern unsigned int g_40a308;\n
extern unsigned int std_input;\n
\n
int cgc_fill_buffer()\n
{\n
    unsigned int *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    g_40a300 = 0;\n
    g_40a304 = 0;\n
    v0 = &g_40a304;\n
    if (cgc_receive(std_input, &g_40a308, 0x1000))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (v1->field_40)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -2;\n
        return v2;\n
    }\n
}\n
", "4203799:sub_402517": null, "4203808:cgc_get_char": "extern unsigned int _GLOBAL_OFFSET_TABLE_[17];\n
extern unsigned int g_40a304;\n
\n
int cgc_get_char(char *v3)\n
{\n
    unsigned int v0[17];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[17];  // ecx\n
    unsigned int v5[17];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (g_40a304)\n
    {\n
        v4 = v0;\n
        if (!(v4[16] <= v4[15]))\n
            goto LABEL_40257f;\n
    }\n
    v1 = cgc_fill_buffer();\n
    if (v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
LABEL_40257f:\n
    v5 = v0;\n
    *(v3) = *(68 + &v5[0] + v5[15]);\n
    v5[15] = v5[15] + 1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203955:sub_4025b3": null, "4203968:cgc_read_until_delim_or_n": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until_delim_or_n(unsigned int v6, char *a0, char a1, unsigned int a2, unsigned int *a3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int *v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    *(a3) = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v5 = 3;\n
        return v5;\n
    }\n
    else if (a2)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 < a2)\n
            {\n
                v2 = cgc_get_char(&v3);\n
                if (v2)\n
                {\n
                    v5 = v2;\n
                    return v5;\n
                }\n
                if (a1 && v3 == a1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                a0[v1] = v3;\n
                v7 = a3;\n
                *(v7) = *(v7) + 1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v5 = 4;\n
        return v5;\n
    }\n
}\n
", "4204221:sub_4026bd": null, "4204224:cgc_read_n_bytes": "int cgc_read_n_bytes(unsigned int v1, char *a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v2;  // esi\n
\n
    v0 = v2;\n
    return cgc_read_until_delim_or_n(v1, a0, 0, a1, a2);\n
}\n
", "4204307:sub_402713": null, "4204320:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(v5, a0 + v2, a1 - v2))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 = v3 + v2;\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204480:cgc_getMSB": "int cgc_getMSB(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0x80000000;\n
    v0 = 31;\n
    while (true)\n
    {\n
        if (v0 < 0)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        if ((v3 & v1))\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        v1 >>= 1;\n
        v0 -= 1;\n
    }\n
}\n
", "4204577:sub_402821": null, "4204592:cgc_clearRun": "int cgc_clearRun(unsigned int v1[67])\n
{\n
    unsigned int v0[67];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2[67];  // eax\n
\n
    v0[0] = v2;\n
    v1[64] = 0;\n
    for (v0 = 0; v0 < 64; v0 += 1)\n
    {\n
        v1[v0] = 0;\n
    }\n
    v1[65] = 0;\n
    v1[66] = 0;\n
    return v1;\n
}\n
", "4204687:sub_40288f": null, "4204688:cgc_initRun": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initRun(struct struct_0 **v6, unsigned int a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[67];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8[67];  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v6;\n
    v3 = cgc_allocate(0x1000, 0);\n
    if (v3)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    v2[0] = *(v6);\n
    v0 = &v2[65];\n
    v3 = cgc_allocate(0x1000, 0);\n
    if (v3)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    v8 = v2;\n
    v8[0] = v8[0] | 1;\n
    v2[64] = a0;\n
    v2[66] = 0;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4204887:sub_402957": null, "4204896:cgc_getNextFreeChunk": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[252];\n
    unsigned int field_100;\n
    char padding_104[4];\n
    unsigned int field_108;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getNextFreeChunk(unsigned int v19, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    struct_0 *v1;  // [bp-0x54]\n
    struct_0 *v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    struct_0 *v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    struct_0 *v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    char v8;  // [bp-0x35]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    void* v11;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x24]\n
    struct_0 *v14;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0xc]\n
    unsigned int v20;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v27;  // eax\n
    struct_0 *v29;  // ecx\n
    unsigned int v30;  // eax\n
\n
    v9 = &_GLOBAL_OFFSET_TABLE_;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v16 = 1 << (v19 & 31);\n
    v15 = (0 CONCAT 0x1000) /m (1 << (v19 & 31));\n
    v14 = *((v9 + (v19 - 1) * 4 + 4164));\n
    while (true)\n
    {\n
        v8 = 0;\n
        if (v14)\n
        {\n
            v6 = v14;\n
            v20 = v15 - 1;\n
            v7 = (&v6->field_0)[(v20 >> 31 CONCAT v20) /m 32];\n
            v8 = (v7 & 1 << (((v15 - 1 >> 31 CONCAT v15 - 1) /m 32 >> 32) & 31));\n
        }\n
        if (!(v8 & 1))\n
            break;\n
        v13 = 0;\n
        for (v12 = 0; v12 < v15; v12 += 1)\n
        {\n
            v4 = v14;\n
            v22 = v12;\n
            v5 = (&v4->field_0)[(v22 >> 31 CONCAT v22) /m 32];\n
            if (!(v5 & 1 << (((v12 >> 31 CONCAT v12) /m 32 >> 32) & 31)))\n
            {\n
                v13 = 1;\n
                break;\n
            }\n
        }\n
        if (v13)\n
            break;\n
        v14 = v14->field_108;\n
    }\n
    if (!v14)\n
    {\n
        cgc_initRun(&v14, v16);\n
        v24 = v9;\n
        *((v14 + 264)) = *((v24 + (v19 - 1) * 4 + 4164));\n
        *((v24 + (v19 - 1) * 4 + 4164)) = v14;\n
        *(a0) = *((v14 + 260));\n
        v18 = 0;\n
        return v18;\n
    }\n
    v11 = 0;\n
    while (true)\n
    {\n
        if (v11 >= v15)\n
        {\n
            v18 = -42;\n
            return v18;\n
        }\n
        v2 = v14;\n
        v25 = v11;\n
        v3 = (&v2->field_0)[(v25 >> 31 CONCAT v25) /m 32];\n
        if (!(v3 & 1 << (((v11 >> 31 CONCAT v11) /m 32 >> 32) & 31)))\n
        {\n
            v10 = *((v14 + 260));\n
            *(a0) = v10 + v16 * v11;\n
            v0 = 1 << (((v11 >> 31 CONCAT v11) /m 32 >> 32) & 31);\n
            v1 = v14;\n
            v27 = v11;\n
            v29 = (v27 >> 31 CONCAT v27) /m 32;\n
            v30 = v1;\n
            *((v30 + v29 * 4)) = v0 | *((v30 + v29 * 4));\n
            v18 = 0;\n
            return v18;\n
        }\n
        v11 += 1;\n
    }\n
}\n
", "4205572:sub_402c04": null, "4205584:cgc_getRun": "typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
    struct struct_0 *field_108;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getRun(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v2 = 0; v2 < 11; v2 += 1)\n
    {\n
        for (v1 = *((v0 + v2 * 4 + 4164)); v1; v1 = *((v1 + 264)))\n
        {\n
            if (*((v1 + 260)) == v4)\n
            {\n
                v3 = v1;\n
                return v3;\n
            }\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4205736:sub_402ca8": null, "4205744:cgc_isClear": "int cgc_isClear(unsigned int *v2)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 64)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (v2[v0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4205832:sub_402d08": null, "4205840:cgc_malloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v4 = cgc_getMSB(v8);\n
    if (v8 <= 1 << (v4 & 31) && !(!v4))\n
        goto LABEL_402d76;\n
    v4 += 1;\n
LABEL_402d76:\n
    if (v4 <= 11)\n
    {\n
        v3 = cgc_getNextFreeChunk(v4, &v5);\n
        if (v3)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v6 = v5;\n
        return v6;\n
    }\n
    else\n
    {\n
        for (v2 = *((v1 + 4208)); v2; v2 = *((v2 + 8)));\n
        v2 = cgc_malloc(12);\n
        v0 = v2 + 4;\n
        v3 = cgc_allocate(v8, 0);\n
        if (v3)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v10 = v1;\n
        *((v2 + 8)) = *((v10 + 4208));\n
        *((v10 + 4208)) = v2;\n
        *(v2) = v8;\n
        v6 = *((v2 + 4));\n
        return v6;\n
    }\n
}\n
", "4206175:sub_402e5f": null, "4206176:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v12)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x2d]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v13 = v12 & 4095;\n
    if (!v13)\n
    {\n
        v13 = v3;\n
        if (*((v13 + 4208)))\n
        {\n
            v7 = *((v3 + 4208));\n
            while (true)\n
            {\n
                v13 = 0;\n
                v2 = 0;\n
                if (v7)\n
                {\n
                    v13 = *((v7 + 4));\n
                    v2 = v13 != v12;\n
                }\n
                *(&v13) = v2;\n
                if (!(v2 & 1))\n
                    break;\n
                v6 = v7;\n
                v7 = *((v7 + 8));\n
            }\n
        }\n
    }\n
    if (v7)\n
    {\n
        v8 = cgc_deallocate(v12);\n
        if (v8)\n
            cgc__terminate();\n
        *((v7 + 4)) = 0;\n
        *(v7) = 0;\n
        if (!v6)\n
            *((v3 + 4208)) = *((v7 + 8));\n
        else\n
            *((v6 + 8)) = *((v7 + 8));\n
        v13 = cgc_free(v7);\n
        return v13;\n
    }\n
    else\n
    {\n
        for (v5 = 0; v5 < 11; v5 = v13)\n
        {\n
            v4 = 0;\n
            v13 = *((v3 + v5 * 4 + 4164));\n
            v11 = v13;\n
            for (v10 = 0; v11; v11 = v13)\n
            {\n
                v13 = *((v11 + 260));\n
                if (v13 != (v12 & -0x1000))\n
                {\n
                    v10 = v11;\n
                    v13 = *((v11 + 264));\n
                }\n
                else\n
                {\n
                    v4 = 1;\n
                    break;\n
                }\n
            }\n
            if (v4)\n
                break;\n
            v13 = v5 + 1;\n
        }\n
        if (!v11)\n
            return v13;\n
        v9 = (0 CONCAT v12 - *((v11 + 260))) /m *((v11 + 0x100));\n
        v0 = 1 << (((v9 >> 31 CONCAT v9) /m 32 >> 32) & 31) ^ -1;\n
        v1 = v11;\n
        v14 = v9;\n
        v16 = (v14 >> 31 CONCAT v14) /m 32;\n
        v17 = v1;\n
        *((v17 + v16 * 4)) = v0 & *((v17 + v16 * 4));\n
        cgc_bzero(v12, *((v11 + 0x100)));\n
        v13 = cgc_isClear(v11);\n
        if (!v13)\n
            return v13;\n
        if (!v10)\n
            *((v3 + v5 * 4 + 4164)) = *((v11 + 264));\n
        else\n
            *((v10 + 264)) = *((v11 + 264));\n
        v8 = cgc_deallocate(*((v11 + 260)));\n
        if (v8)\n
            cgc__terminate();\n
        cgc_clearRun(v11);\n
        v13 = cgc_deallocate(v11);\n
        v8 = v13;\n
        if (v13)\n
            v13 = cgc__terminate();\n
        v11 = 0;\n
        return v13;\n
    }\n
}\n
", "4206997:sub_403195": null, "4207008:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    char *v3;  // eax\n
\n
    v1 = a0;\n
    v0 = v2;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 + 1;\n
        if (!v3)\n
            break;\n
        *((v0 + a1)) = v1[a1];\n
    }\n
    return v2;\n
}\n
", "4207086:sub_4031ee": null, "4207088:cgc_b16_2w": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_b16_2w(char v4[5], char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xe]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&v1, 0);\n
    if (a0 > 255)\n
    {\n
        v4[0] = 124;\n
        v4[1] = 66;\n
        v4[2] = 65;\n
        v4[3] = 68;\n
        v4[4] = 124;\n
        v2 = 5;\n
        return v2;\n
    }\n
    v4[0] = 48;\n
    v4[1] = 120;\n
    if (!a0)\n
    {\n
        v4[2] = 48;\n
        v4[3] = 48;\n
        v2 = 4;\n
        return v2;\n
    }\n
    v6 = v0;\n
    v4[3] = *((v6->field_30 + (a0 & 15)));\n
    a0 >>= 4;\n
    v4[2] = *((v6->field_30 + (a0 & 15)));\n
    v2 = 4;\n
    return v2;\n
}\n
", "4207315:sub_4032d3": null, "4207328:cgc_b10_uint": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_b10_uint(char *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x25]\n
    struct_0 *v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20]\n
    struct_1 *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    struct_1 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&v5, 12);\n
    if (!a0)\n
    {\n
        *(v8) = 48;\n
        v6 = 1;\n
        return v6;\n
    }\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4 < 10)\n
            v1 = a0;\n
        if (!(v1 & 1))\n
            break;\n
        v0 = v2->field_30;\n
        *(&v5 + v4) = *((v0 + ((0 CONCAT a0) /m 10 >> 32)));\n
        a0 = (0 CONCAT a0) /m 10;\n
        v4 += 1;\n
    }\n
    v3 = v4;\n
    for (v4 = v3; v4 > 0; v4 += 1)\n
    {\n
        *((v8 + v4 + 1)) = *(&v5 + &v3->field_0 - &v4->field_0);\n
    }\n
    v6 = v3;\n
    return v6;\n
}\n
", "4207590:sub_4033e6": null, "4207600:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x20]\n
    unsigned int v7;  // [bp+0x8]\n
    char *v10;  // [bp+0xfffe0], Other Possible Types: unsigned int\n
    char *v11;  // [bp+0xfffe8]\n
    char v13;  // [bp+0xffff2]\n
    unsigned int *v17;  // [bp+0x100014], Other Possible Types: unsigned int\n
    unsigned int *v23;  // eax\n
    unsigned int v34;  // ecx\n
\n
    v23 = v17;\n
    v17 = v23 + 1;\n
    v13 = *(v23);\n
    v11[v10] = v13;\n
    v10 += 1;\n
    while (true)\n
    {\n
        v3 += 1;\n
        if (!*((v7 + v3)))\n
        {\n
            return;\n
        }\n
        else if (*((v7 + v3)) != 33)\n
        {\n
            v34 = v2;\n
            v2 = v34 + 1;\n
            v4[v34] = *((v7 + v3));\n
        }\n
        else\n
        {\n
            v3 += 1;\n
            v0 = *((v7 + v3)) - 67;\n
            if (v0 <= 21)\n
                goto *(((stack_base)[48] + (stack_base)[52] * 4 - 8892)) + (stack_base)[48];\n
        }\n
    }\n
}\n
", "4208069:sub_4035c5": null, "4208080:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v1 = &v5;\n
    v0 = v1;\n
    v2 = cgc_vsprintf(v4, a0);\n
    return v2;\n
}\n
", "4208149:sub_403615": null, "4208160:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4208212:sub_403654": null, "4208224:cgc_strncmp": "int cgc_strncmp(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((v2 + v0)) != *((a0 + v0)))\n
            break;\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
    if (*((v2 + v0)) < *((a0 + v0)))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4208408:sub_403718": null, "4208416:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
        {\n
            v1 = &v2[v0];\n
            return v1;\n
        }\n
        if (!v2[1 + v0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4208523:sub_40378b": null, "4208528:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(unsigned int v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2[v4])\n
            v0 = cgc_strchr(a0, v2[v4]);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v3 += 1;\n
    }\n
    return v3;\n
}\n
", "4208684:sub_40382c": null, "4208688:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(unsigned int v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!*((v4 + v1)))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        if (cgc_strchr(a0, *((v4 + v1))))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
}\n
", "4208840:sub_4038c8": null, "4208848:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[4212];\n
    struct struct_1 *field_1074;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v4)\n
    {\n
        v0->field_1074 = v4;\n
    }\n
    else if (!v0->field_1074)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_strspn(v0->field_1074, a0);\n
    v4 = &v0->field_1074[v2];\n
    v5 = v0;\n
    v1 = cgc_strcspn(v4, a0);\n
    v5->field_1074 = v4 + v1;\n
    if (v5->field_1074 == v4)\n
    {\n
        v0->field_1074 = 0;\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v0->field_1074->field_0)\n
    {\n
        v0->field_1074 = 0;\n
    }\n
    else\n
    {\n
        v6 = v0;\n
        v6->field_1074->field_0 = 0;\n
        v6->field_1074 = v6->field_1074 + 1;\n
    }\n
    v3 = v4;\n
    return v3;\n
}\n
", "4209137:sub_4039f1": null, "4209152:cgc_sendKillMessage": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendKillMessage(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v5 = cgc_transmit_all(1, v1, cgc_strlen(v3));\n
    if (v5)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4209250:sub_403a62": null, "4209264:cgc_makeObject": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_makeObject(char v3, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1 = cgc_malloc(20);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = cgc_malloc(8);\n
    v1->field_8 = v5;\n
    if (!v5)\n
        cgc__terminate();\n
    v6 = cgc_malloc(8);\n
    v1->field_c = v6;\n
    if (!v6)\n
        cgc__terminate();\n
    v1->field_0 = v3;\n
    v1->field_4 = a0;\n
    v1->field_8->field_0 = a2;\n
    v1->field_8->field_4 = a1;\n
    v1->field_c->field_0 = a4;\n
    v1->field_c->field_4 = a3;\n
    v1->field_10 = a5;\n
    return v1;\n
}\n
", "4209524:sub_403b74": null, "4209536:cgc_destroyObject": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destroyObject(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(20);\n
    if (!v2)\n
        cgc__terminate();\n
    v4 = cgc_malloc(8);\n
    v2->field_8 = v4;\n
    if (!v4)\n
        cgc__terminate();\n
    v5 = cgc_malloc(8);\n
    v2->field_c = v5;\n
    if (!v5)\n
        cgc__terminate();\n
    v2->field_0 = 0;\n
    v2->field_4 = 0;\n
    v2->field_8->field_0 = 0;\n
    v2->field_8->field_4 = 0;\n
    v2->field_c->field_0 = 0;\n
    v2->field_c->field_4 = 0;\n
    v2->field_10 = 0;\n
    cgc_free(v2->field_8);\n
    v2->field_8 = 0;\n
    cgc_free(v2->field_c);\n
    v2->field_c = 0;\n
    v6 = v1;\n
    return cgc_free(v2);\n
}\n
", "4209840:cgc_extendDungeon": "typedef struct struct_0 {\n
    char padding_0[668];\n
    unsigned int field_29c;\n
    char padding_2a0[192];\n
    struct struct_0 *field_360;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char padding_7[5];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extendDungeon(struct_1 *v7, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 2;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a1 == v7->field_1)\n
    {\n
        v6 = 0;\n
    }\n
    else if (a1 == v7->field_2)\n
    {\n
        v6 = 1;\n
    }\n
    else if (a1 == v7->field_3)\n
    {\n
        v6 = 0;\n
    }\n
    else if (a1 == v7->field_4)\n
    {\n
        v6 = 1;\n
    }\n
    else if (a1 == v7->field_5)\n
    {\n
        v6 = 0;\n
    }\n
    else if (a1 == v7->field_6)\n
    {\n
        if (a2 > 300)\n
            v6 = 2;\n
        else\n
            v6 = 1;\n
    }\n
    v5 = 0;\n
    v4 = a0 * 24;\n
    v3 = cgc_malloc(868);\n
    if (!v3)\n
        cgc__terminate();\n
    cgc_addRoom(v3, v0 - 8781 + v6 * 216, v4, v5);\n
    for (v2 = v7->field_c; *((v2 + 864)); v2 = *((v2 + 864)));\n
    *((v2 + 864)) = v3;\n
    v1 = *((v2 + 668));\n
    cgc_destroyObject(v1);\n
    *((v2 + 668)) = cgc_makeObject(32, 7, 6, v4 - 1, 0, 0, a2);\n
    return v2;\n
}\n
", "4210413:sub_403eed": null, "4210416:cgc_addRoom": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addRoom(unsigned int v22, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    char *v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v23;  // eax\n
\n
    v17 = &_GLOBAL_OFFSET_TABLE_;\n
    v20 = a1;\n
    v21 = a2;\n
    v23 = v21;\n
    while (true)\n
    {\n
        v19 = v23;\n
        if (v19 >= 9)\n
            break;\n
        for (v18 = v20; v18 < v20 + 24; v18 += 1)\n
        {\n
            v14 = a0;\n
            v15 = v14 + (v19 - ((v19 * 954437177 >> 32 >> 1) + (v19 * 954437177 >> 32 >> 31)) * 9) * 24;\n
            v16 = v15[v18 + -24 * (v18 * 715827883 >> 32 >> 31) + -24 * (v18 * 715827883 >> 32 >> 2)];\n
            if (v16 == 32)\n
            {\n
                v0 = v22;\n
                v1 = v0 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v1 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(32, 7, v19, v18, 0, 0, a3);\n
            }\n
            else if (v16 == 38)\n
            {\n
                v2 = v22;\n
                v3 = v2 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v3 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(38, 6, v19, v18, 4, 1, a3);\n
            }\n
            else if (v16 == 45)\n
            {\n
                v12 = v22;\n
                v13 = v12 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v13 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(45, 1, v19, v18, 0, 0, a3);\n
            }\n
            else if (v16 == 64)\n
            {\n
                v6 = v22;\n
                v7 = v6 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v7 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(64, 4, v19, v18, 0, 0, a3);\n
            }\n
            else if (v16 == 82)\n
            {\n
                v8 = v22;\n
                v9 = v8 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v9 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(82, 3, v19, v18, 4, 0, a3);\n
            }\n
            else if (v16 == 118)\n
            {\n
                v4 = v22;\n
                v5 = v4 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v5 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(118, 5, v19, v18, 3, 1, a3);\n
            }\n
            else if (v16 != 124)\n
            {\n
                cgc__terminate();\n
            }\n
            else\n
            {\n
                v10 = v22;\n
                v11 = v10 + ((v19 >> 31 CONCAT v19) /m 9 >> 32) * 96;\n
                *((v11 + ((v18 >> 31 CONCAT v18) /m 24 >> 32) * 4)) = cgc_makeObject(124, 2, v19, v18, 0, 0, a3);\n
            }\n
        }\n
        v23 = v19 + 1;\n
    }\n
    return v23;\n
}\n
", "4211559:sub_404367": null, "4211568:cgc_addMove": "typedef struct struct_2 {\n
    char padding_0[4216];\n
    unsigned int field_1078;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    char *field_10;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addMove(struct_0 *v7, struct_1 *a0, unsigned int a1)\n
{\n
    struct_2 *v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x24], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x20], Other Possible Types: void*\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
    struct_1 *v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    struct_2 *v12;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0x4347c000;\n
    v8 = a0;\n
    v8->field_10 = v8->field_10 + 1;\n
    v9 = a0->field_10 & 63;\n
    if (v9)\n
        return a0->field_10 & 63;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v5 = a0->field_10 >> 6;\n
    v2 = v7->field_10;\n
    v10 = cgc_malloc((v5 + 1) * 0x100);\n
    v7->field_10 = v10;\n
    if (!v10)\n
        cgc__terminate();\n
    cgc_bzero(v7->field_10, (v5 + 1) * 0x100);\n
    v3 = cgc_strlen(v2);\n
    cgc_memcpy(v7->field_10, v2, v3);\n
    cgc_bzero(v2, v3);\n
    v4 = a1;\n
    cgc_extendDungeon(v7, v5, v4, a0->field_10);\n
    if (!v0->field_1078)\n
    {\n
        v11 = cgc_malloc(0x200);\n
        v0->field_1078 = v11;\n
        if (!v11)\n
            cgc__terminate();\n
        cgc_bzero(v0->field_1078, 0x200);\n
        for (v1 = 0; v1 < 10; v1 += 1)\n
        {\n
            v12 = v0;\n
            v6 += 1;\n
            cgc_sprintf(v12->field_1078 + v1 * 4, &v12[1].padding_0[3697]);\n
        }\n
    }\n
    v9 = cgc_free(v2);\n
    return v9;\n
}\n
", "4212085:sub_404575": null, "4212096:cgc_setObjectByCoord": "typedef struct struct_0 {\n
    char padding_0[864];\n
    struct struct_0 *field_360;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
int cgc_setObjectByCoord(struct_0 *v7, unsigned int a0, unsigned int a1, struct_1 *a2)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1[2];  // [bp-0x21], Other Possible Types: char\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x1c]\n
    struct_0 *v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v8;  // eax, Other Possible Types: unsigned int, unsigned int [2]\n
\n
    v5 = a0;\n
    v6 = a1;\n
    v3 = (0 CONCAT v5) /m 24;\n
    v4 = v7;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v8 = 0;\n
        *(&v1[0]) = 0;\n
        if (v4)\n
        {\n
            v8 = v2;\n
            v1 = v8 < v3;\n
        }\n
        *(&v8[0]) = v1;\n
        if (!(v1 & 1))\n
            break;\n
        v4 = *((v4 + 864));\n
        v2 += 1;\n
    }\n
    if (v4)\n
    {\n
        v0 = v4 + v6 * 96;\n
        *((v0 + ((0 CONCAT v5) /m 24 >> 32) * 4)) = a2;\n
        a2->field_8->field_0 = v5;\n
        v8 = a2->field_8;\n
        *((v8 + 4)) = v6;\n
    }\n
    return v8;\n
}\n
", "4212295:sub_404647": null, "4212304:cgc_getRoom": "typedef struct struct_0 {\n
    char padding_0[864];\n
    struct struct_0 *field_360;\n
} struct_0;\n
\n
int cgc_getRoom(struct_0 *v4, unsigned int a0)\n
{\n
    char v0;  // [bp-0x11]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (a0 < 0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v1 = 0;\n
        v2 = v4;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2)\n
                v0 = v1 < a0;\n
            if (!(v0 & 1))\n
                break;\n
            v1 += 1;\n
            v2 = v2->field_360;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
}\n
", "4212460:sub_4046ec": null, "4212464:cgc_getObjectByCoord": "int cgc_getObjectByCoord(void* v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 = a0;\n
    v5 = a1;\n
    v2 = (0 CONCAT v4) /m 24;\n
    v3 = cgc_getRoom(v7, v2);\n
    if (!v3)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v0 = v3;\n
    v1 = v0 + ((0 CONCAT v5) /m 9 >> 32) * 96;\n
    v6 = *((v1 + ((0 CONCAT v4) /m 24 >> 32) * 4));\n
    return v6;\n
}\n
", "4212615:sub_404787": null, "4212624:cgc_getObjectById": "typedef struct struct_0 {\n
    char padding_0[864];\n
    struct struct_0 *field_360;\n
} struct_0;\n
\n
int cgc_getObjectById(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v2 = v4; v2; v2 = v2->field_360)\n
    {\n
        for (v1 = 0; v1 < 9; v1 += 1)\n
        {\n
            for (v0 = 0; v0 < 24; v0 += 1)\n
            {\n
                if (*((*((&v2->padding_0[0] + 0x60 * v1 + 4 * v0)) + 4)) == a0)\n
                {\n
                    v3 = *((&v2->padding_0[0] + 0x60 * v1 + 4 * v0));\n
                    return v3;\n
                }\n
            }\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4212811:sub_40484b": null, "4212816:cgc_playerDied": "typedef struct struct_2 {\n
    char padding_0[12];\n
    void* field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_playerDied()\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x42c]\n
    unsigned int v2;  // [bp-0x420]\n
    struct_2 *v3;  // [bp-0x41c]\n
    unsigned int v4;  // [bp-0x418]\n
    struct_1 *v5;  // [bp-0x414]\n
    char v6;  // [bp-0x410]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp+0x4]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = &v8;\n
    cgc_bzero(&v6, 0x400);\n
    v5 = cgc_getObjectById(v3->field_c, 3);\n
    if (!v5)\n
        cgc__terminate();\n
    v0 = v5->field_8->field_4;\n
    v1 = v5->field_10;\n
    cgc_sprintf(&v6, v2 - 7867);\n
    v4 = cgc_strlen(&v6);\n
    v10 = cgc_transmit_all(1, &v6, v4);\n
    if (v10)\n
    {\n
        v10 = cgc__terminate();\n
        return v10;\n
    }\n
    return v10;\n
}\n
", "4213117:sub_40497d": null, "4213120:cgc_getName": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getName()\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x44]\n
    char *v3;  // [bp-0x40]\n
    char v4;  // [bp-0x3b]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v4, 51);\n
    if (cgc_transmit_all(1, v0 - 7914, cgc_strlen(v0 - 7914)))\n
        cgc__terminate();\n
    if (cgc_read_until_delim_or_n(1, &v4, 10, 50, &v1))\n
        cgc__terminate();\n
    v2 = cgc_strlen(&v4);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (!v3)\n
        cgc__terminate();\n
    cgc_bzero(v3, v2 + 1);\n
    cgc_memcpy(v3, &v4, v2);\n
    return v3;\n
}\n
", "4213422:sub_404aae": null, "4213424:cgc_insertNewScore": "int cgc_insertNewScore(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = v3;\n
    if (v3 && *((a0 + 4)) >= *((v3 + 4)))\n
    {\n
        v0 = v3;\n
        while (true)\n
        {\n
            if (!v0)\n
            {\n
                *((v1 + 8)) = a0;\n
                v2 = v3;\n
                return v2;\n
            }\n
            else if (*((a0 + 4)) >= *((v0 + 4)))\n
            {\n
                v1 = v0;\n
                v0 = *((v0 + 8));\n
            }\n
            else\n
            {\n
                *((v1 + 8)) = a0;\n
                *((a0 + 8)) = v0;\n
                v2 = v3;\n
                return v2;\n
            }\n
        }\n
    }\n
    *((a0 + 8)) = v3;\n
    v2 = a0;\n
    return v2;\n
}\n
", "4213596:sub_404b5c": null, "4213600:cgc_addHighScore": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addHighScore(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_malloc(12);\n
    if (!v1)\n
        cgc__terminate();\n
    cgc_bzero(v1, 12);\n
    v1[0] = cgc_getName();\n
    v1[1] = a0;\n
    v1[2] = 0;\n
    v3->field_14 = cgc_insertNewScore(v3->field_14, v1);\n
    v5 = v2;\n
    return v3;\n
}\n
", "4213761:sub_404c01": null, "4213776:cgc_playerWon": "typedef struct struct_2 {\n
    char padding_0[12];\n
    void* field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_playerWon(struct_2 *v8)\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x42c]\n
    unsigned int v2;  // [bp-0x420]\n
    unsigned int v3;  // [bp-0x41c]\n
    struct_1 *v4;  // [bp-0x418]\n
    unsigned int v5;  // [bp-0x414]\n
    char v6;  // [bp-0x410]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v6, 0x400);\n
    v4 = cgc_getObjectById(v8->field_c, 3);\n
    if (!v4)\n
        cgc__terminate();\n
    v0 = v4->field_8->field_4;\n
    v1 = v4->field_10;\n
    cgc_sprintf(&v6, v2 - 7889);\n
    v3 = cgc_strlen(&v6);\n
    if (cgc_transmit_all(1, &v6, v3))\n
        cgc__terminate();\n
    v3 = cgc_strlen(v2 - 7828);\n
    v3 = cgc_strlen(v8->field_10) + v3;\n
    v3 = cgc_strlen(v2 - 7562) + v3;\n
    v5 = cgc_malloc(v3 + 1);\n
    if (!v5)\n
        cgc__terminate();\n
    cgc_bzero(v5, v3 + 1);\n
    v0 = v8->field_10;\n
    cgc_sprintf(v5, v2 - 7816);\n
    if (cgc_transmit_all(1, v5, v3))\n
        cgc__terminate();\n
    cgc_bzero(v5, v3 + 1);\n
    cgc_free(v5);\n
    return cgc_addHighScore(v8, v4->field_10);\n
}\n
", "4214445:sub_404ead": null, "4214448:cgc_moveDown": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    void* field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveDown(struct_0 *v9, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    struct_1 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v5 = a0->field_8->field_0;\n
    v6 = a0->field_8->field_4 + 1;\n
    v4 = cgc_getObjectByCoord(v9->field_c, v5, v6);\n
    if (!v4)\n
        cgc__terminate();\n
    if (v4->field_4 == 1)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (v4->field_4 != 2)\n
    {\n
        if (v4->field_4 == 4 && a0->field_4 == 3)\n
        {\n
            v7 = 1;\n
            return v7;\n
        }\n
        if (v4->field_4 == 5 && a0->field_4 == 3)\n
        {\n
            cgc_sendKillMessage(v0 - 7810);\n
            v7 = 2;\n
            return v7;\n
        }\n
        if (v4->field_4 == 6 && a0->field_4 == 3)\n
        {\n
            cgc_sendKillMessage(v0 - 7785);\n
            v7 = 2;\n
            return v7;\n
        }\n
        if (v4->field_4 == 3)\n
        {\n
            v7 = 2;\n
            return v7;\n
        }\n
        if (v4->field_4 == 7)\n
        {\n
            v1 = a0->field_8->field_0;\n
            v2 = a0->field_8->field_4;\n
            cgc_setObjectByCoord(v9->field_c, v5, v6, a0);\n
            cgc_setObjectByCoord(v9->field_c, v1, v2, v4);\n
        }\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4214947:sub_4050a3": null, "4214960:cgc_moveUp": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    void* field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveUp(struct_3 *v9, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v5 = a0->field_8->field_0;\n
    v6 = a0->field_8->field_4 - 1;\n
    v4 = cgc_getObjectByCoord(v9->field_c, v5, v6);\n
    if (!v4)\n
        cgc__terminate();\n
    if (v4->field_4 == 1)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (v4->field_4 != 2)\n
    {\n
        if (v4->field_4 == 4 && a0->field_4 == 3)\n
        {\n
            v7 = 1;\n
            return v7;\n
        }\n
        if (v4->field_4 == 5 && a0->field_4 == 3)\n
        {\n
            cgc_sendKillMessage(v0 - 7810);\n
            v7 = 2;\n
            return v7;\n
        }\n
        if (v4->field_4 == 6 && a0->field_4 == 3)\n
        {\n
            cgc_sendKillMessage(v0 - 7785);\n
            v7 = 2;\n
            return v7;\n
        }\n
        if (v4->field_4 == 3)\n
        {\n
            v7 = 2;\n
            return v7;\n
        }\n
        else if (v4->field_4 == 7)\n
        {\n
            v1 = a0->field_8->field_0;\n
            v2 = a0->field_8->field_4;\n
            cgc_setObjectByCoord(v9->field_c, v5, v6, a0);\n
            cgc_setObjectByCoord(v9->field_c, v1, v2, v4);\n
            v7 = 0;\n
            return v7;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4215471:sub_4052af": null, "4215472:cgc_moveLeft": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    struct struct_3 *field_c;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[10];\n
    void* field_c;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveLeft(struct_4 *v9, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v5 = a0->field_8->field_0 - 1;\n
    v6 = a0->field_8->field_4;\n
    v4 = cgc_getObjectByCoord(v9->field_c, v5, v6);\n
    if (!v4)\n
        cgc__terminate();\n
    if (a0->field_4 == 3)\n
        cgc_addMove(v9, a0, v9->field_1);\n
    if (v4->field_4 == 2)\n
    {\n
        if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
            goto LABEL_405385;\n
        a0->field_c->field_0 = 2;\n
LABEL_405385:\n
        v7 = v3;\n
        return v7;\n
    }\n
    else if (v4->field_4 == 1)\n
    {\n
        if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
            goto LABEL_4053c3;\n
        a0->field_c->field_0 = 2;\n
LABEL_4053c3:\n
        v7 = v3;\n
        return v7;\n
    }\n
    else if (v4->field_4 == 4)\n
    {\n
        if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
            goto LABEL_405401;\n
        a0->field_c->field_0 = 2;\n
LABEL_405401:\n
        if (a0->field_4 == 3)\n
        {\n
            v7 = 1;\n
            return v7;\n
        }\n
        v7 = v3;\n
        return v7;\n
    }\n
    else if (v4->field_4 != 5)\n
    {\n
        if (v4->field_4 != 6)\n
        {\n
            if (v4->field_4 == 3)\n
            {\n
                v7 = 2;\n
                return v7;\n
            }\n
            else if (v4->field_4 == 7)\n
            {\n
                v1 = a0->field_8->field_0;\n
                v2 = a0->field_8->field_4;\n
                cgc_setObjectByCoord(v9->field_c, v5, v6, a0);\n
                cgc_setObjectByCoord(v9->field_c, v1, v2, v4);\n
                v7 = 0;\n
                return v7;\n
            }\n
            else\n
            {\n
                v7 = 0;\n
                return v7;\n
            }\n
        }\n
        else\n
        {\n
            if (a0->field_4 != 3)\n
            {\n
                if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
                    goto LABEL_4054ea;\n
                a0->field_c->field_0 = 2;\n
LABEL_4054ea:\n
                v7 = v3;\n
                return v7;\n
            }\n
            else\n
            {\n
                cgc_sendKillMessage(v0 - 7785);\n
                v7 = 2;\n
                return v7;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        if (a0->field_4 != 3)\n
        {\n
            if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
                goto LABEL_405482;\n
            a0->field_c->field_0 = 2;\n
LABEL_405482:\n
            v7 = v3;\n
            return v7;\n
        }\n
        else\n
        {\n
            cgc_sendKillMessage(v0 - 7810);\n
            v7 = 2;\n
            return v7;\n
        }\n
    }\n
}\n
", "4216249:sub_4055b9": null, "4216256:cgc_moveRight": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    struct struct_3 *field_c;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[2];\n
    char field_2;\n
    char padding_3[9];\n
    void* field_c;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveRight(struct_4 *v9, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v5 = a0->field_8->field_0 + 1;\n
    v6 = a0->field_8->field_4;\n
    v4 = cgc_getObjectByCoord(v9->field_c, v5, v6);\n
    if (!v4)\n
        cgc__terminate();\n
    if (a0->field_4 == 3)\n
        cgc_addMove(v9, a0, v9->field_2);\n
    if (v4->field_4 == 1)\n
    {\n
        if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
            goto LABEL_405695;\n
        a0->field_c->field_0 = 1;\n
LABEL_405695:\n
        v7 = v3;\n
        return v7;\n
    }\n
    else if (v4->field_4 == 2)\n
    {\n
        if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
            goto LABEL_4056d3;\n
        a0->field_c->field_0 = 1;\n
LABEL_4056d3:\n
        v7 = v3;\n
        return v7;\n
    }\n
    else if (v4->field_4 == 4)\n
    {\n
        if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
            goto LABEL_405711;\n
        a0->field_c->field_0 = 1;\n
LABEL_405711:\n
        if (a0->field_4 == 3)\n
        {\n
            v7 = 1;\n
            return v7;\n
        }\n
        v7 = v3;\n
        return v7;\n
    }\n
    else if (v4->field_4 != 5)\n
    {\n
        if (v4->field_4 != 6)\n
        {\n
            if (v4->field_4 == 3)\n
            {\n
                v7 = 2;\n
                return v7;\n
            }\n
            else if (v4->field_4 == 7)\n
            {\n
                v1 = a0->field_8->field_0;\n
                v2 = a0->field_8->field_4;\n
                cgc_setObjectByCoord(v9->field_c, v5, v6, a0);\n
                cgc_setObjectByCoord(v9->field_c, v1, v2, v4);\n
                v7 = 0;\n
                return v7;\n
            }\n
            else\n
            {\n
                v7 = 0;\n
                return v7;\n
            }\n
        }\n
        else\n
        {\n
            if (a0->field_4 != 3)\n
            {\n
                if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
                    goto LABEL_4057fa;\n
                a0->field_c->field_0 = 1;\n
LABEL_4057fa:\n
                v7 = v3;\n
                return v7;\n
            }\n
            else\n
            {\n
                cgc_sendKillMessage(v0 - 7785);\n
                v7 = 2;\n
                return v7;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        if (a0->field_4 != 3)\n
        {\n
            if (a0->field_4 != 6 && !(a0->field_4 == 5))\n
                goto LABEL_405792;\n
            a0->field_c->field_0 = 1;\n
LABEL_405792:\n
            v7 = v3;\n
            return v7;\n
        }\n
        else\n
        {\n
            cgc_sendKillMessage(v0 - 7810);\n
            v7 = 2;\n
            return v7;\n
        }\n
    }\n
}\n
", "4217033:sub_4058c9": null, "4217040:cgc_checkFloor": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
    struct struct_4 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[10];\n
    void* field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
} struct_4;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_checkFloor(struct_1 *v7, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v2 = a0->field_8->field_0;\n
    v3 = a0->field_8->field_4 + 1;\n
    v4 = cgc_getObjectByCoord(v7->field_c, v2, v3);\n
    if (!v4)\n
        cgc__terminate();\n
    if (!a0->field_c->field_0)\n
    {\n
        while (*((v4 + 4)) > 2)\n
        {\n
            v1 = cgc_moveDown(v7, a0);\n
            if (v1)\n
            {\n
                v5 = v1;\n
                return v5;\n
            }\n
            if (a0->field_4 == 3)\n
            {\n
                cgc_addMove(v7, a0, v7->field_1);\n
                v1 = cgc_moveEnemies(v7);\n
                if (v1)\n
                {\n
                    v5 = v1;\n
                    return v5;\n
                }\n
                cgc_sendCurrentDungeonView();\n
            }\n
            v2 = a0->field_8->field_0;\n
            v3 = a0->field_8->field_4 + 1;\n
            v4 = cgc_getObjectByCoord(v7->field_c, v2, v3);\n
            if (!v4)\n
                cgc__terminate();\n
        }\n
    }\n
    else if (a0->field_c->field_0 == 1)\n
    {\n
        while (*((v4 + 4)) > 2)\n
        {\n
            v1 = cgc_moveDown(v7, a0);\n
            if (v1)\n
            {\n
                v5 = v1;\n
                return v5;\n
            }\n
            v1 = cgc_moveLeft(v7, a0);\n
            if (v1)\n
            {\n
                v5 = v1;\n
                return v5;\n
            }\n
            if (a0->field_4 == 3)\n
            {\n
                v1 = cgc_moveEnemies(v7);\n
                if (v1)\n
                {\n
                    v5 = v1;\n
                    return v5;\n
                }\n
                cgc_sendCurrentDungeonView();\n
            }\n
            v2 = a0->field_8->field_0;\n
            v3 = a0->field_8->field_4 + 1;\n
            v4 = cgc_getObjectByCoord(v7->field_c, v2, v3);\n
            if (!v4)\n
                cgc__terminate();\n
        }\n
    }\n
    else if (a0->field_c->field_0 == 2)\n
    {\n
        while (*((v4 + 4)) > 2)\n
        {\n
            v1 = cgc_moveDown(v7, a0);\n
            if (v1)\n
            {\n
                v5 = v1;\n
                return v5;\n
            }\n
            v1 = cgc_moveRight(v7, a0);\n
            if (v1)\n
            {\n
                v5 = v1;\n
                return v5;\n
            }\n
            if (a0->field_4 == 3)\n
            {\n
                v1 = cgc_moveEnemies(v7);\n
                if (v1)\n
                {\n
                    v5 = v1;\n
                    return v5;\n
                }\n
                cgc_sendCurrentDungeonView();\n
            }\n
            v2 = a0->field_8->field_0;\n
            v3 = a0->field_8->field_4 + 1;\n
            v4 = cgc_getObjectByCoord(v7->field_c, v2, v3);\n
            if (!v4)\n
                cgc__terminate();\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4218046:sub_405cbe": null, "4218048:cgc_moveEnemies": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[864];\n
    struct struct_0 *field_360;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveEnemies(struct_1 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct struct_2 **v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    for (v5 = v8->field_c; v5; v5 = v5->field_360)\n
    {\n
        v4 = 0;\n
        while (v4 < 9)\n
        {\n
            v3 = 0;\n
            while (true)\n
            {\n
                if (v3 >= 24)\n
                {\n
                    v4 += 1;\n
                    break;\n
                }\n
                v1 = *((*((&v5->padding_0[0] + 0x60 * v4 + 0x4 * v3)) + 4));\n
                if (v1 == 5)\n
                {\n
                    v0 = a0;\n
                    v6 = cgc_moveBat(v8, *((&v5->padding_0[0] + 0x60 * v4 + 0x4 * v3)));\n
                    if (v6)\n
                    {\n
                        cgc_sendKillMessage(v2 - 7810);\n
                        v7 = v6;\n
                        return v7;\n
                    }\n
                }\n
                else\n
                {\n
                    if (!(v1 == 6))\n
                        goto LABEL_405e00;\n
                    v0 = a0;\n
                    v6 = cgc_moveZombie(v8, *((&v5->padding_0[0] + 0x60 * v4 + 0x4 * v3)));\n
                    if (v6)\n
                    {\n
                        cgc_sendKillMessage(v2 - 7785);\n
                        v7 = v6;\n
                        return v7;\n
                    }\n
                }\n
LABEL_405e00:\n
                v3 = v3 + 1;\n
            }\n
        }\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4218444:sub_405e4c": null, "4218448:cgc_sendCurrentDungeonView": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendCurrentDungeonView(void* v17)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x3c]\n
    unsigned int v10;  // [bp-0x38]\n
    unsigned int v11;  // [bp-0x34]\n
    unsigned int v12;  // [bp-0x30]\n
    unsigned int v13;  // [bp-0x2c]\n
    char v14;  // [bp-0x25]\n
    struct_0 *v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ebx\n
\n
    v16 = v18;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = cgc_getObjectById(v17, 3);\n
    if (!v15)\n
        cgc__terminate();\n
    v13 = v15->field_8->field_0;\n
    v12 = v15->field_8->field_4;\n
    v11 = 6;\n
    v10 = 12;\n
    v19 = v13;\n
    v9 = (v19 >> 31 CONCAT v19) /m 23;\n
    for (v8 = v11 * -1; v8 <= v11; v8 += 1)\n
    {\n
        cgc_bzero(&v14, 25);\n
        for (v7 = v10 * -1; v7 <= v10; v7 += 1)\n
        {\n
            if (v8 + v12 < 9 && v8 + v12 >= 0)\n
            {\n
                if (v7 + v13 < v9 * 24 + 24 && v7 + v13 >= v9 * 24)\n
                {\n
                    v6 = cgc_getRoom(v17, v9);\n
                    if (!v6)\n
                    {\n
                        (&v14)[v10 + v7] = 32;\n
                    }\n
                    else\n
                    {\n
                        v2 = v6 + (v8 + v12) * 96;\n
                        (&v14)[v10 + v7] = *(*((v2 + ((v7 + v13 >> 31 CONCAT v7 + v13) /m 24 >> 32) * 4)));\n
                    }\n
                    goto LABEL_4060b2;\n
                }\n
                if (v7 + v13 >= v9 * 24 + 24)\n
                {\n
                    v5 = cgc_getRoom(v17, v9 + 1);\n
                    if (v5)\n
                    {\n
                        v1 = v5 + (v8 + v12) * 96;\n
                        (&v14)[v10 + v7] = *(*((v1 + ((v7 + v13 >> 31 CONCAT v7 + v13) /m 24 >> 32) * 4)));\n
                    }\n
                    else\n
                    {\n
                        (&v14)[v10 + v7] = 32;\n
                    }\n
                }\n
                else if (v7 + v13 < v9 * 24)\n
                {\n
                    v4 = cgc_getRoom(v17, v9 - 1);\n
                    if (!v4)\n
                    {\n
                        (&v14)[v10 + v7] = 32;\n
                    }\n
                    else\n
                    {\n
                        v0 = v4 + (v8 + v12) * 96;\n
                        (&v14)[v10 + v7] = *(*((v0 + ((v7 + v13 >> 31 CONCAT v7 + v13) /m 24 >> 32) * 4)));\n
                    }\n
                }\n
LABEL_4060b2:\n
                goto LABEL_4060c7;\n
            }\n
            (&v14)[v10 + v7] = 32;\n
LABEL_4060c7:\n
        }\n
    }\n
    v20 = v16;\n
    return v8;\n
}\n
", "4219123:sub_4060f3": null, "4219136:cgc_moveZombie": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveZombie(void* v3, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (a0->field_10 == a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (a0->field_c->field_0 == 1)\n
    {\n
        v1 = cgc_moveLeft(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_checkFloor(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
    else if (a0->field_c->field_0 == 2)\n
    {\n
        v1 = cgc_moveRight(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_checkFloor(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
    v4 = a0;\n
    v4->field_10 = v4->field_10 + 1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4219450:sub_40623a": null, "4219456:cgc_moveBat": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveBat(void* v3, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (a0->field_10 == a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (a0->field_c->field_0 == 1)\n
    {\n
        v1 = cgc_moveLeft(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
    else if (a0->field_c->field_0 == 2)\n
    {\n
        v1 = cgc_moveRight(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
    if (a0->field_c->field_4 != 3)\n
    {\n
        v1 = cgc_moveUp(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        a0->field_c->field_4 = 3;\n
    }\n
    else\n
    {\n
        v1 = cgc_moveDown(v3, a0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        a0->field_c->field_4 = 4;\n
    }\n
    v4 = a0;\n
    v4->field_10 = v4->field_10 + 1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4219817:sub_4063a9": null, "4219824:cgc_jump": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_2 *field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[3];\n
    char field_3;\n
    char padding_4[8];\n
    void* field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_jump(struct_0 *v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    a0->field_c->field_0 = 0;\n
    a0->field_c->field_4 = 3;\n
    for (v1 = 1; v1 <= 2; v1 += 1)\n
    {\n
        if (a0->field_4 == 3)\n
            cgc_addMove(v4, a0, v4->field_3);\n
        v2 = cgc_moveUp(v4, a0);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = cgc_moveEnemies(v4, a0->field_10);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        cgc_sendCurrentDungeonView(v4->field_c);\n
    }\n
    a0->field_c->field_4 = 4;\n
    v2 = cgc_checkFloor(v4, a0);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4220141:sub_4064ed": null, "4220144:cgc_jumpLeft": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    void* field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_jumpLeft(struct_2 *v4, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    a0->field_c->field_4 = 3;\n
    a0->field_c->field_0 = 1;\n
    for (v1 = 1; v1 <= 2; v1 += 1)\n
    {\n
        v2 = cgc_moveUp(v4, a0);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = cgc_moveLeft(v4, a0);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = cgc_moveEnemies(v4, a0->field_10);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        cgc_sendCurrentDungeonView(v4->field_c);\n
    }\n
    a0->field_c->field_4 = 4;\n
    v2 = cgc_checkFloor(v4, a0);\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    a0->field_c->field_0 = 0;\n
    v3 = 0;\n
    return v3;\n
}\n
", "4220472:sub_406638": null, "4220480:cgc_jumpRight": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    void* field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_jumpRight(struct_2 *v4, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    a0->field_c->field_4 = 3;\n
    a0->field_c->field_0 = 2;\n
    for (v1 = 1; v1 <= 2; v1 += 1)\n
    {\n
        v2 = cgc_moveUp(v4, a0);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = cgc_moveRight(v4, a0);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = cgc_moveEnemies(v4, a0->field_10);\n
        if (v2)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        cgc_sendCurrentDungeonView(v4->field_c);\n
    }\n
    a0->field_c->field_4 = 4;\n
    v2 = cgc_checkFloor(v4, a0);\n
    if (v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    a0->field_c->field_0 = 0;\n
    v3 = 0;\n
    return v3;\n
}\n
", "4220808:sub_406788": null, "4220816:cgc_makeMove": "typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char padding_7[5];\n
    void* field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_makeMove(struct_2 *v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v5->field_10)\n
    {\n
        v5->field_10 = cgc_malloc(257);\n
        cgc_bzero(v5->field_10, 257);\n
    }\n
    v1 = cgc_strlen(v5->field_10);\n
    cgc_sprintf(v5->field_10 + v1, v0 - 7917);\n
    v3 = cgc_getObjectById(v5->field_c, 3);\n
    if (!v3)\n
        cgc__terminate();\n
    if (a0 == v5->field_1)\n
    {\n
        v3->field_c->field_0 = 0;\n
        v2 = cgc_moveLeft(v5, v3);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v2 = cgc_moveEnemies(v5, v3->field_10);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        cgc_sendCurrentDungeonView(v5->field_c);\n
        v2 = cgc_checkFloor(v5, v3);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
    else if (a0 == v5->field_2)\n
    {\n
        v3->field_c->field_0 = 0;\n
        v2 = cgc_moveRight(v5, v3);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v2 = cgc_moveEnemies(v5, v3->field_10);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        cgc_sendCurrentDungeonView(v5->field_c);\n
        v2 = cgc_checkFloor(v5, v3);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
    else if (a0 == v5->field_3)\n
    {\n
        v4 = cgc_jump(v5, v3);\n
        return v4;\n
    }\n
    else if (a0 == v5->field_4)\n
    {\n
        v4 = cgc_jumpLeft(v5, v3);\n
        return v4;\n
    }\n
    else if (a0 == v5->field_5)\n
    {\n
        v4 = cgc_jumpRight(v5, v3);\n
        return v4;\n
    }\n
    else if (a0 == v5->field_6)\n
    {\n
        cgc_addMove(v5, v3, v5->field_6);\n
        v2 = cgc_moveEnemies(v5, v3->field_10);\n
        if (v2)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        cgc_sendCurrentDungeonView(v5->field_c);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4221702:sub_406b06": null, "4221712:cgc_destroyRoom": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destroyRoom(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    for (v2 = 0; v2 < 9; v2 = v4)\n
    {\n
        for (v1 = 0; v1 < 24; v1 += 1)\n
        {\n
            cgc_destroyObject(*((v3 + v2 * 96 + v1 * 4)));\n
            *((v3 + v2 * 96 + v1 * 4)) = 0;\n
        }\n
        v4 = v2 + 1;\n
    }\n
    return v4;\n
}\n
", "4221855:sub_406b9f": null, "4221856:cgc_buildDungeon": "typedef struct struct_2 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    char padding_a[2];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[864];\n
    unsigned int field_360;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_buildDungeon(struct_2 *v21)\n
{\n
    struct_0 *v0;  // [bp-0xac], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x8e]\n
    char v2;  // [bp-0x8d]\n
    unsigned int v3;  // [bp-0x8c]\n
    char v4;  // [bp-0x88]\n
    char v5;  // [bp-0x87]\n
    struct_0 *v6;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x28]\n
    void* v8;  // [bp-0x24]\n
    void* v9;  // [bp-0x20]\n
    char v10;  // [bp-0x1a]\n
    char v11;  // [bp-0x19]\n
    char v12;  // [bp-0x18]\n
    char v13;  // [bp-0x17]\n
    char v14;  // [bp-0x16]\n
    char v15;  // [bp-0x15]\n
    char v16;  // [bp-0x14]\n
    char v17;  // [bp-0x13]\n
    char v18;  // [bp-0x12]\n
    char v19;  // [bp-0x11]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v22;  // ebx\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
\n
    v20 = v22;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = 0;\n
    cgc_bzero(&v10, 10);\n
    v23 = cgc_malloc(868);\n
    v21->field_c = v23;\n
    if (!v23)\n
        cgc__terminate();\n
    cgc_addRoom(v21->field_c, v3 - 8133, v8, v9, 0);\n
    v21->field_c->field_360 = 0;\n
    v21->field_10 = 0;\n
    v0 = &v5;\n
    cgc_bzero(&v5, 91);\n
    v6 = 0;\n
    v7 = 116;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v7 < 126)\n
            v2 = v6 < 10;\n
        if (!(v2 & 1))\n
            break;\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1 = 1;\n
            if (v4 >= 35)\n
                v1 = !(v4 <= v7);\n
            if (!(v1 & 1))\n
                break;\n
            v0 = &v4;\n
            if (cgc_random(&v4, 1))\n
            {\n
                v0 = 1;\n
                cgc__terminate();\n
            }\n
        }\n
        if (*(&v0 + v4))\n
            v4 = v7;\n
        v24 = v6;\n
        v6 = v24 + 1;\n
        (&v10)[v24] = v4;\n
        *(&v0 + v4) = 1;\n
        v7 += 1;\n
    }\n
    v21->field_0 = v10;\n
    v21->field_1 = v11;\n
    v21->field_2 = v12;\n
    v21->field_3 = v13;\n
    v21->field_4 = v14;\n
    v21->field_5 = v15;\n
    v21->field_6 = v16;\n
    v21->field_7 = v17;\n
    v21->field_8 = v18;\n
    v21->field_9 = v19;\n
    return v21;\n
}\n
", "4222470:sub_406e06": null, "4222480:cgc_destroyDungeon": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[864];\n
    struct struct_0 *field_360;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destroyDungeon(struct_1 *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(v5, 10);\n
    if (v5->field_10)\n
    {\n
        v3 = cgc_strlen(v5->field_10);\n
        cgc_bzero(v5->field_10, v3);\n
        cgc_free(v5->field_10);\n
    }\n
    v5->field_10 = 0;\n
    v7 = v5->field_c;\n
    while (true)\n
    {\n
        v1 = v7;\n
        if (!v1)\n
            break;\n
        v2 = v1->field_360;\n
        cgc_destroyRoom(v1);\n
        cgc_free(v1);\n
        v7 = v2;\n
    }\n
    v8 = v4;\n
    return v7;\n
}\n
", "4222684:sub_406edc": null, "4222688:cgc_getRandomName": "typedef struct struct_0 {\n
    char padding_0[4220];\n
    unsigned int field_107c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getRandomName()\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14]\n
    char *v5;  // [bp-0x10]\n
    char *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v3 = 0x4347c000;\n
    v5 = cgc_malloc(11);\n
    if (!v5)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    cgc_bzero(v5, 11);\n
    for (v2 = 0; v2 < 10; v2 += 1)\n
    {\n
        v1 = v3[v0->field_107c + v2];\n
        if (!(v1 & 1))\n
            v5[v2] = ((v3[v0->field_107c + v2] >> 31 CONCAT v3[v0->field_107c + v2]) /m 26 >> 32) + 65;\n
        else\n
            v5[v2] = ((v3[v0->field_107c + v2] >> 31 CONCAT v3[v0->field_107c + v2]) /m 26 >> 32) + 97;\n
    }\n
    v0->field_107c = (0 CONCAT v0->field_107c + 10) /m 100 >> 32;\n
    v6 = v5;\n
    return v6;\n
}\n
", "4222984:sub_407008": null, "4222992:cgc_getMove": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getMove()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v2, 4);\n
    if (cgc_read_n_bytes(0, &v2, 2, &v1))\n
        cgc__terminate();\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4223131:sub_40709b": null, "4223136:cgc_sendGameDescription": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendGameDescription()\n
{\n
    unsigned int v0;  // [bp-0x450]\n
    unsigned int v1;  // [bp-0x44c]\n
    unsigned int v2;  // [bp-0x448]\n
    unsigned int v3;  // [bp-0x444]\n
    unsigned int v4;  // [bp-0x440]\n
    unsigned int v5;  // [bp-0x43c]\n
    char v6[7];  // [bp-0x430]\n
    struct_0 *v7;  // [bp-0x42c]\n
    unsigned int v8;  // [bp-0x428]\n
    unsigned int v9;  // [bp-0x424]\n
    unsigned int v10;  // [bp-0x420]\n
    unsigned int v11;  // [bp-0x41c]\n
    void* v12;  // [bp-0x418], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x414], Other Possible Types: unsigned int\n
    char v14;  // [bp-0x410]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v16;  // [bp+0x4]\n
    unsigned int v17;  // ebx\n
    char v18[7];  // eax\n
    unsigned int v19;  // eax\n
\n
    v15 = v17;\n
    v11 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v6[0]) = &v16;\n
    v13 = 0;\n
    v12 = 0;\n
    cgc_bzero(&v14, 0x400);\n
    v18 = v6;\n
    v7 = &v14;\n
    v9 = v18[1];\n
    v10 = v18[0];\n
    v8 = v11 - 7757;\n
    v0 = v18[2];\n
    v1 = v18[3];\n
    v2 = v18[4];\n
    v3 = v18[5];\n
    v4 = v18[6];\n
    v5 = v10;\n
    cgc_sprintf(v7, v8);\n
    v13 = cgc_strlen(&v14);\n
    v19 = cgc_transmit_all(1, &v14, v13);\n
    v12 = v19;\n
    if (v19)\n
    {\n
        v19 = cgc__terminate();\n
        return v19;\n
    }\n
    return v19;\n
}\n
", "4223470:sub_4071ee": null, "4223472:cgc_sendMenuInstruction": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendMenuInstruction()\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x42c]\n
    unsigned int v2;  // [bp-0x428]\n
    char v3[10];  // [bp-0x420]\n
    unsigned int v4;  // [bp-0x41c]\n
    void* v5;  // [bp-0x418], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x414], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x410]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp+0x4]\n
    unsigned int v10;  // edi\n
    char v11[10];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
\n
    v8 = v10;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v3[0]) = &v9;\n
    v6 = 0;\n
    v5 = 0;\n
    cgc_bzero(&v7, 0x400);\n
    v11 = v3;\n
    v13 = v11[9];\n
    v14 = v11[0];\n
    v0 = v11[8];\n
    v1 = v13;\n
    v2 = v14;\n
    cgc_sprintf(&v7, \"Menu\\n
-----\\n
Play game: !C\\n
Get instructions: !C\\n
High Scores: !C\\n
Quit game: !C\\n
\");\n
    v6 = cgc_strlen(&v7);\n
    v15 = cgc_transmit_all(1, &v7, v6);\n
    v5 = v15;\n
    if (v15)\n
    {\n
        v15 = cgc__terminate();\n
        return v15;\n
    }\n
    return v15;\n
}\n
", "4223730:sub_4072f2": null, "4223744:cgc_playGame": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    unsigned int field_8;\n
    void* field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[7];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_playGame(struct_1 *v9)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v6;  // [bp-0xd]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_0 *v11;  // edx\n
\n
    v8 = v10;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    cgc_sendCurrentDungeonView(v9->field_c);\n
    while (true)\n
    {\n
        v6 = cgc_getMove();\n
        if (v6 == v9->field_0)\n
        {\n
            v7 = 3;\n
            return v7;\n
        }\n
        v5 = cgc_makeMove(v9, v6);\n
        if (v5 == 1)\n
        {\n
            cgc_playerWon(v9);\n
            v7 = 1;\n
            return v7;\n
        }\n
        else if (v5 == 2)\n
        {\n
            v11 = v9;\n
            v3 = v11->field_14;\n
            v2 = v11->field_10;\n
            v1 = v11->field_c;\n
            v0 = v11->field_8;\n
            cgc_playerDied();\n
            v7 = 2;\n
            return v7;\n
        }\n
    }\n
}\n
", "4223989:sub_4073f5": null, "4224000:cgc_sendHighScores": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendHighScores(struct_1 *v10)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    struct_2 *v2;  // [bp-0x68]\n
    struct_2 *v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    struct_0 *v5;  // [bp-0x5c]\n
    unsigned int v6;  // [bp-0x58]\n
    struct_1 *v7;  // [bp-0x54]\n
    char v8;  // [bp-0x4d]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
\n
    v9 = v11;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v8, 61);\n
    v7 = v10;\n
    v6 = 2;\n
    if (!v7)\n
    {\n
        v12 = cgc_transmit_all(1, v4 - 7577, cgc_strlen(v4 - 7577));\n
        if (!v12)\n
            return v12;\n
        v12 = cgc__terminate();\n
    }\n
    else\n
    {\n
        v0 = v7->field_0;\n
        cgc_sprintf(&v8, v4 - 7560);\n
        v3 = &v8;\n
        if (cgc_transmit_all(1, v3, cgc_strlen(&v8)))\n
            cgc__terminate();\n
        if (cgc_transmit_all(1, v4 - 7527, cgc_strlen(v4 - 7527)))\n
            cgc__terminate();\n
        v12 = v7->field_8;\n
        while (true)\n
        {\n
            v5 = v12;\n
            if (!v5)\n
                break;\n
            cgc_bzero(&v8, 61);\n
            v0 = v5->field_4;\n
            v1 = v5->field_0;\n
            cgc_sprintf(&v8, v4 - 7465);\n
            v6 += 1;\n
            v2 = &v8;\n
            if (cgc_transmit_all(1, v2, cgc_strlen(&v8)))\n
                cgc__terminate();\n
            v12 = v5->field_8;\n
        }\n
        return v12;\n
    }\n
}\n
", "4224524:sub_40760c": null, "4224528:cgc_initScoreboard": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initScoreboard(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_malloc(12);\n
    if (!v1)\n
        cgc__terminate();\n
    cgc_bzero(v1, 12);\n
    v1[0] = cgc_getRandomName();\n
    v1[1] = 600;\n
    v1[2] = 0;\n
    v3->field_14 = cgc_insertNewScore(v3->field_14, v1);\n
    v1[0] = cgc_malloc(12);\n
    if (!v1)\n
        cgc__terminate();\n
    cgc_bzero(v1, 12);\n
    v1[0] = cgc_getRandomName();\n
    v1[1] = 601;\n
    v1[2] = 0;\n
    v3->field_14 = cgc_insertNewScore(v3->field_14, v1);\n
    v1[0] = cgc_malloc(12);\n
    if (!v1)\n
        cgc__terminate();\n
    cgc_bzero(v1, 12);\n
    v1[0] = cgc_getRandomName();\n
    v1[1] = 999999;\n
    v1[2] = 0;\n
    v3->field_14 = cgc_insertNewScore(v3->field_14, v1);\n
    v5 = v2;\n
    return v3;\n
}\n
", "4224949:sub_4077b5": null, "4224960:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v16, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x30]\n
    void* v6;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x25]\n
    char v8;  // [bp-0x24]\n
    char v9;  // [bp-0x20]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x18]\n
    char v12;  // [bp-0x14]\n
    char v13;  // [bp-0x10]\n
    void* v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
\n
    v15 = v17;\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    cgc_buildDungeon(&v8);\n
    cgc_initScoreboard(&v8);\n
    while (true)\n
    {\n
        v4 = *(&v13);\n
        v3 = *(&v12);\n
        v2 = *(&v11);\n
        v1 = *(&v10);\n
        v0 = *(&v9);\n
        cgc_sendMenuInstruction();\n
        v7 = cgc_getMove();\n
        if (v7 == (&v9)[3])\n
        {\n
            v6 = cgc_playGame(&v8);\n
            if (v6 == 3)\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
            cgc_destroyDungeon(&v8);\n
            cgc_buildDungeon(&v8);\n
        }\n
        else if (v7 == v10)\n
        {\n
            v4 = *(&v13);\n
            v3 = *(&v12);\n
            v2 = *(&v11);\n
            v1 = *(&v10);\n
            v0 = *(&v9);\n
            cgc_sendGameDescription();\n
        }\n
        else if (v7 == (&v10)[1])\n
        {\n
            cgc_sendHighScores(*(&v13));\n
        }\n
        else if (v7 == v8)\n
        {\n
            v14 = 0;\n
            return v14;\n
        }\n
    }\n
}\n
", "4225336:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}