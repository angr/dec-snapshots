{"4198400:_init": "extern struct_0 *g_405868;\n
\n
int _init()\n
{\n
    if (g_405868)\n
    {\n
        g_405868();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198560:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198576:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198592:sub_4010c0": "int sub_4010c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198598:sub_4010c6": null, "4198608:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198651:sub_4010fb": null, "4198652:sub_4010fc": "int sub_4010fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198656:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198660:sub_401104": null, "4198672:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18271;\n
    v6 = v5 + 167139;\n
    v7 = v5 + 167139;\n
    if (v7 == v6)\n
        return v5 + 167139;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198723:sub_401143": "int sub_401143()\n
{\n
}\n
", "4198729:sub_401149": "int sub_401149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198736:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18207;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 167139;\n
    v9 = (v6 + 167139 - (v6 + 167139) >> 31) + (167139 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198807:sub_401197": "int sub_401197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198816:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405864;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405864)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198891:sub_4011eb": "int sub_4011eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198896:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198905:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198909:sub_4011fd": null, "4198912:cgc_promptc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptc(unsigned int v4, unsigned short a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v1 = \"XW\";\n
    v2 = a1;\n
    v0 = cgc_strlen();\n
    if (cgc_sendall(1, v2) < 0)\n
        cgc__terminate();\n
    v0 = a0;\n
    v6 = cgc_recvline(0, v4);\n
    if (v6 >= 0)\n
        return v6;\n
    v0 = 30;\n
    if (cgc_sendline(1, v1 - 6252) < 0)\n
        cgc__terminate();\n
    v6 = cgc__terminate();\n
    return v6;\n
}\n
", "4199130:sub_4012da": null, "4199136:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"XW\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(v5, a0, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a0 = v3 + a0;\n
            v2 = v3 + v2;\n
            a1 -= v3;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199347:sub_4013b3": null, "4199360:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4199412:sub_4013f4": null, "4199424:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = \"XW\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 10)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 10)\n
        {\n
            v4 = -2;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4199687:sub_401507": null, "4199696:cgc_sendline": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendline(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"XW\";\n
    v2 = cgc_sendall(v5, a0, a1);\n
    if (v2 < 0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = &a1;\n
    if (cgc_transmit(v5, v1 - 5623, 1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 += 1;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4199857:sub_4015b1": null, "4199872:cgc_recv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // ecx\n
\n
    v1 = \"XW\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4200079:sub_40168f": null, "4200080:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); a0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        v0 += 1;\n
    }\n
    v3 = v0;\n
    v0 = v3 + 1;\n
    *(v3) = 0;\n
    return v0 - v1 - 1;\n
}\n
", "4200171:sub_4016eb": null, "4200176:cgc_strncpy": "int cgc_strncpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = v2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - v2 < a1)\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    v3 = v1;\n
    v1 = v3 + 1;\n
    *(v3) = 0;\n
    return v1 - v2 - 1;\n
}\n
", "4200313:sub_401779": null, "4200320:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"XW\";\n
    for (v1 = v2; *(v1); v1 += 1);\n
    cgc_strcpy(v1, a0);\n
    return v2;\n
}\n
", "4200410:sub_4017da": null, "4200416:cgc_streq": "int cgc_streq(char *v3, char *a0)\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(a0);\n
    v2 = v0 & 1;\n
    return v2;\n
}\n
", "4200588:sub_40188c": null, "4200592:cgc_startswith": "int cgc_startswith(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
        {\n
            v1 = !*(a0);\n
            return v1;\n
        }\n
        if (*(v2) != *(a0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
}\n
", "4200738:sub_401922": null, "4200752:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4201025:sub_401a41": null, "4201040:cgc_str2uint": "int cgc_str2uint(unsigned int v5)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 10;\n
    if (!v5)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (v0[v5] != 48 && v0[v5] != 49 && v0[v5] != 50 && v0[v5] != 51 && v0[v5] != 52 && v0[v5] != 53 && v0[v5] != 54 && v0[v5] != 55 && v0[v5] != 56 && v0[v5] != 57)\n
            break;\n
        v3 *= 10;\n
        v2 = *((v5 + v0)) - 48;\n
        v3 = v2 + v3;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4201380:sub_401ba4": null, "4201392:cgc_memset": "int cgc_memset(unsigned int v1, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v1;\n
}\n
", "4201458:sub_401bf2": null, "4201472:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v1;\n
}\n
", "4201544:sub_401c48": null, "4201552:cgc_b2hex": "int cgc_b2hex(char v0, char a0[3])\n
{\n
    if (v0 >> 4 < 10)\n
        a0[0] = (v0 >> 4) + 48;\n
    else\n
        a0[0] = (v0 >> 4) - -55;\n
    if ((v0 & 15) < 10)\n
        a0[1] = (v0 & 15) + 48;\n
    else\n
        a0[1] = (v0 & 15) - -55;\n
    a0[2] = 0;\n
    return a0;\n
}\n
", "4201691:sub_401cdb": null, "4201696:cgc_strchr": "int cgc_strchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4201784:sub_401d38": null, "4201792:cgc_list": "typedef struct struct_1 {\n
    char padding_0[668560];\n
    struct struct_0 *field_a3390;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_2 *v1;  // [bp-0x24]\n
    struct_1 *v2;  // [bp-0x20]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x17]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct struct_0 **v9;  // eax, Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebx\n
\n
    v6 = v8;\n
    v2 = &\"XW\";\n
    v5 = 1;\n
    memset(&v4, 0, 11);\n
    v9 = v2->field_a3390;\n
    while (true)\n
    {\n
        v3 = v9;\n
        if (!v3)\n
            break;\n
        v10 = v5;\n
        v5 = v10 + 1;\n
        cgc_int2str(&v4, 11, v10);\n
        v1 = &v4;\n
        if (cgc_sendall(1, v1, cgc_strlen(&v4)) < 0)\n
            cgc__terminate();\n
        if (cgc_sendall(1, &v2->padding_0[6221], 3) < 0)\n
            cgc__terminate();\n
        v0 = v3 + 2;\n
        if (cgc_sendline(1, v0, cgc_strlen(v3 + 2)) < 0)\n
            cgc__terminate();\n
        v9 = *(v3);\n
    }\n
    v11 = v6;\n
    return v9;\n
}\n
", "4202134:sub_401e96": null, "4202144:cgc_play": "typedef struct struct_0 {\n
    char padding_0[668552];\n
    unsigned int field_a3388;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_play(char *v4)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1[38];  // [bp-0x10]\n
    char v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    struct_0 *v7;  // ebx\n
    unsigned int v8[38];  // eax\n
\n
    v3 = v5;\n
    v0 = &\"XW\";\n
    if (cgc_streq(v4, \"trolololo A\"))\n
    {\n
        if (cgc_allocate(160, 0))\n
        {\n
            if (cgc_sendline(1, &v0->padding_0[6205], 12) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v7 = v0;\n
        v8 = v1;\n
        v8[37] = v8[37] & 16777215 | 0x41000000;\n
        v1[34] = &v7->padding_0[52];\n
        v1[35] = v7->field_a3388 - 4;\n
        v1[1] = *(&v7->padding_0[48 + v7->field_a3388]);\n
        cgc_decode(v1);\n
        if (v1[36])\n
        {\n
            if (cgc_sendline(1, v1[36], v1[37] & 16777215) < 0)\n
                cgc__terminate();\n
            if (cgc_sendline(1, &v0->padding_0[6192], 17) < 0)\n
                cgc__terminate();\n
            if (cgc_deallocate(v1[36]))\n
            {\n
                if (cgc_sendline(1, &v0->padding_0[6205], 12) < 0)\n
                    cgc__terminate();\n
                cgc__terminate();\n
            }\n
        }\n
        else if (cgc_sendline(1, &v0->padding_0[6174], 24) < 0)\n
        {\n
            cgc__terminate();\n
        }\n
        v6 = cgc_deallocate(v1);\n
        if (!v6)\n
            return v6;\n
        if (cgc_sendline(1, &v0->padding_0[6205], 12) < 0)\n
            cgc__terminate();\n
        v6 = cgc__terminate();\n
    }\n
    else\n
    {\n
        *(&v2) = cgc_strchr(v4, 32);\n
        if (!v2)\n
        {\n
            v6 = cgc_sendline(1, &v0->padding_0[6174], 24);\n
            if (v6 >= 0)\n
                return v6;\n
            v6 = cgc__terminate();\n
        }\n
        else\n
        {\n
            v2[0] = 0;\n
            if (v2[1] && !v2[2])\n
            {\n
                v2 = &v2[1];\n
                v1[0] = cgc_get_video_by_name();\n
                if (!v1)\n
                {\n
                    v6 = cgc_sendline(1, &v0->padding_0[6174], 24);\n
                    if (v6 >= 0)\n
                        return v6;\n
                    v6 = cgc__terminate();\n
                }\n
                else\n
                {\n
                    cgc_decode(v1);\n
                    if (v1[36])\n
                    {\n
                        if (cgc_sendline(1, v1[36], v1[37] & 16777215) < 0)\n
                            cgc__terminate();\n
                        v6 = cgc_sendline(1, &v0->padding_0[6192], 17);\n
                        if (v6 >= 0)\n
                            return v6;\n
                        v6 = cgc__terminate();\n
                    }\n
                    else\n
                    {\n
                        v6 = cgc_sendline(1, &v0->padding_0[6174], 24);\n
                        if (v6 >= 0)\n
                            return v6;\n
                        v6 = cgc__terminate();\n
                    }\n
                }\n
            }\n
            v6 = cgc_sendline(1, &v0->padding_0[6174], 24);\n
            if (v6 >= 0)\n
                return v6;\n
            v6 = cgc__terminate();\n
        }\n
    }\n
}\n
", "4203385:sub_402379": null, "4203392:cgc_get_video_by_name": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *vhead;\n
\n
int cgc_get_video_by_name(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct struct_0 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"XW\";\n
    v1 = &vhead->field_0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (cgc_streq(v1 + 2, v3))\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = *(v1);\n
    }\n
}\n
", "4203509:sub_4023f5": null, "4203520:cgc_add": "typedef struct struct_2 {\n
    char padding_0[668560];\n
    struct struct_1 *field_a3390;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[128];\n
    unsigned int field_88;\n
    unsigned int field_8c;\n
    char padding_90[4];\n
    unsigned int field_94;\n
    unsigned int field_98;\n
    char field_9c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add(char *v8)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x22]\n
    char v3;  // [bp-0x1f]\n
    struct struct_1 **v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x10]\n
    struct struct_1 **v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
    struct_0 *v11;  // eax\n
\n
    v7 = v9;\n
    v0 = &\"XW\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    memset(&v3, 0, 11);\n
    memset(&v2, 0, 3);\n
    v4 = &v0->field_a3390->field_0;\n
    if (cgc_strlen(v8) <= 127 && !(!cgc_strlen(v8)))\n
        goto LABEL_4024ea;\n
    if (cgc_sendline(1, &v0->padding_0[6252], 30) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4024ea:\n
    if (!cgc_get_video_by_name(v8) && !cgc_strchr(v8, 32))\n
    {\n
        if (cgc_sendall(1, &v0->padding_0[6116], 8) < 0)\n
            cgc__terminate();\n
        if (cgc_recvline(0, &v3, 10) < 0)\n
        {\n
            if (cgc_sendline(1, &v0->padding_0[6252], 30) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v1 = cgc_str2uint(&v3);\n
        if (v1 <= 0x20400 && v1 >= 8 && !(v1 & 3))\n
            goto LABEL_402687;\n
        if (cgc_sendline(1, &v0->padding_0[6252], 30) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
LABEL_402687:\n
        if (cgc_allocate(v1 + 160, 0))\n
        {\n
            if (cgc_sendline(1, &v0->padding_0[6205], 12) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v11 = v5;\n
        v11->field_94 = v11->field_94 & 16777215 | 0x42000000;\n
        cgc_b2hex(v5->field_94 >> 24, &v2);\n
        if (cgc_sendall(1, &v0->padding_0[6107], 31) < 0)\n
            cgc__terminate();\n
        if (cgc_sendline(1, &v2, 2) < 0)\n
            cgc__terminate();\n
        v5->field_9c = 1;\n
        cgc_strcpy(&v5->padding_8, v8);\n
        if (cgc_recv(0, &v5[1].field_0 + 3, v1) < 0)\n
        {\n
            if (cgc_sendline(1, &v0->padding_0[6252], 30) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v5->field_8c = v1 - 4;\n
        v5->field_88 = &v5[1].field_0 + 3;\n
        for (v5->field_98 = *((v5->field_88 + v1 - 4)); v4; v4 = *(v4))\n
        {\n
            v6 = v4;\n
        }\n
        if (!v0->field_a3390)\n
            v0->field_a3390 = &v5->field_0;\n
        if (v6)\n
        {\n
            *(v6) = v5;\n
            v5->field_4 = v6;\n
        }\n
        v5->field_4 = v6;\n
        v10 = v5;\n
        *(v10) = 0;\n
        return v5;\n
    }\n
    v10 = cgc_sendline(1, &v0->padding_0[6149], 32);\n
    if (v10 < 0)\n
        v10 = cgc__terminate();\n
    return v10;\n
}\n
", "4204776:sub_4028e8": null, "4204784:cgc_remove": "typedef struct struct_0 {\n
    char padding_0[668560];\n
    unsigned int field_a3390;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_3 *field_4;\n
    char padding_8[136];\n
    unsigned int field_90;\n
    char padding_94[8];\n
    char field_9c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove(char *v3)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_2 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &\"XW\";\n
    v1 = cgc_get_video_by_name(v3);\n
    if (!v1)\n
    {\n
        v5 = cgc_sendline(1, &v0->padding_0[6174], 24);\n
        if (v5 >= 0)\n
            return v5;\n
        v5 = cgc__terminate();\n
    }\n
    else if (!v1->field_9c)\n
    {\n
        v5 = cgc_sendline(1, &v0->padding_0[6174], 24);\n
        if (v5 >= 0)\n
            return v5;\n
        v5 = cgc__terminate();\n
    }\n
    else\n
    {\n
        if (v1->field_0)\n
            v1->field_0->field_4 = v1->field_4;\n
        if (v1->field_4)\n
            v1->field_4->field_0 = v1->field_0;\n
        else\n
            v0->field_a3390 = v1->field_0;\n
        if (v1->field_90 && cgc_deallocate(v1->field_90))\n
        {\n
            if (cgc_sendline(1, &v0->padding_0[6205], 12) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        if (cgc_deallocate(v1))\n
        {\n
            if (cgc_sendline(1, &v0->padding_0[6205], 12) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v5 = cgc_sendline(1, &v0->padding_0[6075], 62);\n
        if (v5 < 0)\n
        {\n
            v5 = cgc__terminate();\n
            return v5;\n
        }\n
        return v5;\n
    }\n
}\n
", "4205360:cgc_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_quit(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"XW\";\n
    if (cgc_sendline(1, \"God help us, we're in the hands of engineers...\", 47) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
}\n
", "4205456:cgc_decode": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_decode(unsigned int v5[39], char a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char *v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6[39];  // eax, Other Possible Types: unsigned int, char *\n
    unsigned int v7[39];  // eax\n
    unsigned int v8[39];  // eax\n
    unsigned int v9[39];  // eax\n
    char *v10;  // ecx\n
\n
    v0 = \"XW\";\n
    v3 = 0;\n
    if (a0 != v5[37] >> 24)\n
    {\n
        v6 = v5;\n
        if (!(v6[36] && v5))\n
            return v6;\n
        if (cgc_deallocate(v5[36]))\n
        {\n
            if (cgc_sendline(1, v0 - 6205, 12) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v5[36] = 0;\n
        v6 = v5;\n
        v6[37] = v6[37] & -0x1000000;\n
    }\n
    else\n
    {\n
        v7 = v5;\n
        v7[37] = v7[37] & -0x1000000;\n
        for (v4 = 0; v4 < v5[35] >> 2; v4 += 1)\n
        {\n
            v3 = (*((v5[34] + v4 * 4)) ^ (a0 * 0x1000000 | a0 * 0x10000 | a0 * 0x100 | a0)) + v3;\n
        }\n
        v6 = v3;\n
        if (v6 != v5[38])\n
            return v3;\n
        for (v4 = 0; v4 < v5[35]; v4 += 2)\n
        {\n
            v8 = v5;\n
            v8[37] = v8[37] & -0x1000000 | (v8[37] & 16777215) + (v4[v5[34]] ^ v5[37] >> 24) & 16777215;\n
            v9 = v5;\n
            v9[37] = v9[37] & -0x1000000 | (v9[37] & 16777215) + 1 & 16777215;\n
        }\n
        if (cgc_allocate(v5[37] & 16777215, 0))\n
        {\n
            if (cgc_sendline(1, v0 - 6205, 12) < 0)\n
                cgc__terminate();\n
            cgc__terminate();\n
        }\n
        v1 = 0;\n
        v4 = 0;\n
        while (true)\n
        {\n
            v6 = v4;\n
            if (v6 >= v5[35])\n
                break;\n
            for (v2 = 0; v2 <= (v4[v5[34]] ^ v5[37] >> 24); v2 += 1)\n
            {\n
                v10 = v1;\n
                v1 = v10 + 1;\n
                v10[v5[36]] = v4[1 + v5[34]] ^ (v5[37] >> 24);\n
            }\n
            v4 += 2;\n
        }\n
        return v4;\n
    }\n
}\n
", "4206315:sub_402eeb": null, "4206320:main": "typedef struct struct_0 {\n
    char padding_0[668560];\n
    unsigned int field_a3390;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v9, unsigned int a0)\n
{\n
    struct_2 *v0;  // [bp-0x448]\n
    struct struct_1 **v1;  // [bp-0x444]\n
    struct_0 *v2;  // [bp-0x440]\n
    char v3;  // [bp-0x43c]\n
    char v4;  // [bp-0x438]\n
    char v5;  // [bp-0x410]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_0 *v11;  // ebx\n
\n
    v8 = v10;\n
    v2 = &\"XW\";\n
    v7 = 0;\n
    memset(&v5, 0, 0x400);\n
    v11 = v2;\n
    v11->field_a3390 = 0;\n
    memcpy(&v3, &v11->padding_0[324], 40);\n
    if (cgc_sendline(1, &v2->padding_0[5935], 313) < 0)\n
        cgc__terminate();\n
    while (true)\n
    {\n
        cgc_promptc(&v5, 0x400, &v2->padding_0[5621]);\n
        for (v6 = 0; v6 < 5; v6 += 1)\n
        {\n
            if (cgc_startswith(&v5, *(&(&v3)[8 * v6])))\n
            {\n
                v1 = *(&(&v4)[8 * v6]);\n
                v0 = &v5;\n
                cgc_strlen(*(&(&v3)[8 * v6]));\n
                v1();\n
                break;\n
            }\n
        }\n
        if (v6 == 5 && cgc_sendline(1, &v2->padding_0[5616], 3) < 0)\n
            cgc__terminate();\n
    }\n
}\n
", "4206796:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:memcpy": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:memset": null, "5242904:cgc_deallocate": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}