{"4202496:_init": "extern struct_0 *g_40c614;\n
\n
int _init()\n
{\n
    if (g_40c614)\n
    {\n
        g_40c614();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 42251;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 42187;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40c610;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40c610)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_SetFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetFsError(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = FS_ERROR;\n
    if (!FS_ERROR)\n
    {\n
        v0 = 63;\n
        v3 = cgc_strncpy(v1 + 580, v2);\n
    }\n
    return v3;\n
}\n
", "4203791:sub_40250f": null, "4203792:cgc_ClearFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClearFsError()\n
{\n
    FS_ERROR = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4203816:sub_402528": null, "4203824:cgc_FsError": "extern char FS_ERROR;\n
\n
int cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4203847:sub_402547": null, "4203856:cgc_DestroyFilesystem": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DestroyFilesystem()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct struct_2 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[162].padding_0[32]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < v0->field_38->field_4; v1 = v1 + 1)\n
    {\n
        if (*((v0->field_38->field_8 + (v1 << 2))))\n
        {\n
            if (*(*((v0->field_38->field_8 + (v1 << 2)))))\n
            {\n
                cgc_free();\n
                *(*((v0->field_38->field_8 + v1 * 4))) = 0;\n
            }\n
            if (*((*((v0->field_38->field_8 + (v1 << 2))) + 4)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_38->field_8 + v1 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((v0->field_38->field_8 + (v1 << 2))) + 16)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_38->field_8 + v1 * 4)) + 16)) = 0;\n
            }\n
            cgc_free();\n
            *((v0->field_38->field_8 + v1 * 4)) = 0;\n
        }\n
    }\n
    cgc_free();\n
    v0->field_38 = 0;\n
    cgc_ClearFsError();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4204329:sub_402729": null, "4204336:cgc_InitFilesystem": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int FS_ERROR;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitFilesystem(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = 64;\n
    cgc_bzero(&FS_ERROR);\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[162].padding_0[6]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_38)\n
        cgc_DestroyFilesystem();\n
    v6 = cgc_calloc();\n
    v1->field_38 = v6;\n
    if (!v6)\n
    {\n
        cgc_SetFsError(&v1[161].padding_0[43]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v7 = cgc_calloc();\n
    v1->field_38->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_SetFsError(&v1[161].padding_0[43]);\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1->field_38->field_4 = v4;\n
    if (!cgc_Login())\n
    {\n
        cgc_SetFsError(&v1[161].padding_0[29]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_InitPasswd())\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(&v1[161].padding_0[16]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        cgc_bzero(&v1[10].padding_0[44]);\n
        cgc_ClearFsError();\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4204824:sub_402918": null, "4204832:cgc_Login": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Login(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[142].field_3c);\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strlen();\n
    v2 = cgc_calloc();\n
    if (!v2)\n
    {\n
        cgc_SetFsError(&v1[151].padding_0[39]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v4;\n
    cgc_strcpy(v2);\n
    if (v1->field_3c)\n
    {\n
        cgc_free();\n
        v1->field_3c = 0;\n
    }\n
    v1->field_3c = v2;\n
    cgc_ClearFsError();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4205057:sub_402a01": null, "4205072:cgc_InitPasswd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPasswd(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v2 - 9131);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fopen(v2 - 8544);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v2 - 9107);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_fwrite(v2 - 9080, 5, 1);\n
    v1 = v5;\n
    v6 = cgc_strlen(v5, 5, 1);\n
    v0 = v3;\n
    cgc_fwrite(v1, v6, 1);\n
    cgc_fclose(v3, v6, 1);\n
    cgc_ClearFsError();\n
    v4 = 1;\n
    return v4;\n
}\n
", "4205329:sub_402b11": null, "4205344:cgc_Logout": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Logout()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_3c;\n
        cgc_free();\n
    }\n
    v1->field_3c = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4205425:sub_402b71": null, "4205440:cgc_FindFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_38->field_4)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_38->field_8 + (v2 << 2))) && *(*((v1->field_38->field_8 + (v2 << 2)))))\n
        {\n
            v0 = v4;\n
            if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v2 << 2))))))\n
            {\n
                v3 = *((v1->field_38->field_8 + v2 * 4));\n
                return v3;\n
            }\n
        }\n
        v2 = v2 + 1;\n
    }\n
}\n
", "4205655:sub_402c57": null, "4205664:cgc_CreateEmptyFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateEmptyFile(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct struct_2 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[45]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v1->field_3c)\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[28]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((a0 & 153))\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[11]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (cgc_FindFile(v4))\n
    {\n
        cgc_SetFsError(&v1[149].field_3c + 2);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_38->field_4)\n
        {\n
LABEL_402f87:\n
            if (v2 != v1->field_38->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v3 = *((v1->field_38->field_8 + v2 * 4));\n
                return v3;\n
            }\n
            cgc_SetFsError(&v1[149].padding_0[42]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_38->field_8 + (v2 << 2))))\n
        {\n
            v2 = v2 + 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_calloc();\n
            *((v1->field_38->field_8 + v2 * 4)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(&v1[151].padding_0[39]);\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_strlen();\n
            v6 = cgc_calloc();\n
            *(*((v1->field_38->field_8 + v2 * 4))) = v6;\n
            if (!v6)\n
            {\n
                cgc_SetFsError(&v1[151].padding_0[39]);\n
                cgc_free();\n
                *((v1->field_38->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v4;\n
            cgc_strcpy(*(*((v1->field_38->field_8 + v2 * 4))));\n
            v7 = cgc_calloc(5);\n
            *((*((v1->field_38->field_8 + v2 * 4)) + 4)) = v7;\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v1[151].padding_0[39]);\n
                cgc_free();\n
                *(*((v1->field_38->field_8 + v2 * 4))) = 0;\n
                cgc_free();\n
                *((v1->field_38->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v8 = v1;\n
            v0 = v8->field_3c;\n
            cgc_strcpy(*((*((v8->field_38->field_8 + v2 * 4)) + 4)));\n
            v9 = v1;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 8)) = a0;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 12)) = 0;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 16)) = 0;\n
            goto LABEL_402f87;\n
            goto LABEL_402f87;\n
        }\n
    }\n
}\n
", "4206560:cgc_fopen": "typedef struct struct_1 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_fopen(unsigned int v5, char *a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[152].padding_0[24]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v5 && a0)\n
    {\n
        if (cgc_strlen() > 1)\n
        {\n
            cgc_SetFsError(&v0[150].padding_0[11]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            cgc_SetFsError(&v0[150].padding_0[11]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v0->field_3c)\n
        {\n
            cgc_SetFsError(&v0[150].padding_0[28]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_FindFile(v5);\n
        if (!v2 && *(a0) == 114)\n
        {\n
            cgc_SetFsError(&v0[149].padding_0[2]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2)\n
        {\n
            for (v3 = 0; v3 < 8; v3 += 1)\n
            {\n
                if (*(&v0[10].padding_0[4 + 4 * v3]) && *(*(&v0[10].padding_0[4 + 4 * v3])) == v2)\n
                {\n
                    cgc_SetFsError(&v0[148].padding_0[44]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (v2 && cgc_strcmp(v0->field_3c))\n
        {\n
            if (cgc_strcmp(v2->field_4))\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 64))\n
                {\n
                    cgc_SetFsError(&v0[148].padding_0[23]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 96))\n
                {\n
                    cgc_SetFsError(&v0[148].padding_0[23]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 4))\n
                {\n
                    cgc_SetFsError(&v0[148].padding_0[23]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 6))\n
                {\n
                    cgc_SetFsError(&v0[148].padding_0[23]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v1 = cgc_calloc();\n
        if (!v1)\n
        {\n
            cgc_SetFsError(&v0[151].padding_0[39]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 += 1)\n
        {\n
            if (!*((644 + &v0->padding_0[0] + 0x4 * v3)))\n
            {\n
                *(&v0[10].padding_0[4 + 4 * v3]) = v1;\n
                break;\n
            }\n
        }\n
        if (v3 == 8)\n
        {\n
            cgc_SetFsError(&v0[148].padding_0[5]);\n
            cgc_free();\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 4;\n
            v1->field_8 = 0;\n
        }\n
        else if (v2)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
            v1->field_0->field_c = 0;\n
            if (v1->field_0->field_10)\n
            {\n
                cgc_free();\n
                v1->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v2 = cgc_CreateEmptyFile(v5, 6);\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[147].padding_0[44]);\n
                *(&v0[10].padding_0[4 + 4 * v3]) = 0;\n
                cgc_free();\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
        }\n
        cgc_ClearFsError();\n
        v4 = v1;\n
        return v4;\n
    }\n
    cgc_SetFsError(&v0[149].padding_0[27]);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207864:sub_4034f8": null, "4207872:cgc_fclose": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 9430);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 644)) == v3)\n
            *((v0 + v1 * 4 + 644)) = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4208045:sub_4035ad": null, "4208048:cgc_fread": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            cgc_SetFsError(v1 - 9378);\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v4 = a2;\n
            v4->field_8 = a2->field_0->field_c - a2->field_8 + v4->field_8;\n
            cgc_ClearFsError();\n
            v2 = a2->field_0->field_c - a2->field_8;\n
            return v2;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a1 * a0 + v5->field_8;\n
            cgc_ClearFsError();\n
            v2 = a1 * a0;\n
            return v2;\n
        }\n
    }\n
    cgc_SetFsError(v1 - 9409);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4208395:sub_40370b": null, "4208400:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v4, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[5];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a2)\n
    {\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(v1 - 9703);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            cgc_memcpy(v2, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        cgc_memcpy(v2 + *(a2)->field_c, v4);\n
        v5 = *(a2);\n
        v5[3] = a1 * a0 + v5[3];\n
        if (*(a2)->field_10)\n
            cgc_free();\n
        *(a2)->field_10 = v2;\n
        cgc_ClearFsError();\n
        v3 = a1 * a0;\n
        return v3;\n
    }\n
    cgc_SetFsError(v1 - 9409);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4208735:sub_40385f": null, "4208736:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    struct_2 *v6;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        cgc_SetFsError(v1 - 9366);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(v1 - 9351);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        cgc_SetFsError(v1 - 9378);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v2 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = a1->field_0->field_10;\n
            v6 = a1;\n
            v7 = v6->field_8;\n
            v6->field_8 = v7 + 1;\n
            tmp_50 = v5[v7];\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            *((v4 + v8)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v4 + v2)) = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(v1 - 9378);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209117:sub_4039dd": null, "4209120:cgc_ListFiles": "typedef struct struct_1 {\n
    char padding_0[56];\n
    struct struct_2 *field_38;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_ListFiles(unsigned int *v16)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_1 *v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1d]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x1b]\n
    char v12;  // [bp-0x1a]\n
    char v13;  // [bp-0x19]\n
    struct struct_0 **v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x11]\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // eax\n
    struct_1 *v25;  // eax\n
    struct_1 *v26;  // ebx\n
    struct_1 *v27;  // eax\n
    struct_1 *v28;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[162].padding_0[32]);\n
        v15 = 0;\n
        return v15;\n
    }\n
    if (v16)\n
    {\n
        v8 = 79;\n
        for (v14 = 0; v14 < v1->field_38->field_4; v14 += 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v14 << 2))))\n
            {\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                if (!*((*((v1->field_38->field_8 + (v14 << 2))) + 12)))\n
                {\n
                    v8 += 8;\n
                }\n
                else\n
                {\n
                    v4 = *((*((v1->field_38->field_8 + v14 * 4)) + 12));\n
                    v5 = 0;\n
                    v18 = ftop<4> - 1;\n
                    if ([D] GetI(136:I8x8)[t36,0])\n
                    {\n
                        v19 = v18 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v19 = v18 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(136:I8x8)[t6,0] = 0x00\n
                    v20 = v19 + 1;\n
                    cgc_log10();\n
                    [D] PutI(72:F64x8)[t18,0] = t21\n
                    [D] PutI(136:I8x8)[t18,0] = 0x01\n
                    [D] PutI(72:F64x8)[t28,1] = t29\n
                    [D] PutI(136:I8x8)[t28,1] = 0x01\n
                    [D] PutI(136:I8x8)[t28,0] = 0x00\n
                    v22 = v20 - 1 + 1;\n
                    v3 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-62, size=2, endness=Iend_LE)))));\n
                    v2 = v3 | 0xc00;\n
                    v6 = ([D] GetI(136:I8x8)[t74,0] ? [D] GetI(72:F64x8)[t74,0] : nan);\n
                    [D] PutI(136:I8x8)[t74,0] = 0x00\n
                    v23 = v22 + 1;\n
                    v7 = v6;\n
                    if (v7 >= 8)\n
                        v8 = v7 + v8;\n
                    else\n
                        v8 += 8;\n
                }\n
                v8 += 6;\n
            }\n
        }\n
        v24 = cgc_calloc();\n
        *(v16) = v24;\n
        if (!v24)\n
        {\n
            cgc_SetFsError(&v1[161].padding_0[43]);\n
            v15 = 0;\n
            return v15;\n
        }\n
    }\n
    if (!v16)\n
    {\n
        v26 = v1;\n
        cgc_printf(&v26[155].padding_0[38], &v26[155].padding_0[15], &v26[155].padding_0[6], v26 + 155);\n
    }\n
    else\n
    {\n
        v25 = v1;\n
        v0 = &v25[154].padding_0[55];\n
        cgc_sprintf(*(v16), &v25[155].padding_0[38], &v25[155].padding_0[15], &v25[155].padding_0[6], v25 + 155);\n
    }\n
    for (v14 = 0; v14 < v1->field_38->field_4; v14 += 1)\n
    {\n
        if (*((v1->field_38->field_8 + (v14 << 2))))\n
        {\n
            if (!v16)\n
            {\n
                v28 = v1;\n
                cgc_printf(&v28[154].padding_0[48], *(*((v28->field_38->field_8 + v14 * 4))), *((*((v28->field_38->field_8 + v14 * 4)) + 4)));\n
            }\n
            else\n
            {\n
                v27 = v1;\n
                v0 = *((*((v27->field_38->field_8 + v14 * 4)) + 12));\n
                cgc_sprintf(*(v16), &v1[154].padding_0[50], *(v16), *(*((v27->field_38->field_8 + v14 * 4))), *((*((v27->field_38->field_8 + v14 * 4)) + 4)));\n
            }\n
            cgc_memset(&v9, 45);\n
            v13 = 0;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 4))\n
                v9 = 114;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 6))\n
                v10 = 119;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 64))\n
                v11 = 114;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 96))\n
                v12 = 119;\n
            if (!v16)\n
                cgc_printf(&v1[155].padding_0[21]);\n
            else\n
                cgc_sprintf(*(v16), &v1[154].padding_0[30], *(v16));\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v15 = 1;\n
    return v15;\n
}\n
", "4210357:sub_403eb5": null, "4210368:cgc_DeleteFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DeleteFile(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct struct_2 **v3;  // [bp-0x14]\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[152].padding_0[24]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6)\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[45]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v1->field_3c)\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[28]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v4 = 0; v4 < v1->field_38->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v4 << 2))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                {\n
                    v2[0] = *((v1->field_38->field_8 + v4 * 4));\n
                    v3 = v4;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v4 == v1->field_38->field_4)\n
        {\n
            cgc_SetFsError(&v1[149].padding_0[2]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v4 = 0; v4 < 8; v4 = v4 + 1)\n
        {\n
            if (*((644 + &v1->padding_0[0] + 0x4 * v4)) && *(*((644 + &v1->padding_0[0] + 0x4 * v4))) == v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        v7 = v1;\n
        v0 = &v7[143].padding_0[1];\n
        if (cgc_strcmp(v7->field_3c))\n
        {\n
            v0 = v2[1];\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[148].padding_0[23]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_free();\n
        if (v2[1])\n
            cgc_free();\n
        if (v2[4])\n
            cgc_free();\n
        cgc_free();\n
        *((v1->field_38->field_8 + v3 * 4)) = 0;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4211033:sub_404159": null, "4211040:cgc_RenameFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RenameFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    if (v6 && a0)\n
    {\n
        for (v4 = 0; v4 < v1->field_38->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v4 << 2))) && *(*((v1->field_38->field_8 + (v4 << 2)))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                    v3[0] = *((v1->field_38->field_8 + v4 * 4));\n
                v0 = a0;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                {\n
                    cgc_SetFsError(&v1[144].padding_0[46]);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[144].padding_0[14]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v1;\n
        v0 = &v7[143].padding_0[1];\n
        if (cgc_strcmp(v7->field_3c))\n
        {\n
            v0 = *((v3 + 4));\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[148].padding_0[23]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_strlen();\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[151].padding_0[39]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a0;\n
        cgc_strcpy(v2);\n
        cgc_free(*(v3));\n
        *(v3) = v2;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_SetFsError(&v1[150].padding_0[45]);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211627:sub_4043ab": null, "4211632:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeMode(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[143].padding_0[56]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v2 = cgc_FindFile(v4);\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[143].padding_0[43]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v1;\n
        v0 = &v5[143].padding_0[1];\n
        if (cgc_strcmp(v5->field_3c))\n
        {\n
            v0 = v2->field_4;\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[148].padding_0[23]);\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        v2->field_8 = a0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[11]);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4211921:sub_4044d1": null, "4211936:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeOwner(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_0 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        cgc_SetFsError(&v1[150].padding_0[45]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v6 = v1;\n
        v0 = &v6[143].padding_0[1];\n
        if (cgc_strcmp(v6->field_3c))\n
        {\n
            cgc_SetFsError(&v1[143].padding_0[9]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_FindFile(v5);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[143].padding_0[43]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_UserExists())\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v1[151].padding_0[39]);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = a0;\n
            cgc_strcpy(v2);\n
            if (v3->field_4)\n
                cgc_free();\n
            v3->field_4 = v2;\n
            cgc_ClearFsError();\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(&v1[143].padding_0[56]);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[143].padding_0[23]);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4212346:sub_40467a": null, "4212352:cgc_UserExists": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UserExists(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    char v2;  // [bp-0x90]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v0 - 9148);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v3 = cgc_fopen(v6 - 8544, v6 - 9353);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 9107);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!cgc_fgets(&v2, 127, v3))\n
        {\n
            cgc_fclose(v3);\n
            cgc_ClearFsError();\n
            v4 = 0;\n
            return v4;\n
        }\n
        v1 = cgc_strtok(&v2);\n
        if (!v1)\n
        {\n
            cgc_SetFsError(v0 - 9074);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_strcmp(v1))\n
        {\n
            cgc_fclose(v3);\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4212728:sub_4047f8": null, "4212736:cgc_Uid": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Uid()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_3c;\n
        v3 = cgc_puts();\n
    }\n
    return v3;\n
}\n
", "4212794:sub_40483a": null, "4212800:cgc_AddUser": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddUser(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct_1 *v2;  // [bp-0xa8]\n
    struct_1 *v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    struct_0 *v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x98]\n
    struct struct_0 **v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v5[142].field_3c);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v5[141].padding_0[22]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v5->field_3c))\n
    {\n
        cgc_SetFsError(&v5[143].padding_0[9]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[142].field_3c);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[141].padding_0[22]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!cgc_UserExists(v10))\n
    {\n
        v11 = v5;\n
        v8 = cgc_fopen(&v11[133].padding_0[32], &v11[146].padding_0[9]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v5[142].padding_0[19]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v5;\n
        v7 = cgc_fopen(&v12[140].padding_0[49], &v12[142].padding_0[21]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v5[140].padding_0[41]);\n
            cgc_fclose(v8);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (cgc_fgets(&v6, 127, v8))\n
            {\n
                v3 = &v6;\n
                v0 = cgc_strlen();\n
                v4 = cgc_fwrite(v3, v0, 1, v7);\n
                if (v4 != cgc_strlen(&v6, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[140].padding_0[10]);\n
                    cgc_DeleteFile(&v5[140].padding_0[49]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                else if (*(&v5 + cgc_strlen()) != 10 && cgc_fwrite(&v5[137].padding_0[33], 1, 1, v7) != 1)\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[140].padding_0[10]);\n
                    cgc_DeleteFile(&v5[140].padding_0[49]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v5[139].padding_0[42];\n
                v1 = v10;\n
                cgc_sprintf(&v6, v0, v1);\n
                v2 = &v6;\n
                cgc_fwrite(v2, cgc_strlen(&v6, v0, v1), 1, v7);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v5[133].padding_0[32]);\n
                v13 = v5;\n
                cgc_RenameFile(&v13[140].padding_0[49], &v13[133].padding_0[32]);\n
                cgc_ClearFsError();\n
                v9 = 1;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v5[141].padding_0[5]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4213966:sub_404cce": null, "4213968:cgc_DeleteUser": "typedef struct struct_1 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteUser(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    struct_0 *v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    struct_1 *v3;  // [bp-0xa0]\n
    struct struct_0 **v4;  // [bp-0x9c]\n
    void* v5;  // [bp-0x98]\n
    char v6;  // [bp-0x91]\n
    unsigned int v7;  // [bp-0x90]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_1 *v11;  // ebx\n
    struct_1 *v12;  // ebx\n
    struct_1 *v13;  // ebx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v3[142].field_3c);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v3->field_3c))\n
    {\n
        cgc_SetFsError(&v3[143].padding_0[9]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v10))\n
    {\n
        v11 = v3;\n
        v5 = cgc_fopen(&v11[133].padding_0[32], &v11[146].padding_0[9]);\n
        if (!v5)\n
        {\n
            cgc_SetFsError(&v3[142].padding_0[19]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v3;\n
        v4 = cgc_fopen(&v12[140].padding_0[49], &v12[142].padding_0[21]);\n
        if (!v4)\n
        {\n
            cgc_SetFsError(&v3[140].padding_0[41]);\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v3[139].padding_0[13]);\n
                        cgc_fclose(v5);\n
                        cgc_fclose(v4);\n
                        cgc_DeleteFile(&v3[140].padding_0[49]);\n
                        v9 = 0;\n
                        return v9;\n
                    }\n
                    cgc_DeleteFile(&v3[133].padding_0[32]);\n
                    v13 = v3;\n
                    cgc_RenameFile(&v13[140].padding_0[49], &v13[133].padding_0[32]);\n
                    cgc_ClearFsError();\n
                    v9 = 1;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen());\n
            v7 = cgc_strtok(&v8);\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v3[141].padding_0[50]);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(&v3[140].padding_0[49]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (cgc_strcmp(v7))\n
            {\n
                (&v8)[cgc_strlen()] = 58;\n
                v1 = &v8;\n
                v0 = cgc_strlen();\n
                v2 = cgc_fwrite(v1, v0, 1, v4);\n
                if (v2 != cgc_strlen(&v8, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v6 = 1;\n
            }\n
        }\n
        cgc_fclose(v5);\n
        cgc_fclose(v4);\n
        cgc_SetFsError(&v3[140].padding_0[10]);\n
        cgc_DeleteFile(&v3[140].padding_0[49]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v3[139].padding_0[36]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4215074:sub_405122": null, "4215088:cgc_ChangePasswd": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangePasswd(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    struct_1 *v2;  // [bp-0xb4]\n
    unsigned int v3;  // [bp-0xb0]\n
    struct_1 *v4;  // [bp-0xac]\n
    unsigned int v5;  // [bp-0xa8]\n
    struct_0 *v6;  // [bp-0xa4]\n
    struct struct_0 **v7;  // [bp-0xa0]\n
    void* v8;  // [bp-0x9c]\n
    char v9;  // [bp-0x95]\n
    unsigned int v10;  // [bp-0x94]\n
    char v11;  // [bp-0x8d]\n
    char v12;  // [bp-0xd]\n
    struct_0 *v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        cgc_SetFsError(&v6[142].field_3c);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v6[141].padding_0[22]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (cgc_strlen() <= 32)\n
    {\n
        if (cgc_strcmp(v6->field_3c) && cgc_strcmp(v6->field_3c))\n
        {\n
            cgc_SetFsError(&v6[138].field_3c + 2);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v14 = v6;\n
        v8 = cgc_fopen(&v14[133].padding_0[32], &v14[146].padding_0[9]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v6[142].padding_0[19]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v15 = v6;\n
        v7 = cgc_fopen(&v15[140].padding_0[49], &v15[142].padding_0[21]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v6[140].padding_0[41]);\n
            cgc_fclose(v8);\n
            v12 = 0;\n
            return v12;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v11, 127, v8))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    if (v9)\n
                    {\n
                        cgc_DeleteFile(&v6[133].padding_0[32]);\n
                        v16 = v6;\n
                        cgc_RenameFile(&v16[140].padding_0[49], &v16[133].padding_0[32]);\n
                        cgc_ClearFsError();\n
                        v12 = 1;\n
                        return v12;\n
                    }\n
                    cgc_SetFsError(&v6[139].padding_0[13]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[140].padding_0[49]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            } while (!cgc_strlen());\n
            v10 = cgc_strtok(&v11);\n
            if (!v10)\n
            {\n
                cgc_SetFsError(&v6[141].padding_0[50]);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v6[140].padding_0[49]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (!cgc_strcmp(v10))\n
            {\n
                v0 = &v6[138].padding_0[23];\n
                v1 = v13;\n
                cgc_sprintf(&v11, v0, v1);\n
                v4 = &v11;\n
                v0 = cgc_strlen(&v11, v0, v1);\n
                v5 = cgc_fwrite(v4, v0, 1, v7);\n
                if (v5 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v6[140].padding_0[10]);\n
                    cgc_DeleteFile(&v6[140].padding_0[49]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                (&v11)[cgc_strlen()] = 58;\n
                v2 = &v11;\n
                v0 = cgc_strlen();\n
                v3 = cgc_fwrite(v2, v0, 1, v7);\n
                if (v3 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_SetFsError(&v6[140].padding_0[10]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[140].padding_0[49]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v6[141].padding_0[22]);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4216508:sub_4056bc": null, "4216512:cgc_CheckPasswd": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckPasswd(unsigned int v10, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xa8]\n
    char v1;  // [bp-0xa1]\n
    void* v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x9c]\n
    char v4;  // [bp-0x95]\n
    unsigned int v5;  // [bp-0x94]\n
    unsigned int v6;  // [bp-0x90]\n
    char v7;  // [bp-0x8a]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_0 *v11;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v0[142].field_3c);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v0[141].padding_0[22]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v0[141].padding_0[22]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        if (!v0->field_3c)\n
        {\n
            cgc_Login(&v0[143].padding_0[1]);\n
            v1 = 1;\n
        }\n
        else if (cgc_strcmp(v0->field_3c))\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[151].padding_0[39]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            cgc_strcpy(v2);\n
            cgc_Logout();\n
            cgc_Login(&v0[143].padding_0[1]);\n
        }\n
        v11 = v0;\n
        v3 = cgc_fopen(&v11[133].padding_0[32], &v11[146].padding_0[9]);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v0[142].padding_0[19]);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v9 = 0;\n
            return v9;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v8, 127, v3))\n
                        {\n
                            cgc_fclose(v3);\n
                            if (!v4)\n
                            {\n
                                cgc_SetFsError(&v0[139].padding_0[13]);\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v9 = 0;\n
                                return v9;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v9 = 0;\n
                                return v9;\n
                            }\n
                        }\n
                    } while (!cgc_strlen());\n
                    if ((&v7)[cgc_strlen()] == 10)\n
                        (&v7)[cgc_strlen()] = 0;\n
                    v6 = cgc_strtok(&v8);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v0[141].padding_0[50]);\n
                        cgc_fclose(v3);\n
                        if (v2)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v2);\n
                            cgc_free();\n
                        }\n
                        if (v1)\n
                            cgc_Logout();\n
                        v9 = 0;\n
                        return v9;\n
                    }\n
                } while (cgc_strcmp(v6));\n
                v5 = cgc_strtok(0);\n
                if (!v5)\n
                {\n
                    cgc_SetFsError(&v0[141].padding_0[50]);\n
                    cgc_fclose(v3);\n
                    if (v2)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v2);\n
                        cgc_free();\n
                    }\n
                    if (v1)\n
                        cgc_Logout();\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            } while (cgc_strcmp(v5));\n
            cgc_ClearFsError();\n
            cgc_fclose(v3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v9 = 1;\n
            return v9;\n
        }\n
    }\n
}\n
", "4218094:sub_405cee": null, "4218096:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 64));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 64)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4218433:sub_405e41": null, "4218448:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[130].padding_0[8]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_40)\n
    {\n
        v7 = v1;\n
        v7->field_40 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4218673:sub_405f31": null, "4218688:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4218759:sub_405f87": null, "4218768:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[64];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_40);\n
    v3[0] = v1->field_40;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4218985:sub_406069": null, "4218992:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4219076:sub_4060c4": null, "4219088:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x2c]\n
    unsigned int *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_40; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4219369:sub_4061e9": null, "4219376:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4219484:sub_40625c": null, "4219488:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v2 = cgc_freelist_alloc(v5);\n
        v4 = v2;\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 64)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 64));\n
        *((v6 + v3 * 4 + 64)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4219779:sub_406383": null, "4219792:cgc_round": null, "4219938:sub_406422": null, "4219952:cgc_floor": null, "4220108:sub_4064cc": null, "4220112:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[804];\n
    unsigned int field_324;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_324 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 = v2 + 1)\n
    {\n
        *((676 + &v0->padding_0[0] + 0x4 * v2)) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[676 + 4 * (v2 + 1 & 31)]);\n
        *((676 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4220335:sub_4065af": null, "4220336:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4220383:sub_4065df": null, "4220384:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4220667:sub_4066fb": null, "4220672:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4220860:sub_4067bc": null, "4220864:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4220965:sub_406825": null, "4220976:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4221010:sub_406852": null, "4221024:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4221116:sub_4068bc": null, "4221120:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221308:sub_40697c": null, "4221312:cgc_printf": "int cgc_printf(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0x8]\n
\n
    v2 = &v4;\n
    v0 = v2;\n
    v1 = cgc_vprintf(v3);\n
    return v1;\n
}\n
", "4221370:sub_4069ba": null, "4221376:cgc_vprintf": "int cgc_vprintf(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = cgc_WRAPPER_PUTC;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = a0;\n
    return cgc_wrapper_output(v2, v3, v1, v6);\n
}\n
", "4221473:sub_406a21": null, "4221488:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_406f69:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_406f69;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 8760)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4222844:sub_406f7c": null, "4222848:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4222917:sub_406fc5": null, "4222928:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4223067:sub_40705b": null, "4223072:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4223344:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4224000:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4226416:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4227082:sub_40800a": null, "4227088:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4227628:sub_40822c": null, "4227632:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4227679:sub_40825f": null, "4227680:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4227717:sub_408285": null, "4227728:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4227965:sub_40837d": null, "4227968:cgc_atof": null, "4228253:sub_40849d": null, "4228256:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4228332:sub_4084ec": null, "4228336:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4228473:sub_408579": null, "4228480:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4228616:sub_408608": null, "4228624:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4228683:sub_40864b": null, "4228688:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4228743:sub_408687": null, "4228752:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4228907:sub_40872b": null, "4228912:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4229070:sub_4087ce": null, "4229072:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[576];\n
    struct struct_1 *field_240;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_240)\n
        {\n
            v6 = v1->field_240;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_240 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_240 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            *((v6 + v3)) = 0;\n
        }\n
        else\n
        {\n
            v1->field_240 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
    }\n
    if (v3 == v2)\n
        v1->field_240 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4229591:sub_4089d7": null, "4229600:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4229950:sub_408b3e": null, "4229952:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4230135:sub_408bf7": null, "4230144:cgc_ReadBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReadBytes(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < a0; v3 = *(&v2) + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, v4 + v3, a0 - v3))\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    return v3;\n
}\n
", "4230311:sub_408ca7": null, "4230320:cgc_SendBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SendBytes(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < a0; v3 = *(&v2) + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_transmit(1, v4 + v3, a0 - v3))\n
            cgc__terminate();\n
        if (*(&v2) != a0 - v3)\n
            cgc__terminate();\n
    }\n
    return v3;\n
}\n
", "4230492:sub_408d5c": null, "4230496:cgc_CallocAndRead": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CallocAndRead(unsigned int *v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    a0 += 1;\n
    v4 = cgc_calloc(a0);\n
    *(v2) = v4;\n
    if (!v4)\n
        cgc__terminate();\n
    a0 -= 1;\n
    return cgc_ReadBytes(*(v2), a0);\n
}\n
", "4230613:sub_408dd5": null, "4230624:cgc_ReceiveRequest": "typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    char field_14;\n
    char padding_15[7];\n
    unsigned int field_1c;\n
    char field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char field_4;\n
    char field_5;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveRequest()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char *v2;  // [bp-0x1c], Other Possible Types: void*\n
    struct_2 *v3;  // [bp-0x18]\n
    char v4;  // [bp-0x12]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
\n
    v5 = v16;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = &v4;\n
    v2 = cgc_calloc(36);\n
    if (!v2)\n
        cgc__terminate();\n
    cgc_ReadBytes(&v4, 1);\n
    *(v2) = v3->field_0;\n
    v0 = v3->field_0;\n
    if (v0 > 6)\n
    {\n
        cgc_free(v2);\n
        v2 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[52] + (stack_base)[56] * 4 - 8604)) + (stack_base)[52];\n
}\n
", "4231255:sub_409057": null, "4231264:cgc_HandleLogin": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleLogin(unsigned int v2[3], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 && a0)\n
    {\n
        if (!cgc_CheckPasswd(v2[1], v2[2]))\n
        {\n
            a0->field_1 = 1;\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (cgc_Login(v2[1]))\n
        {\n
            a0->field_1 = 0;\n
            v1 = 1;\n
            return v1;\n
        }\n
        else\n
        {\n
            a0->field_1 = 2;\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4231434:sub_40910a": null, "4231440:cgc_HandleDir": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleDir(unsigned int v3, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a0)\n
    {\n
        if (cgc_ListFiles(&v1))\n
        {\n
            a0->field_1 = 0;\n
            a0->field_2 = cgc_strlen(v1);\n
            a0->field_4 = v1;\n
            v2 = 1;\n
            return v2;\n
        }\n
        a0->field_1 = 2;\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4231589:sub_4091a5": null, "4231600:cgc_HandleRead": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[12];\n
    unsigned int field_1c;\n
    char field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleRead(struct_1 *v6, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x9c]\n
    char v1;  // [bp-0x98]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 && a0)\n
    {\n
        if (v6->field_c)\n
        {\n
            v4 = cgc_fopen(v6->field_c, v0 - 9353);\n
            if (!v4)\n
            {\n
                a0->field_1 = 3;\n
                v5 = 0;\n
                return v5;\n
            }\n
            for (v3 = 0; v3 < v6->field_1c; v3 = v2 + v3)\n
            {\n
                if (v6->field_1c - v3 <= 128)\n
                {\n
                    v2 = cgc_fread(&v1, v6->field_1c - v3, 1, v4);\n
                    if (!v2)\n
                    {\n
                        a0->field_1 = 2;\n
                        cgc_fclose(v4);\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                }\n
                else\n
                {\n
                    v2 = cgc_fread(&v1, 128, 1, v4);\n
                    if (!v2)\n
                    {\n
                        a0->field_1 = 2;\n
                        cgc_fclose(v4);\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                }\n
            }\n
            v7 = cgc_calloc(v6->field_20);\n
            a0->field_4 = v7;\n
            if (!v7)\n
            {\n
                a0->field_1 = 2;\n
                cgc_fclose(v4);\n
                v5 = 0;\n
                return v5;\n
            }\n
            v2 = cgc_fread(a0->field_4, v6->field_20, 1, v4);\n
            if (!v2)\n
            {\n
                a0->field_1 = 2;\n
                cgc_fclose(v4);\n
                v5 = 0;\n
                return v5;\n
            }\n
            a0->field_2 = v2;\n
            cgc_fclose(v4);\n
            a0->field_1 = 0;\n
            v5 = 1;\n
            return v5;\n
        }\n
        else\n
        {\n
            a0->field_1 = 3;\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4232211:sub_409413": null, "4232224:cgc_HandleWrite": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char field_14;\n
    char padding_15[3];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleWrite(struct_0 *v3, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct struct_0 **v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a0)\n
    {\n
        if (v3->field_c)\n
        {\n
            v1 = cgc_fopen(v3->field_c, v0 - 9109);\n
            if (!v1)\n
            {\n
                a0->field_1 = 3;\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (cgc_fwrite(v3->field_18, v3->field_14, 1, v1))\n
            {\n
                cgc_fclose(v1);\n
                a0->field_1 = 0;\n
                v2 = 1;\n
                return v2;\n
            }\n
            else\n
            {\n
                a0->field_1 = 2;\n
                cgc_fclose(v1);\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
        else\n
        {\n
            a0->field_1 = 3;\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4232482:sub_409522": null, "4232496:cgc_HandleWriteAppend": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char field_14;\n
    char padding_15[3];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleWriteAppend(struct_1 *v6, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct struct_0 **v1;  // [bp-0x1c]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 && a0)\n
    {\n
        if (v6->field_c)\n
        {\n
            v2 = cgc_fopen(v6->field_c, v0 - 9353);\n
            if (!v2)\n
            {\n
                a0->field_1 = 3;\n
                v5 = 0;\n
                return v5;\n
            }\n
            v3 = *(v2)->field_c;\n
            v4 = cgc_calloc(v3);\n
            if (!v4)\n
            {\n
                a0->field_1 = 2;\n
                cgc_fclose(v2);\n
                v5 = 0;\n
                return v5;\n
            }\n
            else if (cgc_fread(v4, v3, 1, v2) != v3)\n
            {\n
                a0->field_1 = 2;\n
                cgc_free(v4);\n
                cgc_fclose(v2);\n
                v5 = 0;\n
                return v5;\n
            }\n
            else\n
            {\n
                cgc_fclose(v2);\n
                v1 = cgc_fopen(v6->field_c, v0 - 9109);\n
                if (!v1)\n
                {\n
                    a0->field_1 = 2;\n
                    cgc_free(v4);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                else if (cgc_fwrite(v4, v3, 1, v1) != v3)\n
                {\n
                    a0->field_1 = 2;\n
                    cgc_free(v4);\n
                    cgc_fclose(v1);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                else\n
                {\n
                    cgc_free(v4);\n
                    if (!cgc_fwrite(v6->field_18, v6->field_14, 1, v1))\n
                    {\n
                        a0->field_1 = 2;\n
                        cgc_fclose(v1);\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                    cgc_fclose(v1);\n
                    a0->field_1 = 0;\n
                    v5 = 1;\n
                    return v5;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            a0->field_1 = 3;\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4233096:sub_409788": null, "4233104:cgc_HandleDel": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleDel(struct_1 *v2, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 && a0)\n
    {\n
        if (cgc_DeleteFile(v2->field_c))\n
        {\n
            a0->field_1 = 0;\n
            v1 = 1;\n
            return v1;\n
        }\n
        a0->field_1 = 4;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4233223:sub_409807": null, "4233232:cgc_HandleRename": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleRename(unsigned int v2[5], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 && a0)\n
    {\n
        if (cgc_RenameFile(v2[3], v2[4]))\n
        {\n
            a0->field_1 = 0;\n
            v1 = 1;\n
            return v1;\n
        }\n
        a0->field_1 = 5;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4233361:sub_409891": null, "4233376:cgc_HandleRequest": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleRequest()\n
{\n
}\n
", "4233730:sub_409a02": null, "4233744:cgc_SendResponse": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SendResponse(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_SendBytes(v2, 4) != 4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!v2->field_2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else if (cgc_SendBytes(v2->field_4, v2->field_2) == v2->field_2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4233919:sub_409abf": null, "4233920:cgc_FreeRequest": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FreeRequest(unsigned int v2[7])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (v2[1])\n
    {\n
        cgc_free(v2[1]);\n
        v2[1] = 0;\n
    }\n
    if (v2[2])\n
    {\n
        cgc_free(v2[2]);\n
        v2[2] = 0;\n
    }\n
    if (v2[3])\n
    {\n
        cgc_free(v2[3]);\n
        v2[3] = 0;\n
    }\n
    if (v2[4])\n
    {\n
        cgc_free(v2[4]);\n
        v2[4] = 0;\n
    }\n
    if (v2[6])\n
    {\n
        cgc_free(v2[6]);\n
        v2[6] = 0;\n
    }\n
    cgc_free(v2);\n
    v2 = 0;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4234199:sub_409bd7": null, "4234208:cgc_FreeResponse": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FreeResponse(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (v2->field_4)\n
    {\n
        cgc_free(v2->field_4);\n
        v2->field_4 = 0;\n
    }\n
    cgc_free(v2);\n
    v2 = 0;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4234327:sub_409c57": null, "4234336:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v9, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x27]\n
    unsigned int *v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18]\n
    unsigned int v5[7];  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 10;\n
    v3 = 0x4347c000;\n
    if (!cgc_InitFilesystem(v6, \"rootpasswd\"))\n
    {\n
        cgc_puts(cgc_FsError());\n
        cgc__terminate();\n
    }\n
    cgc_seed_prng(*(v3));\n
    cgc_bzero(&v2, 0xb);\n
    for (v1 = 0; v1 < 10; v1 += 1)\n
    {\n
        *(&v2 + v1) = cgc_random_in_range(65, 122);\n
    }\n
    if (!cgc_AddUser(v0 - 9200, &v2))\n
        cgc__terminate();\n
    while (true)\n
    {\n
        v5[0] = cgc_ReceiveRequest();\n
        if (v5)\n
        {\n
            v4 = cgc_HandleRequest();\n
            if (!v4)\n
            {\n
                cgc_FreeRequest(v5);\n
            }\n
            else\n
            {\n
                cgc_SendResponse(v4);\n
                cgc_FreeRequest(v5);\n
                cgc_FreeResponse(v4);\n
            }\n
        }\n
    }\n
}\n
", "4234724:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}