{"4206592:_init": "extern struct_0 *g_40bab0;\n
\n
int _init()\n
{\n
    if (g_40bab0)\n
    {\n
        g_40bab0();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4206704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206720:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206736:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206752:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206768:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206784:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206800:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206816:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206832:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206848:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206864:sub_403110": "int sub_403110()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206870:sub_403116": null, "4206880:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206923:sub_40314b": null, "4206924:sub_40314c": "int sub_40314c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206928:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206932:sub_403154": null, "4206944:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 35155;\n
    v6 = v5 + 18;\n
    v7 = v5 + 18;\n
    if (v7 == v6)\n
        return v5 + 18;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4206995:sub_403193": "int sub_403193()\n
{\n
}\n
", "4207001:sub_403199": "int sub_403199()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207008:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 35091;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 18;\n
    v9 = (v6 + 18 - (v6 + 18) >> 31) + (18 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207079:sub_4031e7": "int sub_4031e7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207088:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40baa4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40baa4)\n
    {\n
        v0 = __dso_handle;\n
        sub_403110();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207163:sub_40323b": "int sub_40323b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207168:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207177:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207181:sub_40324d": null, "4207184:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4207276:sub_4032ac": null, "4207280:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[76];\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_4c->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_4c == v9)\n
        {\n
            v1->field_4c = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_4c == v9)\n
    {\n
        v1->field_4c = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4207963:sub_40355b": null, "4207968:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_4c;\n
    v7->field_4c = v3;\n
    return v3;\n
}\n
", "4208168:sub_403628": null, "4208176:cgc_free": "typedef struct struct_0 {\n
    char padding_0[76];\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: unsigned int, struct struct_1 *[2], struct_0 *, struct struct_1 **\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_4c != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_4c = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_4c;\n
    v2[1] = 0;\n
    if (v9->field_4c)\n
    {\n
        v12 = v1;\n
        *((&v12->field_4c->field_0 + (v12->field_4c->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_4c = v7;\n
    return v1;\n
}\n
", "4208640:cgc_floor": "typedef struct struct_0 {\n
    char padding_0[76];\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: unsigned int, struct struct_1 *[2], struct_0 *, struct struct_1 **\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_4c != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_4c = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_4c;\n
    v2[1] = 0;\n
    if (v9->field_4c)\n
    {\n
        v12 = v1;\n
        *((&v12->field_4c->field_0 + (v12->field_4c->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_4c = v7;\n
    return v1;\n
}\n
", "4208804:sub_4038a4": null, "4208816:cgc_round_away_from_zero": null, "4208970:sub_40394a": null, "4208976:cgc_round": null, "4209120:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4209212:sub_403a3c": null, "4209216:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209425:sub_403b11": null, "4209440:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209633:sub_403be1": null, "4209648:cgc_float_to_str": null, "4210511:sub_403f4f": null, "4210512:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v26, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    void* v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp-0xc]\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!v26)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(v26))\n
    {\n
        if (*(v26) != 64)\n
        {\n
            cgc_putc(*(v26));\n
            v26 += 1;\n
            v24 += 1;\n
LABEL_404824:\n
        }\n
        else\n
        {\n
            v26 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(v26) == 64)\n
            {\n
                cgc_putc(64);\n
                v26 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 45)\n
            {\n
                v19 = 1;\n
                v26 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(v26) == 48)\n
                {\n
                    v20 = 1;\n
                    v26 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
                }\n
            }\n
            if (*(v26) == 46)\n
            {\n
                v26 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
            }\n
            if (*(v26) == 99)\n
            {\n
                v27 = a0;\n
                a0 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                cgc_putc(v16);\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 100)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v15 = *(v28);\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; v14->field_0; v14 += 1)\n
                {\n
                    cgc_putc(v14->field_0);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 120)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v13 = *(v29);\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    cgc_putc(v12->field_0);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    cgc_putc(v10->field_0);\n
                    v24 += 1;\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (!(*(v26) == 115))\n
                goto LABEL_404824;\n
            v35 = a0;\n
            a0 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_4046a3;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_4046a3:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (!v20)\n
                        cgc_putc(32);\n
                    else\n
                        cgc_putc(48);\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                cgc_putc(*(v9));\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            v26 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4212795:sub_40483b": null, "4212800:cgc_vsprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v26, char *a0, struct struct_0 **a1)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    char *v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v25;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!a0)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            v24[v26] = *(a0);\n
            a0 += 1;\n
            v24 += 1;\n
LABEL_40507b:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(a0) == 64)\n
            {\n
                v24[v26] = 64;\n
                a0 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v19 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v20 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            v24[v26] = 48;\n
                        else\n
                            v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                v24[v26] = v16;\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v15 = *(v28);\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            v24[v26] = 32;\n
                        else\n
                            v24[v26] = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; v14->field_0; v14 += 1)\n
                {\n
                    v24[v26] = v14->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v13 = *(v29);\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            v24[v26] = 32;\n
                        else\n
                            v24[v26] = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    v24[v26] = v12->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            v24[v26] = 48;\n
                        else\n
                            v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    v24[v26] = v10->field_0;\n
                    v24 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_40507b;\n
            v35 = a1;\n
            a1 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_404f1e;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_404f1e:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (v20)\n
                        v24[v26] = 48;\n
                    else\n
                        v24[v26] = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                v24[v26] = *(v9);\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    v24[v26] = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4214930:sub_405092": null, "4214944:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4215008:cgc_sprintf": "int cgc_sprintf(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    v3[v0] = 0;\n
    return v0;\n
}\n
", "4215087:sub_40512f": null, "4215088:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4215182:sub_40518e": null, "4215184:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215238:sub_4051c6": null, "4215248:cgc_isnan": null, "4215271:sub_4051e7": null, "4215280:cgc_isinf": null, "4215327:sub_40521f": null, "4215328:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = v1 + 32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4215386:sub_40525a": null, "4215392:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = v1 + -32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4215450:sub_40529a": null, "4215456:cgc_strcmp": "int cgc_strcmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v2 + v0)) && !*((a0 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!*((a0 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) < *((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) <= *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4215694:sub_40538e": null, "4215696:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4215787:sub_4053eb": null, "4215792:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4215898:sub_40545a": null, "4215904:cgc_flush_input": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flush_input(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x4bc]\n
    unsigned int v1;  // [bp-0x4ac]\n
    char v2;  // [bp-0x4a4]\n
    void* v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    char v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    char v7;  // [bp-0x94]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        cgc_memset(&v7, 0);\n
        v10 = v9 >> 5;\n
        *(&(&v7)[4 * v10]) = 1 << (v9 & 31 & 31) | *(&(&v7)[4 * v10]);\n
        v3 = 0;\n
        v4 = 10;\n
        v0 = &v5;\n
        v6 = cgc_fdwait(v9 + 1, &v7, 0, &v3);\n
        if (v6)\n
        {\n
            v8 = v6;\n
            return v8;\n
        }\n
        else if ((*(&(&v7)[4 * (v9 >> 5)]) & 1 << (v9 & 31 & 31)))\n
        {\n
            cgc_receive(v9, &v2, 0x400);\n
        }\n
        else\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
}\n
", "4216236:sub_4055ac": null, "4216240:cgc_memset": "int cgc_memset(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *((v3 + v2)) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        *((v3 + v2)) = v1;\n
    }\n
    return v3;\n
}\n
", "4216409:sub_405659": null, "4216416:cgc_getline": "int cgc_getline(char *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v1 = cgc_receive_until(v2, 10);\n
    if (v1 != a0)\n
    {\n
        v2[v1] = 0;\n
        return v1;\n
    }\n
    v2[1 + a0] = 0;\n
    return v1;\n
}\n
", "4216519:sub_4056c7": null, "4216528:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v4 < a1; v4 += 1)\n
    {\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (v2 == a0)\n
                break;\n
            v4[v5] = v2;\n
        }\n
    }\n
    if (v4 == a1)\n
        cgc_flush_input(0);\n
    return v4;\n
}\n
", "4216749:sub_4057ad": null, "4216752:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *(&v0[v1]) = *(&v0[a0]);\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v1;\n
}\n
", "4216896:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4217300:sub_4059d4": null, "4217312:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4217367:sub_405a17": null, "4217376:cgc_abs": "int cgc_abs(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < 0)\n
    {\n
        v0 = -(v1);\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4217420:sub_405a4c": null, "4217424:_ZN6StringC2Ev": "int String::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4217448:sub_405a68": null, "4217456:_ZN6StringC1EPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__ctor__(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v4;\n
    v2 = cgc_strlen(a0) + 1;\n
    v6 = v1;\n
    v6[1] = operator new[](v2);\n
    cgc_memcpy(v6[1], a0, v2 - 1);\n
    v7 = v1;\n
    *((v7[1] + v2 - 1)) = 0;\n
    v7[0] = v2 - 1;\n
    v8 = v3;\n
    return v1;\n
}\n
", "4217590:sub_405af6": null, "4217600:_ZN6StringC2ERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__base_ctor__(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v4;\n
    v2 = a0[0] + 1;\n
    v6 = v1;\n
    v6[1] = operator new[](v2);\n
    cgc_memcpy(v6[1], a0[1], a0[0]);\n
    v7 = v1;\n
    *((v7[1] + v2 - 1)) = 0;\n
    v7[0] = a0[0];\n
    v8 = v3;\n
    return v1;\n
}\n
", "4217726:sub_405b7e": null, "4217728:_ZN6StringD2Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__base_dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    v2 = v4;\n
    if (!v4->field_4)\n
        return v3;\n
    v4 = v2->field_4;\n
    v0 = v4;\n
    if (!v4)\n
        return v4;\n
    v4 = operator delete[](v0);\n
}\n
", "4217812:sub_405bd4": null, "4217824:_ZN6StringpLERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator+=(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v9[2];  // eax\n
    unsigned int v10[2];  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v6;\n
    v4 = v2[0] + a0[0] + 1;\n
    v9 = v2;\n
    v3 = operator new[](v4);\n
    cgc_memcpy(v3, v9[1], v9[0]);\n
    cgc_memcpy(v3 + v2[0], a0[1], a0[0]);\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v10 = v2;\n
    v10[1] = v3;\n
    v10[0] = v4 - 1;\n
    return v2;\n
}\n
", "4218028:sub_405cac": null, "4218032:_ZNK6StringplERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator+ const(unsigned int v6, unsigned int a0[2], unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v3 = v1;\n
    v0[0] = a1;\n
    String::__base_ctor__(&v4, a0);\n
    String::__base_ctor__(v1, String::operator+=(&v4, v0));\n
    String::__base_dtor__(&v4);\n
    v8 = v5;\n
    return v3;\n
}\n
", "4218157:sub_405d2d": null, "4218160:_ZNK6String5c_strEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int String::c_str const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4218174:sub_405d3e": null, "4218176:_ZN6String6lengthEv": "int String::length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4218189:sub_405d4d": null, "4218192:_ZN6String5emptyEv": "int String::empty(unsigned int *v0)\n
{\n
    return !*(v0);\n
}\n
", "4218214:sub_405d66": null, "4218224:_ZNK6String5upperEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::upper const(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v2[0] = v1;\n
    v4 = 0;\n
    String::__base_ctor__(v1, a0);\n
    for (v3 = 0; v3 < v1[0]; v3 += 1)\n
    {\n
        v3[v1[1]] = cgc_toupper(v3[v1[1]]);\n
    }\n
    v4 = 1;\n
    if (!(v4 & 1))\n
        String::__base_dtor__(v1);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4218393:sub_405e19": null, "4218400:_ZNK6String5lowerEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::lower const(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v2[0] = v1;\n
    v4 = 0;\n
    String::__base_ctor__(v1, a0);\n
    for (v3 = 0; v3 < v1[0]; v3 += 1)\n
    {\n
        v3[v1[1]] = cgc_tolower(v3[v1[1]]);\n
    }\n
    v4 = 1;\n
    if (!(v4 & 1))\n
        String::__base_dtor__(v1);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4218569:sub_405ec9": null, "4218576:_ZNK6String11StripSpacesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::StripSpaces const(unsigned int v7, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v7;\n
    v3 = v2;\n
    v4[0] = a0;\n
    for (v5 = 0; v5 < v4[0]; v5 += 1)\n
    {\n
        if (v5[v4[1]] != 32)\n
            break;\n
    }\n
    v0 = -1;\n
    String::SubString const(v2, v4, v5);\n
    return v3;\n
}\n
", "4218733:sub_405f6d": null, "4218736:_ZNK6String9SubStringEmm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::SubString const(unsigned int v8, unsigned int a0[2], char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[2];  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[2];  // [bp-0x20]\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v9;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v2 = v1;\n
    v3[0] = a0;\n
    if (a1 >= v3[0])\n
    {\n
        String::__ctor__(v1, v0 - 9465);\n
        return v2;\n
    }\n
    if (a2 > v3[0])\n
        a2 = v3[0];\n
    if (a1 >= a2)\n
    {\n
        String::__ctor__(v1, v0 - 9465);\n
        return v2;\n
    }\n
    v7 = a2 - a1;\n
    v6 = operator new[](v7 + 1);\n
    v5 = 0;\n
    for (v4 = a1; v4 < a2; v4 += 1)\n
    {\n
        v9 = v5;\n
        v5 = v9 + 1;\n
        v6[v9] = v4[v3[1]];\n
    }\n
    v6[v5] = 0;\n
    String::__ctor__(v1, v6);\n
    return v2;\n
}\n
", "4219026:sub_406092": null, "4219040:_ZN6String4TrimEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::Trim(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    unsigned int v2[2];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // ebx\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v3 = v1;\n
    v2[0] = a0;\n
    String::SubString const(&v4, v2, NULL, a1);\n
    String::operator=(v2);\n
    String::__base_dtor__(&v4);\n
    String::__base_ctor__(v1, v2);\n
    v11 = *(&v5);\n
    v12 = v6;\n
    return v3;\n
}\n
", "4219187:sub_406133": null, "4219200:_ZN6StringaSERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator=(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[2];  // eax\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v3 = a0[0] + 1;\n
    v5 = v2;\n
    v5[1] = operator new[](v3);\n
    cgc_memcpy(v5[1], a0[1], a0[0]);\n
    v6 = v2;\n
    *((v6[1] + v3 - 1)) = 0;\n
    v6[0] = a0[0];\n
    return v2;\n
}\n
", "4219376:_ZNK6StringeqERKS_": "int String::operator== const(unsigned int v3[2], unsigned int a0[2])\n
{\n
    unsigned int v0[2];  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0[0] = v3;\n
    if (v0[0] != a0[0])\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v0[0])\n
        {\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
        else if (v1[v0[1]] == v1[a0[1]])\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
    }\n
}\n
", "4219516:sub_40627c": null, "4219520:_ZNK6StringneERKS_": "int String::operator!= const(unsigned int v0[2], unsigned int a0[2])\n
{\n
    return (String::operator== const(v0, a0) ^ 255) & 1;\n
}\n
", "4219576:sub_4062b8": null, "4219584:_ZN6String9SetStringEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::SetString(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[2];  // eax\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v3 = cgc_strlen(a0) + 1;\n
    v5 = v2;\n
    v5[1] = operator new[](v3);\n
    cgc_memcpy(v5[1], a0, v3 - 1);\n
    v6 = v2;\n
    *((v6[1] + v3 - 1)) = 0;\n
    v6[0] = v3 - 1;\n
    return v2;\n
}\n
", "4219768:sub_406378": null, "4219776:_ZN6String9ToIntegerERi": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::ToInteger(struct_1 *v3, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &v3->padding_0;\n
    if (!v1->field_4)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    *(a0) = cgc_atoi(v1->field_4);\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4219871:sub_4063df": null, "4219872:_Z8ReadLineR6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int ReadLine(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x210]\n
    char v1;  // [bp-0x209]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_getline(&v1, 0x200);\n
    v5 = v2;\n
    return String::SetString(v3, &v1);\n
}\n
", "4219961:sub_406439": null, "4219968:_Z10recv_bytesPhm": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int recv_bytes(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a0)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(0, v4 + v3, 1))\n
            return v3;\n
        if (v2 != 1)\n
            return v3;\n
        v3 += 1;\n
    }\n
}\n
", "4220121:sub_4064d9": null, "4220128:_ZN15CDoubleItemListC2Ev": "int CDoubleItemList::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4220152:sub_4064f8": null, "4220160:_ZN15CDoubleItemListD2Ev": "int CDoubleItemList::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CDoubleItemList::DeleteAll(v1, *(&v0));\n
}\n
", "4220197:sub_406525": null, "4220208:_ZN15CDoubleItemList9DeleteAllEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleItemList::DeleteAll(struct struct_0 **v4)\n
{\n
    struct struct_0 **v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc]\n
    struct struct_0 **v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = *(v4);\n
    while (true)\n
    {\n
        v2 = v5;\n
        if (!v2)\n
            break;\n
        v3 = &*(v2)->field_0;\n
        v0 = v2;\n
        if (v0)\n
        {\n
            CDoubleItemLink::__dtor__();\n
            operator delete(v0);\n
        }\n
        v2 = v3;\n
        v5 = v3;\n
    }\n
    return v5;\n
}\n
", "4220325:sub_4065a5": null, "4220336:_ZN15CDoubleItemList7GetNextEP15CDoubleItemLink": "int CDoubleItemList::GetNext(unsigned int v1, unsigned int a0[3])\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a0[2] != v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0[0];\n
    return v0;\n
}\n
", "4220389:sub_4065e5": null, "4220400:_ZN15CDoubleItemList7GetPrevEP15CDoubleItemLink": "int CDoubleItemList::GetPrev(unsigned int v1, unsigned int a0[3])\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a0[2] != v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0[1];\n
    return v0;\n
}\n
", "4220454:sub_406626": null, "4220464:_ZN15CDoubleItemList11RemoveFirstEv": "int CDoubleItemList::RemoveFirst(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int *v3;  // ecx\n
\n
    v3 = v2;\n
    v1 = *(v3);\n
    v0 = v1;\n
    CDoubleItemList::RemoveItem(v3);\n
    return v1;\n
}\n
", "4220518:sub_406666": null, "4220528:_ZN15CDoubleItemList10RemoveItemEP15CDoubleItemLink": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleItemList::RemoveItem(unsigned int v4[2], struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    struct_1 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (a0->field_8 != v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (a0->field_0)\n
        a0->field_0->field_4 = a0->field_4;\n
    if (a0->field_4)\n
        a0->field_4->field_0 = a0->field_0;\n
    if (a0 == v2[1])\n
        v2[1] = a0->field_4;\n
    if (a0 == v2[0])\n
        v2[0] = a0->field_0;\n
    v0 = a0;\n
    CDoubleItemLink::ClearList();\n
    v3 = a0;\n
    return v3;\n
}\n
", "4220718:sub_40672e": null, "4220720:_ZN15CDoubleItemList10RemoveLastEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CDoubleItemList::RemoveLast(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0xc]\n
    struct_0 *v2;  // ecx\n
\n
    v2 = v1;\n
    v0 = v2->field_4;\n
    CDoubleItemList::RemoveItem(v2, v0);\n
    return v0;\n
}\n
", "4220775:sub_406767": null, "4220784:_ZN15CDoubleItemList8AddFirstEP15CDoubleItemLink": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleItemList::AddFirst(struct_1 *v4, unsigned int a0[3])\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v5;  // eax\n
    unsigned int v6[3];  // ecx\n
    struct_1 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    if (!a0)\n
    {\n
        v3[0] = 0;\n
        return v3;\n
    }\n
    else if (!a0[2])\n
    {\n
        if (!v2->field_0)\n
        {\n
            v5 = v2;\n
            a0[1] = 0;\n
            a0[0] = 0;\n
            v6 = a0;\n
            v5->field_4 = v6;\n
            v5->field_0 = &v6[0];\n
        }\n
        else\n
        {\n
            v7 = v2;\n
            a0[0] = v7->field_0;\n
            a0[1] = 0;\n
            v7->field_0->field_4 = a0;\n
            v7->field_0 = &a0[0];\n
        }\n
        v0 = v2;\n
        CDoubleItemLink::AddList(a0);\n
        v3 = a0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4220981:sub_406835": null, "4220992:_ZN15CDoubleItemList8AddAfterEP15CDoubleItemLinkS1_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleItemList::AddAfter(struct_0 *v3, struct_1 *a0, unsigned int a1[3])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (!a1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    else if (a1[2])\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        v2 = CDoubleItemList::AddFirst(v1, a1);\n
        return v2;\n
    }\n
    else if (a0->field_8 == v1)\n
    {\n
        a1[0] = a0->field_0;\n
        a1[1] = a0;\n
        if (a0->field_0)\n
            a0->field_0->field_4 = a1;\n
        a0->field_0 = &a1[0];\n
        if (v1->field_4 == a0)\n
            v1->field_4 = a1;\n
        CDoubleItemLink::AddList(a1);\n
        v2 = a1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4221252:sub_406944": null, "4221264:_ZN15CDoubleItemList7AddLastEP15CDoubleItemLink": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleItemList::AddLast(struct_0 *v4, unsigned int a0[3])\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    unsigned int v6[3];  // ecx\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    if (!a0)\n
    {\n
        v3[0] = 0;\n
        return v3;\n
    }\n
    else if (!a0[2])\n
    {\n
        if (!v2->field_4)\n
        {\n
            v5 = v2;\n
            a0[0] = 0;\n
            a0[1] = 0;\n
            v6 = a0;\n
            v5->field_4 = &v6[0];\n
            v5->field_0 = v6;\n
        }\n
        else\n
        {\n
            v7 = v2;\n
            a0[0] = 0;\n
            a0[1] = v7->field_4;\n
            v7->field_4->field_0 = a0;\n
            v7->field_4 = &a0[0];\n
        }\n
        v0 = v2;\n
        CDoubleItemLink::AddList(a0);\n
        v3 = a0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4221464:sub_406a18": null, "4221472:_ZN15CDoubleItemLinkC1Ev": "int CDoubleItemLink::__ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4221503:sub_406a3f": null, "4221504:_ZN15CDoubleItemLinkD1Ev": "int CDoubleItemLink::__dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CDoubleItemLink::Unlink(v1, *(&v0));\n
}\n
", "4221541:sub_406a65": null, "4221552:_ZN15CDoubleItemLink6UnlinkEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8[2];\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleItemLink::Unlink(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = v3;\n
    if (v3->field_8)\n
    {\n
        v4 = v1;\n
        v3 = CDoubleItemList::RemoveItem(v4->field_8, v4);\n
    }\n
    return v3;\n
}\n
", "4221625:sub_406ab9": null, "4221632:_ZN12CDoubleQueueC1Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CDoubleQueue::__ctor__(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    CDoubleItemList::__base_ctor__(v0);\n
    v0->field_8 = 0;\n
    return v0;\n
}\n
", "4221684:sub_406af4": null, "4221696:_ZN12CDoubleQueueD2Ev": "int CDoubleQueue::__base_dtor__(unsigned int v0)\n
{\n
    return CDoubleItemList::__base_dtor__(v0);\n
}\n
", "4221733:sub_406b25": null, "4221744:_ZN15CDoubleItemLink9ClearListEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CDoubleItemLink::ClearList(struct_0 *v0)\n
{\n
    v0->field_8 = 0;\n
    return v0;\n
}\n
", "4221762:sub_406b42": null, "4221776:_ZN15CDoubleItemLink7AddListEP15CDoubleItemList": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CDoubleItemLink::AddList(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_8 = a0;\n
    return v0;\n
}\n
", "4221796:sub_406b64": null, "4221808:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    char v1;  // [bp-0x114]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    CUserManager::__base_ctor__(&v1);\n
    CUserManager::Run(&v1);\n
    v2 = 0;\n
    CUserManager::__base_dtor__();\n
    v6 = v3;\n
    return v2;\n
}\n
", "4221922:sub_406be2": null, "4221936:_ZN10CUserEntryC2ERK6StringS2_": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::__base_ctor__(struct_0 *v3, unsigned int a0[2], unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    String::__base_ctor__(v1, a0);\n
    String::__base_ctor__(&v1->padding_0[8], a1);\n
    v1->field_10 = 0;\n
    v5 = v2;\n
    return CDoubleQueue::__ctor__(v1 + 1);\n
}\n
", "4222042:sub_406c5a": null, "4222048:_ZN10CUserEntryD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CDoubleQueue::__base_dtor__(v1 + 20);\n
    String::__base_dtor__(v1 + 8);\n
    v5 = v2;\n
    return String::__base_dtor__(v1);\n
}\n
", "4222127:sub_406caf": null, "4222128:_ZN10CUserEntry13DeleteMessageEP12CUserMessage": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::DeleteMessage(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v0 = a0;\n
    CDoubleQueue::DeleteItem(v2 + 20);\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4222223:sub_406d0f": null, "4222224:_ZN10CUserEntry15GetFirstMessageEv": "int CUserEntry::GetFirstMessage(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CDoubleItemList::GetFirst(v1 + 20, *(&v0));\n
}\n
", "4222264:sub_406d38": null, "4222272:_ZN10CUserEntry14GetNextMessageEP12CUserMessage": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::GetNextMessage(unsigned int v3, unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = CDoubleItemList::GetNext(v1 + 20, a0);\n
    return v2;\n
}\n
", "4222364:sub_406d9c": null, "4222368:_ZN10CUserEntry21GetFirstUnreadMessageEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::GetFirstUnreadMessage(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    if (!v2->field_10)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2 + 1;\n
    v3 = CDoubleItemList::GetFirst();\n
    return v3;\n
}\n
", "4222450:sub_406df2": null, "4222464:_ZN10CUserEntry20GetLastUnreadMessageEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int CUserEntry::GetLastUnreadMessage(struct_0 *v0)\n
{\n
    return v0->field_10;\n
}\n
", "4222478:sub_406e0e": null, "4222480:_ZN10CUserEntry20GetNextUnreadMessageEP12CUserMessage": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::GetNextUnreadMessage(struct_0 *v3, unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (!v1->field_10)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 != v1->field_10)\n
    {\n
        v2 = CDoubleItemList::GetNext(v1 + 1, a0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4222599:sub_406e87": null, "4222608:_ZN10CUserEntry19ClearUnreadMessagesEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int CUserEntry::ClearUnreadMessages(struct_0 *v0)\n
{\n
    v0->field_10 = 0;\n
    return v0;\n
}\n
", "4222626:sub_406ea2": null, "4222640:_ZN10CUserEntry10AddMessageEP12CUserMessage": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::AddMessage(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    if (!v2->field_10)\n
        v2->field_10 = a0;\n
    v0 = a0;\n
    CDoubleQueue::PushFront(v2 + 1);\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4222757:sub_406f25": null, "4222768:_ZN10CUserEntry15GetMessageCountEv": "int CUserEntry::GetMessageCount(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CDoubleQueue::GetCount const(v1 + 20, *(&v0));\n
}\n
", "4222808:sub_406f58": null, "4222816:_ZN10CUserEntry21GetUnreadMessageCountEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::GetUnreadMessageCount(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    if (!v1->field_10)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    for (v2[0] = CDoubleItemList::GetFirst(); v2; v2 = CDoubleItemList::GetNext(v1 + 1, v2))\n
    {\n
        v3 += 1;\n
        if (v2 == v1->field_10)\n
            break;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4222987:sub_40700b": null, "4222992:_ZN10CUserEntry17GetMessageByIndexEj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserEntry::GetMessageByIndex(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    v3 = 0;\n
    v2[0] = CDoubleItemList::GetFirst();\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v3 != a0)\n
        {\n
            v3 += 1;\n
            v2 = CDoubleItemList::GetNext(v1 + 20, v2);\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4223137:sub_4070a1": null, "4223152:_ZN13CUserDatabaseC1Ev": "int CUserDatabase::__ctor__(unsigned int *v2)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v2;\n
    v0 = v3;\n
    for (v1 = 0; v1 < 64; v1 = v3)\n
    {\n
        v0[v1] = 0;\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4223216:_ZN13CUserDatabaseD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserDatabase::__dtor__(unsigned int *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v4;\n
    v2 = v5;\n
    for (v3 = 0; v3 < 64; v3 = v5)\n
    {\n
        if (v2[v3])\n
        {\n
            v0 = v2[v3];\n
            if (v0)\n
            {\n
                CUserEntry::__base_dtor__(v0);\n
                operator delete(v0);\n
            }\n
        }\n
        v5 = v3 + 1;\n
    }\n
    return v5;\n
}\n
", "4223359:sub_40717f": null, "4223360:_ZN13CUserDatabase10CreateUserERK6StringS2_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserDatabase::CreateUser(unsigned int *v6, unsigned int a0[2], unsigned int a1[2])\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    if (CUserDatabase::FindUserByName const(v2))\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    else if (CUserDatabase::GetUserCount const() < 64)\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            if (v3 >= 64)\n
            {\n
                v4 = 0;\n
                return v4 & 1;\n
            }\n
            if (!v2[v3])\n
            {\n
                v0 = operator new(32);\n
                CUserEntry::__base_ctor__(v0, a0, a1);\n
                v2[v3] = v0;\n
                v4 = 1;\n
                return v4 & 1;\n
            }\n
            v3 += 1;\n
        }\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
}\n
", "4223598:sub_40726e": null, "4223600:_ZNK13CUserDatabase14FindUserByNameERK6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserDatabase::FindUserByName const(unsigned int *v4, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= 64)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1[v2] && (String::operator== const(CUserEntry::GetUserName const(), a0) & 1))\n
        {\n
            v3 = v1[v2];\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4223777:sub_407321": null, "4223792:_ZNK13CUserDatabase12GetUserCountEv": "int CUserDatabase::GetUserCount const(unsigned int *v3)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v3;\n
    v2 = 0;\n
    for (v1 = 0; v1 < 64; v1 += 1)\n
    {\n
        if (*((v0 + 0x4 * v1)))\n
            v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4223883:sub_40738b": null, "4223888:_ZNK13CUserDatabase15GetUserForIndexEj": "int CUserDatabase::GetUserForIndex const(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v4;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 64)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v0[v1])\n
        {\n
            if (a0 != v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = v0[v1];\n
                return v3;\n
            }\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4224018:sub_407412": null, "4224032:_ZN13CUserDatabase16DeleteUserByNameERK6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserDatabase::DeleteUserByName(unsigned int *v5, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= 64)\n
        {\n
            v4 = 0;\n
            return v4 & 1;\n
        }\n
        if (v2[v3] && (String::operator== const(CUserEntry::GetUserName const(), a0) & 1))\n
            break;\n
        v3 += 1;\n
    }\n
    v0 = v2[v3];\n
    if (v0)\n
    {\n
        CUserEntry::__base_dtor__(v0);\n
        operator delete(v0);\n
    }\n
    v2[v3] = 0;\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4224265:sub_407509": null, "4224272:_ZN12CDoubleQueue10DeleteItemEP15CDoubleItemLink": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleQueue::DeleteItem(struct_0 *v6, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = CDoubleItemList::RemoveItem(v2, a0);\n
    if (!v3)\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    v8 = v2;\n
    v8->field_8 = v8->field_8 - 1;\n
    v0 = a0;\n
    if (v0)\n
    {\n
        CDoubleItemLink::__dtor__(v0);\n
        operator delete(v0);\n
    }\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4224421:sub_4075a5": null, "4224432:_ZN15CDoubleItemList8GetFirstEv": "int CDoubleItemList::GetFirst(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4224445:sub_4075bd": null, "4224448:_ZN12CDoubleQueue9PushFrontEP15CDoubleItemLink": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CDoubleQueue::PushFront(struct_0 *v1, unsigned int a0[3])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v1;\n
    v2 = CDoubleItemList::AddFirst(v0, a0);\n
    if (v2)\n
    {\n
        v2 = v0;\n
        *((v2 + 8)) = *((v2 + 8)) + 1;\n
        return v0;\n
    }\n
    return v2;\n
}\n
", "4224521:sub_407609": null, "4224528:_ZNK12CDoubleQueue8GetCountEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CDoubleQueue::GetCount const(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4224542:sub_40761e": null, "4224544:_ZNK10CUserEntry11GetUserNameEv": "int CUserEntry::GetUserName const(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4224555:sub_40762b": null, "4224560:_ZN12CUserManagerC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::__base_ctor__(unsigned int v4)\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0[0] = v4;\n
    String::__base_ctor__(v0);\n
    CUserDatabase::__ctor__(v0 + 1);\n
    String::__ctor__(&v2, v1 - 10788);\n
    String::operator=(v0, &v2);\n
    v6 = v3;\n
    return String::__base_dtor__(&v2);\n
}\n
", "4224681:sub_4076a9": null, "4224688:_ZN12CUserManagerD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CUserDatabase::__dtor__(v1 + 8);\n
    v5 = v2;\n
    return String::__base_dtor__(v1);\n
}\n
", "4224750:sub_4076ee": null, "4224752:_ZN12CUserManager3RunEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::Run()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    char v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x8]\n
    char v10;  // [bp+0xffff3]\n
    unsigned int v15;  // ebx\n
\n
    v10 = 0;\n
    while (true)\n
    {\n
        if (!(v4 & 1))\n
        {\n
            cgc_printf(v2 - 10683);\n
            String::__base_dtor__(&v5);\n
            v15 = v6;\n
            return;\n
        }\n
        cgc_printf(v2 - 10755);\n
        cgc_printf(v2 - 10739);\n
        cgc_printf(v2 - 10724);\n
        cgc_printf(v2 - 10708);\n
        ReadLine(&v5);\n
        if (!(String::ToInteger(&v5, &v3) & 1))\n
            v3 = -1;\n
        v0 = v3 - 1;\n
        if (v0 > 3)\n
            cgc_printf(v2 - 10699);\n
        else\n
            goto *(((stack_base)[32] + (stack_base)[40] * 4 - 10844)) + (stack_base)[32];\n
    }\n
}\n
", "4225118:sub_40785e": null, "4225120:_ZN12CUserManager13RunCreateUserEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::RunCreateUser(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1e]\n
    char v3;  // [bp-0x1d]\n
    char v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v7;\n
    String::__base_ctor__(&v5);\n
    String::__base_ctor__(&v4);\n
    v3 = 1;\n
    do\n
    {\n
        cgc_printf(v1 - 10497);\n
        ReadLine(&v5);\n
        if (String::length(&v5) <= 12)\n
        {\n
            v3 = 1;\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 10674);\n
            v3 = 0;\n
        }\n
    } while (((v3 ^ 255) & 1));\n
    v2 = 0;\n
    do\n
    {\n
        cgc_printf(v1 - 10281);\n
        ReadLine(&v4);\n
        if (String::length(&v4) > 12)\n
        {\n
            cgc_printf(v1 - 10626);\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
        }\n
    } while (((v2 ^ 255) & 1));\n
    if ((CUserDatabase::CreateUser(v0 + 8, &v5, &v4) & 1))\n
        cgc_printf(v1 - 10531);\n
    else\n
        cgc_printf(v1 - 10578);\n
    String::__base_dtor__(&v4);\n
    String::__base_dtor__(&v5);\n
    return 1;\n
}\n
", "4225523:sub_4079f3": null, "4225536:_ZN12CUserManager12RunUserLoginEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::RunUserLogin()\n
{\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v4;  // [bp-0x2d]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    char v7;  // [bp-0x24]\n
    char v8;  // [bp-0x1c]\n
    char v9;  // [bp-0x14]\n
    char v10;  // [bp-0x9]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // [bp+0x4]\n
    unsigned int v19;  // ebx\n
\n
    v11 = v19;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v13;\n
    String::__base_ctor__(&v9);\n
    String::__base_ctor__(&v8);\n
    String::__base_ctor__(&v7);\n
    cgc_printf(v1 - 10503);\n
    ReadLine(&v9);\n
    cgc_printf(v1 - 10486);\n
    ReadLine(&v8);\n
    v6 = CUserDatabase::FindUserByName const(v2 + 8, &v9);\n
    if (!v6)\n
    {\n
        cgc_printf(v1 - 10469);\n
        v10 = 1;\n
        v5 = 1;\n
    }\n
    else if ((String::operator!= const(CUserEntry::GetPassword const(), &v8) & 1))\n
    {\n
        cgc_printf(v1 - 10469);\n
        v10 = 1;\n
        v5 = 1;\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 10424);\n
        v4 = 1;\n
    }\n
}\n
", "4226271:sub_407cdf": null, "4226272:_ZN12CUserManager13RunAdminLoginEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::RunAdminLogin()\n
{\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2[2];  // [bp-0x2c]\n
    char v4;  // [bp-0x21]\n
    unsigned int v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    char v7;  // [bp-0x14]\n
    char v8;  // [bp-0x9]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v15;  // ebx\n
\n
    v9 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v11;\n
    String::__base_ctor__(&v7);\n
    String::__base_ctor__(&v6);\n
    cgc_printf(v1 - 10287);\n
    ReadLine(&v6);\n
    if (!(String::operator!= const(&v6, v2) & 1))\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 10270);\n
        v8 = 1;\n
        v5 = 1;\n
    }\n
}\n
", "4226749:sub_407ebd": null, "4226752:_ZN12CUserManager17DoUserSendMessageEP10CUserEntry": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoUserSendMessage(unsigned int v11, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x3c]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x2c]\n
    void* v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0x20]\n
    char v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x8]\n
    struct_0 *v10;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v13;  // ebx\n
\n
    v9 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v11;\n
    String::__base_ctor__(&v8);\n
    String::__base_ctor__(&v7);\n
    cgc_printf(v2 - 9902);\n
    ReadLine(&v8);\n
    v6 = CUserDatabase::FindUserByName const(v3 + 8, &v8);\n
    if (!v6)\n
    {\n
        cgc_printf(v2 - 9880);\n
        v5 = 1;\n
    }\n
    else\n
    {\n
        cgc_printf(v2 - 9863);\n
        ReadLine(&v7);\n
        if (String::length(&v7) > 128)\n
        {\n
            cgc_printf(v2 - 9847);\n
            String::Trim(&v4, &v7, 128);\n
            String::__base_dtor__(&v4);\n
        }\n
        v0 = v6;\n
        v10 = 28;\n
        v1 = operator new(28);\n
        v10 = a0;\n
        v10 = v1;\n
        v11 = CUserEntry::GetUserName const(a0);\n
        a0 = &v7;\n
        CUserMessage::__ctor__(v11, a0);\n
        v10 = v0;\n
        v11 = v1;\n
        if ((CUserEntry::AddMessage(v11, a0) & 1))\n
        {\n
            v10 = v2 - 9797;\n
            cgc_printf(v2 - 9797);\n
        }\n
        else\n
        {\n
            v10 = v2 - 9816;\n
            cgc_printf(v2 - 9816);\n
        }\n
        v5 = 0;\n
    }\n
    v10 = &v7;\n
    String::__base_dtor__(&v7);\n
    v10 = &v8;\n
    return String::__base_dtor__(&v8);\n
}\n
", "4227203:sub_408083": null, "4227216:_ZN12CUserManager18DoUserReadMessagesEP10CUserEntry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoUserReadMessages(unsigned int v8, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!CUserEntry::GetMessageCount(a0))\n
    {\n
        v10 = cgc_printf(v1 - 9782);\n
        return v10;\n
    }\n
    if (CUserEntry::GetUnreadMessageCount(a0) > 0)\n
    {\n
        CUserEntry::GetUnreadMessageCount(a0);\n
        cgc_printf(v1 - 9768);\n
        v6 = CUserEntry::GetLastUnreadMessage(a0);\n
        String::c_str const(CUserMessage::GetFrom const());\n
        cgc_printf(v1 - 9716);\n
        String::c_str const(CUserMessage::GetMessage const(v6));\n
        cgc_printf(v1 - 9706);\n
        CUserEntry::ClearUnreadMessages(a0);\n
    }\n
    CUserEntry::GetMessageCount(a0);\n
    cgc_printf(v1 - 9693);\n
    String::__base_ctor__(&v5);\n
    ReadLine(&v5);\n
    if (!(String::ToInteger(&v5, &v4) & 1))\n
    {\n
        cgc_printf(v1 - 9641);\n
        v3 = 1;\n
    }\n
    else if (v4 < 0)\n
    {\n
LABEL_40822f:\n
        cgc_printf(v1 - 9641);\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        v0 = v4;\n
        if (!(v0 < CUserEntry::GetMessageCount(a0)))\n
            goto LABEL_40822f;\n
        v2 = CUserEntry::GetMessageByIndex(a0, v4);\n
        if (!v2)\n
        {\n
            v3 = 1;\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 9616);\n
            String::c_str const(CUserMessage::GetFrom const(v2));\n
            cgc_printf(v1 - 9716);\n
            String::c_str const(CUserMessage::GetMessage const(v2));\n
            cgc_printf(v1 - 9706);\n
            v3 = 1;\n
        }\n
    }\n
    v10 = String::__base_dtor__(&v5);\n
    return v10;\n
}\n
", "4227849:sub_408309": null, "4227856:_ZN12CUserManager18DoUserListMessagesEP10CUserEntry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoUserListMessages(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!CUserEntry::GetMessageCount(a0))\n
    {\n
        v6 = cgc_printf(v0 - 9782);\n
        return v6;\n
    }\n
    CUserEntry::GetMessageCount(a0);\n
    cgc_printf(v0 - 9603);\n
    v2 = 0;\n
    v6 = CUserEntry::GetFirstMessage(a0);\n
    while (true)\n
    {\n
        v1[0] = v6;\n
        if (!v1)\n
            break;\n
        cgc_printf(v0 - 9616);\n
        String::c_str const(CUserMessage::GetFrom const(v1));\n
        cgc_printf(v0 - 9716);\n
        String::c_str const(CUserMessage::GetMessage const(v1));\n
        cgc_printf(v0 - 9706);\n
        v2 += 1;\n
        v6 = CUserEntry::GetNextMessage(a0, v1);\n
    }\n
    return v6;\n
}\n
", "4228155:sub_40843b": null, "4228160:_ZN12CUserManager19DoUserDeleteMessageEP10CUserEntry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoUserDeleteMessage(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!CUserEntry::GetMessageCount(a0))\n
    {\n
        v9 = cgc_printf(v1 - 9581);\n
        return v9;\n
    }\n
    CUserEntry::GetMessageCount(a0);\n
    cgc_printf(v1 - 9557);\n
    String::__base_ctor__(&v5);\n
    ReadLine(&v5);\n
    if (!(String::ToInteger(&v5, &v4) & 1))\n
    {\n
        cgc_printf(v1 - 9641);\n
        v3 = 1;\n
    }\n
    else if (v4 < 0)\n
    {\n
LABEL_40852a:\n
        cgc_printf(v1 - 9641);\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        v0 = v4;\n
        if (!(v0 < CUserEntry::GetMessageCount(a0)))\n
            goto LABEL_40852a;\n
        v2 = CUserEntry::GetMessageByIndex(a0, v4);\n
        if ((CUserEntry::DeleteMessage(a0, v2) & 1))\n
            cgc_printf(v1 - 9482);\n
        else\n
            cgc_printf(v1 - 9509);\n
        v3 = 0;\n
    }\n
    v9 = String::__base_dtor__(&v5);\n
    return v9;\n
}\n
", "4228543:sub_4085bf": null, "4228544:_ZN12CUserManager16DoAdminListUsersEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoAdminListUsers(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v8;\n
    cgc_printf(\"Listing users in database:\\n
\");\n
    v5 = CUserDatabase::GetUserCount const(v3 + 8);\n
    for (v6 = 0; v6 < v5; v6 += 1)\n
    {\n
        v4 = CUserDatabase::GetUserForIndex const(v3 + 8, v6);\n
        v1 = v6;\n
        v0 = String::c_str const(CUserEntry::GetUserName const(v4));\n
        cgc_printf(v2 - 10126);\n
    }\n
    v10 = v7;\n
    return v6;\n
}\n
", "4228734:sub_40867e": null, "4228736:_ZN12CUserManager17DoAdminDeleteUserEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoAdminDeleteUser(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    String::__base_ctor__(&v2);\n
    cgc_printf(v0 - 10118);\n
    ReadLine(&v2);\n
    if (!(CUserDatabase::DeleteUserByName(v1 + 8, &v2) & 1))\n
    {\n
        cgc_printf(v0 - 10082);\n
        return String::__base_dtor__(&v2);\n
    }\n
    cgc_printf(v0 - 10097);\n
    return String::__base_dtor__(&v2);\n
}\n
", "4228905:sub_408729": null, "4228912:_ZN12CUserManager21DoAdminChangePasswordEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserManager::DoAdminChangePassword(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    char v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v9;\n
    String::__base_ctor__(&v7);\n
    String::__base_ctor__(&v6);\n
    cgc_printf(v1 - 10047);\n
    ReadLine(&v7);\n
    v5 = CUserDatabase::FindUserByName const(v2 + 8, &v7);\n
    if (!v5)\n
    {\n
        cgc_printf(v1 - 10017);\n
        v4 = 1;\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 9988);\n
        ReadLine(&v6);\n
        if (String::length(&v6) > 12)\n
        {\n
            cgc_printf(v1 - 9973);\n
            v4 = 1;\n
        }\n
        else\n
        {\n
            v0 = v5;\n
            String::__base_ctor__(&v3, &v6);\n
            CUserEntry::SetPassword(v0);\n
            String::__base_dtor__(&v3);\n
            cgc_printf(v1 - 9926);\n
            v4 = 1;\n
        }\n
    }\n
    String::__base_dtor__(&v6);\n
    return String::__base_dtor__(&v7);\n
}\n
", "4229268:sub_408894": null, "4229280:_ZNK10CUserEntry11GetPasswordEv": "int CUserEntry::GetPassword const(unsigned int v0)\n
{\n
    return v0 + 8;\n
}\n
", "4229294:sub_4088ae": null, "4229296:_ZN10CUserEntry11SetPasswordE6String": "int CUserEntry::SetPassword(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 8, a0);\n
}\n
", "4229345:sub_4088e1": null, "4229360:_ZNK12CUserMessage7GetFromEv": "int CUserMessage::GetFrom const(unsigned int v0)\n
{\n
    return v0 + 12;\n
}\n
", "4229374:sub_4088fe": null, "4229376:_ZNK12CUserMessage10GetMessageEv": "int CUserMessage::GetMessage const(unsigned int v0)\n
{\n
    return v0 + 20;\n
}\n
", "4229390:sub_40890e": null, "4229392:_ZN12CUserMessageC1ERK6StringS2_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserMessage::__ctor__(unsigned int v3, unsigned int a0[2], unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    CDoubleItemLink::__ctor__(v1);\n
    String::__base_ctor__(v1 + 1, a0);\n
    v5 = v2;\n
    return String::__base_ctor__(&v1[1 + 2], a1);\n
}\n
", "4229491:sub_408973": null, "4229504:_ZN12CUserMessageD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUserMessage::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    String::__base_dtor__(v1 + 20);\n
    String::__base_dtor__(v1 + 12);\n
    v5 = v2;\n
    return CDoubleItemLink::__dtor__(v1);\n
}\n
", "4229584:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242892:cgc_receive": null, "5242896:_Znaj": null, "5242900:cgc_allocate": null, "5242904:cgc__terminate": null, "5242908:_ZdlPv": null, "5242912:_ZdaPv": null, "5242916:cgc_rint": null, "5242920:cgc_log10": null, "5242924:cgc_transmit": null, "5242928:cgc_pow": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}