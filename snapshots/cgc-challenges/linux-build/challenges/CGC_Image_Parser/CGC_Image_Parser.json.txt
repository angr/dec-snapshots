{"4202496:_init": "extern struct_0 *g_40c824;\n
\n
int _init()\n
{\n
    if (g_40c824)\n
    {\n
        g_40c824();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 42747;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 42683;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40c820;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40c820)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_expi": "int cgc_expi(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 1; a0; a0 -= 1)\n
    {\n
        v0 *= v1;\n
    }\n
    return v0;\n
}\n
", "4203099:sub_40225b": null, "4203104:cgc_floor": null, "4203268:sub_402304": null, "4203280:cgc_round_away_from_zero": null, "4203434:sub_4023aa": null, "4203440:cgc_round": null, "4203584:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203676:sub_40249c": null, "4203680:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4203889:sub_402571": null, "4203904:cgc_float_to_str": null, "4204762:sub_4028da": null, "4204768:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v13, struct struct_1 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_0 *v6;  // [bp-0x60], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x5c]\n
    char v8;  // [bp-0x55]\n
    unsigned int v9;  // [bp-0x54]\n
    char v10;  // [bp-0x50]\n
    void* v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0xc]\n
    struct struct_1 **v14;  // eax\n
    struct struct_1 **v15;  // eax\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    struct struct_1 **v21;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 0;\n
    if (!v13)\n
    {\n
        v12 = -1;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        if (!*(v13))\n
        {\n
            v12 = v11;\n
            return v12;\n
        }\n
        if (*(v13) != 64)\n
        {\n
            cgc_putc(*(v13));\n
            v13 += 1;\n
            v11 += 1;\n
        }\n
        else\n
        {\n
            v13 += 1;\n
            v1 = *(v13);\n
            if (!v1)\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 99)\n
            {\n
                v14 = a0;\n
                a0 = v14 + 1;\n
                v9 = *(v14);\n
                v8 = v9;\n
                cgc_putc(v8);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v7 = *(v15);\n
                cgc_int_to_str(v7, &v10);\n
                for (v6 = &v10; *(v6); v6 += 1)\n
                {\n
                    cgc_putc(*(v6));\n
                    v11 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v18 = ftop<4> - 1 + 1;\n
                v19 = v18 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v10;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v20 = v19 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v10; v4->field_0; v4 += 1)\n
                {\n
                    cgc_putc(v4->field_0);\n
                    v11 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v21 = a0;\n
                a0 = v21 + 1;\n
                for (v3 = &*(v21)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v11 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            v13 += 1;\n
        }\n
    }\n
}\n
", "4205407:sub_402b5f": null, "4205408:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4205466:sub_402b9a": null, "4205472:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4205544:sub_402be8": null, "4205552:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205606:sub_402c26": null, "4205616:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205670:sub_402c66": null, "4205680:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4205746:sub_402cb2": null, "4205760:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4205826:sub_402d02": null, "4205840:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205894:sub_402d46": null, "4205904:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4205998:sub_402dae": null, "4206000:cgc_isnan": null, "4206023:sub_402dc7": null, "4206032:cgc_isinf": null, "4206079:sub_402dff": null, "4206080:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned long v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_403032:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if (![D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40300b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40300b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40300b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_403032;\n
                if (!v4)\n
                {\n
LABEL_402f87:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40300b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_402f87;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40300b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4206668:sub_40304c": null, "4206672:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4207076:sub_4031e4": null, "4207088:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4207194:sub_40325a": null, "4207200:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4207291:sub_4032bb": null, "4207296:cgc_memset": "int cgc_memset(char *v2, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a1)\n
                break;\n
            v0[v1] = a0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207409:sub_403331": null, "4207424:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207532:sub_4033ac": null, "4207536:cgc_memcmp": "int cgc_memcmp(char *v4, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v2) == *(v1))\n
                v0 = a1;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
        a1 -= 1;\n
    }\n
    v2 -= 1;\n
    v1 -= 1;\n
    v3 = *(v2) - *(v1);\n
    return v3;\n
}\n
", "4207736:sub_403478": null, "4207744:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4207852:sub_4034ec": null, "4207856:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4208051:sub_4035b3": null, "4208064:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4208141:sub_40360d": null, "4208144:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == a0)\n
            return v4;\n
        v4[v5] = v2;\n
        v4 += 1;\n
    }\n
}\n
", "4208336:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4208495:sub_40376f": null, "4208496:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4208695:sub_403837": null, "4208704:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2, cgc_strlen(v5));\n
}\n
", "4208787:sub_403893": null, "4208800:cgc_fpai_add_pixel": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_add_pixel()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8]\n
    struct_0 *v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return;\n
    }\n
    else if (*(&v5))\n
    {\n
        v0 = v4->field_18 - 1;\n
        if (v0 > 6)\n
        {\n
            v3 = 0;\n
            return;\n
        }\n
        goto *(((stack_base)[28] + (stack_base)[32] * 4 - 10216)) + (stack_base)[28];\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return;\n
    }\n
}\n
", "4209206:sub_403a36": null, "4209216:cgc_fpai_display_img": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[15];\n
    unsigned int field_10;\n
    struct struct_0 *field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_display_img()\n
{\n
    unsigned int v0;  // [bp-0xa8]\n
    unsigned int v1;  // [bp-0xa4]\n
    char v2;  // [bp-0x97]\n
    void* v3;  // [bp-0x38]\n
    void* v4;  // [bp-0x34]\n
    void* v5;  // [bp-0x30]\n
    void* v6;  // [bp-0x2c]\n
    void* v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x8]\n
    struct_0 *v10;  // [bp+0x4]\n
    unsigned int v28;  // ebx\n
\n
    v8 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    memcpy(&v2, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~[ERROR] Checksum failed\\n
\", 95);\n
    if (!v10)\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (!cgc_fpai_read_magic())\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (!cgc_fpai_read_xaxis())\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (!cgc_fpai_read_yaxis())\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (!cgc_fpai_read_axist())\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (!cgc_fpai_read_cksum(v10))\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (!cgc_fpai_read_nbits(v10, 1))\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    else if (cgc_fpai_calc_cksum())\n
    {\n
        v0 = v10->field_18 - 1;\n
        if (v0 > 6)\n
        {\n
            v7 = 0;\n
            return;\n
        }\n
        goto *(((stack_base)[164] + (stack_base)[168] * 4 - 10188)) + (stack_base)[164];\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 10065);\n
        v7 = 0;\n
        return;\n
    }\n
}\n
", "4210571:sub_403f8b": null, "4210576:cgc_fpai_read_magic": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_read_magic(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    else if (cgc_fpai_read_check(v4))\n
    {\n
        v0 = &v2;\n
        if (!cgc_fpai_read_nbits(v4, 32))\n
        {\n
            v2 = 0;\n
            v3 = v2;\n
            return v3;\n
        }\n
        else if (v2 >> 24 != 222)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2 >> 16 != 182)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2 >> 8 != 217)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2 == 85)\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    else\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
}\n
", "4210874:sub_4040ba": null, "4210880:cgc_fpai_read_xaxis": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_read_xaxis(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_fpai_read_check(v5))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = &v2;\n
    if (!cgc_fpai_read_nbits(v5, 6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5->field_10 = *(&v2);\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4211019:sub_40414b": null, "4211024:cgc_fpai_read_yaxis": "typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_read_yaxis(struct_1 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_fpai_read_check(v4))\n
    {\n
        v0 = &v2;\n
        if (!cgc_fpai_read_nbits(v4, 6))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v4->field_14 = v2;\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
}\n
", "4211194:sub_4041fa": null, "4211200:cgc_fpai_read_axist": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_read_axist(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_fpai_read_check(v4))\n
    {\n
        v0 = &v2;\n
        if (!cgc_fpai_read_nbits(v4, 3))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(&v2) != 5 && *(&v2) != 6 && *(&v2))\n
        {\n
            v4->field_18 = *(&v2);\n
            v3 = *(&v2);\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4211406:sub_4042ce": null, "4211408:cgc_fpai_read_cksum": "typedef struct struct_1 {\n
    char padding_0[28];\n
    unsigned short field_1c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_read_cksum(struct_1 *v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!cgc_fpai_read_check(v5))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = &v2;\n
    if (!cgc_fpai_read_nbits(v5, 16))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5->field_1c = v2;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4211562:sub_40436a": null, "4211568:cgc_fpai_read_nbits": "int cgc_fpai_read_nbits(unsigned int v2[4], unsigned int a0, unsigned int *a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3[4];  // eax\n
\n
    if (a0 > 32)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (v2 && a1)\n
    {\n
        for (v0 = 0; a0; a0 -= 1)\n
        {\n
            v0 = v0 * 2 | *((v2[0] + v2[2])) >> ((7 - v2[3]) & 31) & 1;\n
            v2[3] = (v2[3] + 1 >> 31 CONCAT v2[3] + 1) /m 8 >> 32;\n
            if (!v2[3])\n
            {\n
                v3 = v2;\n
                v3[2] = v3[2] + 1;\n
            }\n
        }\n
        *(a1) = v0;\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4211787:sub_40444b": null, "4211792:cgc_fpai_calc_cksum": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[12];\n
    unsigned short field_1c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_calc_cksum(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short *v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned short v3;  // [bp-0x12]\n
    unsigned short *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6->field_c)\n
    {\n
        v2 = v6->field_4 - v6->field_8;\n
        if ((v2 >> 31 CONCAT v2) /m 2 >> 32)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v4 = v6->field_0 + v6->field_8;\n
        v7 = v2;\n
        for (v2 = (v7 >> 31 CONCAT v7) /m 2; v1 < v2; v1 = v1 + 1)\n
        {\n
            v3 += *((v4 + v1 * 2));\n
        }\n
        if (v3 == v6->field_1c)\n
        {\n
            v5 = 1;\n
            return v5;\n
        }\n
        cgc_printf(v0 - 10065);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4212076:sub_40456c": null, "4212080:cgc_fpai_read_pixel": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpai_read_pixel(unsigned int v7[4], unsigned int *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_check(v7))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_nbits(v7, 1, &v5))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_check(v7))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_nbits(v7, 6, &v4))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_check(v7))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_nbits(v7, 1, &v3))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_check(v7))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_nbits(v7, 6, &v2))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_check(v7))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_fpai_read_nbits(v7, 7, &v1))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v1 <= 94)\n
    {\n
        if (v5)\n
            v4 *= -1;\n
        if (v3)\n
            v2 *= -1;\n
        *(a0) = v4;\n
        *(a1) = v2;\n
        *(a2) = v1 + 32;\n
        v6 = 1;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4212700:sub_4047dc": null, "4212704:cgc_fpai_read_check": "int cgc_fpai_read_check(unsigned int v4[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v4[0])\n
    {\n
        v2 = v4[1] * 8;\n
        v1 = v4[2] * 8;\n
        v1 = v4[3] + v1;\n
        v0 = v2 - v1;\n
        if (a0 <= v0)\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4212846:sub_40486e": null, "4212848:cgc_fpti_add_pixel": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_add_pixel(struct_0 *v9, unsigned int a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    char *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    char v6;  // [bp-0x11]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10;  // eax\n
    unsigned int v12;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 0;\n
    if (!v9)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (a2)\n
    {\n
        if (a5 == 1)\n
        {\n
            v7 = a3 * -(a1) + a0;\n
        }\n
        else if (a5 == 2)\n
        {\n
            v7 = a3 * -(a1) + a3 - 1 + a0;\n
        }\n
        else if (a5 == 3)\n
        {\n
            v7 = a3 * (a4 - 1 - a1) + a0;\n
        }\n
        else if (a5 == 4)\n
        {\n
            v7 = a3 * (a4 - 1 - a1) + a3 - 1 + a0;\n
        }\n
        else if (a5 == 7)\n
        {\n
            v10 = a3;\n
            v5 = (v10 >> 31 CONCAT v10) /m 2;\n
            v12 = a4;\n
            v4 = (v12 >> 31 CONCAT v12) /m 2;\n
            v3 = a3 * v4 + v5;\n
            v7 = v3 + a3 * -(a1) + a0;\n
        }\n
        else\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        if (!v9->field_10)\n
        {\n
            v6 = 46;\n
        }\n
        else if (v9->field_10 == 1)\n
        {\n
            v6 = 42;\n
        }\n
        else if (v9->field_10 == 2)\n
        {\n
            v6 = 35;\n
        }\n
        else if (v9->field_10 == 3)\n
        {\n
            v6 = 43;\n
        }\n
        if (v7 <= a4 * a3)\n
        {\n
            a2[v7] = v6;\n
            v8 = 1;\n
            return v8;\n
        }\n
        v0 = v7;\n
        v1 = a4 * a3;\n
        cgc_printf(v2 - 9948);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4213401:sub_404a99": null, "4213408:cgc_fpti_display_img": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_display_img()\n
{\n
    struct_0 *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    void* v3;  // [bp-0x44]\n
    void* v4;  // [bp-0x40]\n
    void* v5;  // [bp-0x3c]\n
    void* v6;  // [bp-0x38]\n
    void* v7;  // [bp-0x34]\n
    void* v8;  // [bp-0x30]\n
    void* v9;  // [bp-0x2c]\n
    void* v10;  // [bp-0x28]\n
    void* v11;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x20]\n
    void* v13;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v17;  // [bp+0x4]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v17)\n
    {\n
        v15 = 0;\n
        return;\n
    }\n
    else if (cgc_fpti_read_magic())\n
    {\n
        v14 = cgc_fpti_read_xaxis();\n
        if (!v14)\n
        {\n
            v15 = v14;\n
            return;\n
        }\n
        v13 = cgc_fpti_read_yaxis();\n
        if (!v13)\n
        {\n
            v15 = v13;\n
            return;\n
        }\n
        else if (cgc_fpti_read_ptype(v17))\n
        {\n
            v11 = cgc_fpti_read_axist();\n
            if (!v11)\n
            {\n
                v15 = v11;\n
                return;\n
            }\n
            else if (cgc_fpti_read_check(v17))\n
            {\n
                v0 = &v6;\n
                if (!cgc_fpti_read_nbits(v17, 15))\n
                {\n
                    v15 = 0;\n
                    return;\n
                }\n
                v1 = v11 - 1;\n
                if (v1 > 6)\n
                {\n
                    cgc_printf(v2 - 9911);\n
                    v15 = 0;\n
                    return;\n
                }\n
                goto *(((stack_base)[76] + (stack_base)[80] * 4 - 9976)) + (stack_base)[76];\n
            }\n
            else\n
            {\n
                v15 = 0;\n
                return;\n
            }\n
        }\n
        else\n
        {\n
            v12 = 0;\n
            v15 = v12;\n
            return;\n
        }\n
    }\n
    else\n
    {\n
        v15 = 0;\n
        return;\n
    }\n
}\n
", "4214655:sub_404f7f": null, "4214656:cgc_fpti_read_magic": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_magic(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!cgc_fpti_read_check(v5))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = &v2;\n
    if (!cgc_fpti_read_nbits(v5, 32))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v2 == 617082501)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4214819:sub_405023": null, "4214832:cgc_fpti_read_xaxis": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_xaxis(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v3)\n
    {\n
        return v2;\n
    }\n
    else if (!cgc_fpti_read_check(v3))\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = &v2;\n
        if (!cgc_fpti_read_nbits(v3, 6))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        return v2;\n
    }\n
}\n
", "4214979:sub_4050c3": null, "4214992:cgc_fpti_read_yaxis": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_yaxis(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v3)\n
    {\n
        return v2;\n
    }\n
    else if (!cgc_fpti_read_check(v3))\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = &v2;\n
        if (!cgc_fpti_read_nbits(v3, 6))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        return v2;\n
    }\n
}\n
", "4215139:sub_405163": null, "4215152:cgc_fpti_read_ptype": "typedef struct struct_1 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_ptype(struct_1 *v5, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v2 = cgc_fpti_read_check(v5);\n
    if (!v2)\n
    {\n
        v4 = v2;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    v2 = cgc_fpti_read_nbits(v5, 2);\n
    if (!v2)\n
    {\n
        v4 = v2;\n
        return v4;\n
    }\n
    *(a0) = v3;\n
    v5->field_10 = v3;\n
    v4 = v2;\n
    return v4;\n
}\n
", "4215349:sub_405235": null, "4215360:cgc_fpti_read_axist": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_axist(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v3)\n
        return v2;\n
    v2 = cgc_fpti_read_check(v3);\n
    if (!v2)\n
        return v2;\n
    v0 = &v2;\n
    if (!cgc_fpti_read_nbits(v3, 3))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4215511:sub_4052d7": null, "4215520:cgc_fpti_read_check": "int cgc_fpti_read_check(unsigned int v3[4], unsigned int a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!v3[0])\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 <= 32)\n
    {\n
        v1 = v3[1] * 8;\n
        v0 = v3[2] * 8 + v3[3] + a0;\n
        if (v1 < v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4215686:sub_405386": null, "4215696:cgc_fpti_read_nbits": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_nbits(unsigned int v6[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7[4];  // eax\n
    unsigned int v8[4];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (a0 > 32)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_fpti_read_check(v6, a0))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v2 > a0)\n
    {\n
        v0 = *((v6[0] + v6[2])) >> ((v2 - a0) & 31);\n
        v3 = v0 & cgc_expi(2, a0) - 1;\n
        v6[3] = (v6[3] + a0 >> 31 CONCAT v6[3] + a0) /m 8 >> 32;\n
        if (!v6[3])\n
        {\n
            v8 = v6;\n
            v8[2] = v8[2] + 1;\n
        }\n
        *(a1) = v3;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v2 = 8 - v6[3]; v4 < a0; v4 += 1)\n
        {\n
            v2 = *((v6[0] + v6[2]));\n
            v2 = v2 >> ((7 - v6[3]) & 31) & 1;\n
            v3 = v3 * 2 | v2;\n
            v6[3] = (v6[3] + 1 >> 31 CONCAT v6[3] + 1) /m 8 >> 32;\n
            if (!v6[3])\n
            {\n
                v7 = v6;\n
                v7[2] = v7[2] + 1;\n
            }\n
        }\n
        *(a1) = v3;\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4216144:cgc_fpti_read_pixel": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fpti_read_pixel(unsigned int v6[4], unsigned int *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
        return v5;\n
    if (!(a0 && a1))\n
        return v5;\n
    if (!cgc_fpti_read_check(v6, 14))\n
    {\n
        return v5;\n
    }\n
    else if (!cgc_fpti_read_nbits(v6, 1, &v2))\n
    {\n
        return v5;\n
    }\n
    else if (!cgc_fpti_read_nbits(v6, 6, &v3))\n
    {\n
        return v5;\n
    }\n
    else if (!cgc_fpti_read_nbits(v6, 1, &v1))\n
    {\n
        return v5;\n
    }\n
    else if (!cgc_fpti_read_nbits(v6, 6, &v4))\n
    {\n
        return v5;\n
    }\n
    else\n
    {\n
        if (v2 == 1)\n
            v3 *= -1;\n
        if (v1 == 1)\n
            v4 *= -1;\n
        *(a0) = v3;\n
        *(a1) = v4;\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4216524:sub_4056cc": null, "4216528:cgc_rpti_add_pixel": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_add_pixel()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc]\n
    unsigned int v8;  // [bp+0x4]\n
    char v9;  // [bp+0x10]\n
    char v10;  // [bp+0x14]\n
    char v11;  // [bp+0x18]\n
    unsigned int v23;  // eax\n
    unsigned int v25;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v23 = *(&v10);\n
    v4 = (v23 >> 31 CONCAT v23) /m 2;\n
    v25 = *(&v11);\n
    v3 = (v25 >> 31 CONCAT v25) /m 2;\n
    v2 = 0;\n
    if (!v8)\n
    {\n
        v6 = 0;\n
        return;\n
    }\n
    v0 = *(&v9) - 1;\n
    if (v0 > 6)\n
    {\n
        v6 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[32] + (stack_base)[36] * 4 - 9836)) + (stack_base)[32];\n
}\n
", "4216892:sub_40583c": null, "4216896:cgc_rpti_display_img": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_display_img()\n
{\n
    struct_0 *v0;  // [bp-0x78], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    void* v3;  // [bp-0x54]\n
    void* v4;  // [bp-0x50]\n
    void* v5;  // [bp-0x4c]\n
    void* v6;  // [bp-0x48]\n
    void* v7;  // [bp-0x44]\n
    void* v8;  // [bp-0x40]\n
    void* v9;  // [bp-0x3c]\n
    void* v10;  // [bp-0x38]\n
    void* v11;  // [bp-0x34]\n
    void* v12;  // [bp-0x30]\n
    void* v13;  // [bp-0x2c]\n
    void* v14;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x1c]\n
    void* v18;  // [bp-0x18]\n
    void* v19;  // [bp-0x14]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v22;  // [bp+0x4]\n
    unsigned int v48;  // ebx\n
\n
    v20 = v48;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!cgc_rpti_read_magic())\n
    {\n
        cgc_printf(v2 - 9745);\n
        v19 = 0;\n
        return;\n
    }\n
    v15 = cgc_rpti_read_xaxis();\n
    if (!v15)\n
    {\n
        cgc_printf(v2 - 0x2600);\n
        v19 = 0;\n
        return;\n
    }\n
    v14 = cgc_rpti_read_yaxis();\n
    if (!v14)\n
    {\n
        cgc_printf(v2 - 9712);\n
        v19 = 0;\n
        return;\n
    }\n
    v0 = &v13;\n
    if (!cgc_rpti_read_initx(v22))\n
    {\n
        cgc_printf(v2 - 9696);\n
        v19 = 0;\n
        return;\n
    }\n
    v0 = &v12;\n
    if (!cgc_rpti_read_inity(v22))\n
    {\n
        cgc_printf(v2 - 9679);\n
        v19 = 0;\n
        return;\n
    }\n
    v16 = cgc_rpti_read_axist();\n
    if (!v16)\n
    {\n
        cgc_printf(v2 - 9662);\n
        v19 = 0;\n
        return;\n
    }\n
    v0 = 3;\n
    if (!cgc_rpti_inc_index(v22))\n
    {\n
        v19 = 0;\n
        return;\n
    }\n
    v1 = v16 - 1;\n
    if (v1 > 6)\n
    {\n
        cgc_printf(v2 - 9646);\n
        v19 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[92] + (stack_base)[96] * 4 - 9808)) + (stack_base)[92];\n
}\n
", "4218412:sub_405e2c": null, "4218416:cgc_rpti_read_magic": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_magic(unsigned int v3[4])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v3[0])\n
    {\n
        if (!v3[2] && !v3[3])\n
        {\n
            if (cgc_rpti_read_check(v3))\n
            {\n
                cgc_memcpy(&v1, v3[0], 4);\n
                if (v1 != 3276868051)\n
                {\n
                    v2 = 0;\n
                    return v2;\n
                }\n
                else if (cgc_rpti_inc_index(v3))\n
                {\n
                    v2 = 1;\n
                    return v2;\n
                }\n
                else\n
                {\n
                    v2 = 0;\n
                    return v2;\n
                }\n
            }\n
            else\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4218690:sub_405f42": null, "4218704:cgc_rpti_read_xaxis": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_xaxis(unsigned int *v4)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (*(v4))\n
    {\n
        v0 = &v2;\n
        if (!cgc_rpti_read_bits(v4, 6))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4218847:sub_405fdf": null, "4218848:cgc_rpti_read_yaxis": "int cgc_rpti_read_yaxis(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (!cgc_rpti_read_bits(v2, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4218939:sub_40603b": null, "4218944:cgc_rpti_read_initx": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_initx(unsigned int *v5, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!*(v5))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v0 = &v2;\n
        if (!cgc_rpti_read_bits(v5, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v3;\n
        if (!cgc_rpti_read_bits(v5, 6))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == 1)\n
            v3 *= -1;\n
        *(a0) = v3;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4219195:sub_40613b": null, "4219200:cgc_rpti_read_inity": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_inity(unsigned int *v5, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!*(v5))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v0 = &v2;\n
        if (!cgc_rpti_read_bits(v5, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = &v3;\n
        if (!cgc_rpti_read_bits(v5, 6))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == 1)\n
            v3 *= -1;\n
        *(a0) = v3;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4219451:sub_40623b": null, "4219456:cgc_rpti_read_axist": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_axist(unsigned int *v3)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v3)\n
    {\n
        return v2;\n
    }\n
    else if (!*(v3))\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = &v2;\n
        if (!cgc_rpti_read_bits(v3, 3))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (!(v2 > 4 && v2 < 7))\n
            return v2;\n
        v2 = 0;\n
    }\n
}\n
", "4219611:sub_4062db": null, "4219616:cgc_rpti_inc_index": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_inc_index(unsigned int v4[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
    unsigned int v6[4];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v4[0])\n
    {\n
        v0 = a0;\n
        if (!cgc_rpti_read_check(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v4[3] + a0;\n
        v2 = (v5 >> 31 CONCAT v5) /m 8;\n
        if (v2 > 0)\n
        {\n
            v6 = v4;\n
            v6[2] = v2 + v6[2];\n
        }\n
        v4[3] = (v4[3] + a0 >> 31 CONCAT v4[3] + a0) /m 8 >> 32;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4219820:sub_4063ac": null, "4219824:cgc_rpti_read_pixel": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_pixel(unsigned int *v6, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!*(v6))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (a0)\n
    {\n
        v0 = &v4;\n
        if (!cgc_rpti_read_bits(v6, 7))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v3;\n
        if (!cgc_rpti_read_bits(v6, 7))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v2 = v4 * 128 | v3;\n
        *(a0) = v2;\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4220077:sub_4064ad": null, "4220080:cgc_rpti_read_bits": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rpti_read_bits(unsigned int v5[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[4];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 > 32)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_rpti_read_check(v5))\n
    {\n
        for (v0 = a0; a0; a0 -= 1)\n
        {\n
            v2 = *((v5[0] + v5[2]));\n
            v2 = (v2 >> ((7 - v5[3]) & 31)) & 1;\n
            v5[3] = (v5[3] + 1 >> 31 CONCAT v5[3] + 1) /m 8 >> 32;\n
            if (!v5[3])\n
            {\n
                v6 = v5;\n
                v6[2] = v6[2] + 1;\n
            }\n
            v3 = v3 * 2 | v2;\n
        }\n
        *(a1) = v3;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4220364:sub_4065cc": null, "4220368:cgc_rpti_read_check": "int cgc_rpti_read_check(unsigned int v1[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!v1[0])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if ((v1[1] << 3) - ((v1[2] << 3) + v1[3]) < a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4220486:sub_406646": null, "4220496:cgc_readData": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readData(unsigned int *v6)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = &v3;\n
    if (cgc_receive(0, &v4, 2))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 > 0x800)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!cgc_allocate(v4, 0))\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(0, v2, v4))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (v3 == v4)\n
        {\n
            *(v6) = v2;\n
            v5 = v3;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4220807:sub_406787": null, "4220816:cgc_selectRenderer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_selectRenderer(unsigned int v15[6])\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    char v1;  // [bp-0xb4]\n
    unsigned int v2;  // [bp-0xb0]\n
    char v3;  // [bp-0x94]\n
    unsigned int v4;  // [bp-0x90]\n
    char v5;  // [bp-0x64]\n
    unsigned int v6;  // [bp-0x60]\n
    char v7;  // [bp-0x54]\n
    unsigned int v8;  // [bp-0x50]\n
    char v9;  // [bp-0x3c]\n
    unsigned int v10;  // [bp-0x38]\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x14]\n
    char v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v15)\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (!v15[5])\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    else if (v15[4] >= 4)\n
    {\n
        v12 = v15[5];\n
        v11 = v15[4];\n
        cgc_memcpy(&v13, v12, 4);\n
        if (*(&v13) == 1440331486)\n
        {\n
            cgc_memset(&v9, 0, 32);\n
            *(&v9) = v12;\n
            v10 = v11;\n
            if (!cgc_fpai_display_img(&v9, 0))\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
        }\n
        else if (*(&v13) == 2247018276)\n
        {\n
            cgc_memset(&v7, 0, 20);\n
            *(&v7) = v12;\n
            v8 = v11;\n
            if (!cgc_fpti_display_img(&v7, 0))\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
        }\n
        else if (*(&v13) == 3276868051)\n
        {\n
            cgc_memset(&v5, 0, 16);\n
            *(&v5) = v12;\n
            v6 = v11;\n
            if (!cgc_rpti_display_img(&v5, 0))\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
        }\n
        else if (*(&v13) == 1994376368)\n
        {\n
            cgc_memset(&v3, 0, 48);\n
            *(&v3) = v12;\n
            v4 = v11;\n
            if (!cgc_tbir_display_img(&v3, 0))\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
        }\n
        else if (*(&v13) != 823089611)\n
        {\n
            cgc_printf(v0 - 9592);\n
        }\n
        else\n
        {\n
            cgc_memset(&v1, 0, 32);\n
            *(&v1) = v12;\n
            v2 = v11;\n
            if (!cgc_tpai_display_image(&v1, 0))\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
        }\n
        v14 = 1;\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
}\n
", "4221567:sub_406a7f": null, "4221568:cgc_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_menu()\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x40]\n
    void* v3;  // [bp-0x3c]\n
    void* v4;  // [bp-0x38]\n
    char v5;  // [bp-0x34], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x28]\n
    char v7;  // [bp-0x24]\n
    void* v8;  // [bp-0x14]\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebx\n
\n
    v11 = v13;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = 0;\n
    cgc_bzero(&v5, 28);\n
    while (true)\n
    {\n
        cgc_printf(v1 - 9568);\n
        cgc_printf(v1 - 9551);\n
        cgc_printf(v1 - 9535);\n
        cgc_printf(v1 - 9518);\n
        cgc_printf(v1 - 9500);\n
        cgc_printf(v1 - 9490);\n
        v9 = 0;\n
        if (!cgc_receive_until(&v9, 10, 2))\n
        {\n
            cgc_printf(v1 - 9487);\n
            v10 = 0;\n
            v14 = v11;\n
            return v10;\n
        }\n
        v9 -= 48;\n
        v0 = v9 - 1;\n
        if (v0 <= 4)\n
        {\n
            v3 = 0;\n
            v2 = -(*(&v6)) + 1;\n
            v5 = *(&v7) - 1;\n
            v4 = 0;\n
        }\n
        cgc_printf(v1 - 9138);\n
    }\n
}\n
", "4221844:sub_406b94": "int sub_406b94()\n
{\n
    char v0;  // [bp-0x4c]\n
    void* v1;  // [bp-0x44], Other Possible Types: char\n
    char v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    void* v5;  // [bp-0x8]\n
    unsigned int v7;  // [bp+0xc]\n
\n
    if (cgc_allocate(28, 0))\n
    {\n
        cgc_printf(*(&v0) - 9456);\n
        v5 = 0;\n
    }\n
    cgc_memset(*(&v1), 0, 28);\n
    cgc_printf(*(&v0) - 9421);\n
    if (!cgc_receive_until(*(&v1), 10, 15))\n
    {\n
        cgc_printf(*(&v0) - 9408);\n
        cgc_deallocate(*(&v1));\n
        v5 = 0;\n
    }\n
    v7 = &v3;\n
    if (cgc_receive(0, &v4, 2))\n
    {\n
        cgc_printf(*(&v0) - 9379);\n
        cgc_deallocate(*(&v1));\n
        v5 = 0;\n
    }\n
    else if (*(&v4) > 0x800)\n
    {\n
        cgc_printf(*(&v0) - 9348);\n
        cgc_deallocate(*(&v1));\n
    }\n
    else if (cgc_allocate(*(&v4) + 1, 0))\n
    {\n
        cgc_printf(*(&v0) - 9317);\n
        cgc_deallocate(*(&v1));\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v7 = &v3;\n
        if (cgc_receive(0, *((*(&v1) + 20)), *(&v4)))\n
        {\n
            cgc_printf(*(&v0) - 9276);\n
            cgc_deallocate(*((*(&v1) + 20)));\n
            cgc_deallocate(*(&v1));\n
            v5 = 0;\n
        }\n
        *((*(&v1) + 16)) = *(&v4);\n
        *((*(&v1) + 24)) = *(&v2);\n
        v2 = *(&v1);\n
        v1 = 0;\n
    }\n
}\n
", "4222470:sub_406e06": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
int sub_406e06()\n
{\n
    char v0;  // [bp-0x4c]\n
    struct_0 *v1;  // [bp-0x44], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp+0x4]\n
\n
    for (v1 = *(&v2); v1; v1 = v1->field_18)\n
    {\n
        v3 = v1;\n
        cgc_printf(*(&v0) - 9238);\n
    }\n
}\n
", "4222529:sub_406e41": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
int sub_406e41()\n
{\n
    char v0;  // [bp-0x4c]\n
    struct_0 *v1;  // [bp-0x48]\n
    struct_0 *v2;  // [bp-0x44]\n
    char v3;  // [bp-0x40]\n
    char v4;  // [bp-0x30]\n
    char v5;  // [bp-0x18]\n
\n
    cgc_printf(*(&v0) - 9421);\n
    cgc_bzero(&v3, 16);\n
    if (!cgc_receive_until(&v3, 10, 15))\n
    {\n
        cgc_printf(*(&v0) - 9234);\n
    }\n
    else\n
    {\n
        v2 = *(&v5);\n
        v1 = &v4;\n
        while (v2)\n
        {\n
            if (!cgc_strcmp(v2, &v3))\n
            {\n
                cgc_deallocate(v2->field_14);\n
                v1->field_18 = v2->field_18;\n
                cgc_deallocate(v2);\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v1 = v2;\n
                v2 = v2->field_18;\n
            }\n
        }\n
    }\n
}\n
", "4222782:sub_406f3e": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
int sub_406f3e()\n
{\n
    char v0;  // [bp-0x4c]\n
    struct_0 *v1;  // [bp-0x44], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x40]\n
    char v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x8]\n
\n
    cgc_printf(*(&v0) - 9421);\n
    cgc_bzero(&v2, 16);\n
    if (!cgc_receive_until(&v2, 10, 15))\n
    {\n
        cgc_printf(*(&v0) - 9234);\n
    }\n
    else\n
    {\n
        for (v1 = *(&v3); v1; v1 = *((v1 + 24)))\n
        {\n
            if (!cgc_strcmp(v1, &v2))\n
                break;\n
        }\n
        if (!v1)\n
        {\n
            cgc_printf(*(&v0) - 9170);\n
        }\n
        else if (!cgc_selectRenderer(v1))\n
        {\n
            cgc_printf(*(&v0) - 9202);\n
            v4 = 0;\n
        }\n
    }\n
}\n
", "4223036:sub_40703c": "int sub_40703c()\n
{\n
    void* v0;  // [bp-0x8]\n
\n
    v0 = 0;\n
}\n
", "4223086:sub_40706e": null, "4223088:main": "int main(unsigned int v4, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    cgc_menu();\n
    return 0;\n
}\n
", "4223154:sub_4070b2": null, "4223168:cgc_tbir_read_chksum": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_chksum(unsigned int v4[12])\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[12];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = &v2;\n
    if (!cgc_tbir_read_nbits(v4, 32))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((v4[11] & 0x10000) && v4[10] != v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v4[10] = v2;\n
    v5 = v4;\n
    v5[11] = v5[11] | 0x100000;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4223364:sub_407184": null, "4223376:cgc_tbir_read_nbits": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_nbits(unsigned int v5[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6[4];  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10[4];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_tbir_read_check(v5))\n
    {\n
        v2 = 8 - v5[3];\n
        if (v2 > a0)\n
        {\n
            v3 = *((v5[0] + v5[2]));\n
            v3 >>= (v2 - a0) & 31;\n
            v0 = v3;\n
            v3 = v0 & cgc_expi(2, a0) - 1;\n
            v6 = v5;\n
            v6[3] = a0 + v6[3];\n
            *(a1) = v3;\n
            v4 = 1;\n
            return v4;\n
        }\n
        for (v3 = 0; a0; a0 -= 1)\n
        {\n
            v3 *= 2;\n
            v3 |= *((v5[0] + v5[2])) >> ((7 - v5[3]) & 31) & 1;\n
            v7 = v5[3] + 1;\n
            v9 = (v7 >> 31 CONCAT v7) /m 8;\n
            v10 = v5;\n
            v10[2] = v9 + v10[2];\n
            v5[3] = (v5[3] + 1 >> 31 CONCAT v5[3] + 1) /m 8 >> 32;\n
        }\n
        *(a1) = v3;\n
        v4 = 1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4223760:cgc_tbir_read_pixels": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    struct struct_1 *field_20;\n
    unsigned int field_24;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char *field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_tbir_read_pixels()\n
{\n
    unsigned int v0;  // [bp-0x110]\n
    unsigned int v1;  // [bp-0xe4]\n
    char v2;  // [bp-0xe0]\n
    void* v3;  // [bp-0xdc]\n
    unsigned int v4;  // [bp-0xd0]\n
    void* v5;  // [bp-0xcc]\n
    unsigned int *v6;  // [bp-0xc8], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc0], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xbc]\n
    unsigned int v9;  // [bp-0xb8]\n
    char v10;  // [bp-0xb3]\n
    char v11;  // [bp-0x54]\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x8]\n
    struct_2 *v15;  // [bp+0x4]\n
    unsigned int v33;  // ebx\n
    unsigned int v100[12];  // eax\n
    unsigned int v101;  // eax\n
\n
    v13 = v33;\n
    strncpy(&v2, \" #*@ .\", 6);\n
    memcpy(&v11, \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ #*@Dword count too hight: @d @d @d\\n
\", 62);\n
    memcpy(&v10, *(&v2) - 8984, 95);\n
    v7 = 0;\n
    v6 = 0;\n
    if (!v15)\n
    {\n
        v12 = 0;\n
        return;\n
    }\n
    if ((v15->field_2c & 1) && (v15->field_2c & 16) && (v15->field_2c & 0x100) && (v15->field_2c & 0x1000))\n
    {\n
        if (v15->field_c)\n
        {\n
            v12 = 0;\n
            return;\n
        }\n
        v100 = v15;\n
        v100[11] = v100[11] | 0x10000;\n
        v9 = v15->field_18 * v15->field_14 * v15->field_10;\n
        v4 = (v9 + 31 & -32) - v9;\n
        v101 = v9 + v4;\n
        v9 = (v101 >> 31 CONCAT v101) /m 32;\n
        if ((v9 << 2) + v15->field_8 > v15->field_4)\n
        {\n
            v0 = v15->field_4;\n
            cgc_printf(*(&v2) - 8885);\n
            v12 = 0;\n
            return;\n
        }\n
        v8 = v15->field_0 + v15->field_8;\n
        while (true)\n
        {\n
            if (v6 < v9)\n
            {\n
                v7 ^= *((v8 + v6 * 4));\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                if (!(v15->field_2c & 0x100000))\n
                {\n
                    v15->field_28 = v7;\n
                }\n
                else if (v7 != v15->field_28)\n
                {\n
                    v12 = 0;\n
                    return;\n
                }\n
                v15->field_24 = v15->field_10 * v15->field_14;\n
                if (cgc_allocate(v15->field_24 + 1, 0))\n
                {\n
                    v12 = 0;\n
                    return;\n
                }\n
                cgc_memset(v15->field_20, 32, v15->field_24);\n
                v15->field_20[v15->field_24] = 0;\n
                v3 = 0;\n
                v5 = 0;\n
                if (v3 >= v15->field_24)\n
                {\n
                    if (cgc_tbir_read_nbits(v15, v4, &v6))\n
                    {\n
                        v12 = 1;\n
                        return;\n
                    }\n
                    cgc_deallocate(v15->field_20);\n
                    v15->field_20 = 0;\n
                    v15->field_24 = 0;\n
                    v12 = 0;\n
                    return;\n
                }\n
                if (!cgc_tbir_read_nbits(v15, v15->field_18, &v5))\n
                {\n
                    cgc_deallocate(v15->field_20);\n
                    v15->field_20 = 0;\n
                    v15->field_24 = 0;\n
                    v12 = 0;\n
                    return;\n
                }\n
                v1 = v15->field_1c;\n
                if (v1 > 7)\n
                {\n
                    cgc_deallocate(v15->field_20);\n
                    v15->field_20 = 0;\n
                    v15->field_24 = 0;\n
                    v12 = 0;\n
                    return;\n
                }\n
                goto *((*(&v2) + (stack_base)[228] * 4 - 9108)) + *(&v2);\n
            }\n
        }\n
    }\n
    v12 = 0;\n
    return;\n
}\n
", "4225373:sub_40795d": "int sub_40795d()\n
{\n
    unsigned int v0;  // [bp-0xd8], Other Possible Types: char\n
    char v1;  // [bp-0xc8]\n
    char v2;  // [bp-0xc4]\n
    char v3;  // [bp-0xe]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0x8]\n
\n
    if (*(&v1) > 1)\n
    {\n
        v5 = *((*(&v6) + 36)) + 1;\n
        cgc_deallocate(*((*(&v6) + 32)));\n
        *((*(&v6) + 32)) = 0;\n
        *((*(&v6) + 36)) = 0;\n
        v4 = *((*(&v6) + 36));\n
    }\n
    if (!(*(&v2) <= *((*(&v6) + 36)) + 1 && *(&v2) >= 0))\n
    {\n
        v5 = *((*(&v6) + 36)) + 1;\n
        cgc_deallocate(*((*(&v6) + 32)));\n
        *((*(&v6) + 32)) = 0;\n
        *((*(&v6) + 36)) = 0;\n
        v4 = *((*(&v6) + 36));\n
    }\n
    *((*((*(&v6) + 32)) + *(&v2))) = (&v3)[*(&v1)];\n
    v0 = *(&v0) + 1;\n
}\n
", "4226446:sub_407d8e": null, "4226448:cgc_tbir_read_flags": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_flags(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (!cgc_tbir_read_pixeltype())\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v4;\n
    if (!cgc_tbir_read_loadd())\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v6 = v4;\n
    v6->field_2c = v6->field_2c | 16;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4226568:sub_407e08": null, "4226576:cgc_tbir_read_pixeltype": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_pixeltype(unsigned int v3[12])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4[12];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        return v2;\n
    }\n
    else if (!cgc_tbir_read_nbits(v3, 4, &v1))\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        if (v1 <= 7)\n
        {\n
            if (v1 > 2 && v1 < 6)\n
                goto LABEL_407e99;\n
            if (v1)\n
            {\n
                v3[6] = v1;\n
                v4 = v3;\n
                v4[11] = v4[11] | 0x100;\n
                v2 = 1;\n
                return v2;\n
            }\n
        }\n
LABEL_407e99:\n
        return v2;\n
    }\n
}\n
", "4226758:sub_407ec6": null, "4226768:cgc_tbir_read_loadd": "int cgc_tbir_read_loadd(unsigned int v2[12])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v3[12];  // eax\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_tbir_read_nbits(v2, 4, &v1))\n
    {\n
        return v0;\n
    }\n
    else if (v1 > 8)\n
    {\n
        return v0;\n
    }\n
    else\n
    {\n
        v2[7] = v1;\n
        v3 = v2;\n
        v3[11] = v3[11] | 0x1000;\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4226899:sub_407f53": null, "4226912:cgc_tbir_display_img": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_display_img(unsigned int v6[12])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (cgc_tbir_read_magic())\n
    {\n
        v4 = cgc_tbir_read_typef();\n
        while (true)\n
        {\n
            if (!v4)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            v1 = v4;\n
            if (v1 == 43690)\n
            {\n
                if ((v6[11] & 1))\n
                {\n
                    cgc_printf(v2 - 8824);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                else if (!cgc_tbir_read_header())\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
            else\n
            {\n
                if (v1 == 43707)\n
                {\n
                    if ((v6[11] & 16))\n
                    {\n
                        cgc_printf(v2 - 8799);\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                    else if (!cgc_tbir_read_flags(v6))\n
                    {\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v1 != 43724)\n
                    {\n
                        if (v1 != 43741)\n
                            break;\n
                        if ((v6[11] & 0x100000))\n
                        {\n
                            cgc_printf(v2 - 8741);\n
                            v5 = 0;\n
                            return v5;\n
                        }\n
                        if (!cgc_tbir_read_chksum(v6))\n
                        {\n
                            v5 = 0;\n
                            return v5;\n
                        }\n
                    }\n
                    else if ((v6[11] & 0x10000))\n
                    {\n
                        cgc_printf(v2 - 8769);\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                    else if (!cgc_tbir_read_pixels())\n
                    {\n
                        v5 = 0;\n
                        return v5;\n
                    }\n
                }\n
            }\n
            v4 = cgc_tbir_read_typef();\n
        }\n
        if (v1 != 43758)\n
        {\n
            cgc_printf(v2 - 8676);\n
            v5 = 0;\n
            return v5;\n
        }\n
        if ((v6[11] & 1) && (v6[11] & 16) && (v6[11] & 0x10000) && (v6[11] & 0x100000))\n
        {\n
            for (v3 = 0; v3 < v6[9]; v3 += 1)\n
            {\n
                if (!(v3 >> 31 CONCAT v3) /m v6[4] >> 32 && v3)\n
                    cgc_printf(v2 - 9240);\n
                v0 = v3[v6[8]];\n
                cgc_printf(v2 - 9982);\n
            }\n
            cgc_printf(v2 - 9240);\n
            v5 = 1;\n
            return v5;\n
        }\n
        cgc_printf(v2 - 8708);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4227795:sub_4082d3": null, "4227808:cgc_tbir_read_magic": "int cgc_tbir_read_magic(unsigned int v2[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!cgc_tbir_read_nbits(v2, 32, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 2965692278)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4227918:sub_40834e": null, "4227920:cgc_tbir_read_typef": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_typef(unsigned int v5[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_tbir_read_nbits(v5, 16, &v2))\n
    {\n
        cgc_printf(v1 - 8660);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v2;\n
    if (v0 != 43690 && v0 != 43707 && v0 != 43724 && v0 != 43741 && v0 != 43758)\n
    {\n
        cgc_printf(v1 - 8644);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4228151:sub_408437": null, "4228160:cgc_tbir_read_header": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_header(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v3;\n
    if (!cgc_tbir_read_width())\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = v3;\n
    if (!cgc_tbir_read_height())\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v4 = v3;\n
    v4->field_2c = v4->field_2c | 1;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4228305:sub_4084d1": null, "4228320:cgc_tbir_read_width": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_width(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_tbir_read_nbits(v3, 8, &v1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v1 <= 128)\n
    {\n
        v3->field_10 = v1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4228474:sub_40857a": null, "4228480:cgc_tbir_read_height": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tbir_read_height(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v2)\n
    {\n
        return v1;\n
    }\n
    else if (!cgc_tbir_read_nbits(v2, 8, &v2->field_14))\n
    {\n
        return v1;\n
    }\n
    else if (v2->field_14 > 128)\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
}\n
", "4228610:sub_408602": null, "4228624:cgc_tbir_read_check": "int cgc_tbir_read_check(unsigned int v4[4], unsigned int a0)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        return v3;\n
    }\n
    else if (!v4[0])\n
    {\n
        return v3;\n
    }\n
    else if (a0 > 32)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v2 = v4[1] * 8;\n
        v1 = v4[2] * 8 + v4[3];\n
        v0 = v2 - v1;\n
        if (a0 > v0)\n
            return v3;\n
        v3 = 1;\n
    }\n
}\n
", "4228782:sub_4086ae": null, "4228784:cgc_tpai_read_pixel": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tpai_read_pixel(unsigned int v5, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    struct_0 *v1;  // [bp-0x70], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x6b]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    memcpy(&v2, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~[ERROR] Pixel out of bounds\\n
\", 95);\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_tpai_read_nbits(v5, 7))\n
    {\n
        if (v1 <= 95 && v1)\n
        {\n
            v1 += 1;\n
            *(a0) = (&v2)[v1];\n
            v3 = 1;\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4228996:sub_408784": null, "4229008:cgc_tpai_read_nbits": "int cgc_tpai_read_nbits(unsigned int v4[4], unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[4];  // eax\n
\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_tpai_read_check(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = a0; a0 > 0; a0 -= 1)\n
    {\n
        v1 = *((v4[0] + v4[2]));\n
        v1 >>= (7 - v4[3]) & 31;\n
        v1 &= 1;\n
        v2 = v2 * 2 | v1;\n
        v4[3] = (v4[3] + 1 >> 31 CONCAT v4[3] + 1) /m 8 >> 32;\n
        if (!v4[3])\n
        {\n
            v5 = v4;\n
            v5[2] = v5[2] + 1;\n
        }\n
    }\n
    *(a1) = v2;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4229249:sub_408881": null, "4229264:cgc_tpai_display_image": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tpai_display_image()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp+0x4]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v10)\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    else if (!cgc_tpai_read_magic())\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    else if (!cgc_tpai_read_width())\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    else if (!cgc_tpai_read_height())\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    else if (!cgc_tpai_read_loadd(v10))\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    else if (!cgc_tpai_skip_rsrvd())\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    else if (cgc_tpai_calc_checksum())\n
    {\n
        v7 = v10->field_14 * v10->field_10;\n
        if (cgc_allocate(v7 + 1, 0))\n
        {\n
            v9 = 0;\n
            return;\n
        }\n
        cgc_memset(v8, 32, v7);\n
        v8[v7] = 0;\n
        if (!cgc_tpai_read_pixel(v10, &v6))\n
        {\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            v0 = v10->field_18;\n
            if (v0 > 7)\n
            {\n
                cgc_deallocate(v8);\n
                v9 = 0;\n
                return;\n
            }\n
            goto *(((stack_base)[44] + (stack_base)[48] * 4 - 8632)) + (stack_base)[44];\n
        }\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return;\n
    }\n
    while (true)\n
    {\n
        if (v5 >= v7)\n
        {\n
            cgc_printf(v1 - 9240);\n
            cgc_deallocate(v8);\n
            v9 = 1;\n
            return;\n
        }\n
        if (!(0 CONCAT v5) /m v10->field_10 >> 32 && v5)\n
            cgc_printf(v1 - 9240);\n
        cgc_printf(v1 - 9982);\n
        v5 += 1;\n
    }\n
}\n
", "4229752:sub_408a78": "int sub_408a78()\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    char v6;  // [bp-0x10]\n
    char v7;  // [bp-0xc]\n
    void* v8;  // [bp-0x8]\n
    unsigned int v9;  // [bp+0x4]\n
    char v10;  // [bp+0x8]\n
\n
    v1 = (0 CONCAT *(&v3)) /m *((*(&v10) + 16));\n
    v2 = (0 CONCAT *(&v3)) /m *((*(&v10) + 16)) >> 32;\n
    v4 = *((*(&v10) + 16)) * v1 + v2;\n
    if (v4 > *(&v6))\n
    {\n
        cgc_printf(*(&v0) - 8505);\n
        v9 = *(&v6) + 1;\n
        cgc_deallocate(*(&v7));\n
        v8 = 0;\n
    }\n
    v4[*(&v7)] = *(&v5);\n
    v3 = *(&v3) + 1;\n
}\n
", "4230473:sub_408d49": null, "4230480:cgc_tpai_read_magic": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tpai_read_magic(unsigned int v3[4])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_tpai_read_nbits(v3, 32, &v1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v1 == 3411611441)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4230618:sub_408dda": null, "4230624:cgc_tpai_read_width": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_tpai_read_width(struct_0 *v2)\n
{\n
    void* v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (!cgc_tpai_read_nbits(v2, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v2->field_10 = v0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4230724:sub_408e44": null, "4230736:cgc_tpai_read_height": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int cgc_tpai_read_height(struct_0 *v2)\n
{\n
    void* v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (!cgc_tpai_read_nbits(v2, 6, &v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v2->field_14 = v0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4230836:sub_408eb4": null, "4230848:cgc_tpai_read_loadd": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tpai_read_loadd(struct_0 *v3, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_tpai_read_nbits(v3, 3, &v1))\n
    {\n
        *(a0) = v1;\n
        v3->field_18 = v1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
}\n
", "4230996:sub_408f54": null, "4231008:cgc_tpai_skip_rsrvd": "int cgc_tpai_skip_rsrvd(unsigned int v2[4])\n
{\n
    void* v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_tpai_read_nbits(v2, 17, &v0))\n
    {\n
        v0 = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!v0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4231128:sub_408fd8": null, "4231136:cgc_tpai_calc_checksum": "int cgc_tpai_calc_checksum(unsigned int v6[4])\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned short *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x12]\n
    unsigned short *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // eax\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6[3])\n
    {\n
        v4 = v6[1] - v6[2];\n
        if ((v4 & 1))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 2;\n
        v4 -= 1;\n
        if (v4 <= 0)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v3 = v6[0] + v6[2]; v1 < v4; v1 += 1)\n
        {\n
            v2 ^= *((v3 + v1 * 2));\n
        }\n
        if (*((v3 + (v4 << 1))) != v2)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = 1;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4231422:sub_4090fe": null, "4231424:cgc_tpai_read_check": "int cgc_tpai_read_check(unsigned int v2[4], unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!v2[0])\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a0 <= 32)\n
    {\n
        v0 = v2[3] + v2[2] * 8;\n
        if (v0 + a0 > v2[1] << 3)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4231584:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_deallocate": null, "5242912:cgc_log10": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}