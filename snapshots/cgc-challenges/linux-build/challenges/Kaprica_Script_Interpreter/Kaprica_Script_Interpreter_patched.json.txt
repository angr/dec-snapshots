{"4202496:_init": "extern struct_0 *g_40d88c;\n
\n
int _init()\n
{\n
    if (g_40d88c)\n
    {\n
        g_40d88c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:sub_402090": "int sub_402090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202646:sub_402096": null, "4202656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202699:sub_4020cb": null, "4202700:sub_4020cc": "int sub_4020cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202708:sub_4020d4": null, "4202720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 47027;\n
    v6 = v5 + 42;\n
    v7 = v5 + 42;\n
    if (v7 == v6)\n
        return v5 + 42;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202771:sub_402113": "int sub_402113()\n
{\n
}\n
", "4202777:sub_402119": "int sub_402119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 46963;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 42;\n
    v9 = (v6 + 42 - (v6 + 42) >> 31) + (42 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202855:sub_402167": "int sub_402167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40d888;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40d888)\n
    {\n
        v0 = __dso_handle;\n
        sub_402090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (v4)\n
    {\n
        v5 = a0;\n
        if (v5)\n
        {\n
            tmp_2 = v5;\n
            if (!([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>)))\n
            {\n
                v7 = v5 * v4;\n
                v8 = cgc_malloc();\n
                if (v8)\n
                {\n
                    v0 = v7;\n
                    return cgc_memset(v8, 0);\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4203038:sub_40221e": null, "4203040:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4203073:sub_402241": null, "4203088:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203107:sub_402263": null, "4203120:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203136:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203152:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203168:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4203182:sub_4022ae": null, "4203184:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4203206:sub_4022c6": null, "4203216:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4203238:sub_4022e6": null, "4203248:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4203270:sub_402306": null, "4203280:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4203302:sub_402326": null, "4203312:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[14480 + v0];\n
}\n
", "4203337:sub_402349": null, "4203344:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4203369:sub_402369": null, "4203376:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[14352 + v0];\n
}\n
", "4203401:sub_402389": null, "4203408:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203416:sub_402398": null, "4203424:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4203443:sub_4023b3": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4203475:sub_4023d3": null, "4203488:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4203567:sub_40242f": null, "4203568:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_40d9c0;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct_2 *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v12[6];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        if (v10 <= 31)\n
        {\n
            do\n
            {\n
                v11 = *(&(&cgc_free_lists)[4 * v10]);\n
                if (*(&(&cgc_free_lists)[4 * v10]))\n
                {\n
                    while (*(v11) < v9)\n
                    {\n
                        v11 = *((v11 + 8));\n
                        if (!v11)\n
                            goto LABEL_4024e2;\n
                    }\n
                }\n
LABEL_4024e2:\n
                v10 += 1;\n
            } while (v10 != 32);\n
            goto LABEL_402578;\n
        }\n
        v0 = &v2;\n
        if (cgc_allocate(0x40000, 0))\n
            return 0;\n
        v12 = *(&v2);\n
        if (!v12)\n
            return 0;\n
        v12[0] = 0x40000;\n
        v12[1] = 1;\n
        v12[3] = 0;\n
        v12[2] = 0;\n
        v12[5] = 0;\n
        v12[4] = 0;\n
        cgc_insert_into_flist();\n
        v11 = g_40d9c0;\n
LABEL_402578:\n
        cgc_remove_from_flist();\n
        v13 = *(v11) - v9;\n
        if (v13 < 49)\n
            return v11 + 24;\n
        v14 = v9 + v11;\n
        *((&v9->field_0 + v11)) = v13;\n
        *(&v9->padding_4[v11]) = 1;\n
        *((8 + &v9->field_0 + v11)) = 0;\n
        *(&v9->padding_c[v11]) = 0;\n
        *(v11) = v9;\n
        *((20 + &v9->field_0 + v11)) = v11;\n
        *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
        v15 = *((v11 + 16));\n
        if (v15)\n
            v15->field_14 = v14;\n
        *((v11 + 16)) = v14;\n
        cgc_insert_into_flist();\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            return v8 + 1;\n
        }\n
        return 0;\n
    }\n
}\n
", "4203994:sub_4025da": null, "4204000:cgc_get_size_class": "extern unsigned int g_40d8c4;\n
extern unsigned int g_40d8c8;\n
extern unsigned int g_40d8cc;\n
extern unsigned int g_40d8d0;\n
extern unsigned int g_40d8d4;\n
extern unsigned int g_40d8d8;\n
extern unsigned int g_40d8dc;\n
extern unsigned int g_40d8e0;\n
extern unsigned int g_40d8e4;\n
extern unsigned int g_40d8e8;\n
extern unsigned int g_40d8ec;\n
extern unsigned int g_40d8f0;\n
extern unsigned int g_40d8f4;\n
extern unsigned int g_40d8f8;\n
extern unsigned int g_40d8fc;\n
extern unsigned int g_40d900;\n
extern unsigned int g_40d904;\n
extern unsigned int g_40d908;\n
extern unsigned int g_40d90c;\n
extern unsigned int g_40d910;\n
extern unsigned int g_40d914;\n
extern unsigned int g_40d918;\n
extern unsigned int g_40d91c;\n
extern unsigned int g_40d920;\n
extern unsigned int g_40d924;\n
extern unsigned int g_40d928;\n
extern unsigned int g_40d92c;\n
extern unsigned int g_40d930;\n
extern unsigned int g_40d934;\n
extern unsigned int g_40d938;\n
extern unsigned int g_40d93c;\n
extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (size_class_limits >= v1)\n
        return v2;\n
    v2 = 1;\n
    if (g_40d8c4 < v1)\n
    {\n
        v2 = 2;\n
        if (g_40d8c8 < v1)\n
        {\n
            v2 = 3;\n
            if (g_40d8cc < v1)\n
            {\n
                v2 = 4;\n
                if (g_40d8d0 < v1)\n
                {\n
                    v2 = 5;\n
                    if (g_40d8d4 < v1)\n
                    {\n
                        v2 = 6;\n
                        if (g_40d8d8 < v1)\n
                        {\n
                            v2 = 7;\n
                            if (g_40d8dc < v1)\n
                            {\n
                                v2 = 8;\n
                                if (g_40d8e0 < v1)\n
                                {\n
                                    v2 = 9;\n
                                    if (g_40d8e4 < v1)\n
                                    {\n
                                        v2 = 10;\n
                                        if (g_40d8e8 < v1)\n
                                        {\n
                                            v2 = 11;\n
                                            if (g_40d8ec < v1)\n
                                            {\n
                                                v2 = 12;\n
                                                if (g_40d8f0 < v1)\n
                                                {\n
                                                    v2 = 13;\n
                                                    if (g_40d8f4 < v1)\n
                                                    {\n
                                                        v2 = 14;\n
                                                        if (g_40d8f8 < v1)\n
                                                        {\n
                                                            v2 = 15;\n
                                                            if (g_40d8fc < v1)\n
                                                            {\n
                                                                v2 = 16;\n
                                                                if (g_40d900 < v1)\n
                                                                {\n
                                                                    v2 = 17;\n
                                                                    if (g_40d904 < v1)\n
                                                                    {\n
                                                                        v2 = 18;\n
                                                                        if (g_40d908 < v1)\n
                                                                        {\n
                                                                            v2 = 19;\n
                                                                            if (g_40d90c < v1)\n
                                                                            {\n
                                                                                v2 = 20;\n
                                                                                if (g_40d910 < v1)\n
                                                                                {\n
                                                                                    v2 = 21;\n
                                                                                    if (g_40d914 < v1)\n
                                                                                    {\n
                                                                                        v2 = 22;\n
                                                                                        if (g_40d918 < v1)\n
                                                                                        {\n
                                                                                            v2 = 23;\n
                                                                                            if (g_40d91c < v1)\n
                                                                                            {\n
                                                                                                v2 = 24;\n
                                                                                                if (g_40d920 < v1)\n
                                                                                                {\n
                                                                                                    v2 = 25;\n
                                                                                                    if (g_40d924 < v1)\n
                                                                                                    {\n
                                                                                                        v2 = 26;\n
                                                                                                        if (g_40d928 < v1)\n
                                                                                                        {\n
                                                                                                            v2 = 27;\n
                                                                                                            if (g_40d92c < v1)\n
                                                                                                            {\n
                                                                                                                v2 = 28;\n
                                                                                                                if (g_40d930 < v1)\n
                                                                                                                {\n
                                                                                                                    v2 = 29;\n
                                                                                                                    if (g_40d934 < v1)\n
                                                                                                                    {\n
                                                                                                                        v2 = 30;\n
                                                                                                                        if (g_40d938 < v1)\n
                                                                                                                            v2 = 31 + (g_40d93c < v1);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4204519:sub_4027e7": null, "4204528:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1[0]);\n
    v1[1] = 1;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]);\n
    if (!v3)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
        return v2;\n
    }\n
    v1[2] = v3;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return v2;\n
}\n
", "4204617:sub_402849": null, "4204624:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // ecx\n
    struct_1 *v4;  // edx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1->field_0);\n
    v3 = v1->field_c;\n
    if (v3)\n
        v3->field_8 = v1->field_8;\n
    v4 = v1->field_8;\n
    if (v4)\n
        v4->field_c = v3;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) == v1)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v4;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v2;\n
}\n
", "4204719:sub_4028af": null, "4204720:cgc_coalesce": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(unsigned int v0)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // ebp\n
    unsigned int v31;  // edi\n
    unsigned int v32;  // eax\n
    unsigned int v33;  // edx\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // ecx\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // ecx\n
    unsigned int v38;  // ebp\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // edi\n
    unsigned int v41;  // eax\n
    unsigned int v42;  // ecx\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // eax\n
    unsigned int v45;  // ecx\n
\n
    v1 = v0;\n
    v2 = *((v1 + 20));\n
    if (!*((v1 + 20)))\n
        return v36;\n
    v12 = *((v1 + 16));\n
    if (!*((v2 + 4)))\n
    {\n
        if (!v12)\n
        {\n
            return v36;\n
        }\n
        else if (!*((v12 + 4)))\n
        {\n
            return v36;\n
        }\n
        else\n
        {\n
            v4 = cgc_get_size_class(*(v12));\n
            v6 = *((v12 + 12));\n
            if (v6)\n
                *((v6 + 8)) = *((v12 + 8));\n
            v10 = *((v12 + 8));\n
            if (v10)\n
                *((v10 + 12)) = v6;\n
            if ((&_GLOBAL_OFFSET_TABLE_)[43 + v4] == v12)\n
                (&_GLOBAL_OFFSET_TABLE_)[43 + v4] = v10;\n
            *((v12 + 8)) = 0;\n
            *((v12 + 12)) = 0;\n
            *((v12 + 4)) = 0;\n
            v14 = *(v1);\n
            v15 = cgc_get_size_class(v14);\n
            v17 = *((v1 + 12));\n
            if (v17)\n
                *((v17 + 8)) = *((v1 + 8));\n
            v22 = *((v1 + 8));\n
            if (v22)\n
                *((v22 + 12)) = v17;\n
            if ((&_GLOBAL_OFFSET_TABLE_)[43 + v15] == v1)\n
                (&_GLOBAL_OFFSET_TABLE_)[43 + v15] = v22;\n
            *((v1 + 8)) = 0;\n
            *((v1 + 12)) = 0;\n
            *((v1 + 4)) = 0;\n
            v26 = v14 + *(*((v1 + 16)));\n
            *(v1) = v26;\n
            v27 = cgc_get_size_class(v26);\n
            *((v1 + 4)) = 1;\n
            v29 = (&_GLOBAL_OFFSET_TABLE_)[43 + v27];\n
            if (!v29)\n
            {\n
                (&_GLOBAL_OFFSET_TABLE_)[43 + v27] = v1;\n
            }\n
            else\n
            {\n
                *((v1 + 8)) = v29;\n
                *(((&_GLOBAL_OFFSET_TABLE_)[43 + v27] + 12)) = v1;\n
                (&_GLOBAL_OFFSET_TABLE_)[43 + v27] = v1;\n
                *((v1 + 12)) = 0;\n
            }\n
            v35 = *((v1 + 16));\n
            v36 = *((v35 + 20));\n
            if (v36)\n
                *((v36 + 16)) = *((v35 + 16));\n
            v37 = *((v35 + 16));\n
            if (!v37)\n
                return v36;\n
        }\n
        goto LABEL_402c10;\n
    }\n
    if (v12 && *((v12 + 4)))\n
    {\n
        v3 = cgc_get_size_class(*(v2));\n
        v5 = *((v2 + 12));\n
        if (v5)\n
            *((v5 + 8)) = *((v2 + 8));\n
        v8 = *((v2 + 8));\n
        if (v8)\n
            *((v8 + 12)) = v5;\n
        if ((&_GLOBAL_OFFSET_TABLE_)[43 + v3] == v2)\n
        {\n
            (&_GLOBAL_OFFSET_TABLE_)[43 + v3] = v8;\n
            v12 = *((v1 + 16));\n
        }\n
        *((v2 + 8)) = 0;\n
        *((v2 + 12)) = 0;\n
        *((v2 + 4)) = 0;\n
        v13 = cgc_get_size_class(*(v12));\n
        v16 = *((v12 + 12));\n
        if (v16)\n
            *((v16 + 8)) = *((v12 + 8));\n
        v20 = *((v12 + 8));\n
        if (v20)\n
            *((v20 + 12)) = v16;\n
        if ((&_GLOBAL_OFFSET_TABLE_)[43 + v13] == v12)\n
            (&_GLOBAL_OFFSET_TABLE_)[43 + v13] = v20;\n
        *((v12 + 8)) = 0;\n
        *((v12 + 12)) = 0;\n
        *((v12 + 4)) = 0;\n
        v24 = *(v1);\n
        v25 = cgc_get_size_class(v24);\n
        v28 = *((v1 + 12));\n
        if (v28)\n
            *((v28 + 8)) = *((v1 + 8));\n
        v33 = *((v1 + 8));\n
        if (v33)\n
            *((v33 + 12)) = v28;\n
        if ((&_GLOBAL_OFFSET_TABLE_)[43 + v25] == v1)\n
            (&_GLOBAL_OFFSET_TABLE_)[43 + v25] = v33;\n
        *((v1 + 8)) = 0;\n
        *((v1 + 12)) = 0;\n
        *((v1 + 4)) = 0;\n
        v38 = *((v1 + 20));\n
        v39 = v24 + *(*((v1 + 20)));\n
        *(*((v1 + 20))) = v39;\n
        v40 = v39 + *(*((v1 + 16)));\n
        *(v38) = v40;\n
        v41 = cgc_get_size_class(v40);\n
        *((v38 + 4)) = 1;\n
        v42 = (&_GLOBAL_OFFSET_TABLE_)[43 + v41];\n
        if (!v42)\n
        {\n
            (&_GLOBAL_OFFSET_TABLE_)[43 + v41] = v38;\n
        }\n
        else\n
        {\n
            *((v38 + 8)) = v42;\n
            *(((&_GLOBAL_OFFSET_TABLE_)[43 + v41] + 12)) = v38;\n
            (&_GLOBAL_OFFSET_TABLE_)[43 + v41] = v38;\n
            *((v38 + 12)) = 0;\n
        }\n
        v43 = *((v1 + 16));\n
        v44 = *((v43 + 20));\n
        if (v44)\n
            *((v44 + 16)) = *((v43 + 16));\n
        v45 = *((v43 + 16));\n
        if (v45)\n
        {\n
            *((v45 + 20)) = v44;\n
            goto LABEL_402bfc;\n
        }\n
    }\n
    v36 = *((v1 + 16));\n
    if (!v36)\n
        return *((v1 + 16));\n
    if (*((v36 + 4)))\n
        return *((v1 + 16));\n
    v7 = cgc_get_size_class(*(v2));\n
    v9 = *((v2 + 12));\n
    if (v9)\n
        *((v9 + 8)) = *((v2 + 8));\n
    v11 = *((v2 + 8));\n
    if (v11)\n
        *((v11 + 12)) = v9;\n
    if ((&_GLOBAL_OFFSET_TABLE_)[43 + v7] == v2)\n
        (&_GLOBAL_OFFSET_TABLE_)[43 + v7] = v11;\n
    *((v2 + 8)) = 0;\n
    *((v2 + 12)) = 0;\n
    *((v2 + 4)) = 0;\n
    v18 = *(v1);\n
    v19 = cgc_get_size_class(v18);\n
    v21 = *((v1 + 12));\n
    if (v21)\n
        *((v21 + 8)) = *((v1 + 8));\n
    v23 = *((v1 + 8));\n
    if (v23)\n
        *((v23 + 12)) = v21;\n
    if ((&_GLOBAL_OFFSET_TABLE_)[43 + v19] == v1)\n
        (&_GLOBAL_OFFSET_TABLE_)[43 + v19] = v23;\n
    *((v1 + 8)) = 0;\n
    *((v1 + 12)) = 0;\n
    *((v1 + 4)) = 0;\n
    v30 = *((v1 + 20));\n
    v31 = v18 + *(*((v1 + 20)));\n
    *(*((v1 + 20))) = v31;\n
    v32 = cgc_get_size_class(v31);\n
    *((v30 + 4)) = 1;\n
    v34 = (&_GLOBAL_OFFSET_TABLE_)[43 + v32];\n
    if (!v34)\n
    {\n
        (&_GLOBAL_OFFSET_TABLE_)[43 + v32] = v30;\n
    }\n
    else\n
    {\n
        *((v30 + 8)) = v34;\n
        *(((&_GLOBAL_OFFSET_TABLE_)[43 + v32] + 12)) = v30;\n
        (&_GLOBAL_OFFSET_TABLE_)[43 + v32] = v30;\n
        *((v30 + 12)) = 0;\n
    }\n
LABEL_402bfc:\n
    v36 = *((v1 + 20));\n
    if (v36)\n
        *((v36 + 16)) = *((v1 + 16));\n
    v37 = *((v1 + 16));\n
    if (!v37)\n
        return *((v1 + 20));\n
LABEL_402c10:\n
    *((v37 + 20)) = v36;\n
    return v36;\n
}\n
", "4205636:sub_402c44": null, "4205648:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4205704:sub_402c88": null, "4205712:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebx\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v3 != v4)\n
                return v3 - v4;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4205773:sub_402ccd": null, "4205776:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4205906:sub_402d52": null, "4205920:cgc_memmove": "int cgc_memmove(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // edx\n
    char *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ebx\n
    char *v10;  // edx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    if (v3 < a0)\n
    {\n
        if (!v1)\n
            return v0;\n
        v4 = v1 & 3;\n
        v7 = 0;\n
        if (v1 - 1 >= 3)\n
        {\n
            v5 = v1 & -0x4;\n
            v7 = 0;\n
            do\n
            {\n
                *((v3 + v7)) = v2[v7];\n
                *((v3 + v7 + 1)) = v2[1 + v7];\n
                *((v3 + v7 + 2)) = v2[2 + v7];\n
                *((v3 + v7 + 3)) = v2[3 + v7];\n
                v7 += 4;\n
            } while (v5 != v7);\n
        }\n
        if (!v4)\n
            return v0;\n
        v10 = v3 + v7;\n
        v11 = &v2[v7];\n
        v12 = 0;\n
        do\n
        {\n
            v10[v12] = *((v11 + v12));\n
            v12 += 1;\n
        } while (v4 != v12);\n
        return v0;\n
    }\n
    else\n
    {\n
        if ([D] x86g_calculate_condition(0x6<32>, 0x6<32>, eax<4>, ebp<4>, 0x0<32>))\n
        {\n
            return v0;\n
        }\n
        else if (!v1)\n
        {\n
            return v0;\n
        }\n
        else\n
        {\n
            v6 = v1 - 1;\n
            v9 = v1 & 3;\n
            if (!(v1 & 3))\n
            {\n
                v8 = v1;\n
                if (v6 < 3)\n
                    return v0;\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v8 = v1 - 1;\n
                    *((v3 + v1 - 1)) = v2[1 + v1];\n
                    v1 = v8;\n
                    tmp_5 = v9;\n
                    v9 -= 1;\n
                } while (tmp_5 != 1);\n
                if (v6 < 3)\n
                    return v0;\n
            }\n
            v13 = v8;\n
            do\n
            {\n
                *((v3 + v8 - 1)) = v2[1 + v8];\n
                *((v3 + v8 - 2)) = v2[2 + v8];\n
                *((v3 + v8 - 3)) = v2[3 + v8];\n
                *((v3 + v8 - 4)) = v2[4 + v8];\n
                v13 -= 4;\n
                v8 = v13;\n
            } while (v13 != 4);\n
            return v0;\n
        }\n
    }\n
}\n
", "4206176:cgc_memset": "int cgc_memset(char v0[8], unsigned int a0, unsigned int a1)\n
{\n
    int tmp_13;  // tmp #13\n
    char v1[8];  // eax\n
    unsigned int v2;  // edi\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edi\n
    char v6[8];  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = a0;\n
    v4 = v2 & 7;\n
    v6 = v1;\n
    if (v2 - 1 >= 7)\n
    {\n
        v5 = v2 & -8;\n
        v6 = v1;\n
        do\n
        {\n
            *(v6) = v3;\n
            *((v6 + 1)) = v3;\n
            *((v6 + 2)) = v3;\n
            *((v6 + 3)) = v3;\n
            *((v6 + 4)) = v3;\n
            *((v6 + 5)) = v3;\n
            *((v6 + 6)) = v3;\n
            *((v6 + 7)) = v3;\n
            v6 += 8;\n
            tmp_13 = v5;\n
            v5 -= 8;\n
        } while (tmp_13 != 8);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = v3;\n
        v7 += 1;\n
    } while (v4 != v7);\n
    return v0;\n
}\n
", "4206286:sub_402ece": null, "4206288:cgc_output_number_printf": "int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    char v12;  // al\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    char v16;  // al\n
\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v14 = v5;\n
    if (v9 < v8)\n
    {\n
        v3 = v9;\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v9) /m v8;\n
        v3 = tmp_9 >> 32;\n
        v14 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v9) /m v8, v8, v7 - 1, v6);\n
    }\n
    v12 = v6;\n
    if (v7 > 0 && !v2)\n
    {\n
        tmp_2 = v7;\n
        v13 = v7 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                if ((v12 & 1))\n
                    v1 = 48;\n
                else\n
                    v1 = 32;\n
                v0 = &v4;\n
                cgc_transmit(v14, &v1, 1);\n
                v12 = v6;\n
                v14 = v5;\n
                tmp_6 = v13;\n
                v13 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
    }\n
    if (!(v12 & 2))\n
    {\n
        v15 = v3;\n
        v16 = v15 + 87;\n
    }\n
    else\n
    {\n
        v15 = v3;\n
        v16 = v15 + 55;\n
    }\n
    if (v15 < 10)\n
        v16 = v15 + 48;\n
    v1 = v16;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4206409:sub_402f49": null, "4206529:sub_402fc1": null, "4206544:cgc_fdprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_fdprintf(unsigned int v10, struct struct_1 **a0)\n
{\n
    char *v0;  // [bp-0x48], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x3c], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x38]\n
    struct_0 *v5;  // [bp-0x30]\n
    char v6;  // [bp-0x1d]\n
    char v7;  // [bp-0x1c]\n
    struct struct_2 **v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0x14]\n
    char v11;  // [bp+0xc]\n
    struct struct_1 **v12;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edi\n
    struct_0 *v14;  // edx, Other Possible Types: unsigned int\n
    struct_0 *v15;  // esi, Other Possible Types: unsigned int\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edi\n
    void* v18;  // esi, Other Possible Types: unsigned int\n
    struct struct_1 **v19;  // edx, Other Possible Types: unsigned int\n
    struct struct_1 **v20;  // eax, Other Possible Types: unsigned int\n
    char *v21;  // edx, Other Possible Types: unsigned int\n
    struct struct_2 **v22;  // eax\n
    struct struct_2 **v23;  // eax\n
    char *v24;  // edi, Other Possible Types: unsigned int\n
    struct struct_2 **v25;  // eax\n
    struct struct_2 **v26;  // eax, Other Possible Types: unsigned int\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edi\n
\n
    v12 = a0;\n
    v8 = &v11;\n
    if (!*(v12))\n
        return 0;\n
    v13 = v10;\n
    v14 = &v7;\n
    v15 = &v6;\n
    do\n
    {\n
        v20 = v12 + 1;\n
        a0 = v20;\n
        *(&v12) = *(v12);\n
        if (v6 == 37)\n
        {\n
            v9 = 0;\n
            v18 = 0;\n
            v19 = v20;\n
            while (true)\n
            {\n
                v20 = v19 + 1;\n
                a0 = v20;\n
                v16 = *(v19);\n
                v17 = v16;\n
                if (v17 - 49 >= 9)\n
                    break;\n
                v18 = cgc_strtol(v19, &a0);\n
                v19 = a0;\n
            }\n
            switch (v17)\n
            {\n
            case 88:\n
                v21 = v9 | 2;\n
                goto LABEL_403189;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
                v6 = v16;\n
                break;\n
            case 99:\n
                v22 = v8;\n
                v8 = v22 + 1;\n
                v6 = *(v22);\n
                break;\n
            case 100:\n
                v23 = v8;\n
                v8 = v23 + 1;\n
                v24 = *(v23);\n
                if (v24 >= 0)\n
                {\n
                    v28 = v10;\n
                }\n
                else\n
                {\n
LABEL_4031c7:\n
                    v6 = 45;\n
                    v5 = &v7;\n
                    v28 = v10;\n
                    cgc_transmit(v10, &v6, 1);\n
                    v24 = -(v24);\n
                }\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                v0 = v24;\n
                goto LABEL_4031f2;\n
            case 115:\n
                v25 = v8;\n
                v8 = v25 + 1;\n
                v9 = &*(v25)->field_0;\n
                v27 = v10;\n
                v14 = &v7;\n
                v15 = &v6;\n
                if (cgc_strlen())\n
                {\n
                    v29 = 0;\n
                    do\n
                    {\n
                        v6 = v9[v29];\n
                        v5 = v14;\n
                        v4 = v15;\n
                        cgc_transmit(v27, v15, 1);\n
                        v29 += 1;\n
                        v15 = &v6;\n
                        v14 = &v7;\n
                    } while (v29 < cgc_strlen(v9, v4, 1));\n
                }\n
                goto LABEL_403027;\n
            case 117:\n
                v26 = v8;\n
                v8 = v26 + 1;\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                goto LABEL_40319b;\n
            case 120:\n
                v21 = v9;\n
LABEL_403189:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v21;\n
                v2 = v18;\n
                v1 = 16;\n
LABEL_40319b:\n
                v0 = *(v26);\n
                v28 = v10;\n
LABEL_4031f2:\n
                cgc_output_number_printf(v28, v0, v1, v2, v3);\n
                v27 = v28;\n
                v14 = &v7;\n
                v15 = &v6;\n
                goto LABEL_403027;\n
            default:\n
                if (v17 == 37)\n
                    goto LABEL_0x4031a3;\n
                else\n
                    goto LABEL_0x403091;\n
            }\n
            v5 = &v7;\n
            v15 = &v6;\n
            cgc_transmit(v10, &v6, 1);\n
            v27 = v10;\n
            goto LABEL_4031c7;\n
        }\n
        v6 = v12;\n
        v5 = v14;\n
        cgc_transmit(v13, v15, 1);\n
        v27 = v13;\n
        v14 = &v7;\n
LABEL_403027:\n
        v13 = v27;\n
        v12 = a0;\n
    } while (*(v12));\n
    return 0;\n
}\n
", "4206598:sub_403006": null, "4207124:sub_403214": null, "4207136:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v5, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    int tmp_20;  // tmp #20\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ecx\n
    struct struct_0 **v11;  // ebp\n
    unsigned int *v12;  // edi\n
    unsigned int v13;  // ecx\n
    char v14;  // dl\n
    char v15[2];  // ebx\n
    void* v16;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // esi\n
    unsigned int v19;  // eax\n
\n
    v4 = v6;\n
    v3 = v7;\n
    v2 = v8;\n
    v9 = a3;\n
    v10 = a2;\n
    v11 = a0;\n
    v12 = v5;\n
    v16 = 0;\n
    if (*(&v0) < v10)\n
    {\n
        v0 = a1;\n
        if (v9 <= 0)\n
            goto LABEL_4032f0;\n
    }\n
    else\n
    {\n
        v1 = v9 - 1;\n
        v0 = (0 CONCAT *(&v0)) /m v10 >> 32;\n
        v16 = cgc_output_number_sprintf(v12, v11, (0 CONCAT *(&v0)) /m v10, v10, v1, a4);\n
        if (v9 <= 0)\n
            goto LABEL_4032f0;\n
    }\n
    if (!v16)\n
    {\n
        v13 = v9 - 1;\n
        if (v9 != 1)\n
        {\n
            if ((v13 & 1))\n
            {\n
                *(v11)->field_0 = ((a4 & 1) * 16) | 32;\n
                *(v11) = &*(v11)->field_1;\n
                *(v12) = *(v12) + 1;\n
                v13 = v9 - 2;\n
            }\n
            if (v9 != 2)\n
            {\n
                v14 = ((a4 & 1) * 16) | 32;\n
                do\n
                {\n
                    *(v11)->field_0 = v14;\n
                    v15 = *(v11);\n
                    *(v11) = &v15[1];\n
                    *(v12) = *(v12) + 1;\n
                    v15[1] = v14;\n
                    *(v11) = &*(v11)->field_1;\n
                    *(v12) = *(v12) + 1;\n
                    tmp_20 = v13;\n
                    v13 -= 2;\n
                } while (tmp_20 != 2);\n
            }\n
        }\n
    }\n
LABEL_4032f0:\n
    v17 = v0;\n
    *(&*(v11)) = (!(v17 < 10) ? 48 : ((!(a4 & 2)) * 32 + 55)) + v17;\n
    *(v11) = &*(v11)->field_1;\n
    *(v12) = *(v12) + 1;\n
    v19 = v16 + 1;\n
    return v19;\n
}\n
", "4207402:sub_40332a": null, "4207408:cgc_sprintf": "typedef struct struct_0 {\n
    char field_-1;\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_sprintf(char v8[2], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct struct_1 **v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp+0xc]\n
    struct_0 *v10;  // eax, Other Possible Types: unsigned int\n
    char *v11;  // ecx, Other Possible Types: unsigned int\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx\n
    unsigned int v14;  // eax\n
    char v15;  // dl\n
    struct_0 *v16;  // ecx, Other Possible Types: unsigned int\n
    void* v17;  // esi, Other Possible Types: unsigned int\n
    unsigned int v18;  // ecx\n
    struct_0 *v19;  // ecx, Other Possible Types: unsigned int\n
    char *v20;  // eax, Other Possible Types: unsigned int\n
    unsigned int v21;  // edi\n
    struct struct_1 **v22;  // ecx\n
    unsigned int v23;  // ecx\n
    struct struct_1 **v24;  // eax\n
    char *v25;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v26;  // edi\n
    struct struct_1 **v27;  // ecx\n
    char *v28;  // edx\n
    unsigned int v29;  // edi\n
\n
    v10 = a0;\n
    v11 = v8;\n
    v5 = 0;\n
    v7 = &v9;\n
    if (!v10->field_-1)\n
    {\n
        v12 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v19 = v10 + 1;\n
            a0 = v19;\n
            *(&v10) = *(v10);\n
            if (*(&v10) != 37)\n
            {\n
                v13 = v8;\n
                *(v13) = v10;\n
                *(&v8) = v13 + 1;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                v17 = 0;\n
                while (true)\n
                {\n
                    v14 = v17 | 1;\n
                    v16 = v19 + 1;\n
                    do\n
                    {\n
                        v21 = v17;\n
                        a0 = v16;\n
                        v15 = *((v16 - 1));\n
                        v16 += 1;\n
                        v17 = v14;\n
                    } while (v15 == 48);\n
                    switch (v15)\n
                    {\n
                    case 37:\n
                        v20 = v8;\n
                        *(v20) = 37;\n
                        goto LABEL_4034d7;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v18 = v16 - 2;\n
                        v4 = 10;\n
                        v6 = cgc_strtol(v18, &a0);\n
                        v19 = a0;\n
                        v17 = v21;\n
                        continue;\n
                    case 100:\n
                        v22 = v7;\n
                        v7 = v22 + 1;\n
                        v23 = *(v22);\n
                        if (v23 < 0)\n
                        {\n
                            v28 = v8;\n
                            *(v28) = 45;\n
                            v8 = v28 + 1;\n
                            v5 += 1;\n
                            v23 = -(v23);\n
                        }\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 10;\n
                        v0 = v23;\n
LABEL_403457:\n
                        cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                        break;\n
                    case 115:\n
                        v24 = v7;\n
                        v7 = v24 + 1;\n
                        v25 = v8;\n
                        v26 = v5;\n
                        if (cgc_strlen())\n
                        {\n
                            v6 = v26;\n
                            v29 = 0;\n
                            do\n
                            {\n
                                v25[v29] = (*(v24))[v29].field_0;\n
                                v29 += 1;\n
                            } while (v29 < cgc_strlen());\n
                            v25 = &v25[v29];\n
                            v26 = v6 + v29;\n
                        }\n
                        v8 = v25;\n
                        v5 = v26;\n
                        break;\n
                    case 88:\n
                        v21 |= 2;\n
                    case 120:\n
                        v27 = v7;\n
                        v7 = v27 + 1;\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 16;\n
                        v0 = *(v27);\n
                        goto LABEL_403457;\n
                    default:\n
                        v20 = v8;\n
                        *(v20) = v15;\n
LABEL_4034d7:\n
                        v8 = v20 + 1;\n
                        goto LABEL_40337d;\n
                    }\n
                }\n
            }\n
LABEL_40337d:\n
            v5 += 1;\n
            v10 = a0;\n
        } while (*(v10));\n
        v11 = v8;\n
        v12 = v5;\n
    }\n
    *(v11) = 0;\n
    return v12;\n
}\n
", "4207462:sub_403366": null, "4207861:sub_4034f5": null, "4207872:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_40356a;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_40356a:\n
    return v5;\n
}\n
", "4207988:sub_403574": null, "4208000:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    void* v2;  // al, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    unsigned int v5;  // eax\n
    struct_0 *v7;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v7 = v0 + 1;\n
        while (true)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (v2 != v3)\n
            {\n
                v5 = cgc_tolower(v2);\n
                v2 = cgc_tolower(*(v1));\n
                if (v5 != v2)\n
                {\n
                    *(&v2) = *((v7 - 1));\n
                    break;\n
                }\n
            }\n
            v1 += 1;\n
            v2 = *(v7);\n
            v7 += 1;\n
            if (!v2)\n
                goto LABEL_4035ea;\n
        }\n
    }\n
LABEL_4035ea:\n
    v2 = 0;\n
    v8 = cgc_tolower(v2);\n
    return v8 - cgc_tolower(*(v1));\n
}\n
", "4208039:sub_4035a7": null, "4208144:cgc_strcat": "int cgc_strcat(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v4 = cgc_strlen() + v2;\n
    v0 = a0;\n
    cgc_strcpy(v4);\n
    return v2;\n
}\n
", "4208201:sub_403649": null, "4208208:cgc_strchr": "int cgc_strchr(char v0[2], unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    char v2[2];  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // dl, Other Possible Types: char\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v2[0];\n
    if (v2[0])\n
    {\n
        do\n
        {\n
            if (v3 == v1)\n
                return v2;\n
            v3 = *((v2 + 1));\n
            v2 += 1;\n
        } while (v3);\n
    }\n
    if (!v1)\n
        return v2;\n
    return 0;\n
}\n
", "4208250:sub_40367a": null, "4208256:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4208324:sub_4036c4": null, "4208336:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v3);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4208396:sub_40370c": null, "4208400:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
\n
    v1 = cgc_strlen() + 1;\n
    v2 = cgc_malloc(v1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4208476:sub_40375c": null, "4208480:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4208507:sub_40377b": null, "4208512:cgc_strncasecmp": "int cgc_strncasecmp(char v0[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    unsigned int v5;  // eax\n
    char v6[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax, Other Possible Types: char\n
\n
    v1 = a1;\n
    if (!v1)\n
        return a1;\n
    v2 = a0;\n
    v6 = v0;\n
    if (v1 != 1)\n
    {\n
        for (v7 = v6[0]; v7; v6 += 1)\n
        {\n
            v3 = *(v2);\n
            if (!v3)\n
                break;\n
            if (v7 != v3)\n
            {\n
                v5 = cgc_tolower(v7);\n
                if (v5 != cgc_tolower(*(v2)))\n
                    break;\n
            }\n
            v2 += 1;\n
            v7 = *((v6 + 1));\n
        }\n
    }\n
    v1 = cgc_tolower(*(v6)) - cgc_tolower(*(v2));\n
    return v1;\n
}\n
", "4208594:sub_4037d2": null, "4208663:sub_403817": null, "4208672:cgc_strncmp": "int cgc_strncmp(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx, Other Possible Types: unsigned int\n
    char *v3;  // esi\n
    char *v4;  // edi\n
    char v5;  // bl\n
    unsigned int v6;  // edx\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    v7 = v0;\n
    tmp_4 = v1;\n
    v6 = v1 - 1;\n
    if (tmp_4 != 1)\n
    {\n
        v3 = &v7[v6];\n
        v4 = &v2[v6];\n
        while (true)\n
        {\n
            v5 = *(v7);\n
            if (!v5)\n
                break;\n
            if (!*(v2))\n
                break;\n
            if (v5 != *(v2))\n
                break;\n
            v7 += 1;\n
            v2 += 1;\n
            tmp_8 = v6;\n
            v6 -= 1;\n
            if (tmp_8 == 1)\n
            {\n
                v7 = v3;\n
                v2 = v4;\n
                break;\n
            }\n
        }\n
    }\n
    v8 = *(v7) - *(v2);\n
    return v8;\n
}\n
", "4208752:cgc_strncpy": "int cgc_strncpy(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // bl\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        while (true)\n
        {\n
            v3 = *((a0 + v5));\n
            v2[v5] = v3;\n
            if (!v3)\n
                break;\n
            v5 += 1;\n
            if (v1 == v5)\n
                return v0;\n
        }\n
    }\n
    if (v5 >= v1)\n
        return v0;\n
    v4 = ~(v5) + v1;\n
    v6 = v1 - v5 & 7;\n
    if (v6)\n
    {\n
        do\n
        {\n
            v2[v5] = 0;\n
            v5 += 1;\n
            tmp_6 = v6;\n
            v6 -= 1;\n
        } while (tmp_6 != 1);\n
    }\n
    if (v4 < 7)\n
        return v0;\n
    do\n
    {\n
        *(&v2[v5]) = 0;\n
        *(&v2[4 + v5]) = 0;\n
        v5 += 8;\n
    } while (v1 != v5);\n
}\n
", "4208890:sub_4038fa": null, "4208896:cgc_strsep": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strsep(struct struct_1 **v0, char a0[2])\n
{\n
    struct struct_1 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_0 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_40396d;\n
                }\n
            }\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_40396d:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4209015:sub_403977": null, "4209024:cgc_strtol": "int cgc_strtol(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    void* v4;  // ebp, Other Possible Types: unsigned int\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char v6;  // bl\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebp\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = 0;\n
    if (v1 > 36)\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
        if (v1 != 1)\n
        {\n
            v7 = v3;\n
            while (true)\n
            {\n
                v6 = *(v7);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v6 != 32)\n
                    break;\n
                v7 += 1;\n
            }\n
            v8 = 0;\n
            *(&v8) = v6 == 45;\n
            v9 = (*((v7 + v8)) == 43) + v8;\n
            v10 = v7 + v9;\n
            if (!v1)\n
            {\n
                v1 = 10;\n
                if (*(v10) == 48)\n
                {\n
                    if ((*((v7 + v9 + 1)) | 32) == 120)\n
                    {\n
                        v10 = v7 + v9 + 2;\n
                        v1 = 16;\n
                    }\n
                    else\n
                    {\n
                        v10 = v7 + v9 + 1;\n
                        v1 = 8;\n
                    }\n
                }\n
            }\n
            else if (v1 == 16)\n
            {\n
                v1 = 16;\n
                if (*(v10) == 48 && (*((v7 + v9 + 1)) | 32) == 120)\n
                    v10 = v7 + v9 + 2;\n
            }\n
            v11 = 0;\n
            v12 = 0;\n
            while (true)\n
            {\n
                v13 = *((v10 + v12));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v14 = v13 - 48;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v15 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v15 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v14 = v13 + v15 + 10;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                v11 = v1 * v11 + v14;\n
                v12 += 1;\n
            }\n
            v4 = -(v11);\n
            if (v6 != 45)\n
                v4 = v11;\n
            v5 = v10 + v12;\n
            v2 = a0;\n
            v3 = v0;\n
        }\n
    }\n
    if (!v2)\n
        return v4;\n
    if (!v12)\n
        v5 = v3;\n
    *(v2) = v5;\n
    return v4;\n
}\n
", "4209067:sub_4039ab": null, "4209239:sub_403a57": null, "4209335:sub_403ab7": null, "4209344:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4209385:sub_403ae9": null, "4209392:cgc_dict_init": "int cgc_dict_init(unsigned int v0[5], unsigned int a0)\n
{\n
    unsigned int v1[5];  // ecx\n
\n
    v1 = v0;\n
    v1[0] = a0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = 0;\n
    return enlarge_tbl();\n
}\n
", "4209470:sub_403b3e": null, "4209472:enlarge_tbl": "typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    void* field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int enlarge_tbl()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_3 *v3;  // ecx\n
    unsigned int v4;  // edx\n
    struct_2 *v5;  // ebp\n
    unsigned int v6;  // edi\n
    struct struct_4 **v7;  // eax\n
    struct_0 *v8;  // edi\n
    char *v9;  // edx\n
    unsigned int v10;  // bl, Other Possible Types: char\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // edx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    struct_4 *v14;  // eax\n
    struct_0 *v15;  // eax\n
    struct struct_4 **v16;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v17;  // ecx, Other Possible Types: unsigned int\n
\n
    if (v3->field_10 >= v4)\n
        return 1;\n
    v5 = v3;\n
    v6 = v4 * 4;\n
    v0 = v4;\n
    v7 = cgc_realloc(v3->field_8, v6);\n
    if (!v7)\n
        return 0;\n
    v16 = v7;\n
    cgc_memset(v7, 0, v6);\n
    v3->field_8 = v7;\n
    v3->field_10 = v0;\n
    v17 = v3->field_4;\n
    v5->field_4 = 0;\n
    if (!v17)\n
        return 1;\n
    while (true)\n
    {\n
        v8 = *(v17);\n
        v9 = *((v17 + 16));\n
        *((v17 + 4)) = 0;\n
        *(v17) = 0;\n
        v10 = *(v9);\n
        v11 = 0;\n
        if (*(v9))\n
        {\n
            v12 = v9 + 1;\n
            v11 = 0;\n
            do\n
            {\n
                v11 = v11 * 1337 + v10;\n
                v10 = *(v12);\n
                v12 += 1;\n
            } while (v10);\n
        }\n
        v13 = (0 CONCAT v11) /m v0 >> 32;\n
        *((v17 + 12)) = 0;\n
        v14 = *((v16 + v13 * 4));\n
        *((v17 + 8)) = v14;\n
        if (v14)\n
            v14->field_c = v17;\n
        *((v16 + v13 * 4)) = v17;\n
        *((v17 + 4)) = 0;\n
        v15 = v5->field_4;\n
        *(v17) = v15;\n
        if (v15)\n
            v15->field_4 = v17;\n
        v5->field_4 = v17;\n
        if (!v8)\n
            break;\n
        v16 = v5->field_8;\n
        v17 = v8;\n
    }\n
}\n
", "4209751:sub_403c57": null, "4209760:cgc_dict_free": "int cgc_dict_free(struct struct_0 *v0[2])\n
{\n
    struct struct_0 *v1[2];  // esi\n
    struct struct_0 **v2;  // edi, Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // ebp\n
    unsigned int v4;  // eax\n
\n
    v2 = v0[1];\n
    if (!v2)\n
        return v4;\n
    do\n
    {\n
        v3 = *(v2);\n
        v1[0]();\n
        v4 = cgc_free(v2);\n
        v2 = v3;\n
    } while (v3);\n
    return v4;\n
}\n
", "4209821:sub_403c9d": null, "4209824:cgc_dict_get": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_3 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[12];\n
    char *field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
int cgc_dict_get(struct_2 *v0, char *a0)\n
{\n
    char *v1;  // edi\n
    struct struct_1 **v2;  // ecx\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
    unsigned int v4;  // edx, Other Possible Types: char\n
    char *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    struct_0 *v7;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0->field_8;\n
    v4 = *(v1);\n
    v3 = 0;\n
    if (*(v1))\n
    {\n
        v5 = v1 + 1;\n
        v3 = 0;\n
        do\n
        {\n
            v3 = v3 * 1337 + v4;\n
            v4 = *(v5);\n
            v5 += 1;\n
        } while (v4);\n
    }\n
    v6 = (0 CONCAT v3) /m v0->field_10 >> 32;\n
    v7 = v2[v6];\n
    if (!v2[v6])\n
        return 0;\n
    while (true)\n
    {\n
        if (!cgc_strcmp(*((v7 + 16)), v1))\n
            return v7;\n
        v7 = *(v7);\n
        if (!v7)\n
            return 0;\n
    }\n
}\n
", "4209960:sub_403d28": null, "4209968:cgc_dict_add": "typedef struct struct_8 {\n
    struct struct_6 *field_0;\n
    struct struct_7 *field_4;\n
    struct struct_9 *field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_8;\n
\n
typedef struct struct_4 {\n
    struct struct_4 *field_0;\n
    struct struct_5 *field_4;\n
    struct struct_0 *field_8;\n
    struct struct_3 *field_c;\n
    struct struct_2 *field_10;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_7 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_7;\n
\n
typedef struct struct_6 {\n
    struct struct_6 *field_0;\n
} struct_6;\n
\n
typedef struct struct_9 {\n
    struct struct_0 *field_0;\n
} struct_9;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_dict_add(struct_8 *v4, char *a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    char *v5;  // edi\n
    struct_8 *v6;  // esi\n
    unsigned int v7;  // ecx, Other Possible Types: char\n
    char *v8;  // edx, Other Possible Types: unsigned int\n
    void* v9;  // eax, Other Possible Types: unsigned int\n
    struct_4 *v10;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v11;  // edi\n
    char *v12;  // edx\n
    char *v13;  // edx, Other Possible Types: unsigned int\n
    void* v14;  // eax, Other Possible Types: unsigned int\n
    unsigned int v15;  // edx\n
    struct_3 *v16;  // eax\n
    struct_0 *v17;  // ecx\n
    struct struct_2 **v18;  // eax\n
    struct_1 *v19;  // ebx\n
    struct struct_0 **v20;  // edi\n
    unsigned int *v22;  // eax\n
    char *v23;  // eax, Other Possible Types: unsigned int\n
    void* v24;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v25;  // ecx\n
    unsigned int v26;  // edx\n
    struct_0 *v27;  // eax\n
    struct_7 *v28;  // eax\n
    struct struct_0 **v29;  // ecx\n
    struct_1 *v30;  // ebp\n
    char *v31;  // edx\n
    unsigned int v32;  // bl, Other Possible Types: char\n
    char *v33;  // edx, Other Possible Types: unsigned int\n
    void* v34;  // eax, Other Possible Types: unsigned int\n
    unsigned int v35;  // edx\n
    struct_0 *v36;  // eax\n
    struct_7 *v37;  // eax\n
\n
    v5 = a0;\n
    v6 = v4;\n
    v7 = *(v5);\n
    if (!*(v5))\n
    {\n
        v9 = 0;\n
    }\n
    else\n
    {\n
        v8 = v5 + 1;\n
        v9 = 0;\n
        do\n
        {\n
            v9 = v9 * 1337 + v7;\n
            v7 = *(v8);\n
            v8 += 1;\n
        } while (v7);\n
    }\n
    v10 = v6->field_8[(0 CONCAT v9) /m v6->field_10 >> 32].field_0;\n
    if (v6->field_8[(0 CONCAT v9) /m v6->field_10 >> 32].field_0)\n
    {\n
        do\n
        {\n
            if (!cgc_strcmp(*((v10 + 16)), v5))\n
            {\n
                a1->field_10 = *((v10 + 16));\n
                v11 = v6->field_8;\n
                v12 = *((v10 + 16));\n
                *(&v7) = *(v12);\n
                if (!*(v12))\n
                {\n
                    v14 = 0;\n
                }\n
                else\n
                {\n
                    v13 = v12 + 1;\n
                    v14 = 0;\n
                    do\n
                    {\n
                        v14 = v14 * 1337 + v7;\n
                        v7 = *(v13);\n
                        v13 += 1;\n
                    } while (v7);\n
                }\n
                v15 = (0 CONCAT v14) /m v6->field_10 >> 32;\n
                if (v11[v15] == v10)\n
                    v11[v15] = *((v10 + 8));\n
                v16 = *((v10 + 12));\n
                if (v16)\n
                    v16->field_8 = *((v10 + 8));\n
                v17 = *((v10 + 8));\n
                if (v17)\n
                    v17->field_c = v16;\n
                if (v6->field_4 == v10)\n
                    v6->field_4 = *(v10);\n
                v22 = *((v10 + 4));\n
                if (v22)\n
                    *(v22) = *(v10);\n
                v25 = *(v10);\n
                if (v25)\n
                    v25->field_4 = v22;\n
                v6->field_0();\n
                cgc_free(v10);\n
                v29 = v6->field_8;\n
                v30 = a1;\n
                v31 = a1->field_10;\n
                v32 = *(v31);\n
                if (!*(v31))\n
                {\n
                    v34 = 0;\n
                }\n
                else\n
                {\n
                    v33 = v31 + 1;\n
                    v34 = 0;\n
                    do\n
                    {\n
                        v34 = v34 * 1337 + v32;\n
                        v32 = *(v33);\n
                        v33 += 1;\n
                    } while (v32);\n
                }\n
                v35 = (0 CONCAT v34) /m v6->field_10 >> 32;\n
                v30->field_c = 0;\n
                v36 = v29[v35];\n
                v30->field_8 = v36;\n
                if (v36)\n
                    v36->field_c = v30;\n
                v29[v35] = &v30->field_0;\n
                v30->field_4 = 0;\n
                v37 = v6->field_4;\n
                v30->field_0 = v37;\n
                if (v37)\n
                    v37->field_4 = v30;\n
                v6->field_4 = &v30->field_0;\n
                goto LABEL_403f7c;\n
            }\n
            v10 = *(v10);\n
        } while (v10);\n
        goto LABEL_403f7c;\n
    }\n
    v2 = v6->field_c + 1;\n
    v3 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v0 = v6->field_10;\n
    v1 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t4\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t4\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t5,0] = t9\n
    [D] PutI(136:I8x8)[t5,0] = 0x01\n
    [D] PutI(72:F64x8)[t5,1] = t2\n
    [D] PutI(136:I8x8)[t5,1] = 0x01\n
    [D] PutI(136:I8x8)[t25,0] = 0x00\n
    [D] PutI(72:F64x8)[t39,0] = t40\n
    [D] PutI(136:I8x8)[t39,0] = 0x01\n
    [D] PutI(136:I8x8)[t39,0] = 0x00\n
    if ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 1) != 1 && !enlarge_tbl())\n
        goto LABEL_403e77;\n
    v18 = cgc_strdup(v5);\n
    v19 = a1;\n
    v19->field_10 = v18;\n
    if (v18)\n
    {\n
        v20 = v6->field_8;\n
        *(&v8) = *(v18);\n
        if (!*(v18))\n
        {\n
            v24 = 0;\n
        }\n
        else\n
        {\n
            v23 = v18 + 1;\n
            v24 = 0;\n
            do\n
            {\n
                v24 = v24 * 1337 + v8;\n
                v8 = *(v23);\n
                v23 += 1;\n
            } while (v8);\n
        }\n
        v26 = (0 CONCAT v24) /m v6->field_10 >> 32;\n
        v19->field_c = 0;\n
        v27 = v20[v26];\n
        v19->field_8 = v27;\n
        if (v27)\n
            v27->field_c = v19;\n
        v20[v26] = &v19->field_0;\n
        v19->field_4 = 0;\n
        v28 = v6->field_4;\n
        v19->field_0 = v28;\n
        if (v28)\n
            v28->field_4 = v19;\n
        v6->field_4 = &v19->field_0;\n
        v6->field_c = v6->field_c + 1;\n
LABEL_403f7c:\n
        return 1;\n
    }\n
LABEL_403e77:\n
    return 0;\n
}\n
", "4210569:sub_403f89": null, "4210576:cgc_eprintf": "extern char g_40abb2;\n
\n
int cgc_eprintf(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    char v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // esi\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // esi\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // ebp\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // ecx\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebp\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // ebp\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // edi\n
    unsigned int v36;  // edi\n
    unsigned int v37;  // ebp\n
    unsigned int v38;  // edi\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // ebp\n
\n
    v8 = a0;\n
    if (!*(v8))\n
        return 0;\n
    v9 = 0;\n
    v10 = &v3;\n
    v11 = &v1;\n
    do\n
    {\n
        v16 = v8 + 1;\n
        v5 = v16;\n
        *(&v8) = *(v8);\n
        if (v1 == 35)\n
        {\n
            v2 = v9;\n
            v4 = 0;\n
            v15 = v16;\n
            while (true)\n
            {\n
                v16 = v15 + 1;\n
                v5 = v16;\n
                v12 = *(v15);\n
                v13 = v12;\n
                if (v13 - 49 >= 9)\n
                    break;\n
                v14 = cgc_strtol(v15, &v5, 10);\n
                v15 = v5;\n
            }\n
            switch (v13)\n
            {\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
LABEL_4040bb:\n
                v1 = v12;\n
                goto LABEL_4041ae;\n
            case 99:\n
                v17 = v2;\n
                if (v17 < a2)\n
                {\n
                    v24 = v17 * 32;\n
                    v25 = a1;\n
                    v10 = &v3;\n
                    v11 = &v1;\n
                    v9 = v17 + 1;\n
                    *(&v1) = (!*((v25 + v24 + 20)) ? *((v25 + v24 + 24)) : 0);\n
                    goto LABEL_404064;\n
                }\n
            case 100:\n
                v18 = v2;\n
                if (v18 < a2)\n
                {\n
                    v27 = v18 * 32;\n
                    v28 = a1;\n
                    if (*((v28 + v27 + 20)))\n
                    {\n
                        v31 = &v1;\n
                        if (*(&v6) < 0)\n
                        {\n
                            v1 = 45;\n
                            v0 = &v3;\n
                            v6 = *((v28 + v27 + 24));\n
                            cgc_transmit(v7, &v1, 1);\n
                            goto LABEL_4041d8;\n
                        }\n
                    }\n
                }\n
            case 115:\n
                v20 = v2;\n
                if (v20 >= a2)\n
                    return -1;\n
                v29 = v20 * 32;\n
                v30 = *((a1 + v29 + 20));\n
                if (!v30)\n
                {\n
                    v32 = &g_40abb2;\n
                }\n
                else\n
                {\n
                    if (v30 == 1)\n
                        return -1;\n
                    v32 = *((a1 + v29 + 24));\n
                }\n
                v2 += 1;\n
                if (!cgc_strlen(v32))\n
                {\n
                    v9 = v2;\n
                    v36 = &v3;\n
                    v37 = &v1;\n
                    break;\n
                }\n
                else\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1 = *((v32 + v35));\n
                        v0 = &v3;\n
                        cgc_transmit(v7, &v1, 1);\n
                        v35 += 1;\n
                    } while (v35 < cgc_strlen(v32));\n
                    v9 = v2;\n
                    v39 = &v3;\n
                    v40 = &v1;\n
                    break;\n
                }\n
                break;\n
            case 117:\n
                v18 = v2;\n
                if (v18 < a2)\n
                {\n
                    v33 = &v1;\n
LABEL_4041d8:\n
                    v9 = v18 + 1;\n
LABEL_403fd3:\n
                    output_number_printf(v7, a0);\n
                    v38 = &v3;\n
                    break;\n
                }\n
            case 88:\n
                v4 |= 2;\n
            case 120:\n
                v21 = v2;\n
                if (v21 < a2)\n
                {\n
                    v34 = &v1;\n
                    v9 = v21 + 1;\n
                    goto LABEL_403fd3;\n
                }\n
            default:\n
                if (v13 == 35)\n
                {\n
                    v1 = 35;\n
LABEL_4041ae:\n
                    v22 = &v3;\n
                    v0 = &v3;\n
                    v23 = &v1;\n
                    cgc_transmit(v7, &v1, 1);\n
                    v9 = v2;\n
                    break;\n
                }\n
                if (v13 == 48)\n
                    goto LABEL_0x404056;\n
                else\n
                    goto LABEL_4040bb;\n
            }\n
            return -1;\n
        }\n
        v1 = v8;\n
LABEL_404064:\n
        v0 = v10;\n
        cgc_transmit(v7, v11, 1);\n
        v8 = v5;\n
    } while (*(v8));\n
}\n
", "4210809:sub_404079": null, "4211344:output_number_printf": "int output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char v6;  // al\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    char v13;  // al\n
\n
    v6 = a1;\n
    v7 = a0;\n
    v8 = v5;\n
    if (v11 < v5)\n
    {\n
        v2 = 0;\n
        if (v7 <= 0)\n
            goto LABEL_404340;\n
    }\n
    else\n
    {\n
        v2 = v7 - 1;\n
        v4 = (0 CONCAT v11) /m v8 >> 32;\n
        v11 = v4;\n
        v2 = output_number_printf(v8, v2, a1);\n
        v6 = a1;\n
        if (v7 <= 0)\n
            goto LABEL_404340;\n
    }\n
    if (!v2)\n
    {\n
        tmp_2 = v7;\n
        v12 = v7 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            v9 = v11;\n
            do\n
            {\n
                if ((v6 & 1))\n
                    v1 = 48;\n
                else\n
                    v1 = 32;\n
                v0 = &v3;\n
                cgc_transmit(v10, &v1, 1);\n
                v6 = a1;\n
                v11 = v9;\n
                tmp_6 = v12;\n
                v12 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
    }\n
LABEL_404340:\n
    v13 = (!(v6 & 2) ? v11 + 55 : v11 + 87);\n
    if (v11 < 10)\n
        v13 = v11 + 48;\n
    v1 = v13;\n
    v0 = &v3;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4211468:sub_40430c": null, "4211581:sub_40437d": null, "4211584:cgc_program_run": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    void* field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern char g_40a478;\n
\n
int cgc_program_run(struct_1 *v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    char *v1;  // [bp-0x68]\n
    struct_1 *v2;  // [bp-0x64]\n
    unsigned int v3;  // [bp-0x60]\n
    unsigned int v4[5];  // [bp-0x5c]\n
    char *v5;  // [bp-0x48]\n
    unsigned int v6[2];  // [bp-0x40], Other Possible Types: void*, void* [2]\n
    void* v7;  // [bp-0x3c], Other Possible Types: char\n
    char v8;  // [bp-0x24]\n
    char v9;  // [bp-0x20]\n
    char *v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v14;  // eax\n
    unsigned int v16[7];  // eax\n
    unsigned int v17[7];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v18;  // eax\n
    unsigned int v19[7];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v21[7];  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v23[7];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v25[7];  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27[7];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v29[7];  // eax\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // ebp\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // eax\n
    unsigned int v35;  // esi\n
    struct_0 *v36;  // esi, Other Possible Types: unsigned int\n
    unsigned int v37;  // eax\n
    struct_0 *v38;  // edi, Other Possible Types: unsigned int\n
    unsigned int v39;  // edx\n
    unsigned int v40;  // eax\n
    struct_0 *v41;  // esi, Other Possible Types: unsigned int\n
    unsigned int v42;  // eax\n
    void* *v43;  // esi, Other Possible Types: unsigned int\n
    void* *v44;  // eax, Other Possible Types: unsigned int\n
    unsigned int v45;  // esi\n
    unsigned int v46;  // ebp\n
    struct_2 *v47;  // eax, Other Possible Types: unsigned int\n
    unsigned int v48;  // esi\n
\n
    cgc_memset(&v2, 0, 76);\n
    v3 = a0;\n
    v2 = v12;\n
    if (!cgc_dict_init(v4, cgc_free_var))\n
        return 0;\n
    v5 = cgc_malloc(0x1000);\n
    if (!v5)\n
    {\n
        v46 = 0;\n
        goto LABEL_4047c7;\n
    }\n
    else\n
    {\n
        v1 = \"\\n
\";\n
        v14 = cgc_strdup(\"\\n
\");\n
        v46 = 0;\n
        v17 = 0;\n
        if (v14)\n
        {\n
            v16 = cgc_calloc(1, 32);\n
            v17 = 0;\n
            if (v16)\n
            {\n
                v16[5] = 2;\n
                v16[6] = v14;\n
                v17 = v16;\n
            }\n
        }\n
        v0 = \"RS\";\n
        if (!cgc_dict_add(v4, \"RS\", v17))\n
            goto LABEL_4047c7;\n
        v18 = cgc_strdup(v1);\n
        v46 = 0;\n
        v19 = 0;\n
        if (v18)\n
        {\n
            v21 = cgc_calloc(1, 32);\n
            v19 = 0;\n
            if (v21)\n
            {\n
                v21[5] = 2;\n
                v21[6] = v18;\n
                v19 = v21;\n
            }\n
        }\n
        if (!cgc_dict_add(v4, &g_40a478, v19))\n
            goto LABEL_4047c7;\n
        v22 = cgc_strdup(\" \");\n
        v46 = 0;\n
        v23 = 0;\n
        if (v22)\n
        {\n
            v25 = cgc_calloc(1, 32);\n
            v23 = 0;\n
            if (v25)\n
            {\n
                v25[5] = 2;\n
                v25[6] = v22;\n
                v23 = v25;\n
            }\n
        }\n
        if (!cgc_dict_add(v4, \"FS\", v23))\n
            goto LABEL_4047c7;\n
        v26 = cgc_strdup(\" \");\n
        v46 = 0;\n
        v27 = 0;\n
        if (v26)\n
        {\n
            v29 = cgc_calloc(1, 32);\n
            v27 = 0;\n
            if (v29)\n
            {\n
                v29[5] = 2;\n
                v29[6] = v26;\n
                v27 = v29;\n
            }\n
        }\n
        if (!cgc_dict_add(v4, \"OFS\", v27))\n
            goto LABEL_4047c7;\n
        v30 = get_string();\n
        if (!v30)\n
            goto LABEL_404847;\n
        v45 = v30;\n
    }\n
LABEL_4045a6:\n
    v31 = cgc_strlen(v45);\n
    v32 = v31;\n
    v11 = v31;\n
    if (!v31)\n
        v32 = 1;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
        v45 = v1;\n
    if (v32 <= 4095)\n
    {\n
        v10 = v45;\n
        v33 = 0;\n
        while (true)\n
        {\n
            v34 = cgc_io_getc();\n
            if (v34 < 0)\n
                break;\n
            v5[v33] = v34;\n
            v33 += 1;\n
            v35 = v33 - v32;\n
            if (v33 >= v32 && !cgc_strncmp(&v5[v35], v10, v32))\n
                goto LABEL_40462f;\n
            v35 = 4095;\n
            if (!(v33 == 4095))\n
                continue;\n
LABEL_40462f:\n
            v5[v35] = 0;\n
            if (v11)\n
            {\n
LABEL_404653:\n
                v36 = v2->field_4;\n
                if (v36)\n
                {\n
                    do\n
                    {\n
                        if (*(v36) == -2)\n
                        {\n
                            v37 = cgc_eval_statements();\n
                            if (!(v37 == 1))\n
                                goto LABEL_40468f;\n
                        }\n
                        v36 = *((v36 + 8));\n
                    } while (v36);\n
                    v38 = v2->field_4;\n
                    while (v38)\n
                    {\n
                        v39 = *(v38);\n
                        if (v39 + 3 < 2)\n
                        {\n
LABEL_404778:\n
                            v38 = *((v38 + 8));\n
                        }\n
                        else\n
                        {\n
                            if (!v39)\n
                                goto LABEL_404778;\n
                            if (v39 != -1)\n
                            {\n
                                if (cgc_eval_expression())\n
                                {\n
                                    v40 = *(&v8);\n
                                    if (v40 == 2)\n
                                    {\n
                                        if (!*(*(&v9)))\n
                                            goto LABEL_404778;\n
                                        goto LABEL_404763;\n
                                    }\n
                                    if (v40 == 1)\n
                                    {\n
                                        if (!*(&v9))\n
                                            goto LABEL_404778;\n
                                        goto LABEL_404763;\n
                                    }\n
                                }\n
                                goto LABEL_404847;\n
                            }\n
                            else\n
                            {\n
LABEL_404763:\n
                                v37 = cgc_eval_statements();\n
                                if (v37 == 1)\n
                                    goto LABEL_404778;\n
LABEL_40468f:\n
                                v46 = v37;\n
                                if (!(v37 == 4))\n
                                    goto LABEL_4047c7;\n
                                break;\n
                            }\n
                        }\n
                    }\n
                    goto LABEL_4047c7;\n
                }\n
                v41 = v2->field_4;\n
                if (v41)\n
                {\n
                    do\n
                    {\n
                        while (*(v41) != -3)\n
                        {\n
LABEL_4046b6:\n
                            v41 = *((v41 + 8));\n
                            if (!v41)\n
                                goto LABEL_4046dc;\n
                        }\n
                        v42 = cgc_eval_statements();\n
                        if (v42 != 4)\n
                        {\n
                            v46 = v42;\n
                            if (v42 == 1)\n
                                goto LABEL_4046b6;\n
                            goto LABEL_4047c7;\n
                        }\n
                        v41 = v2->field_4;\n
                    } while (v41);\n
                }\n
LABEL_4046dc:\n
                v44 = v6;\n
                if (v44)\n
                {\n
                    if (*(&v7) > 0)\n
                    {\n
                        cgc_free(*(v44));\n
                        if (*(&v7) >= 2)\n
                        {\n
                            v43 = 1;\n
                            do\n
                            {\n
                                cgc_free(v6[v43]);\n
                                v43 += 1;\n
                            } while (v43 < *(&v7));\n
                        }\n
                        v44 = v6;\n
                    }\n
                    cgc_free(v44);\n
                }\n
                v6[0] = 0;\n
                v7 = 0;\n
                v45 = get_string();\n
                v46 = 1;\n
                if (!v45)\n
                    goto LABEL_4047c7;\n
                goto LABEL_4045a6;\n
            }\n
            else\n
            {\n
                v33 = 0;\n
                if (!(!cgc_strlen(v5)))\n
                    goto LABEL_404653;\n
            }\n
        }\n
    }\n
LABEL_404847:\n
    v46 = 1;\n
LABEL_4047c7:\n
    v47 = v6;\n
    if (v47)\n
    {\n
        if (*(&v7) > 0)\n
        {\n
            cgc_free(v47->field_0);\n
            if (*(&v7) >= 2)\n
            {\n
                v48 = 1;\n
                do\n
                {\n
                    cgc_free(v6[v48]);\n
                    v48 += 1;\n
                } while (v48 < v7);\n
            }\n
            v47 = v6;\n
        }\n
        cgc_free(v47);\n
    }\n
    v6 = 0;\n
    v7 = 0;\n
    cgc_free(v5);\n
    cgc_dict_free(v4);\n
    return v46;\n
}\n
", "4212324:sub_404664": null, "4212817:sub_404851": null, "4212832:cgc_free_var": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char padding_18[4];\n
    void* field_1c;\n
} struct_0;\n
\n
int cgc_free_var(unsigned int v0[8])\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    if (v1->field_14 == 1)\n
        v2 = cgc_free(v1->field_1c);\n
    v1->field_14 = 0;\n
    return v2;\n
}\n
", "4212881:sub_404891": null, "4212896:cgc_eval_statements": "typedef struct struct_4 {\n
    unsigned int field_0;\n
    struct struct_4 *field_4;\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    struct struct_3 *field_44;\n
    unsigned int field_48;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    void* field_8;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
int cgc_eval_statements()\n
{\n
    void* **v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    int tmp_6;  // tmp #6\n
    int tmp_2;  // tmp #2\n
    unsigned int v1;  // [bp-0x2c]\n
    struct_2 *v2;  // [bp-0x28]\n
    struct_1 *v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x20]\n
    char *v5;  // [bp-0x1c]\n
    struct_4 *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14]\n
    struct_4 *v10;  // esi, Other Possible Types: unsigned int\n
    struct_2 *v12;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    void* **v18;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v19;  // edi, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    struct_0 *v21;  // eax, Other Possible Types: unsigned int\n
    void* v22;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // edi\n
    struct_0 *v25;  // edx, Other Possible Types: unsigned int\n
    struct_2 *v26;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v27;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v28;  // eax\n
    struct_1 *v29;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v30;  // edx, Other Possible Types: unsigned int\n
    unsigned int v31;  // esi\n
    struct_5 *v32;  // edi, Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        do\n
        {\n
            switch (*(v10))\n
            {\n
            case 2:\n
                if (!*((v10 + 8)))\n
                    goto LABEL_404c80;\n
                while (true)\n
                {\n
                    v1 = cgc_eval_statements();\n
                    if (v1 == 3)\n
                        continue;\n
                    if (v1 - 3 < -2)\n
                        break;\n
LABEL_404c80:\n
                    if (!cgc_eval_expression())\n
                    {\n
LABEL_404cf1:\n
                        v1 = 0;\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v13 = v12->field_40;\n
                        if (v13 != 2)\n
                        {\n
                            if (!(v13 == 1))\n
                                continue;\n
                            if (!v12->field_44)\n
                                continue;\n
                        }\n
                        else if (!v12->field_44->field_0)\n
                        {\n
                            continue;\n
                        }\n
                    }\n
                }\n
            case 3:\n
                v1 = 0;\n
                if (cgc_eval_expression())\n
                {\n
                    while (cgc_eval_expression())\n
                    {\n
                        v15 = v12->field_40;\n
                        if (v15 == 2)\n
                        {\n
                            if (!v12->field_44->field_0)\n
                                goto LABEL_4048e0;\n
                            else\n
                                goto LABEL_40499c;\n
                        }\n
                        else\n
                        {\n
                            if (!(v15 == 1))\n
                                goto LABEL_4048e0;\n
                            if (!v12->field_44)\n
                                goto LABEL_4048e0;\n
                            else\n
                                goto LABEL_40499c;\n
                        }\n
LABEL_40499c:\n
                        v16 = cgc_eval_statements();\n
                        if (v16 == 3)\n
                            goto LABEL_4048e0;\n
                        if (v16 - 3 < -2)\n
                        {\n
                            v1 = v16;\n
                            break;\n
                        }\n
                        else if (!cgc_eval_expression())\n
                        {\n
                            break;\n
                        }\n
                    }\n
                }\n
                break;\n
            case 6:\n
                v1 = 3;\n
                break;\n
            case 7:\n
                v1 = 4;\n
                break;\n
            case 8:\n
                v1 = 5;\n
                break;\n
            case 9:\n
                if (!*((v10 + 8)))\n
                {\n
                    v19 = *((v10 + 12));\n
                    if (!v19)\n
                    {\n
LABEL_404ab0:\n
                        v1 = 0;\n
                        if (cgc_get_field())\n
                        {\n
                            cgc_get_field();\n
                            cgc_fdprintf(1, \"%s\");\n
LABEL_404ae6:\n
                            get_string();\n
                            v0 = \"%s\";\n
LABEL_404afe:\n
                            cgc_fdprintf(1, v0);\n
                            continue;\n
                        }\n
                        break;\n
                    }\n
                    while (true)\n
                    {\n
                        v1 = 0;\n
                        if (!cgc_eval_expression())\n
                            break;\n
                        v17 = v12->field_40;\n
                        if (v17)\n
                        {\n
                            if (v17 == 1)\n
                            {\n
                                v18 = \"%d\";\n
                            }\n
                            else\n
                            {\n
                                if (!(v17 == 2))\n
                                    break;\n
                                v18 = \"%s\";\n
                            }\n
                            cgc_fdprintf(1, v18);\n
                        }\n
                        if (!*((v19 + 4)))\n
                        {\n
LABEL_404aaa:\n
                            if (!(!v10->field_c))\n
                                goto LABEL_404ae6;\n
                            goto LABEL_404ab0;\n
                        }\n
                        else\n
                        {\n
                            get_string();\n
                            cgc_fdprintf(1, \"%s\");\n
                            v19 = *((v19 + 4));\n
                            goto LABEL_404aaa;\n
                        }\n
                    }\n
                }\n
                else if (cgc_eval_expression())\n
                {\n
                    v20 = *((v12 + 64));\n
                    if (v20 != 2)\n
                    {\n
                        if (!(v20 == 1))\n
                            continue;\n
                        v0 = &\"%d\";\n
                        goto LABEL_404afe;\n
                    }\n
                    v5 = *((v12 + 68));\n
                    v2 = v12;\n
                    *((v12 + 64)) = 0;\n
                    v21 = *((v10 + 12));\n
                    v1 = 0;\n
                    v22 = 0;\n
                    if (v21)\n
                    {\n
                        v22 = 0;\n
                        do\n
                        {\n
                            v22 += 1;\n
                            v21 = *((v21 + 4));\n
                        } while (v21);\n
                    }\n
                    v23 = cgc_calloc(32, v22);\n
                    if (!v23)\n
                        break;\n
                    v24 = v23;\n
                    v6 = v10;\n
                    v25 = *((v10 + 12));\n
                    v26 = v2;\n
                    if (v25)\n
                    {\n
                        v27 = v23 + 24;\n
                        do\n
                        {\n
                            v3 = v27;\n
                            v4 = v25;\n
                            if (!cgc_eval_expression())\n
                            {\n
                                v31 = 0;\n
                                if (!v22)\n
                                    goto LABEL_404c63;\n
                                goto LABEL_404c39;\n
                            }\n
                            v28 = *((v26 + 64));\n
                            if (v28 == 2)\n
                            {\n
                                v26 = v2;\n
                                v29 = v3;\n
                                v29->field_-4 = *((v26 + 68));\n
                                v28 = 2;\n
                                v30 = v4;\n
                            }\n
                            else\n
                            {\n
                                v26 = v2;\n
                                v30 = v4;\n
                                v29 = v3;\n
                                if (v28 == 1)\n
                                {\n
                                    v7 = *((v26 + 68));\n
                                    v3->field_0 = *((v26 + 72));\n
                                    v29 = v3;\n
                                    *(v29) = v7;\n
                                    v28 = *((v26 + 64));\n
                                }\n
                            }\n
                            *((v29 - 4)) = v28;\n
                            *((v26 + 64)) = 0;\n
                            v25 = *((v30 + 4));\n
                            v27 = v29 + 32;\n
                        } while (v25);\n
                        goto LABEL_404c63;\n
                    }\n
                    v31 = ~(cgc_eprintf(1, v5, v24, v22)) >> 31;\n
                    if (!v22)\n
                        goto LABEL_404c63;\n
LABEL_404c39:\n
                    v32 = v24 + 20;\n
                    do\n
                    {\n
                        if (*(v32) == 1)\n
                            cgc_free(*((v32 + 8)));\n
                        *(v32) = 0;\n
                        v32 += 32;\n
                        tmp_6 = v22;\n
                        v22 -= 1;\n
                    } while (tmp_6 != 1);\n
LABEL_404c63:\n
                    tmp_2 = v31;\n
                    v10 = v6;\n
                    v12 = v2;\n
                    if (!tmp_2)\n
                        break;\n
                    goto LABEL_4048e0;\n
                }\n
            case 10:\n
                if (!(!cgc_eval_expression()))\n
                    continue;\n
                goto LABEL_404cf1;\n
            case 1:\n
                if (cgc_eval_expression())\n
                {\n
                    v14 = *((v12 + 64));\n
                    if (v14 != 2)\n
                    {\n
                        if (!(v14 == 1))\n
                            continue;\n
                        if (!*((v12 + 68)))\n
                            continue;\n
                    }\n
                    else if (!*(*((v12 + 68))))\n
                    {\n
                        continue;\n
                    }\n
                    v1 = cgc_eval_statements();\n
                    if (v1 == 1)\n
                        continue;\n
                    break;\n
                }\n
            case 5:\n
LABEL_404ce6:\n
                return v1;\n
            default:\n
LABEL_4048e0:\n
                v10 = *((v10 + 4));\n
                if (!v10)\n
                    goto LABEL_404cdf;\n
                continue;\n
                continue;\n
            }\n
        } while (v10);\n
LABEL_404cdf:\n
        v1 = 1;\n
        goto LABEL_404ce6;\n
    }\n
}\n
", "4213134:sub_40498e": null, "4213336:sub_404a58": null, "4213658:sub_404b9a": null, "4213822:sub_404c3e": null, "4213877:sub_404c75": null, "4213930:sub_404caa": null, "4214042:sub_404d1a": null, "4214048:cgc_eval_expression": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    struct struct_1 *field_44;\n
    void* field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_eval_expression()\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    char v3[2];  // [bp-0x24]\n
    char *v4;  // [bp+0x4]\n
    char *v5;  // [bp+0x8]\n
    unsigned int v7[4];  // edx\n
    unsigned int v8[4];  // edi\n
    struct_0 *v9;  // ecx\n
    struct_0 *v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    char *v18;  // ebp, Other Possible Types: unsigned int\n
    char *v19;  // eax\n
    void* v20;  // eax, Other Possible Types: unsigned int, char *\n
    char *v21;  // ebp, Other Possible Types: unsigned int\n
    char *v22;  // eax, Other Possible Types: unsigned int\n
    char *v23;  // edx, Other Possible Types: unsigned int\n
    unsigned int v24;  // ebp\n
    unsigned int v25;  // eax\n
    char *v26;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // eax\n
    unsigned int v29;  // ebp\n
    unsigned int v30;  // cc_op\n
    unsigned int v31;  // cc_dep1\n
    char *v32;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v33;  // ecx\n
    char v34;  // al\n
    unsigned int v35;  // cc_op\n
    char *v36;  // cc_dep1\n
    char v37;  // cl\n
    unsigned int v38;  // ecx\n
    char *v39;  // eax, Other Possible Types: unsigned int\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // eax\n
    char *v42;  // eax, Other Possible Types: unsigned int\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // edi\n
    void* v45;  // eax, Other Possible Types: unsigned int\n
\n
    if (!v7)\n
        return 0;\n
    v8 = v7;\n
    switch (v7[0])\n
    {\n
    case 1:\n
        v22 = v7[3];\n
        goto LABEL_404fc3;\n
    case 2:\n
        v11 = v7[3];\n
        if (v9->field_40 == 1)\n
            cgc_free(v9->field_48);\n
        v9->field_40 = 1;\n
        v9->field_44 = v11;\n
        break;\n
    case 3:\n
        v12 = cgc_do_match();\n
        goto LABEL_405321;\n
    case 4:\n
        goto LABEL_404fb4;\n
    case 5:\n
        if (!get_number())\n
            return 0;\n
LABEL_404fb4:\n
        v22 = cgc_get_field();\n
        if (!v22)\n
            return 0;\n
LABEL_404fc3:\n
        v25 = cgc_strdup(v22);\n
        if (v9->field_40 == 1)\n
            cgc_free(v9->field_48);\n
        v9->field_40 = 2;\n
        v9->field_44 = v25;\n
        break;\n
    case 6:\n
        get_var();\n
        v12 = set_result_var();\n
        goto LABEL_405321;\n
    case 7:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v12 = cgc_assign_result();\n
        goto LABEL_405321;\n
        goto LABEL_405321;\n
    case 8: case 9: case 10: case 11: case 12: case 25: case 26: case 27: case 28: case 29:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v13 = v9->field_40;\n
        if (v13 == 2)\n
        {\n
            v18 = cgc_strtol(v9->field_44, NULL, 0);\n
        }\n
        else\n
        {\n
            v18 = 0;\n
            if (v13 == 1)\n
                v18 = v9->field_44;\n
        }\n
        if (!cgc_eval_expression())\n
            goto LABEL_40520d;\n
        v28 = v9->field_40;\n
        if (v28 == 2)\n
        {\n
            v32 = cgc_strtol(v9->field_44, NULL, 0);\n
        }\n
        else\n
        {\n
            v32 = 0;\n
            if (v28 == 1)\n
                v32 = v10->field_44;\n
        }\n
        switch (v7[0])\n
        {\n
        case 8: case 25:\n
            v18 += v32;\n
            goto LABEL_4051d2;\n
        case 9: case 26:\n
            v18 -= v32;\n
            goto LABEL_4051d2;\n
        case 10: case 27:\n
            v18 = v32 * v18;\n
            goto LABEL_4051d2;\n
        case 11: case 28:\n
            if (!v32)\n
                break;\n
            v18 = (v18 >> 31 CONCAT v18) /m v32;\n
            goto LABEL_4051d2;\n
        case 12: case 29:\n
            if (!v32)\n
                break;\n
            v18 = (v18 >> 31 CONCAT v18) /m v32 >> 32;\n
            goto LABEL_4051d2;\n
        default:\n
LABEL_4051d2:\n
            if (v10->field_40 == 1)\n
                cgc_free(v10->field_48);\n
            v10->field_40 = 1;\n
            v10->field_44 = v18;\n
            if (!(v7[0] - 8 <= 4))\n
                break;\n
            if (!(!cgc_assign_result()))\n
                break;\n
LABEL_40520d:\n
            return 0;\n
        }\n
    case 13:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v15 = v9->field_40;\n
        if (v15 == 2)\n
        {\n
            if (!(!v9->field_44->field_0))\n
                goto LABEL_405057;\n
        }\n
        else\n
        {\n
            if (v15 == 1)\n
            {\n
                if (!v9->field_44)\n
                    goto LABEL_405317;\n
LABEL_405057:\n
            }\n
        }\n
LABEL_405317:\n
        v12 = cgc_eval_expression();\n
        goto LABEL_405321;\n
    case 14:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v16 = v9->field_40;\n
        if (v16 == 2)\n
        {\n
            if (!(!v9->field_44->field_0))\n
                goto LABEL_405336;\n
        }\n
        else\n
        {\n
            if (v16 == 1 && v9->field_44)\n
            {\n
                cgc_free(v9->field_48);\n
LABEL_405336:\n
                v9->field_40 = 1;\n
                v9->field_44 = 1;\n
                break;\n
            }\n
        }\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v20 = v9->field_40;\n
        if (v20 != 1)\n
        {\n
            if (!(v20 == 2))\n
                goto LABEL_4053a5;\n
            goto LABEL_40536c;\n
        }\n
    case 15:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v17 = v9->field_40;\n
        if (v17 == 2)\n
        {\n
            if (!v9->field_44->field_0)\n
                goto LABEL_4053ac;\n
        }\n
        else\n
        {\n
            if (v17 != 1)\n
            {\n
LABEL_4053ac:\n
                v9->field_40 = 1;\n
                v9->field_44 = 0;\n
                break;\n
            }\n
            else if (!v9->field_44)\n
            {\n
                cgc_free(v9->field_48);\n
                goto LABEL_4053ac;\n
            }\n
        }\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v20 = v9->field_40;\n
        if (v20 != 1)\n
        {\n
            if (v20 != 2)\n
            {\n
LABEL_4053a5:\n
                v20 = 0;\n
                goto LABEL_4054bb;\n
            }\n
LABEL_40536c:\n
            v20 = v9->field_44;\n
            *(&v20) = *(v20);\n
            goto LABEL_4054bb;\n
        }\n
        *(&v20) = v9->field_44;\n
        cgc_free(v9->field_48);\n
LABEL_4054bb:\n
        v9->field_40 = 1;\n
LABEL_4054c5:\n
        v9->field_44 = v20;\n
LABEL_4054c8:\n
        return 1;\n
    case 16: case 17:\n
        if (!cgc_do_match())\n
            return 0;\n
        if (!(v7[0] == 17))\n
            break;\n
        v20 = 0;\n
        *(&v20) = v9->field_44 != 1;\n
        goto LABEL_4054c5;\n
    case 18: case 19: case 20: case 21: case 22: case 23:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v2 = v9->field_40;\n
        if (v2 == 2)\n
        {\n
            v0 = &v9->field_44->field_0;\n
        }\n
        else if (v2 == 1)\n
        {\n
            v0 = v9->field_44;\n
            v1 = v9->field_48;\n
        }\n
        v9->field_40 = 0;\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v29 = v2;\n
        if (!v2)\n
        {\n
            v33 = v9->field_40;\n
            v34 = 1;\n
            if (v33 == 2)\n
                goto LABEL_40542d;\n
LABEL_405278:\n
            if (v33 && (v34 & v33 == 1) == 1)\n
            {\n
                v39 = 0;\n
LABEL_40528a:\n
                v42 = v39 - v10->field_44;\n
                goto LABEL_405435;\n
            }\n
            v43 = v7[0];\n
            v42 = 1;\n
            goto LABEL_405440;\n
        }\n
        else if (v29 == 1)\n
        {\n
            v38 = v9->field_40;\n
            v39 = v0;\n
            if (!v38)\n
            {\n
                v42 = v10->field_44;\n
LABEL_405435:\n
                v43 = v7[0];\n
                if (v43 == 18 && v42 < 0)\n
                    goto LABEL_40546d;\n
LABEL_405440:\n
                if (v43 == 19 && !(v42 <= 0))\n
                    goto LABEL_40546d;\n
                if (v43 == 20 && v42 <= 0)\n
                    goto LABEL_40546d;\n
                if (v43 == 21 && !(v42 < 0))\n
                    goto LABEL_40546d;\n
                if (v43 == 22 && !v42)\n
                    goto LABEL_40546d;\n
                if (v43 != 23)\n
                {\n
LABEL_4054d7:\n
                    v44 = 0;\n
                    if (!(v10->field_40 == 1))\n
                        goto LABEL_405483;\n
LABEL_405478:\n
                    cgc_free(v10->field_48);\n
                }\n
                else\n
                {\n
                    if (!v42)\n
                        goto LABEL_4054d7;\n
LABEL_40546d:\n
                    v44 = 1;\n
                    if (!(v10->field_40 == 1))\n
                        goto LABEL_405483;\n
                    goto LABEL_405478;\n
                }\n
            }\n
            else\n
            {\n
                if (v38 == 1)\n
                    goto LABEL_40528a;\n
                if (v38 == 2)\n
                {\n
                    cgc_sprintf(v3, \"%d\");\n
                    goto LABEL_40542d;\n
                }\n
            }\n
        }\n
        else if (v29 != 2)\n
        {\n
            v33 = v9->field_40;\n
            v34 = 0;\n
            goto LABEL_405278;\n
        }\n
        else\n
        {\n
            v40 = v9->field_40;\n
            if (!v40)\n
            {\n
                goto LABEL_40542d;\n
            }\n
            else if (v40 == 1)\n
            {\n
                v0 = v0;\n
                cgc_sprintf(v3, \"%d\");\n
LABEL_40542d:\n
                v42 = cgc_strcmp(v4, v5);\n
                goto LABEL_405435;\n
            }\n
            else if (v40 == 2)\n
            {\n
                goto LABEL_40542d;\n
            }\n
        }\n
LABEL_405483:\n
        v10->field_40 = 1;\n
        v10->field_44 = v44;\n
        if (!(v29 == 1))\n
            break;\n
        v45 = v1;\n
        goto LABEL_405496;\n
    case 24:\n
        v12 = do_concat();\n
LABEL_405321:\n
        if (!v12)\n
            return 0;\n
        break;\n
    case 30: case 31:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v14 = v9->field_40;\n
        if (v14 == 2)\n
        {\n
            v21 = cgc_strtol(v9->field_44, NULL, 0);\n
        }\n
        else\n
        {\n
            v21 = 0;\n
            if (v14 == 1)\n
                v21 = v9->field_44;\n
        }\n
        if (v7[0] == 30)\n
        {\n
            v26 = -(v21);\n
            v27 = v9->field_40;\n
        }\n
        else\n
        {\n
            v27 = v9->field_40;\n
            if (v27 == 2)\n
            {\n
                v30 = 4;\n
                v31 = v9->field_44->field_0;\n
LABEL_4053c5:\n
                v37 = [D] x86g_calculate_condition(0x5<32>, cc_op<4>, cc_dep1<4>, 0x0<32>, 0x0<32>);\n
            }\n
            else if (v27 != 1)\n
            {\n
                v37 = 0;\n
            }\n
            else\n
            {\n
                v35 = 6;\n
                v36 = v9->field_44;\n
                goto LABEL_4053c5;\n
            }\n
            v26 = v37 ^ 1;\n
        }\n
        if (v27 == 1)\n
            cgc_free(v10->field_48);\n
        v10->field_40 = 1;\n
        v10->field_44 = v26;\n
        break;\n
        break;\n
    case 32: case 33: case 34: case 35:\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v2 = v9->field_40;\n
        if (v2 == 2)\n
        {\n
            v19 = v9->field_44;\n
            v9->field_40 = 0;\n
            v0 = v19;\n
            v24 = cgc_strtol(v0, NULL, 0) + ((v7[0] & -2) == 32) * 2 - 1;\n
            if (v9->field_40 == 1)\n
                cgc_free(v9->field_48);\n
        }\n
        else\n
        {\n
            if (v2 != 1)\n
            {\n
                v23 = 0;\n
            }\n
            else\n
            {\n
                v23 = v9->field_44;\n
                v1 = v9->field_48;\n
            }\n
            v0 = v23;\n
            v24 = v23 + ((v8[0] & -2) == 32) * 2 - 1;\n
        }\n
        v9->field_40 = 1;\n
        v9->field_44 = v24;\n
        if (!cgc_assign_result())\n
            goto LABEL_40520d;\n
        if ((v8[0] | 2) == 35)\n
        {\n
            v41 = v2;\n
            if (v41 == 2)\n
            {\n
                v9->field_44 = v0;\n
            }\n
            else if (v41 == 1)\n
            {\n
                v9->field_44 = v0;\n
                v9->field_48 = v1;\n
                v9->field_40 = v41;\n
                break;\n
            }\n
            v9->field_40 = v41;\n
            break;\n
        }\n
        else\n
        {\n
            v45 = v1;\n
            if (!(v2 == 1))\n
                break;\n
            goto LABEL_405496;\n
        }\n
    default:\n
        return 0;\n
    }\n
LABEL_405496:\n
    cgc_free(v45);\n
    goto LABEL_4054c8;\n
}\n
", "4216033:sub_4054e1": null, "4216048:get_string": "extern char g_40abb2;\n
\n
int get_string()\n
{\n
    char v0;  // [bp-0x24]\n
    unsigned int v2;  // ecx\n
    char *v3;  // edx\n
    unsigned int v4[8];  // eax\n
    unsigned int v5[8];  // esi, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v4 = cgc_dict_get(v2 + 8, v3);\n
    v5 = v4;\n
    if (!v4)\n
    {\n
        v5 = cgc_malloc(32);\n
        if (!v5)\n
            return 0;\n
        *((v5 + 20)) = 0;\n
        if (!cgc_dict_add(v2 + 8, v3, v5))\n
        {\n
            cgc_free(v5);\n
LABEL_405599:\n
            return 0;\n
        }\n
    }\n
    v6 = *((v5 + 20));\n
    if (!v6)\n
    {\n
        return &g_40abb2;\n
    }\n
    else if (v6 == 2)\n
    {\n
        return *((v5 + 24));\n
    }\n
    else if (v6 == 1)\n
    {\n
        v7 = *((v5 + 28));\n
        if (v7)\n
            return *((v5 + 28));\n
        cgc_sprintf(&v0, \"%d\");\n
        v7 = cgc_strdup(&v0);\n
        if (v7)\n
        {\n
            *((v5 + 28)) = v7;\n
            return v7;\n
        }\n
    }\n
    goto LABEL_405599;\n
}\n
", "4216240:get_var": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int get_var()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // ecx\n
    void* v4;  // esi\n
    char *v5;  // edx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // ebp, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v4 = v3 + 8;\n
    v6 = cgc_dict_get(v4, v5);\n
    v7 = v6;\n
    if (!v6)\n
    {\n
        v7 = cgc_malloc(32);\n
        if (!v7)\n
            return 0;\n
        *((v7 + 20)) = 0;\n
        if (!cgc_dict_add(v4, v5, v7))\n
        {\n
            cgc_free(v7);\n
            return 0;\n
        }\n
    }\n
    return v7;\n
}\n
", "4216353:sub_405621": null, "4216368:cgc_get_field": "typedef struct struct_2 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    struct struct_3 *field_24;\n
    unsigned int field_28;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[28];\n
    char *field_1c;\n
    unsigned int field_20;\n
    struct struct_0 *field_24;\n
    unsigned int field_28;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char *field_4;\n
} struct_0;\n
\n
extern char g_40abb2;\n
\n
int cgc_get_field()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x14]\n
    struct_2 *v4;  // ecx\n
    struct_1 *v5;  // esi\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edx\n
    void* v11;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v12;  // edi, Other Possible Types: unsigned int\n
    unsigned int v13;  // ecx\n
    void* v14;  // eax, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // eax\n
    char *v20;  // edi, Other Possible Types: unsigned int\n
    void* v21;  // eax, Other Possible Types: unsigned int\n
    char **v22;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // edi\n
\n
    v5 = v4;\n
    if (!v4->field_24)\n
    {\n
        if (!v6)\n
            return v4->field_1c;\n
        if (!cgc_read_fields())\n
            goto LABEL_40568b;\n
    }\n
    if (v4->field_28 < v6)\n
        return &g_40abb2;\n
    if (v6)\n
    {\n
        v7 = &g_40abb2;\n
        v7 = (&v4->field_24->field_4)[v6];\n
        return v7;\n
    }\n
    v7 = v4->field_20;\n
    if (v7)\n
        return v4->field_20;\n
    v2 = get_string();\n
    v9 = cgc_strlen(v2);\n
    if (!v4->field_28)\n
    {\n
LABEL_405730:\n
        v20 = 0;\n
LABEL_405732:\n
        v5->field_1c[v20] = 0;\n
        v7 = v5->field_1c;\n
        v5->field_20 = v7;\n
        return v5->field_1c;\n
    }\n
    v10 = v9;\n
    v11 = 0;\n
    v12 = 0;\n
    v0 = v9;\n
    while (true)\n
    {\n
        v13 = (&v5->field_24->field_0)[v12];\n
        v14 = 0;\n
        if (v13)\n
        {\n
            v14 = cgc_strlen(v13);\n
            v10 = v0;\n
        }\n
        v15 = v14 + v11;\n
        if (v15 + v10 > 4094)\n
            break;\n
        v16 = (!v12 ? v10 : v12);\n
        v12 += 1;\n
        v18 = v5->field_28;\n
        v11 = v15 + v16;\n
        if (v12 >= v18)\n
        {\n
            if (v18)\n
            {\n
                v19 = v5->field_24->field_0;\n
                if (!v19)\n
                {\n
                    v21 = 0;\n
                    v20 = 0;\n
                }\n
                else\n
                {\n
                    v20 = cgc_strlen(v19);\n
                    v21 = v5->field_24->field_0;\n
                }\n
                cgc_memcpy(v5->field_1c, v21, v20);\n
                if (v5->field_28 >= 2)\n
                {\n
                    v22 = 1;\n
                    do\n
                    {\n
                        v23 = (&v5->field_24->field_0)[v22];\n
                        if (!v23)\n
                            v1 = 0;\n
                        else\n
                            v1 = cgc_strlen(v23);\n
                        cgc_memcpy(&v5->field_1c[v20], v2, v0);\n
                        v24 = v20 + v0;\n
                        cgc_memcpy(&v5->field_1c[v24], (&v5->field_24->field_0)[v22], v1);\n
                        v20 = v24 + v1;\n
                        v22 += 1;\n
                    } while (v22 < v5->field_28);\n
                }\n
                goto LABEL_405732;\n
            }\n
            goto LABEL_405730;\n
        }\n
    }\n
LABEL_40568b:\n
    return 0;\n
}\n
", "4216795:sub_4057db": null, "4216800:cgc_read_fields": "int cgc_read_fields()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_22;  // tmp #22\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // edx\n
    unsigned int v13;  // ebp\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // eax\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // edi\n
\n
    v7 = v6;\n
    v4 = get_string();\n
    if (v4)\n
    {\n
        v10 = cgc_strlen(v4);\n
        v8 = *((v6 + 36));\n
        v0 = v10;\n
        if (v8)\n
        {\n
            if (*((v7 + 40)) > 0)\n
            {\n
                cgc_free(*(v8));\n
                if (*((v7 + 40)) >= 2)\n
                {\n
                    v9 = 1;\n
                    do\n
                    {\n
                        cgc_free(*((*((v7 + 36)) + v9 * 4)));\n
                        v9 += 1;\n
                    } while (v9 < *((v7 + 40)));\n
                }\n
                v8 = *((v7 + 36));\n
            }\n
            cgc_free(v8);\n
            v10 = v0;\n
        }\n
        *((v7 + 36)) = 0;\n
        *((v7 + 40)) = 0;\n
        v11 = *((v7 + 28));\n
        *((v7 + 32)) = v11;\n
        if (!*(v11))\n
            return 1;\n
        v2 = v10 - 1;\n
        v13 = 0;\n
        v14 = 0;\n
        do\n
        {\n
            if (!v10)\n
            {\n
                v14 += 1;\n
            }\n
            else\n
            {\n
                if (!cgc_strncmp(v11, v4, v10))\n
                {\n
                    v13 += v2;\n
                    v14 += 1;\n
                }\n
                v10 = v0;\n
            }\n
            v15 = *((v7 + 28));\n
            v11 = v15 + v13 + 1;\n
            tmp_22 = *((v15 + v13 + 1));\n
            v13 += 1;\n
        } while (tmp_22);\n
        if (v14 <= 65535)\n
        {\n
            v16 = v14 + 1;\n
            *((v7 + 40)) = v16;\n
            v17 = cgc_calloc(4, v16);\n
            *((v7 + 36)) = v17;\n
            if (v17)\n
            {\n
                v18 = *((v7 + 28));\n
                if (!*(v18))\n
                {\n
                    v1 = 0;\n
                    v21 = 0;\n
                    v22 = 0;\n
                }\n
                else\n
                {\n
                    v19 = v0;\n
                    v20 = v2;\n
                    if (!v19)\n
                        v20 = v19;\n
                    v2 = v20;\n
                    v22 = 0;\n
                    v21 = 0;\n
                    v1 = 0;\n
                    do\n
                    {\n
                        if (v19)\n
                        {\n
                            v23 = cgc_strncmp(v18, v4, v19);\n
                            v19 = v0;\n
                            if (v23)\n
                            {\n
                                v21 += 1;\n
                                continue;\n
                            }\n
                        }\n
                        v3 = v21;\n
                        v24 = cgc_malloc(v21 - v22 + 1);\n
                        if (!v24)\n
                            goto LABEL_405a26;\n
                        cgc_memcpy(v24, v22 + *((v7 + 28)), v21);\n
                        *((v24 + v21)) = 0;\n
                        v25 = v1;\n
                        *((*((v7 + 36)) + v25 * 4)) = v24;\n
                        v1 = v25 + 1;\n
                        if (v1 == *((v7 + 40)))\n
                            goto LABEL_405a26;\n
                        v26 = v2;\n
                        v21 = v3 + v26 + 1;\n
                        v22 = v3 + v26 + 1;\n
                        v19 = v0;\n
                        v27 = *((v7 + 28));\n
                        v18 = v27 + v21;\n
                    } while (*((v27 + v21)));\n
                    goto LABEL_405a26;\n
                }\n
                v3 = v21 - v22;\n
                v28 = cgc_malloc(v3 + 1);\n
                if (v28)\n
                {\n
                    cgc_memcpy(v28, v22 + *((v7 + 28)), v3);\n
                    *((v28 + v3)) = 0;\n
                    *((*((v7 + 36)) + v1 * 4)) = v28;\n
                    return 1;\n
                }\n
            }\n
        }\n
    }\n
LABEL_405a26:\n
    v29 = *((v7 + 36));\n
    if (v29)\n
    {\n
        if (*((v7 + 40)) > 0)\n
        {\n
            cgc_free(*(v29));\n
            if (*((v7 + 40)) >= 2)\n
            {\n
                v30 = 1;\n
                do\n
                {\n
                    cgc_free(*((*((v7 + 36)) + v30 * 4)));\n
                    v30 += 1;\n
                } while (v30 < *((v7 + 40)));\n
            }\n
            v29 = *((v7 + 36));\n
        }\n
        cgc_free(v29);\n
    }\n
    *((v7 + 36)) = 0;\n
    *((v7 + 40)) = 0;\n
    return 0;\n
}\n
", "4216980:sub_405894": null, "4217052:sub_4058dc": null, "4217149:sub_40593d": null, "4217483:sub_405a8b": null, "4217488:get_number": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char *field_18;\n
} struct_0;\n
\n
int get_number(unsigned int *v0)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx\n
    unsigned int v3[7];  // eax\n
    struct_0 *v4;  // edi, Other Possible Types: unsigned int\n
    unsigned int v5[7];  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // esi\n
\n
    v3 = cgc_dict_get(v1 + 8, v2);\n
    v4 = v3;\n
    if (!v3)\n
    {\n
        v5 = cgc_malloc(32);\n
        if (!v5)\n
            return 0;\n
        v4 = v5;\n
        v5[5] = 0;\n
        if (!cgc_dict_add(v1 + 8, v2, v5))\n
        {\n
            cgc_free(v5);\n
            return 0;\n
        }\n
    }\n
    v6 = *((v4 + 20));\n
    v7 = 0;\n
    if (v6 == 3)\n
        return 0;\n
    if (v6 == 2)\n
    {\n
        v7 = cgc_strtol(*((v4 + 24)), NULL, 0);\n
    }\n
    else if (v6 == 1)\n
    {\n
        v7 = *((v4 + 24));\n
    }\n
    *(v0) = v7;\n
    return 1;\n
}\n
", "4217667:sub_405b43": null, "4217680:set_result_var": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    void* field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char *field_18;\n
} struct_1;\n
\n
int set_result_var()\n
{\n
    struct_0 *v1;  // ecx\n
    struct_1 *v2;  // edx\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    if (v1->field_40 == 1)\n
        cgc_free(v1->field_48);\n
    v1->field_40 = 0;\n
    v3 = v2->field_14;\n
    if (v3 == 2)\n
    {\n
        v4 = cgc_strdup(v2->field_18);\n
        if (!v4)\n
            return 0;\n
    }\n
    else\n
    {\n
        if (!(v3 == 1))\n
            goto LABEL_405ba2;\n
        v4 = v2->field_18;\n
    }\n
    v1->field_44 = v4;\n
LABEL_405ba2:\n
    v1->field_40 = v2->field_14;\n
    return 1;\n
}\n
", "4217784:sub_405bb8": null, "4217792:cgc_assign_result": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    char *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    char *field_44;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
int cgc_assign_result()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2[2];  // [bp-0x24]\n
    struct_2 *v4;  // edx\n
    unsigned int v5;  // eax\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11[7];  // eax, Other Possible Types: unsigned int\n
\n
    v5 = v4->field_0;\n
    if (v5 - 4 >= 2)\n
    {\n
        if (v5 == 6)\n
        {\n
            if (v6->field_40 != 2)\n
            {\n
                v0 = v6->field_44;\n
                v11 = cgc_calloc(1, 32);\n
                if (v11)\n
                {\n
                    v11[5] = 1;\n
LABEL_405cd0:\n
                    *((v11 + 24)) = v0;\n
                    v10 = cgc_dict_add(&v6->padding_0[8], v4->field_c, v11);\n
                    return v10;\n
                }\n
            }\n
            else\n
            {\n
                v7 = cgc_strdup(v6->field_44);\n
                if (v7)\n
                {\n
                    v0 = v7;\n
                    v11 = cgc_calloc(1, 32);\n
                    if (v11)\n
                    {\n
                        *((v11 + 20)) = 2;\n
                        goto LABEL_405cd0;\n
                    }\n
                }\n
            }\n
        }\n
        goto LABEL_405cef;\n
    }\n
    if (v5 == 4)\n
    {\n
        v1 = v4->field_c;\n
    }\n
    else if (!get_number(&v1))\n
    {\n
LABEL_405cef:\n
        return 0;\n
    }\n
    v9 = v6->field_40;\n
    if (v9 == 2)\n
    {\n
LABEL_405c9f:\n
        v10 = cgc_set_field();\n
        return v10;\n
    }\n
    else if (v9 == 1)\n
    {\n
        cgc_sprintf(v2, \"%d\");\n
        goto LABEL_405c9f;\n
    }\n
    goto LABEL_405cef;\n
}\n
", "4218107:sub_405cfb": null, "4218112:cgc_do_match": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    void* field_48;\n
} struct_0;\n
\n
int cgc_do_match(unsigned int *v4)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    char v1[2];  // [bp-0x54]\n
    char v2[2];  // [bp-0x40]\n
    char v3;  // [bp-0x2c]\n
    unsigned int v5[19];  // ecx\n
    struct_0 *v6;  // esi\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int *v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int *v11;  // edx, Other Possible Types: unsigned int\n
\n
    v6 = v5;\n
    if (v7)\n
    {\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v8 = v5[16];\n
        if (v8 == 1)\n
        {\n
            v0 = v6->field_44;\n
            cgc_sprintf(v2, \"%d\");\n
        }\n
        else\n
        {\n
            if (v8 != 2)\n
                return 0;\n
            if (!v6->field_44)\n
                goto LABEL_405e2f;\n
        }\n
    }\n
    else if (!cgc_get_field())\n
    {\n
        goto LABEL_405e2f;\n
    }\n
    v9 = v4;\n
    if (*(v9) == 3)\n
    {\n
        v11 = v9 + 3;\n
    }\n
    else\n
    {\n
        if (!cgc_eval_expression())\n
            return 0;\n
        v10 = v6->field_40;\n
        if (v10 == 1)\n
        {\n
            v0 = v6->field_44;\n
            cgc_sprintf(v1, \"%d\");\n
LABEL_405dcd:\n
            if (cgc_regexp_init(&v3))\n
            {\n
                cgc_regexp_free(&v3);\n
                if (v6->field_40 == 1)\n
                    cgc_free(v6->field_48);\n
                v6->field_40 = 1;\n
                v6->field_44 = cgc_regexp_match(&v3);\n
                return 1;\n
            }\n
LABEL_405e2f:\n
            return 0;\n
        }\n
        else if (v10 == 2)\n
        {\n
            v11 = &v6->field_44;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
    if (!*(v11))\n
        goto LABEL_405e2f;\n
    goto LABEL_405dcd;\n
}\n
", "4218425:sub_405e39": null, "4218432:do_concat": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    void* field_48;\n
} struct_0;\n
\n
int do_concat(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14]\n
    unsigned int v8[19];  // ecx\n
    struct_0 *v9;  // esi\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // ebp\n
    void* v13;  // edi, Other Possible Types: unsigned int\n
    void* v14;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    char *v16;  // eax\n
    char *v17;  // ebp\n
    unsigned int v18;  // eax\n
    void* v19;  // eax, Other Possible Types: unsigned int\n
    void* v20;  // eax, Other Possible Types: unsigned int\n
    char v21[2];  // ecx, Other Possible Types: unsigned int\n
    void* v22;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = v8;\n
    if (!cgc_eval_expression())\n
        return 0;\n
    v10 = v8[16];\n
    if (v8[16] == 2)\n
    {\n
        v3 = v8[17];\n
    }\n
    else if (v10 == 1)\n
    {\n
        v3 = v8[17];\n
        v4 = v8[18];\n
    }\n
    v8[16] = 0;\n
    v13 = 0;\n
    if (!cgc_eval_expression())\n
    {\n
        v14 = 0;\n
        goto LABEL_40600f;\n
    }\n
    v14 = v8[16];\n
    if (v14 == 2)\n
    {\n
        v2 = v9->field_44;\n
    }\n
    else if (v14 == 1)\n
    {\n
        v2 = v9->field_44;\n
        v6 = v9->field_48;\n
    }\n
    v9->field_40 = 0;\n
    v1 = v14;\n
    v5 = v10;\n
    if (v10 == 2)\n
    {\n
        v14 = v1;\n
        v12 = cgc_strlen(v3) + 1;\n
    }\n
    else\n
    {\n
        v11 = v10;\n
        v12 = 20;\n
        if (v11 > 1)\n
        {\n
            v13 = 0;\n
            goto LABEL_406024;\n
        }\n
    }\n
    if (v14 == 2)\n
    {\n
        v15 = cgc_strlen(v2) + 1;\n
    }\n
    else\n
    {\n
        v15 = 20;\n
        if (!([D] x86g_calculate_condition(0x2<32>, 0x6<32>, ecx<4>, 0x2<32>, 0x0<32>)))\n
            goto LABEL_405f52;\n
    }\n
    v16 = cgc_malloc(v15 + v12);\n
    if (!v16)\n
    {\n
LABEL_405f52:\n
        v19 = v4;\n
        v14 = v1;\n
        if (!(v5 == 1))\n
            goto LABEL_406024;\n
        goto LABEL_406018;\n
    }\n
    else\n
    {\n
        v17 = v16;\n
        v18 = v5;\n
        if (v18 == 1)\n
        {\n
            v0 = v3;\n
            v20 = \"%d\";\n
LABEL_405f81:\n
            cgc_sprintf(v17, v20);\n
        }\n
        else if (v18 != 2)\n
        {\n
            *(v17) = 0;\n
        }\n
        else\n
        {\n
            v0 = v3;\n
            v20 = \"%s\";\n
            goto LABEL_405f81;\n
        }\n
        v14 = v1;\n
        if (v14 == 1)\n
        {\n
            v21 = &v17[cgc_strlen(v17)];\n
            v0 = v2;\n
            v22 = \"%d\";\n
        }\n
        else\n
        {\n
            if (!(v14 == 2))\n
                goto LABEL_405fe7;\n
            v21 = &v17[cgc_strlen(v17)];\n
            v0 = v2;\n
            v22 = \"%s\";\n
        }\n
        cgc_sprintf(v21, v22);\n
        v14 = v1;\n
LABEL_405fe7:\n
        if (v9->field_40 == 1)\n
        {\n
            cgc_free(v9->field_48);\n
            v14 = v1;\n
        }\n
        v9->field_40 = 2;\n
        v9->field_44 = v17;\n
        v13 = 1;\n
        v10 = v5;\n
LABEL_40600f:\n
        v19 = v4;\n
        if (!(v10 == 1))\n
            goto LABEL_406024;\n
LABEL_406018:\n
        cgc_free(v19);\n
    }\n
LABEL_406024:\n
    if (v14 != 1)\n
        return v13;\n
    cgc_free(v6);\n
}\n
", "4218943:sub_40603f": null, "4218944:cgc_set_field": "typedef struct struct_3 {\n
    char padding_0[28];\n
    char *field_1c;\n
    unsigned int field_20;\n
    struct struct_2 *field_24;\n
    unsigned int field_28;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    struct struct_1 *field_24;\n
    unsigned int field_28;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    void* field_0;\n
    unsigned int field_4;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    void* field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_set_field(unsigned int v0)\n
{\n
    unsigned int v2;  // edx\n
    struct_3 *v3;  // ecx\n
    struct_0 *v4;  // esi\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // eax\n
    struct_4 *v9;  // eax, Other Possible Types: unsigned int\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    void* *v11;  // edi, Other Possible Types: unsigned int\n
\n
    if (v2 > 0x10000)\n
        return 0;\n
    v4 = v3;\n
    if (v2 && !v3->field_24 && !cgc_read_fields())\n
        return 0;\n
    v5 = v0;\n
    if (v3->field_28 < v2)\n
    {\n
        v6 = cgc_realloc(v3->field_24, v2 * 4);\n
        if (!v6)\n
            return 0;\n
        v3->field_24 = v6;\n
        v7 = v3->field_28;\n
        cgc_memset(v6 + v7 * 4, 0, (v2 - v7) * 4);\n
        v4->field_28 = v2;\n
        v5 = v0;\n
    }\n
    else if (!v2)\n
    {\n
        if (cgc_strlen(v5) > 4094)\n
            return 0;\n
        cgc_strcpy(v3->field_1c, v5);\n
        v9 = v3->field_24;\n
        if (v9)\n
        {\n
            if (v3->field_28 > 0)\n
            {\n
                cgc_free(v9->field_0);\n
                if (v3->field_28 >= 2)\n
                {\n
                    v11 = 1;\n
                    do\n
                    {\n
                        cgc_free((&v3->field_24->field_0)[v11]);\n
                        v11 += 1;\n
                    } while (v11 < v3->field_28);\n
                }\n
                v9 = v3->field_24;\n
            }\n
            cgc_free(v9);\n
        }\n
        v3->field_24 = 0;\n
        v3->field_28 = 0;\n
        v10 = v3->field_1c;\n
LABEL_4060e3:\n
        v4->field_20 = v10;\n
        return 1;\n
    }\n
    v8 = cgc_strdup(v5);\n
    if (!v8)\n
        return 0;\n
    (&v4->field_24->field_4)[v2] = v8;\n
    v10 = 0;\n
    goto LABEL_4060e3;\n
}\n
", "4219255:sub_406177": null, "4219264:cgc_io_init_fd": "int cgc_io_init_fd(unsigned int v0[5], unsigned int a0)\n
{\n
    unsigned int v1[5];  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v1[0] = a0;\n
    v2 = cgc_malloc(0x2000);\n
    v1[1] = v2;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = -1;\n
    return v2;\n
}\n
", "4219331:sub_4061c3": null, "4219344:cgc_io_init_bytes": "int cgc_io_init_bytes(unsigned int v0[5], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1[5];  // edx\n
\n
    v1 = v0;\n
    v1[0] = -1;\n
    v1[1] = a0;\n
    v1[3] = a1;\n
    v1[2] = 0;\n
    v1[4] = -1;\n
    return a1;\n
}\n
", "4219383:sub_4061f7": null, "4219392:cgc_io_init_string": "int cgc_io_init_string(unsigned int v1[5], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // edi\n
    unsigned int v3[5];  // esi\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v4 = a0;\n
    v5 = cgc_strlen(v4);\n
    v3[0] = -1;\n
    v3[1] = v4;\n
    v3[3] = v5;\n
    v3[2] = 0;\n
    v3[4] = -1;\n
    return v5;\n
}\n
", "4219459:sub_406243": null, "4219472:cgc_io_mark": "int cgc_io_mark(unsigned int v0[5])\n
{\n
    unsigned int v1[5];  // esi\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1[2];\n
    if (v1[0] >= 0 && v2 > 0)\n
    {\n
        v3 = v1[1];\n
        cgc_memmove(v3, v3 + v2, v1[3] - v2);\n
        v1[3] = v1[3] - v1[2];\n
        v1[2] = 0;\n
        v2 = 0;\n
    }\n
    v1[4] = v2;\n
    return v2;\n
}\n
", "4219550:sub_40629e": null, "4219552:cgc_io_rewind": "int cgc_io_rewind(unsigned int v0[5])\n
{\n
    unsigned int v1[5];  // eax\n
    unsigned int v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1[4];\n
    if (v2 != -1)\n
    {\n
        v1[2] = v2;\n
        return 1;\n
    }\n
    return 0;\n
}\n
", "4219576:sub_4062b8": null, "4219584:cgc_io_tell": "int cgc_io_tell(unsigned int v0[5])\n
{\n
    unsigned int v1[5];  // ecx\n
\n
    v1 = v0;\n
    return v1[2] - v1[4];\n
}\n
", "4219595:sub_4062cb": null, "4219600:cgc_io_seek": "int cgc_io_seek(unsigned int v0[5], unsigned int a0)\n
{\n
    unsigned int v1[5];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    v2 = v1[4] + a0;\n
    v3 = 0;\n
    if (v2 <= v1[3])\n
    {\n
        v1[2] = v2;\n
        v3 = 1;\n
    }\n
    return v3;\n
}\n
", "4219627:sub_4062eb": null, "4219632:cgc_io_getc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_io_getc(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    struct_0 *v3;  // edi\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v3 = v2;\n
    v4 = v3->field_8;\n
    if (v4 == v3->field_c)\n
    {\n
        v5 = v3->field_0;\n
        if (v5 < 0)\n
            return -1;\n
        if (v4 == 0x2000)\n
            return -1;\n
        v6 = v4 + v3->field_4;\n
        v0 = &v1;\n
        if (cgc_receive(v5, v6, 1))\n
            return -1;\n
        if (*(&v1) != 1)\n
            return -1;\n
        v3->field_c = v3->field_c + 1;\n
        v4 = v3->field_8;\n
    }\n
    v7 = v3->field_4;\n
    v3->field_8 = v4 + 1;\n
    return *((v7 + v4));\n
}\n
", "4219740:sub_40635c": null, "4219744:cgc_io_ungetc": "int cgc_io_ungetc(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    v2 = v1[2] - 1;\n
    v3 = 0;\n
    if (v2 <= v1[3])\n
    {\n
        v1[2] = v2;\n
        v3 = 1;\n
    }\n
    return v3;\n
}\n
", "4219770:sub_40637a": null, "4219776:cgc_io_peek": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_io_peek(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    struct_0 *v3;  // edi\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
\n
    v3 = v2;\n
    v4 = v3->field_8;\n
    v5 = v3->field_c;\n
    if (v4 == v5)\n
    {\n
        v6 = v3->field_0;\n
        if (v6 < 0)\n
            return -1;\n
        if (v4 == 0x2000)\n
            return -1;\n
        v7 = v4 + v3->field_4;\n
        v0 = &v1;\n
        if (cgc_receive(v6, v7, 1))\n
            return -1;\n
        if (*(&v1) != 1)\n
            return -1;\n
        v5 = v3->field_c + 1;\n
        v3->field_c = v5;\n
        v4 = v3->field_8;\n
    }\n
    v8 = v3->field_4;\n
    v9 = v4 + 1;\n
    v3->field_8 = v9;\n
    v10 = *((v8 + v4));\n
    if (v4 > v5)\n
        v4 = v9;\n
    if (v10 < 0)\n
        v4 = v9;\n
    v3->field_8 = v4;\n
    return v10;\n
}\n
", "4219904:cgc_io_read": "int cgc_io_read()\n
{\n
    return -1;\n
}\n
", "4219910:sub_406406": null, "4219920:cgc_program_init": "int cgc_program_init(unsigned int *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // edi\n
\n
    v0 = v2;\n
    *(v1) = a0;\n
    return cgc_memset(v1, 0, 8);\n
}\n
", "4219965:sub_40643d": null, "4219968:cgc_program_parse": "extern char g_40abb2;\n
\n
int cgc_program_parse(unsigned int *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int *v7[5];  // esi\n
    unsigned int v8[3];  // ebp, Other Possible Types: void*, unsigned int\n
    unsigned int v9;  // edi\n
    unsigned int v11[4];  // ecx\n
    unsigned int v12[3];  // ecx\n
    unsigned int *v14;  // edx, Other Possible Types: unsigned int\n
\n
    v7 = v6;\n
    v2 = &v7[1];\n
    v8 = 0;\n
    v3 = \"BEGIN\";\n
    v1 = \"END\";\n
    v0 = &g_40abb2;\n
    while (true)\n
    {\n
        cgc_io_mark(*(v7));\n
        v9 = -2;\n
        if (!cgc_pattern_match())\n
        {\n
            v9 = -3;\n
            if (!cgc_pattern_match())\n
            {\n
                v9 = -1;\n
                if (!cgc_pattern_match())\n
                {\n
                    v11 = *(v7);\n
                    if (!cgc_parse_expression())\n
                    {\n
                        cgc_io_seek(v11, cgc_io_tell(*(v7)));\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        cgc_io_ungetc(v11);\n
                        v9 = *(&v5);\n
                        if (!v9)\n
                            break;\n
                    }\n
                }\n
            }\n
        }\n
        if (!cgc_parse_statements())\n
            break;\n
        v12 = cgc_malloc(12);\n
        if (!v12)\n
            return 1;\n
        v12[0] = v9;\n
        v12[1] = *(&v4);\n
        v12[2] = 0;\n
        v14 = v8 + 8;\n
        if (!v8)\n
            v14 = v2;\n
        *(v14) = v12;\n
        v8 = v12;\n
        if (v9 == -3)\n
            return 1;\n
    }\n
    return 0;\n
}\n
", "4220261:sub_406565": null, "4220272:cgc_parse_statements": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern unsigned int g_4;\n
\n
int cgc_parse_statements()\n
{\n
    unsigned int v0[3];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int *v6[4];  // ecx\n
    void* *v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    struct_0 *v13;  // edi, Other Possible Types: unsigned int\n
    void* v14;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v15;  // edi\n
    void* v16;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v17;  // eax\n
    unsigned int *v18;  // edx\n
    char *v20;  // ebp\n
    unsigned int v21;  // eax\n
    unsigned int v22[3];  // edi\n
    unsigned int v23[3];  // edi\n
    unsigned int v24[3];  // eax\n
    unsigned int v25;  // eax\n
    char *v26;  // eax\n
    unsigned int v28;  // eax\n
    unsigned int v29;  // eax\n
    unsigned int v30[3];  // edi\n
    unsigned int v32;  // edi\n
    unsigned int *v33;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v6;\n
    v2 = cgc_io_tell(*(v6));\n
    while (true)\n
    {\n
        v8 = cgc_io_getc(*(v6));\n
        if (v8 < 0)\n
            break;\n
        if (!cgc_isspace(v8))\n
        {\n
            cgc_io_ungetc(*(v6));\n
            break;\n
        }\n
    }\n
    if (cgc_io_getc(*(v6)) == 123)\n
    {\n
        v14 = 0;\n
        v13 = 0;\n
        while (true)\n
        {\n
LABEL_4065e0:\n
            v9 = cgc_io_getc(*(v6));\n
            if (v9 >= 0)\n
            {\n
                if (!(!cgc_isspace(v9)))\n
                    continue;\n
                cgc_io_ungetc(*(v6));\n
            }\n
            v10 = cgc_io_peek(*(v6));\n
            if (v10 == 35)\n
            {\n
                do\n
                {\n
                    v11 = cgc_io_getc(*(v6));\n
                    if (v11 < 0)\n
                        goto LABEL_4065e0;\n
                } while (v11 != 10);\n
            }\n
            else\n
            {\n
                if (v10 == 125)\n
                {\n
                    cgc_io_getc(*(v6));\n
                    *(v18) = v14;\n
                    return 1;\n
                }\n
                if (cgc_parse_statements())\n
                {\n
                    v12 = *(&v4);\n
                    if (v12)\n
                    {\n
                        if (v14)\n
                        {\n
                            *((v13 + &g_4)) = v12;\n
                            v13 = v12;\n
                        }\n
                        else\n
                        {\n
                            v14 = v12;\n
                            v13 = v12;\n
                        }\n
                    }\n
                }\n
                else\n
                {\n
                    v16 = 0;\n
                    break;\n
                }\n
            }\n
        }\n
        goto LABEL_406b49;\n
    }\n
    v15 = cgc_io_tell(*(v6)) - 1;\n
    cgc_io_seek(*(v6), v15);\n
    v17 = cgc_parse_var(v5);\n
    v16 = 0;\n
    if (!v17)\n
    {\n
LABEL_406b49:\n
        cgc_free(v16);\n
        cgc_io_seek(*(v7), v2);\n
        return 0;\n
    }\n
    v20 = v17;\n
    while (true)\n
    {\n
        v21 = cgc_io_getc(*(v7));\n
        if (v21 < 0)\n
            break;\n
        if (!cgc_isspace(v21))\n
        {\n
            cgc_io_ungetc(*(v7));\n
            break;\n
        }\n
    }\n
    v1 = v15;\n
    v22 = cgc_calloc(1, 24);\n
    if (!cgc_strcmp(v20, \"if\"))\n
    {\n
        v1 = v20;\n
        v22[0] = 1;\n
        if (!(cgc_io_getc(*(v7)) == 40))\n
            goto LABEL_406adc;\n
        if (!cgc_parse_expression())\n
            goto LABEL_406adc;\n
        v0 = v22;\n
        v16 = v1;\n
        if (!cgc_parse_statements())\n
            goto LABEL_406b49;\n
        goto LABEL_406b04;\n
    }\n
    v0[0] = v22;\n
    if (!cgc_strcmp(v20, \"while\"))\n
    {\n
        v23 = v0;\n
        v23[0] = 2;\n
        v23[2] = 0;\n
        if (!(cgc_io_getc(*(v7)) == 40))\n
            goto LABEL_406b47;\n
        if (!cgc_parse_expression())\n
            goto LABEL_406b47;\n
    }\n
    else if (!cgc_strcmp(v20, \"do\"))\n
    {\n
        v24 = v0;\n
        v24[0] = 2;\n
        v24[2] = 1;\n
        if (!cgc_parse_statements())\n
            goto LABEL_406b47;\n
        cgc_free(v20);\n
        while (true)\n
        {\n
            v25 = cgc_io_getc(*(v7));\n
            if (v25 < 0)\n
                break;\n
            if (!cgc_isspace(v25))\n
            {\n
                cgc_io_ungetc(*(v7));\n
                break;\n
            }\n
        }\n
        v26 = cgc_parse_var();\n
        v16 = 0;\n
        if (!v26)\n
            goto LABEL_406b49;\n
        if (!cgc_strcmp(v26, \"while\"))\n
        {\n
            skip_whitespace();\n
            if (cgc_io_getc(*(v7)) == 40 && cgc_parse_expression())\n
            {\n
                skip_whitespace();\n
                v29 = cgc_io_getc(*(v7));\n
                v16 = v26;\n
LABEL_406aff:\n
                if (!(v29 == 59))\n
                    goto LABEL_406b49;\n
LABEL_406b04:\n
                *(v18) = v0;\n
                return 1;\n
            }\n
        }\n
        v16 = v26;\n
        goto LABEL_406b49;\n
    }\n
    else if (!cgc_strcmp(v20, \"for\"))\n
    {\n
        v0[0] = 3;\n
        if (!(cgc_io_getc(*(v7)) == 40))\n
            goto LABEL_406b47;\n
        if (!cgc_parse_expression())\n
            goto LABEL_406b47;\n
        if (!cgc_parse_expression())\n
            goto LABEL_406b47;\n
        if (!cgc_parse_expression())\n
            goto LABEL_406b47;\n
    }\n
    else\n
    {\n
        if (!cgc_strcmp(v20, \"continue\"))\n
        {\n
            v0[0] = &g_4;\n
        }\n
        else if (!cgc_strcmp(v20, \"break\"))\n
        {\n
            v0[0] = &g_4;\n
        }\n
        else if (!cgc_strcmp(v20, \"next\"))\n
        {\n
            v0[0] = &g_4;\n
        }\n
        else if (!cgc_strcmp(v20, \"exit\"))\n
        {\n
            v0[0] = 8;\n
        }\n
        else\n
        {\n
            if (cgc_strcmp(v20, \"printf\") && cgc_strcmp(v20, \"print\"))\n
            {\n
                cgc_io_seek(*(v7), v1);\n
                v0[0] = 10;\n
                v28 = cgc_parse_expression(0x100);\n
                goto LABEL_4068e9;\n
            }\n
            v30 = v0;\n
            v30[0] = 9;\n
            if (cgc_strcmp(v20, \"printf\"))\n
            {\n
LABEL_406a92:\n
                v1 = v20;\n
                v32 = 0;\n
                while (cgc_parse_expression())\n
                {\n
                    v33 = v32 + &g_4;\n
                    v32 = *(&v3);\n
                    v33 = v30 + 1;\n
                    *(v33) = v32;\n
                    cgc_io_ungetc(*(v7));\n
                    if (cgc_io_getc(*(v7)) != 44)\n
                        goto LABEL_406b04;\n
                }\n
LABEL_406adc:\n
                v16 = v1;\n
                goto LABEL_406b49;\n
            }\n
            else if (cgc_parse_expression())\n
            {\n
                cgc_io_ungetc(*(v7));\n
                if (!(cgc_io_getc(*(v7)) == 44))\n
                    goto LABEL_406b47;\n
                goto LABEL_406a92;\n
            }\n
LABEL_406b47:\n
            v16 = v20;\n
            goto LABEL_406b49;\n
        }\n
        skip_whitespace();\n
        v29 = cgc_io_getc(*(v7));\n
        v16 = v20;\n
        goto LABEL_406aff;\n
    }\n
    v28 = cgc_parse_statements();\n
LABEL_4068e9:\n
    v16 = v20;\n
    if (!v28)\n
        goto LABEL_406b49;\n
    goto LABEL_406b04;\n
}\n
", "4220482:sub_406642": null, "4221805:sub_406b6d": null, "4221808:cgc_pattern_match": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_pattern_match()\n
{\n
    int tmp_7;  // tmp #7\n
    void* *v1;  // ecx\n
    unsigned int v3;  // eax\n
    char *v4;  // edx\n
    struct_0 *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    do\n
    {\n
        v3 = cgc_io_getc(*(v1));\n
        if (v3 < 0)\n
        {\n
LABEL_406c4c:\n
            cgc_io_seek(*(v1), cgc_io_tell(*(v1)));\n
            goto LABEL_406c5c__0;\n
        }\n
    } while (cgc_isspace(v3));\n
    cgc_io_ungetc(*(v1));\n
    if (*(v4))\n
    {\n
        v5 = v4 + 1;\n
        do\n
        {\n
            v6 = cgc_io_getc(*(v1));\n
            if (v6 < 0)\n
                goto LABEL_406c4c;\n
            if (!(v6 == *((v5 - 1))))\n
                goto LABEL_406c4c;\n
            tmp_7 = *(v5);\n
            v5 += 1;\n
        } while (tmp_7);\n
    }\n
    while (true)\n
    {\n
        v7 = cgc_io_getc(*(v1));\n
        if (v7 < 0)\n
        {\n
LABEL_406c36:\n
            if (cgc_io_peek(*(v1)) == 123)\n
                return 1;\n
            goto LABEL_406c4c;\n
        }\n
        else if (!cgc_isspace(v7))\n
        {\n
            cgc_io_ungetc(*(v1));\n
            goto LABEL_406c36;\n
        }\n
    }\n
LABEL_406c5c__0:\n
    return 0;\n
}\n
", "4221953:sub_406c01": null, "4222052:sub_406c64": null, "4222064:cgc_parse_expression": "int cgc_parse_expression()\n
{\n
    unsigned int v0[2];  // [bp-0x30]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ebp\n
    void* *v7;  // ecx\n
    unsigned int v8;  // eax\n
\n
    v6 = v5;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v8 = cgc_io_getc(*(v7));\n
        if (v8 < 0)\n
            goto LABEL_406cc4;\n
        if (!cgc_isspace(v8))\n
        {\n
            cgc_io_ungetc(*(v7));\n
LABEL_406cc4:\n
            v0[0] = 0;\n
        }\n
    }\n
}\n
", "4222301:sub_406d5d": null, "4222327:sub_406d77": null, "4222428:sub_406ddc": null, "4222493:sub_406e1d": null, "4224591:sub_40764f": null, "4224592:skip_whitespace": "int skip_whitespace()\n
{\n
    void* *v1;  // ecx\n
    unsigned int v2;  // eax\n
\n
    while (true)\n
    {\n
        v2 = cgc_io_getc(*(v1));\n
        if (v2 < 0)\n
        {\n
            return v2;\n
        }\n
        else if (!cgc_isspace(v2))\n
        {\n
            v2 = cgc_io_ungetc(*(v1));\n
            return v2;\n
        }\n
    }\n
}\n
", "4224666:sub_40769a": null, "4224672:cgc_parse_number": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_parse_number()\n
{\n
    char v0;  // [bp-0x50]\n
    struct_0 *v2;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v3[4];  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v6[4];  // eax\n
    unsigned int *v7;  // edx\n
\n
    v2 = 0;\n
    do\n
    {\n
        v4 = cgc_io_getc(*(v3));\n
        if (v4 < 0)\n
        {\n
LABEL_407758:\n
            cgc_free(NULL);\n
            return 0;\n
        }\n
        (&v0)[v2] = v4;\n
        if (v2 == 63)\n
        {\n
            cgc_io_ungetc(*(v3));\n
LABEL_407707:\n
            (&v0)[v2] = 0;\n
            v6 = cgc_calloc(1, 24);\n
            if (v6)\n
            {\n
                v6[0] = 2;\n
                v6[3] = cgc_strtol(&v0, NULL, 10);\n
                *(v7) = v6;\n
                return 1;\n
            }\n
            goto LABEL_407758;\n
        }\n
        v2 += 1;\n
    } while (cgc_isdigit(v4));\n
    cgc_io_ungetc(*(v3));\n
    if (v2 == 1)\n
        goto LABEL_407758;\n
    goto LABEL_407707;\n
}\n
", "4224878:sub_40776e": null, "4224880:cgc_parse_variable": "int cgc_parse_variable()\n
{\n
    char *v1;  // edi\n
    unsigned int v2[4];  // eax\n
    unsigned int *v3;  // edx\n
\n
    v1 = cgc_parse_var();\n
    if (v1 && cgc_strlen(v1) && cgc_strcmp(v1, \"if\") && cgc_strcmp(v1, \"while\") && cgc_strcmp(v1, \"continue\") && cgc_strcmp(v1, \"do\") && cgc_strcmp(v1, \"for\") && cgc_strcmp(v1, \"break\") && cgc_strcmp(v1, \"next\") && cgc_strcmp(v1, \"exit\") && cgc_strcmp(v1, \"print\") && cgc_strcmp(v1, \"printf\"))\n
    {\n
        v2 = cgc_calloc(1, 24);\n
        if (v2)\n
        {\n
            v2[0] = 6;\n
            v2[3] = v1;\n
            *(v3) = v2;\n
            return 1;\n
        }\n
    }\n
    cgc_free(v1);\n
    return 0;\n
}\n
", "4225234:sub_4078d2": null, "4225248:cgc_treeify_expression": "int cgc_treeify_expression()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // edx\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // esi\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // esi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // ecx\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // ecx\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // edi\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // ebp\n
    unsigned int v37;  // eax\n
    unsigned int v38;  // edx\n
    unsigned int v39;  // esi\n
    unsigned int v40;  // edx\n
    unsigned int v41;  // esi\n
    unsigned int v42;  // ecx\n
    unsigned int v43;  // edi\n
    unsigned int v44;  // edi\n
    unsigned int v45;  // ecx\n
    unsigned int v46;  // eax\n
    unsigned int v47;  // ecx\n
    unsigned int v48;  // edx\n
    unsigned int v49;  // eax\n
    unsigned int v50;  // ecx\n
    unsigned int v51;  // edx\n
    unsigned int v52;  // edi\n
    unsigned int v53;  // ecx\n
    unsigned int v54;  // eax\n
    unsigned int v55;  // ecx\n
    unsigned int v56;  // edx\n
    unsigned int v57;  // eax\n
    unsigned int v58;  // ecx\n
    unsigned int v59;  // edx\n
    unsigned int v60;  // edi\n
    unsigned int v61;  // eax\n
    unsigned int v62;  // ecx\n
    unsigned int v63;  // eax\n
    unsigned int v64;  // ecx\n
    unsigned int v65;  // edx\n
    unsigned int v66;  // eax\n
    unsigned int v67;  // ecx\n
    unsigned int v68;  // edx\n
    unsigned int v69;  // ecx\n
    unsigned int v70;  // eax\n
    unsigned int v71;  // ecx\n
    unsigned int v72;  // edx\n
    unsigned int v73;  // eax\n
    unsigned int v74;  // ecx\n
    unsigned int v75;  // edx\n
    unsigned int v76;  // edx\n
    unsigned int v77;  // eax\n
    unsigned int v78;  // esi\n
    unsigned int v79;  // ecx\n
    unsigned int v80;  // eax\n
    unsigned int v81;  // ebp\n
    unsigned int v82;  // ecx\n
    unsigned int v83;  // edx\n
    unsigned int v84;  // eax\n
    unsigned int v85;  // ecx\n
    unsigned int v86;  // edx\n
    unsigned int v87;  // esi\n
    unsigned int v88;  // ecx\n
    unsigned int v89;  // eax\n
    unsigned int v90;  // ebp\n
    unsigned int v91;  // ecx\n
    unsigned int v92;  // edx\n
    unsigned int v93;  // eax\n
    unsigned int v94;  // ecx\n
    unsigned int v95;  // edx\n
    unsigned int v96;  // eax\n
    unsigned int v97;  // esi\n
    unsigned int v98;  // ecx\n
    unsigned int v99;  // eax\n
    unsigned int v100;  // ebp\n
    unsigned int v101;  // ecx\n
    unsigned int v102;  // edx\n
    unsigned int v103;  // eax\n
    unsigned int v104;  // ecx\n
    unsigned int v105;  // edx\n
    unsigned int v106;  // esi\n
    unsigned int v107;  // ecx\n
    unsigned int v108;  // eax\n
    unsigned int v109;  // ebp\n
    unsigned int v110;  // ecx\n
    unsigned int v111;  // edx\n
    unsigned int v112;  // eax\n
    unsigned int v113;  // ecx\n
    unsigned int v114;  // edx\n
    unsigned int v115;  // eax\n
    unsigned int v116;  // esi\n
    unsigned int v117;  // ecx\n
    unsigned int v118;  // eax\n
    unsigned int v119;  // ebp\n
    unsigned int v120;  // ecx\n
    unsigned int v121;  // edx\n
    unsigned int v122;  // eax\n
    unsigned int v123;  // ecx\n
    unsigned int v124;  // edx\n
    unsigned int v125;  // esi\n
    unsigned int v126;  // ecx\n
    unsigned int v127;  // eax\n
    unsigned int v128;  // ebp\n
    unsigned int v129;  // ecx\n
    unsigned int v130;  // edx\n
    unsigned int v131;  // eax\n
    unsigned int v132;  // ecx\n
    unsigned int v133;  // edx\n
    unsigned int v134;  // ebp\n
    unsigned int v135;  // eax\n
    unsigned int v136;  // esi\n
    unsigned int v137;  // ecx\n
    unsigned int v138;  // eax\n
    unsigned int v139;  // ecx\n
    unsigned int v140;  // edx\n
    unsigned int v141;  // eax\n
    unsigned int v142;  // ecx\n
    unsigned int v143;  // edx\n
    unsigned int v144;  // ecx\n
    unsigned int v145;  // eax\n
    unsigned int v146;  // ecx\n
    unsigned int v147;  // edx\n
    unsigned int v148;  // eax\n
    unsigned int v149;  // ecx\n
    unsigned int v150;  // edx\n
    unsigned int v151;  // edi\n
    unsigned int v152;  // eax\n
    unsigned int v153;  // ecx\n
    unsigned int v154;  // eax\n
    unsigned int v155;  // ecx\n
    unsigned int v156;  // edx\n
    unsigned int v157;  // eax\n
    unsigned int v158;  // ecx\n
    unsigned int v159;  // edx\n
    unsigned int v160;  // ecx\n
    unsigned int v161;  // eax\n
    unsigned int v162;  // ecx\n
    unsigned int v163;  // edx\n
    unsigned int v164;  // eax\n
    unsigned int v165;  // ecx\n
    unsigned int v166;  // edx\n
    unsigned int v167;  // ecx\n
    unsigned int v168;  // eax\n
    unsigned int v169;  // ecx\n
    unsigned int v170;  // edx\n
    unsigned int v171;  // eax\n
    unsigned int v172;  // ecx\n
    unsigned int v173;  // edx\n
    unsigned int v174;  // esi\n
    unsigned int v175;  // eax\n
    unsigned int v176;  // ecx\n
    unsigned int v177;  // edx\n
    unsigned int v178;  // eax\n
    unsigned int v179;  // ecx\n
    unsigned int v180;  // edx\n
    unsigned int v181;  // esi\n
    unsigned int v182;  // ecx\n
    unsigned int v183;  // edx\n
    unsigned int v184;  // esi\n
\n
    v4 = *(v3);\n
    if (!v4)\n
        return 1;\n
    v6 = v5;\n
    v1 = *((v4 + 8));\n
    *((v4 + 8)) = 0;\n
    v0 = v3;\n
    v10 = *(v3);\n
    if (v10)\n
    {\n
        v36 = 0;\n
        do\n
        {\n
            if (*(v10) == 31)\n
            {\n
                if (!(!*((v10 + 12))))\n
                    continue;\n
                if (!*((v10 + 4)))\n
                    goto LABEL_407af6;\n
                if (!cgc_treeify_expression())\n
                    goto LABEL_407af6;\n
                v7 = *((v10 + 4));\n
                *((v10 + 12)) = v7;\n
                v8 = *((v7 + 4));\n
                if (v8)\n
                    *((v8 + 8)) = *((v7 + 8));\n
                v9 = *((v7 + 8));\n
                if (v9)\n
                    *((v9 + 4)) = v8;\n
                *((v7 + 4)) = 0;\n
                *((v7 + 8)) = 0;\n
            }\n
            v10 = *((v10 + 4));\n
        } while (v10);\n
    }\n
    if (v6 >= 2)\n
    {\n
        v11 = v0;\n
        v12 = *(v11);\n
        while (v12)\n
        {\n
            v13 = *(v12);\n
            if (v13 != 38)\n
            {\n
                if (!(v13 == 37))\n
                    goto LABEL_4079a6;\n
                if (!(!*((v12 + 12))))\n
                    goto LABEL_4079a6;\n
                v15 = *((v12 + 8));\n
                if (v15 && *(v15) - 4 <= 2)\n
                {\n
                    *(v12) = 35;\n
                    *((v12 + 12)) = v15;\n
                    v18 = *((v15 + 4));\n
                    if (v18)\n
                        *((v18 + 8)) = *((v15 + 8));\n
                    v20 = *((v15 + 8));\n
                    if (v20)\n
                        *((v20 + 4)) = v18;\n
                    *((v15 + 4)) = 0;\n
                    *((v15 + 8)) = 0;\n
                    v11 = v0;\n
                    if (*(v11) == *((v12 + 12)))\n
                    {\n
                        *(v11) = v12;\n
                        v12 = *((v12 + 4));\n
                        continue;\n
                    }\n
                    goto LABEL_4079a6;\n
                }\n
                v17 = *((v12 + 4));\n
                if (!v17)\n
                    goto LABEL_4079a6;\n
                if (!(*(v17) - 4 <= 2))\n
                    goto LABEL_4079a6;\n
                *(v12) = 34;\n
            }\n
            else\n
            {\n
                if (!(!*((v12 + 12))))\n
                    goto LABEL_4079a6;\n
                v14 = *((v12 + 8));\n
                if (v14 && *(v14) - 4 <= 2)\n
                {\n
                    *(v12) = 33;\n
                    *((v12 + 12)) = v14;\n
                    v16 = *((v14 + 4));\n
                    if (v16)\n
                        *((v16 + 8)) = *((v14 + 8));\n
                    v19 = *((v14 + 8));\n
                    if (v19)\n
                        *((v19 + 4)) = v16;\n
                    *((v14 + 4)) = 0;\n
                    *((v14 + 8)) = 0;\n
                    v11 = v0;\n
                    if (*(v11) == *((v12 + 12)))\n
                    {\n
                        *(v11) = v12;\n
                        v12 = *((v12 + 4));\n
                        continue;\n
                    }\n
                    goto LABEL_4079a6;\n
                }\n
                v17 = *((v12 + 4));\n
                if (!v17)\n
                    goto LABEL_4079a6;\n
                if (!(*(v17) - 4 <= 2))\n
                    goto LABEL_4079a6;\n
                *(v12) = 32;\n
            }\n
            *((v12 + 12)) = v17;\n
            v21 = *((v17 + 4));\n
            if (v21)\n
                *((v21 + 8)) = *((v17 + 8));\n
            v22 = *((v17 + 8));\n
            if (v22)\n
                *((v22 + 4)) = v21;\n
            *((v17 + 4)) = 0;\n
            *((v17 + 8)) = 0;\n
            v11 = v0;\n
LABEL_4079a6:\n
            v12 = *((v12 + 4));\n
        }\n
        if (v6 >= 4)\n
        {\n
            v35 = *(v11);\n
            v23 = v35;\n
            do\n
            {\n
                v33 = v23;\n
                v23 = *((v23 + 4));\n
            } while (v23);\n
            v36 = 0;\n
            v24 = v0;\n
            do\n
            {\n
                if (*(v33) - 13 >= -6 && !*((v33 + 12)))\n
                {\n
                    v25 = *((v33 + 8));\n
                    if (!v25)\n
                        goto LABEL_407af6;\n
                    if (!*((v33 + 4)))\n
                        goto LABEL_407af6;\n
                    if (!(*(v25) - 4 <= 2))\n
                        goto LABEL_407af6;\n
                    if (!cgc_treeify_expression())\n
                        goto LABEL_407af6;\n
                    v26 = *((v33 + 4));\n
                    v27 = *((v33 + 8));\n
                    *((v33 + 12)) = v27;\n
                    *((v33 + 16)) = v26;\n
                    v28 = *((v27 + 4));\n
                    if (v28)\n
                        *((v28 + 8)) = *((v27 + 8));\n
                    v29 = *((v27 + 8));\n
                    if (v29)\n
                        *((v29 + 4)) = v28;\n
                    *((v27 + 4)) = 0;\n
                    *((v27 + 8)) = 0;\n
                    v30 = *((v33 + 16));\n
                    v31 = *((v30 + 4));\n
                    if (v31)\n
                        *((v31 + 8)) = *((v30 + 8));\n
                    v32 = *((v30 + 8));\n
                    if (v32)\n
                        *((v32 + 4)) = v31;\n
                    *((v30 + 4)) = 0;\n
                    *((v30 + 8)) = 0;\n
                    v35 = *(v24);\n
                    if (v35 == *((v33 + 12)))\n
                    {\n
                        *(v24) = v33;\n
                        v35 = v33;\n
                    }\n
                }\n
                v33 = *((v33 + 8));\n
            } while (v33);\n
            do\n
            {\n
                v34 = v35;\n
                v35 = *((v35 + 4));\n
            } while (v35);\n
            v36 = 0;\n
            do\n
            {\n
                if (*(v34) == 13 && !*((v34 + 12)))\n
                {\n
                    if (!*((v34 + 8)))\n
                        goto LABEL_407af6;\n
                    if (!*((v34 + 4)))\n
                        goto LABEL_407af6;\n
                    if (!cgc_treeify_expression())\n
                        goto LABEL_407af6;\n
                    v37 = *((v34 + 4));\n
                    *((v34 + 20)) = v37;\n
                    v38 = *((v37 + 4));\n
                    if (v38)\n
                        *((v38 + 8)) = *((v37 + 8));\n
                    v39 = *((v37 + 8));\n
                    if (v39)\n
                        *((v39 + 4)) = v38;\n
                    *((v37 + 4)) = 0;\n
                    *((v37 + 8)) = 0;\n
                    v40 = v0;\n
                    *((v34 + 12)) = *(v40);\n
                    *((*((v34 + 8)) + 4)) = 0;\n
                    *((v34 + 8)) = 0;\n
                    *(v40) = v34;\n
                    if (!cgc_treeify_expression())\n
                        goto LABEL_407af6;\n
                }\n
                v34 = *((v34 + 8));\n
            } while (v34);\n
            v41 = v0;\n
            v42 = *(v41);\n
            v43 = 0;\n
            if (v42)\n
            {\n
                v44 = v42;\n
                v36 = 0;\n
                do\n
                {\n
                    if (*(v44) == 14 && !*((v44 + 12)))\n
                    {\n
                        if (!*((v44 + 8)))\n
                            goto LABEL_407af6;\n
                        if (!*((v44 + 4)))\n
                            goto LABEL_407af6;\n
                        if (!cgc_treeify_expression())\n
                            goto LABEL_407af6;\n
                        v45 = *((v44 + 4));\n
                        v46 = *((v44 + 8));\n
                        *((v44 + 12)) = v46;\n
                        *((v44 + 16)) = v45;\n
                        v47 = *((v46 + 4));\n
                        if (v47)\n
                            *((v47 + 8)) = *((v46 + 8));\n
                        v48 = *((v46 + 8));\n
                        if (v48)\n
                            *((v48 + 4)) = v47;\n
                        *((v46 + 4)) = 0;\n
                        *((v46 + 8)) = 0;\n
                        v49 = *((v44 + 16));\n
                        v50 = *((v49 + 4));\n
                        v41 = v0;\n
                        if (v50)\n
                            *((v50 + 8)) = *((v49 + 8));\n
                        v51 = *((v49 + 8));\n
                        if (v51)\n
                            *((v51 + 4)) = v50;\n
                        *((v49 + 4)) = 0;\n
                        *((v49 + 8)) = 0;\n
                        v42 = *(v41);\n
                        if (v42 == *((v44 + 12)))\n
                        {\n
                            *(v41) = v44;\n
                            v42 = v44;\n
                        }\n
                    }\n
                    v44 = *((v44 + 4));\n
                } while (v44);\n
                if (!v42)\n
                {\n
LABEL_407fb0:\n
                    v43 = 0;\n
                }\n
                else\n
                {\n
                    v52 = v42;\n
                    v36 = 0;\n
                    do\n
                    {\n
                        if (*(v52) == 15 && !*((v52 + 12)))\n
                        {\n
                            if (!*((v52 + 8)))\n
                                goto LABEL_407af6;\n
                            if (!*((v52 + 4)))\n
                                goto LABEL_407af6;\n
                            if (!cgc_treeify_expression())\n
                                goto LABEL_407af6;\n
                            v53 = *((v52 + 4));\n
                            v54 = *((v52 + 8));\n
                            *((v52 + 12)) = v54;\n
                            *((v52 + 16)) = v53;\n
                            v55 = *((v54 + 4));\n
                            if (v55)\n
                                *((v55 + 8)) = *((v54 + 8));\n
                            v56 = *((v54 + 8));\n
                            if (v56)\n
                                *((v56 + 4)) = v55;\n
                            *((v54 + 4)) = 0;\n
                            *((v54 + 8)) = 0;\n
                            v57 = *((v52 + 16));\n
                            v58 = *((v57 + 4));\n
                            v41 = v0;\n
                            if (v58)\n
                                *((v58 + 8)) = *((v57 + 8));\n
                            v59 = *((v57 + 8));\n
                            if (v59)\n
                                *((v59 + 4)) = v58;\n
                            *((v57 + 4)) = 0;\n
                            *((v57 + 8)) = 0;\n
                            v42 = *(v41);\n
                            if (v42 == *((v52 + 12)))\n
                            {\n
                                *(v41) = v52;\n
                                v42 = v52;\n
                            }\n
                        }\n
                        v52 = *((v52 + 4));\n
                    } while (v52);\n
                    if (!v42)\n
                        goto LABEL_407fb0;\n
                    v60 = v42;\n
                    do\n
                    {\n
                        v61 = *(v60);\n
                        if (v61 == 17)\n
                        {\n
                            if (!*((v60 + 12)))\n
                            {\n
                                v36 = 0;\n
                                if (!*((v60 + 8)))\n
                                    goto LABEL_407af6;\n
                                if (!*((v60 + 4)))\n
                                    goto LABEL_407af6;\n
                                if (!cgc_treeify_expression())\n
                                    goto LABEL_407af6;\n
                                v62 = *((v60 + 4));\n
                                v63 = *((v60 + 8));\n
                                *((v60 + 12)) = v63;\n
                                *((v60 + 16)) = v62;\n
                                v64 = *((v63 + 4));\n
                                if (v64)\n
                                    *((v64 + 8)) = *((v63 + 8));\n
                                v65 = *((v63 + 8));\n
                                if (v65)\n
                                    *((v65 + 4)) = v64;\n
                                *((v63 + 4)) = 0;\n
                                *((v63 + 8)) = 0;\n
                                v66 = *((v60 + 16));\n
                                v67 = *((v66 + 4));\n
                                v41 = v0;\n
                                if (v67)\n
                                    *((v67 + 8)) = *((v66 + 8));\n
                                v68 = *((v66 + 8));\n
                                if (v68)\n
                                    *((v68 + 4)) = v67;\n
                                *((v66 + 4)) = 0;\n
                                *((v66 + 8)) = 0;\n
                                v42 = *(v41);\n
                                if (v42 == *((v60 + 12)))\n
                                {\n
                                    *(v41) = v60;\n
                                    v42 = v60;\n
                                }\n
                            }\n
                            v61 = *(v60);\n
                        }\n
                        if (v61 == 16 && !*((v60 + 12)))\n
                        {\n
                            v36 = 0;\n
                            if (!*((v60 + 8)))\n
                                goto LABEL_407af6;\n
                            if (!*((v60 + 4)))\n
                                goto LABEL_407af6;\n
                            if (!cgc_treeify_expression())\n
                                goto LABEL_407af6;\n
                            v69 = *((v60 + 4));\n
                            v70 = *((v60 + 8));\n
                            *((v60 + 12)) = v70;\n
                            *((v60 + 16)) = v69;\n
                            v71 = *((v70 + 4));\n
                            if (v71)\n
                                *((v71 + 8)) = *((v70 + 8));\n
                            v72 = *((v70 + 8));\n
                            if (v72)\n
                                *((v72 + 4)) = v71;\n
                            *((v70 + 4)) = 0;\n
                            *((v70 + 8)) = 0;\n
                            v73 = *((v60 + 16));\n
                            v74 = *((v73 + 4));\n
                            v41 = v0;\n
                            if (v74)\n
                                *((v74 + 8)) = *((v73 + 8));\n
                            v75 = *((v73 + 8));\n
                            if (v75)\n
                                *((v75 + 4)) = v74;\n
                            *((v73 + 4)) = 0;\n
                            *((v73 + 8)) = 0;\n
                            v42 = *(v41);\n
                            if (v42 == *((v60 + 12)))\n
                            {\n
                                *(v41) = v60;\n
                                v42 = v60;\n
                            }\n
                        }\n
                        v60 = *((v60 + 4));\n
                    } while (v60);\n
                    v43 = 0;\n
                    if (!v42)\n
                        goto LABEL_407fb2;\n
                    v76 = v42;\n
                    do\n
                    {\n
                        v77 = *(v76);\n
                        if (v77 == 22)\n
                        {\n
                            if (!*((v76 + 12)))\n
                            {\n
                                v36 = 0;\n
                                if (!*((v76 + 8)))\n
                                    goto LABEL_407af6;\n
                                if (!*((v76 + 4)))\n
                                    goto LABEL_407af6;\n
                                v78 = v76;\n
                                if (!cgc_treeify_expression())\n
                                    goto LABEL_407af6;\n
                                v79 = *((v76 + 4));\n
                                v80 = *((v76 + 8));\n
                                *((v76 + 12)) = v80;\n
                                v81 = v76;\n
                                *((v76 + 16)) = v79;\n
                                v82 = *((v80 + 4));\n
                                if (v82)\n
                                    *((v82 + 8)) = *((v80 + 8));\n
                                v83 = *((v80 + 8));\n
                                if (v83)\n
                                    *((v83 + 4)) = v82;\n
                                *((v80 + 4)) = 0;\n
                                *((v80 + 8)) = 0;\n
                                v84 = *((v78 + 16));\n
                                v85 = *((v84 + 4));\n
                                v41 = v0;\n
                                v43 = 0;\n
                                if (v85)\n
                                    *((v85 + 8)) = *((v84 + 8));\n
                                v86 = *((v84 + 8));\n
                                if (v86)\n
                                    *((v86 + 4)) = v85;\n
                                *((v84 + 4)) = 0;\n
                                *((v84 + 8)) = 0;\n
                                v42 = *(v41);\n
                                v76 = v81;\n
                                if (v42 == *((v81 + 12)))\n
                                {\n
                                    *(v41) = v81;\n
                                    v42 = v81;\n
                                }\n
                            }\n
                            v77 = *(v76);\n
                        }\n
                        if (v77 == 23 && !*((v76 + 12)))\n
                        {\n
                            v36 = 0;\n
                            if (!*((v76 + 8)))\n
                                goto LABEL_407af6;\n
                            if (!*((v76 + 4)))\n
                                goto LABEL_407af6;\n
                            v87 = v76;\n
                            if (!cgc_treeify_expression())\n
                                goto LABEL_407af6;\n
                            v88 = *((v76 + 4));\n
                            v89 = *((v76 + 8));\n
                            *((v76 + 12)) = v89;\n
                            v90 = v76;\n
                            *((v76 + 16)) = v88;\n
                            v91 = *((v89 + 4));\n
                            if (v91)\n
                                *((v91 + 8)) = *((v89 + 8));\n
                            v92 = *((v89 + 8));\n
                            if (v92)\n
                                *((v92 + 4)) = v91;\n
                            *((v89 + 4)) = 0;\n
                            *((v89 + 8)) = 0;\n
                            v93 = *((v87 + 16));\n
                            v94 = *((v93 + 4));\n
                            v41 = v0;\n
                            if (v94)\n
                                *((v94 + 8)) = *((v93 + 8));\n
                            v95 = *((v93 + 8));\n
                            v43 = 0;\n
                            if (v95)\n
                                *((v95 + 4)) = v94;\n
                            *((v93 + 4)) = 0;\n
                            *((v93 + 8)) = 0;\n
                            v42 = *(v41);\n
                            v76 = v90;\n
                            if (v42 == *((v90 + 12)))\n
                            {\n
                                *(v41) = v90;\n
                                v42 = v90;\n
                            }\n
                        }\n
                        v96 = *(v76);\n
                        if (v96 == 18)\n
                        {\n
                            if (!*((v76 + 12)))\n
                            {\n
                                v36 = 0;\n
                                if (!*((v76 + 8)))\n
                                    goto LABEL_407af6;\n
                                if (!*((v76 + 4)))\n
                                    goto LABEL_407af6;\n
                                v97 = v76;\n
                                if (!cgc_treeify_expression())\n
                                    goto LABEL_407af6;\n
                                v98 = *((v76 + 4));\n
                                v99 = *((v76 + 8));\n
                                *((v76 + 12)) = v99;\n
                                v100 = v76;\n
                                *((v76 + 16)) = v98;\n
                                v101 = *((v99 + 4));\n
                                if (v101)\n
                                    *((v101 + 8)) = *((v99 + 8));\n
                                v102 = *((v99 + 8));\n
                                if (v102)\n
                                    *((v102 + 4)) = v101;\n
                                *((v99 + 4)) = 0;\n
                                *((v99 + 8)) = 0;\n
                                v103 = *((v97 + 16));\n
                                v104 = *((v103 + 4));\n
                                v41 = v0;\n
                                if (v104)\n
                                    *((v104 + 8)) = *((v103 + 8));\n
                                v105 = *((v103 + 8));\n
                                v43 = 0;\n
                                if (v105)\n
                                    *((v105 + 4)) = v104;\n
                                *((v103 + 4)) = 0;\n
                                *((v103 + 8)) = 0;\n
                                v42 = *(v41);\n
                                v76 = v100;\n
                                if (v42 == *((v100 + 12)))\n
                                {\n
                                    *(v41) = v100;\n
                                    v42 = v100;\n
                                }\n
                            }\n
                            v96 = *(v76);\n
                        }\n
                        if (v96 == 20 && !*((v76 + 12)))\n
                        {\n
                            v36 = 0;\n
                            if (!*((v76 + 8)))\n
                                goto LABEL_407af6;\n
                            if (!*((v76 + 4)))\n
                                goto LABEL_407af6;\n
                            v106 = v76;\n
                            if (!cgc_treeify_expression())\n
                                goto LABEL_407af6;\n
                            v107 = *((v76 + 4));\n
                            v108 = *((v76 + 8));\n
                            *((v76 + 12)) = v108;\n
                            v109 = v76;\n
                            *((v76 + 16)) = v107;\n
                            v110 = *((v108 + 4));\n
                            if (v110)\n
                                *((v110 + 8)) = *((v108 + 8));\n
                            v111 = *((v108 + 8));\n
                            if (v111)\n
                                *((v111 + 4)) = v110;\n
                            *((v108 + 4)) = 0;\n
                            *((v108 + 8)) = 0;\n
                            v112 = *((v106 + 16));\n
                            v113 = *((v112 + 4));\n
                            v41 = v0;\n
                            if (v113)\n
                                *((v113 + 8)) = *((v112 + 8));\n
                            v114 = *((v112 + 8));\n
                            v43 = 0;\n
                            if (v114)\n
                                *((v114 + 4)) = v113;\n
                            *((v112 + 4)) = 0;\n
                            *((v112 + 8)) = 0;\n
                            v42 = *(v41);\n
                            v76 = v109;\n
                            if (v42 == *((v109 + 12)))\n
                            {\n
                                *(v41) = v109;\n
                                v42 = v109;\n
                            }\n
                        }\n
                        v115 = *(v76);\n
                        if (v115 == 19)\n
                        {\n
                            if (!*((v76 + 12)))\n
                            {\n
                                v36 = 0;\n
                                if (!*((v76 + 8)))\n
                                    goto LABEL_407af6;\n
                                if (!*((v76 + 4)))\n
                                    goto LABEL_407af6;\n
                                v116 = v76;\n
                                if (!cgc_treeify_expression())\n
                                    goto LABEL_407af6;\n
                                v117 = *((v76 + 4));\n
                                v118 = *((v76 + 8));\n
                                *((v76 + 12)) = v118;\n
                                v119 = v76;\n
                                *((v76 + 16)) = v117;\n
                                v120 = *((v118 + 4));\n
                                if (v120)\n
                                    *((v120 + 8)) = *((v118 + 8));\n
                                v121 = *((v118 + 8));\n
                                if (v121)\n
                                    *((v121 + 4)) = v120;\n
                                *((v118 + 4)) = 0;\n
                                *((v118 + 8)) = 0;\n
                                v122 = *((v116 + 16));\n
                                v123 = *((v122 + 4));\n
                                v41 = v0;\n
                                if (v123)\n
                                    *((v123 + 8)) = *((v122 + 8));\n
                                v124 = *((v122 + 8));\n
                                v43 = 0;\n
                                if (v124)\n
                                    *((v124 + 4)) = v123;\n
                                *((v122 + 4)) = 0;\n
                                *((v122 + 8)) = 0;\n
                                v42 = *(v41);\n
                                v76 = v119;\n
                                if (v42 == *((v119 + 12)))\n
                                {\n
                                    *(v41) = v119;\n
                                    v42 = v119;\n
                                }\n
                            }\n
                            v115 = *(v76);\n
                        }\n
                        if (v115 == 21 && !*((v76 + 12)))\n
                        {\n
                            v36 = 0;\n
                            if (!*((v76 + 8)))\n
                                goto LABEL_407af6;\n
                            if (!*((v76 + 4)))\n
                                goto LABEL_407af6;\n
                            v125 = v76;\n
                            if (!cgc_treeify_expression())\n
                                goto LABEL_407af6;\n
                            v126 = *((v76 + 4));\n
                            v127 = *((v76 + 8));\n
                            *((v76 + 12)) = v127;\n
                            v128 = v76;\n
                            *((v76 + 16)) = v126;\n
                            v129 = *((v127 + 4));\n
                            if (v129)\n
                                *((v129 + 8)) = *((v127 + 8));\n
                            v130 = *((v127 + 8));\n
                            v43 = 0;\n
                            if (v130)\n
                                *((v130 + 4)) = v129;\n
                            *((v127 + 4)) = 0;\n
                            *((v127 + 8)) = 0;\n
                            v131 = *((v125 + 16));\n
                            v132 = *((v131 + 4));\n
                            v41 = v0;\n
                            if (v132)\n
                                *((v132 + 8)) = *((v131 + 8));\n
                            v133 = *((v131 + 8));\n
                            if (v133)\n
                                *((v133 + 4)) = v132;\n
                            *((v131 + 4)) = 0;\n
                            *((v131 + 8)) = 0;\n
                            v42 = *(v41);\n
                            v76 = v128;\n
                            if (v42 == *((v128 + 12)))\n
                            {\n
                                *(v41) = v128;\n
                                v42 = v128;\n
                            }\n
                        }\n
                        v76 = *((v76 + 4));\n
                    } while (v76);\n
                    if (!v42)\n
                        goto LABEL_407fb2;\n
                    v134 = v42;\n
                    while (true)\n
                    {\n
                        v135 = *(v134);\n
                        if (v135 == 25)\n
                        {\n
                            if (!*((v134 + 12)))\n
                            {\n
                                v136 = v134;\n
                                v36 = 0;\n
                                if (!*((v136 + 8)))\n
                                    goto LABEL_407af6;\n
                                if (!*((v136 + 4)))\n
                                    goto LABEL_407af6;\n
                                if (!cgc_treeify_expression())\n
                                    goto LABEL_407af6;\n
                                v137 = *((v136 + 4));\n
                                v138 = *((v136 + 8));\n
                                *((v136 + 12)) = v138;\n
                                *((v136 + 16)) = v137;\n
                                v139 = *((v138 + 4));\n
                                v134 = v136;\n
                                if (v139)\n
                                    *((v139 + 8)) = *((v138 + 8));\n
                                v140 = *((v138 + 8));\n
                                if (v140)\n
                                    *((v140 + 4)) = v139;\n
                                *((v138 + 4)) = 0;\n
                                *((v138 + 8)) = 0;\n
                                v141 = *((v136 + 16));\n
                                v142 = *((v141 + 4));\n
                                v41 = v0;\n
                                if (v142)\n
                                    *((v142 + 8)) = *((v141 + 8));\n
                                v143 = *((v141 + 8));\n
                                v43 = 0;\n
                                if (v143)\n
                                    *((v143 + 4)) = v142;\n
                                *((v141 + 4)) = 0;\n
                                *((v141 + 8)) = 0;\n
                                v42 = *(v41);\n
                                if (v42 == *((v134 + 12)))\n
                                {\n
                                    *(v41) = v134;\n
                                    v42 = v134;\n
                                }\n
                            }\n
                            v135 = *(v134);\n
                        }\n
                        if (v135 == 39)\n
                            break;\n
LABEL_4084e2:\n
                        v134 = *((v134 + 4));\n
                        if (!v134)\n
                        {\n
                            if (v42)\n
                            {\n
                                v151 = v42;\n
                                do\n
                                {\n
                                    v152 = *(v151);\n
                                    if (v152 == 27)\n
                                    {\n
                                        if (!*((v151 + 12)))\n
                                        {\n
                                            v36 = 0;\n
                                            if (!*((v151 + 8)))\n
                                                goto LABEL_407af6;\n
                                            if (!*((v151 + 4)))\n
                                                goto LABEL_407af6;\n
                                            if (!cgc_treeify_expression())\n
                                                goto LABEL_407af6;\n
                                            v153 = *((v151 + 4));\n
                                            v154 = *((v151 + 8));\n
                                            *((v151 + 12)) = v154;\n
                                            *((v151 + 16)) = v153;\n
                                            v155 = *((v154 + 4));\n
                                            if (v155)\n
                                                *((v155 + 8)) = *((v154 + 8));\n
                                            v156 = *((v154 + 8));\n
                                            if (v156)\n
                                                *((v156 + 4)) = v155;\n
                                            *((v154 + 4)) = 0;\n
                                            *((v154 + 8)) = 0;\n
                                            v157 = *((v151 + 16));\n
                                            v158 = *((v157 + 4));\n
                                            v41 = v0;\n
                                            if (v158)\n
                                                *((v158 + 8)) = *((v157 + 8));\n
                                            v159 = *((v157 + 8));\n
                                            if (v159)\n
                                                *((v159 + 4)) = v158;\n
                                            *((v157 + 4)) = 0;\n
                                            *((v157 + 8)) = 0;\n
                                            v42 = *(v41);\n
                                            if (v42 == *((v151 + 12)))\n
                                            {\n
                                                *(v41) = v151;\n
                                                v42 = v151;\n
                                            }\n
                                        }\n
                                        v152 = *(v151);\n
                                    }\n
                                    if (v152 == 28 && !*((v151 + 12)))\n
                                    {\n
                                        v36 = 0;\n
                                        if (!*((v151 + 8)))\n
                                            goto LABEL_407af6;\n
                                        if (!*((v151 + 4)))\n
                                            goto LABEL_407af6;\n
                                        if (!cgc_treeify_expression())\n
                                            goto LABEL_407af6;\n
                                        v160 = *((v151 + 4));\n
                                        v161 = *((v151 + 8));\n
                                        *((v151 + 12)) = v161;\n
                                        *((v151 + 16)) = v160;\n
                                        v162 = *((v161 + 4));\n
                                        if (v162)\n
                                            *((v162 + 8)) = *((v161 + 8));\n
                                        v163 = *((v161 + 8));\n
                                        if (v163)\n
                                            *((v163 + 4)) = v162;\n
                                        *((v161 + 4)) = 0;\n
                                        *((v161 + 8)) = 0;\n
                                        v164 = *((v151 + 16));\n
                                        v165 = *((v164 + 4));\n
                                        v41 = v0;\n
                                        if (v165)\n
                                            *((v165 + 8)) = *((v164 + 8));\n
                                        v166 = *((v164 + 8));\n
                                        if (v166)\n
                                            *((v166 + 4)) = v165;\n
                                        *((v164 + 4)) = 0;\n
                                        *((v164 + 8)) = 0;\n
                                        v42 = *(v41);\n
                                        if (v42 == *((v151 + 12)))\n
                                        {\n
                                            *(v41) = v151;\n
                                            v42 = v151;\n
                                        }\n
                                    }\n
                                    if (*(v151) == 29 && !*((v151 + 12)))\n
                                    {\n
                                        v36 = 0;\n
                                        if (!*((v151 + 8)))\n
                                            goto LABEL_407af6;\n
                                        if (!*((v151 + 4)))\n
                                            goto LABEL_407af6;\n
                                        if (!cgc_treeify_expression())\n
                                            goto LABEL_407af6;\n
                                        v167 = *((v151 + 4));\n
                                        v168 = *((v151 + 8));\n
                                        *((v151 + 12)) = v168;\n
                                        *((v151 + 16)) = v167;\n
                                        v169 = *((v168 + 4));\n
                                        if (v169)\n
                                            *((v169 + 8)) = *((v168 + 8));\n
                                        v170 = *((v168 + 8));\n
                                        if (v170)\n
                                            *((v170 + 4)) = v169;\n
                                        *((v168 + 4)) = 0;\n
                                        *((v168 + 8)) = 0;\n
                                        v171 = *((v151 + 16));\n
                                        v172 = *((v171 + 4));\n
                                        v41 = v0;\n
                                        if (v172)\n
                                            *((v172 + 8)) = *((v171 + 8));\n
                                        v173 = *((v171 + 8));\n
                                        if (v173)\n
                                            *((v173 + 4)) = v172;\n
                                        *((v171 + 4)) = 0;\n
                                        *((v171 + 8)) = 0;\n
                                        v42 = *(v41);\n
                                        if (v42 == *((v151 + 12)))\n
                                        {\n
                                            *(v41) = v151;\n
                                            v42 = v151;\n
                                        }\n
                                    }\n
                                    v151 = *((v151 + 4));\n
                                } while (v151);\n
                                v43 = 0;\n
                                if (!v42)\n
                                    goto LABEL_407fb2;\n
                                v174 = v42;\n
                                v36 = 0;\n
                                while (*(v174) != 39)\n
                                {\n
LABEL_40888e:\n
                                    v174 = *((v174 + 4));\n
                                    if (!v174)\n
                                    {\n
                                        v41 = v0;\n
                                        v43 = *(v41);\n
                                        goto LABEL_407fb2;\n
                                    }\n
                                }\n
                                if (*((v174 + 4)))\n
                                {\n
                                    if (!cgc_treeify_expression())\n
                                        goto LABEL_407af6;\n
                                    *(v174) = 30;\n
                                    v175 = *((v174 + 4));\n
                                    *((v174 + 12)) = v175;\n
                                    v176 = *((v175 + 4));\n
                                    if (v176)\n
                                        *((v176 + 8)) = *((v175 + 8));\n
                                    v177 = *((v175 + 8));\n
                                    if (v177)\n
                                        *((v177 + 4)) = v176;\n
                                    *((v175 + 4)) = 0;\n
                                    *((v175 + 8)) = 0;\n
                                    goto LABEL_40888e;\n
                                }\n
                                goto LABEL_407af6;\n
                            }\n
                            goto LABEL_407fb2;\n
                        }\n
                    }\n
                    if (!*((v134 + 4)))\n
                        goto LABEL_4084e2;\n
                    if (!*((v134 + 8)))\n
                        goto LABEL_4084e2;\n
                    *(v134) = 26;\n
                    if (!(!*((v134 + 12))))\n
                        goto LABEL_4084e2;\n
                    if (cgc_treeify_expression())\n
                    {\n
                        v144 = *((v134 + 4));\n
                        v145 = *((v134 + 8));\n
                        *((v134 + 12)) = v145;\n
                        *((v134 + 16)) = v144;\n
                        v146 = *((v145 + 4));\n
                        if (v146)\n
                            *((v146 + 8)) = *((v145 + 8));\n
                        v147 = *((v145 + 8));\n
                        if (v147)\n
                            *((v147 + 4)) = v146;\n
                        *((v145 + 4)) = 0;\n
                        *((v145 + 8)) = 0;\n
                        v148 = *((v134 + 16));\n
                        v149 = *((v148 + 4));\n
                        if (v149)\n
                            *((v149 + 8)) = *((v148 + 8));\n
                        v150 = *((v148 + 8));\n
                        if (v150)\n
                            *((v150 + 4)) = v149;\n
                        *((v148 + 4)) = 0;\n
                        *((v148 + 8)) = 0;\n
                        v42 = *(v41);\n
                        if (v42 == *((v134 + 12)))\n
                        {\n
                            *(v41) = v134;\n
                            v42 = v134;\n
                            goto LABEL_4084e2;\n
                        }\n
                    }\n
                    v36 = 0;\n
                    goto LABEL_407af6;\n
                }\n
            }\n
LABEL_407fb2:\n
            if (*((v43 + 4)))\n
            {\n
                while (cgc_treeify_expression())\n
                {\n
                    v178 = cgc_calloc(1, 24);\n
                    if (v178)\n
                        *(v178) = 24;\n
                    else\n
                        v178 = 0;\n
                    *((v178 + 12)) = *(v41);\n
                    *((v178 + 16)) = *((*(v41) + 4));\n
                    v179 = *((*(v41) + 4));\n
                    v180 = *((v179 + 4));\n
                    if (v180)\n
                        *((v180 + 8)) = *((v179 + 8));\n
                    v181 = *((v179 + 8));\n
                    if (v181)\n
                        *((v181 + 4)) = v180;\n
                    *((v179 + 4)) = 0;\n
                    *((v179 + 8)) = 0;\n
                    v182 = *(v0);\n
                    v183 = *((v182 + 4));\n
                    if (v183)\n
                        *((v183 + 8)) = *((v182 + 8));\n
                    v184 = *((v182 + 8));\n
                    if (v184)\n
                        *((v184 + 4)) = v183;\n
                    *((v182 + 4)) = 0;\n
                    *((v182 + 8)) = 0;\n
                    v41 = v0;\n
                    *(v41) = v178;\n
                    if (!*((v178 + 4)))\n
                        goto LABEL_407af1;\n
                }\n
            }\n
        }\n
    }\n
LABEL_407af1:\n
    v36 = 1;\n
LABEL_407af6:\n
    *((*(v0) + 8)) = v1;\n
    return v36;\n
}\n
", "4225425:sub_407991": null, "4225841:sub_407b31": null, "4226036:sub_407bf4": null, "4226250:sub_407cca": null, "4226446:sub_407d8e": null, "4227009:sub_407fc1": null, "4229357:sub_4088ed": null, "4229360:cgc_parse_var": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_parse_var()\n
{\n
    char v0;  // [bp-0x111]\n
    struct_0 *v2;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v3[4];  // ecx\n
    unsigned int v4;  // eax\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        v4 = cgc_io_getc(*(v3));\n
        if (v4 < 0)\n
            return 0;\n
        if (!cgc_islower(v4) && !cgc_isupper(v4))\n
        {\n
            v2 = 0;\n
            cgc_io_ungetc(*(v3));\n
            (&v0)[v2] = 0;\n
            return cgc_strdup(&v0);\n
        }\n
        v0 = v4;\n
    }\n
}\n
", "4229388:sub_40890c": null, "4229518:sub_40898e": null, "4229520:main": "int main()\n
{\n
    char v0;  // [bp-0x2c]\n
    unsigned int v1[5];  // [bp-0x24]\n
    void* **v3;  // eax, Other Possible Types: unsigned int\n
\n
    cgc_io_init_fd(v1, 0);\n
    cgc_program_init(&v0, v1);\n
    if (!cgc_program_parse(&v0))\n
    {\n
        v3 = \"PARSE ERROR\\n
\";\n
    }\n
    else if (!cgc_program_run(&v0, v1))\n
    {\n
        v3 = \"RUNTIME ERROR\\n
\";\n
    }\n
    else\n
    {\n
        return 0;\n
    }\n
    cgc_fdprintf(1, v3);\n
    return 0;\n
}\n
", "4229641:sub_408a09": null, "4229648:cgc_regexp_init": "typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_regexp_init(unsigned int v1[5], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // edi\n
    struct_0 *v3;  // edi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v0 = v2;\n
    v3 = v1;\n
    cgc_memset(v3, 0, 28);\n
    v4 = cgc_strdup(a0);\n
    v3->field_0 = v4;\n
    if (v4 && cgc_regexp_parse())\n
    {\n
        v5 = cgc_simplify();\n
        v3->field_10 = v5;\n
        if (v5)\n
            return 1;\n
    }\n
    cgc_free(v3->field_0);\n
    cgc__recursive_free();\n
    return 0;\n
}\n
", "4229788:sub_408a9c": null, "4229792:cgc_regexp_parse": "typedef struct struct_0 {\n
    char padding_0[300];\n
    unsigned int field_12c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    char field_c;\n
    char padding_d[4];\n
    char field_11;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[11];\n
    unsigned int field_c;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_regexp_parse.guard;\n
\n
int cgc_regexp_parse(unsigned int v9)\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    struct_3 *v1;  // [bp-0x30]\n
    struct_3 *v2;  // [bp-0x2c]\n
    struct struct_1 **v3;  // [bp-0x28]\n
    unsigned int *v7;  // [bp-0x18]\n
    struct struct_1 **v10;  // edx, Other Possible Types: char\n
    unsigned int *v11;  // ecx\n
    unsigned int v12;  // eax\n
    void* v13;  // esi\n
    struct_0 *v41;  // ebx\n
    struct struct_1 **v46;  // edi\n
    unsigned int v48;  // eax\n
    struct_3 *v50;  // edx\n
\n
    v3 = v10;\n
    v7 = v11;\n
    v41 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v12 = cgc_regexp_parse.guard;\n
    cgc_regexp_parse.guard = cgc_regexp_parse.guard + 1;\n
    if (v12 <= 9999)\n
    {\n
        v46 = v3;\n
        v10 = *(v46);\n
        if (*(v46) != v9)\n
        {\n
            v1 = 0;\n
            v2 = 0;\n
            v13 = 0;\n
            v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
        }\n
        else\n
        {\n
            v50 = 0;\n
            v48 = 1;\n
        }\n
    }\n
}\n
", "4230057:sub_408ba9": null, "4231139:sub_408fe3": null, "4231152:cgc_simplify": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[11];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
int cgc_simplify()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct struct_0 **v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // ecx\n
    struct_0 *v4;  // edi\n
    struct struct_0 **v5;  // edx\n
    unsigned int v6;  // eax\n
    void* v7;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v8;  // esi, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    struct_1 *v10;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v11;  // eax\n
    unsigned int v12;  // ebp\n
\n
    v4 = *(v3);\n
    if (v4)\n
    {\n
        v8 = v5;\n
        if (v4->field_0 == 6)\n
        {\n
            v1 = v5;\n
            v6 = cgc_simplify();\n
            if (!v6)\n
                return 0;\n
            v0 = v6;\n
            v9 = cgc_simplify();\n
            v8 = v1;\n
            if (!v9)\n
                return 0;\n
            v7 = v9 + v0;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            if (v4->field_0 == 5)\n
            {\n
                v7 = cgc_simplify();\n
                if (!v7)\n
                    goto LABEL_4090d3;\n
            }\n
        }\n
        v1 = &v4->field_4;\n
        if (v4->field_4)\n
        {\n
            v9 = cgc_simplify();\n
            if (!v9)\n
                goto LABEL_4090d3;\n
            v7 += v9;\n
        }\n
        *(&v9) = v4->field_1;\n
        if (v4->field_1 == 3)\n
        {\n
            v0 = v7;\n
            v10 = cgc_calloc(1, 24);\n
            v1 = v3;\n
            if (!(!v10))\n
                goto LABEL_409114;\n
        }\n
        else if (v9 != 2)\n
        {\n
            if (!(v9 == 1))\n
                goto LABEL_409129;\n
            v0 = v7;\n
            v10 = cgc_calloc(1, 24);\n
            if (!(!v10))\n
                goto LABEL_409114;\n
        }\n
        else\n
        {\n
            v0 = v7;\n
            v11 = cgc_calloc(1, 24);\n
            if (!v11)\n
                return 0;\n
            v11->field_0 = 6;\n
            v11->field_c = v4;\n
            v11->field_10 = v4->field_4;\n
            *(v3) = &v11->field_0;\n
            v10 = cgc_calloc(1, 24);\n
            if (!v10)\n
                return 0;\n
LABEL_409114:\n
            *(v10) = 6;\n
            *((v10 + 12)) = v4;\n
            *((v10 + 16)) = v4->field_4;\n
            *(v1) = v10;\n
            v7 = v0;\n
LABEL_409129:\n
            v4->field_1 = 0;\n
            v4->field_8 = v8;\n
            v12 = v7 + 1;\n
            return v12;\n
        }\n
    }\n
LABEL_4090d3:\n
    return 0;\n
}\n
", "4231485:sub_40913d": null, "4231488:cgc_regexp_free": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_regexp_free(unsigned int v1[2])\n
{\n
    char v0;  // [bp-0x8]\n
    struct_0 *v2;  // esi\n
\n
    v2 = v1;\n
    cgc_free(v2->field_0);\n
    cgc__recursive_free(v2->field_4, *(&v0));\n
    return 1;\n
}\n
", "4231539:sub_409173": null, "4231552:cgc__recursive_free": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc__recursive_free(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
    {\n
        return v3;\n
    }\n
    else if (v1->field_1 == 4)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v1->field_1 = 4;\n
        if (v1->field_0 == 6)\n
        {\n
            cgc__recursive_free(v1->field_c);\n
            v2 = v1 + 1;\n
        }\n
        else\n
        {\n
            if (!(v1->field_0 == 5))\n
                goto LABEL_4091c8;\n
            v2 = &v1->field_c;\n
        }\n
        cgc__recursive_free(*(v2));\n
LABEL_4091c8:\n
        cgc__recursive_free(v1->field_4);\n
        v3 = cgc_free(v1);\n
        return v3;\n
    }\n
}\n
", "4231649:sub_4091e1": null, "4231664:cgc_regexp_match": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
    void* field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_regexp_match(struct_2 *v4, char *a0)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    int tmp_31;  // tmp #31\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_2 *v5;  // esi, Other Possible Types: unsigned int, struct_0 *\n
    void* v6;  // edi, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    void* v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    void* v11;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v12;  // ebp\n
    unsigned int *v13;  // edi, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    char *v16;  // eax\n
    unsigned int v17;  // ecx\n
    void* v18;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int *v20;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v21;  // edi\n
    void* v22;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    void* v24;  // esi, Other Possible Types: unsigned int\n
\n
    v5 = v4;\n
    v5->field_14 = 0;\n
    v6 = cgc_calloc(v5->field_10, 4);\n
    if (v6)\n
    {\n
        v7 = cgc_calloc(v5->field_10, 4);\n
        if (v7)\n
        {\n
            v8 = v7;\n
            v9 = cgc_calloc(v5->field_10, 4);\n
            v5->field_14 = v9;\n
            if (!v9)\n
            {\n
                v0 = 0;\n
                goto LABEL_409294;\n
            }\n
            else\n
            {\n
                v5->field_8 = v6;\n
                v5->field_c = 0;\n
                v5->field_18 = 0;\n
                if (cgc__regexp_match())\n
                {\n
                    v0 = 1;\n
                    goto LABEL_409294;\n
                }\n
                else\n
                {\n
                    v1 = v8;\n
                    v2 = v6;\n
                    if (*(a0))\n
                    {\n
                        v18 = 0;\n
                        v0 = a0;\n
                        do\n
                        {\n
                            v3 = v18;\n
                            v10 = *((v5 + 4));\n
                            v13 = *((v5 + 8));\n
                            v12 = *((v5 + 12));\n
                            if (!*((v5 + 12)))\n
                            {\n
LABEL_40933c:\n
                                v13[v12] = v10;\n
                                v12 += 1;\n
                                v13 = *((v5 + 8));\n
                            }\n
                            else\n
                            {\n
                                v11 = 0;\n
                                while (v13[v11] != v10)\n
                                {\n
                                    v11 += 1;\n
                                    if (v12 == v11)\n
                                        goto LABEL_40933c;\n
                                }\n
                            }\n
                            v14 = v2;\n
                            if (v13 == v14)\n
                                v14 = v1;\n
                            *((v5 + 8)) = v14;\n
                            *((v5 + 12)) = 0;\n
                            *((v5 + 24)) = 0;\n
                            if (v12)\n
                            {\n
                                v15 = 0;\n
                                while (!cgc__regexp_match())\n
                                {\n
                                    v15 += 1;\n
                                    if (v12 == v15)\n
                                        goto LABEL_4092f4;\n
                                }\n
                            }\n
LABEL_4092f4:\n
                            v16 = a0;\n
                            v17 = v3;\n
                            v0 = &v16[v17 + 1];\n
                            tmp_31 = v16[1 + v17];\n
                            v18 = v17 + 1;\n
                            v5 = v4;\n
                        } while (tmp_31);\n
                    }\n
                    v19 = *((v5 + 4));\n
                    v20 = *((v5 + 8));\n
                    v21 = *((v5 + 12));\n
                    if (!v21)\n
                    {\n
LABEL_4093bd:\n
                        v20[v21] = v19;\n
                        v21 += 1;\n
                        v20 = *((v5 + 8));\n
                    }\n
                    else\n
                    {\n
                        v22 = 0;\n
                        while (v20[v22] != v19)\n
                        {\n
                            v22 += 1;\n
                            if (v21 == v22)\n
                                goto LABEL_4093bd;\n
                        }\n
                    }\n
                    v23 = v1;\n
                    if (v20 != v23)\n
                        v23 = v2;\n
                    *((v5 + 8)) = v23;\n
                    *((v5 + 12)) = 0;\n
                    *((v5 + 24)) = 0;\n
                    if (v21)\n
                    {\n
                        v24 = 0;\n
                        do\n
                        {\n
                            if (cgc__regexp_match())\n
                            {\n
                                v0 = 1;\n
                                v5 = v4;\n
                                v6 = v2;\n
                                v8 = v1;\n
                                goto LABEL_409294;\n
                            }\n
                            v24 += 1;\n
                        } while (v21 != v24);\n
                        v5 = v4;\n
                    }\n
                    v6 = v2;\n
                    v8 = v1;\n
                    v0 = 0;\n
                    goto LABEL_409294;\n
                }\n
            }\n
        }\n
    }\n
    v0 = 0;\n
    v8 = 0;\n
LABEL_409294:\n
    cgc_free(v6);\n
    cgc_free(v8);\n
    cgc_free(*((v5 + 20)));\n
    *((v5 + 20)) = 0;\n
    *((v5 + 8)) = 0;\n
    return v0;\n
}\n
", "4232257:sub_409441": null, "4232272:cgc__regexp_match": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[11];\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
int cgc__regexp_match(unsigned int v1)\n
{\n
    return 0;\n
}\n
", "4232299:sub_40946b": null, "4232373:sub_4094b5": null, "4232863:sub_40969f": null, "4232864:cgc_strio_init": "int cgc_strio_init(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v1[2] = 32;\n
    v2 = cgc_malloc(32);\n
    v1[0] = v2;\n
    v1[1] = 0;\n
    return v2;\n
}\n
", "4232926:sub_4096de": null, "4232928:cgc_strio_free": "int cgc_strio_free(void* *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    cgc_free(*(v1));\n
    return cgc_memset(v1, 0, 12);\n
}\n
", "4232976:cgc_strio_append_char": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strio_append_char(struct_0 *v0, char a0)\n
{\n
    struct_0 *v1;  // edi\n
    char *v2;  // ecx, Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
    char *v4;  // ebp\n
    unsigned int v5;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_4;\n
    if (v2 != v1->field_8)\n
    {\n
        v5 = v1->field_0;\n
    }\n
    else\n
    {\n
        if (v2 > 268435454)\n
            return 0;\n
        v3 = v2;\n
        do\n
        {\n
            v4 = v3;\n
            v3 *= 2;\n
        } while (v4 <= v2);\n
        v5 = cgc_realloc(v1->field_0, v4);\n
        if (!v5)\n
            return 0;\n
        v1->field_0 = v5;\n
        v1->field_8 = v4;\n
        v2 = v1->field_4;\n
    }\n
    v1->field_4 = v2 + 1;\n
    *((v5 + v2)) = a0;\n
    return 1;\n
}\n
", "4233090:sub_409782": null, "4233104:cgc_strio_dup": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strio_dup(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi\n
    char *v2;  // ecx, Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
    char *v4;  // edi\n
    unsigned int v5;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_4;\n
    if (v2 != v1->field_8)\n
    {\n
        v5 = v1->field_0;\n
LABEL_4097e6:\n
        *((v5 + v2)) = 0;\n
        return cgc_strdup(v1->field_0);\n
    }\n
    if (v2 > 268435454)\n
        return 0;\n
    v3 = v2;\n
    do\n
    {\n
        v4 = v3;\n
        v3 *= 2;\n
    } while (v4 <= v2);\n
    v5 = cgc_realloc(v1->field_0, v4);\n
    if (v5)\n
    {\n
        v1->field_0 = v5;\n
        v1->field_8 = v4;\n
        v2 = v1->field_4;\n
        goto LABEL_4097e6;\n
    }\n
}\n
", "4233216:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:cgc_deallocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}