{"4202496:_init": "extern struct_0 *g_40f23c;\n
\n
int _init()\n
{\n
    if (g_40f23c)\n
    {\n
        g_40f23c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 53555;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 53491;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40f238;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40f238)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_add": "int cgc_add()\n
{\n
    char v0;  // [bp-0x4]\n
    unsigned int v2;  // ebp\n
\n
    if ([D] GetI(136:I8x8)[t8,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t7,0] = t8\n
    [D] PutI(136:I8x8)[t7,0] = 0x01\n
    [D] PutI(136:I8x8)[t7,0] = 0x00\n
    [D] PutI(72:F64x8)[t21,0] = t24\n
    [D] PutI(136:I8x8)[t21,0] = 0x01\n
    [D] PutI(72:F64x8)[t31,0] = t32\n
    [D] PutI(136:I8x8)[t31,0] = 0x01\n
    [D] PutI(136:I8x8)[t31,0] = 0x00\n
    [D] PutI(72:F64x8)[t45,0] = t48\n
    [D] PutI(136:I8x8)[t45,0] = 0x01\n
    [D] PutI(72:F64x8)[t57,0] = t60\n
    [D] PutI(136:I8x8)[t57,0] = 0x01\n
    [D] PutI(72:F64x8)[t67,1] = t68\n
    [D] PutI(136:I8x8)[t67,1] = 0x01\n
    [D] PutI(136:I8x8)[t67,0] = 0x00\n
    v2 = *(&v0);\n
    return;\n
}\n
", "4203031:sub_402217": null, "4203040:cgc_multiply": "int cgc_multiply()\n
{\n
    char v0;  // [bp-0x4]\n
    unsigned int v2;  // ebp\n
\n
    if ([D] GetI(136:I8x8)[t8,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t7,0] = t8\n
    [D] PutI(136:I8x8)[t7,0] = 0x01\n
    [D] PutI(136:I8x8)[t7,0] = 0x00\n
    [D] PutI(72:F64x8)[t21,0] = t24\n
    [D] PutI(136:I8x8)[t21,0] = 0x01\n
    [D] PutI(72:F64x8)[t31,0] = t32\n
    [D] PutI(136:I8x8)[t31,0] = 0x01\n
    [D] PutI(136:I8x8)[t31,0] = 0x00\n
    [D] PutI(72:F64x8)[t45,0] = t48\n
    [D] PutI(136:I8x8)[t45,0] = 0x01\n
    [D] PutI(72:F64x8)[t57,0] = t60\n
    [D] PutI(136:I8x8)[t57,0] = 0x01\n
    [D] PutI(72:F64x8)[t67,1] = t68\n
    [D] PutI(136:I8x8)[t67,1] = 0x01\n
    [D] PutI(136:I8x8)[t67,0] = 0x00\n
    v2 = *(&v0);\n
    return;\n
}\n
", "4203063:sub_402237": null, "4203072:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203254:sub_4022f6": null, "4203264:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203360:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203456:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203510:sub_4023f6": null, "4203520:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203594:sub_40244a": null, "4203600:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203674:sub_40249a": null, "4203680:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203774:sub_4024fe": null, "4203776:cgc_SetFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetFsError(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = FS_ERROR;\n
    if (!FS_ERROR)\n
    {\n
        v0 = 63;\n
        v3 = cgc_strncpy(v1 + 580, v2);\n
    }\n
    return v3;\n
}\n
", "4203855:sub_40254f": null, "4203856:cgc_ClearFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClearFsError()\n
{\n
    FS_ERROR = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4203880:sub_402568": null, "4203888:cgc_FsError": "extern char FS_ERROR;\n
\n
int cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4203911:sub_402587": null, "4203920:cgc_DestroyFilesystem": "typedef struct struct_1 {\n
    char padding_0[56];\n
    struct struct_2 *field_38;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DestroyFilesystem()\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct struct_0 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[214].padding_0[24]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < v0->field_38->field_4; v1 = v1 + 1)\n
    {\n
        if (*((v0->field_38->field_8 + (v1 << 2))))\n
        {\n
            if (*(*((v0->field_38->field_8 + (v1 << 2)))))\n
            {\n
                cgc_free();\n
                *(*((v0->field_38->field_8 + v1 * 4))) = 0;\n
            }\n
            if (*((*((v0->field_38->field_8 + (v1 << 2))) + 4)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_38->field_8 + v1 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((v0->field_38->field_8 + (v1 << 2))) + 16)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_38->field_8 + v1 * 4)) + 16)) = 0;\n
            }\n
            cgc_free();\n
            *((v0->field_38->field_8 + v1 * 4)) = 0;\n
        }\n
    }\n
    cgc_free();\n
    v0->field_38 = 0;\n
    cgc_ClearFsError();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4204393:sub_402769": null, "4204400:cgc_InitFilesystem": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int FS_ERROR;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitFilesystem(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = 64;\n
    cgc_bzero(&FS_ERROR);\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[213].field_38 + 2);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_38)\n
        cgc_DestroyFilesystem();\n
    v6 = cgc_calloc();\n
    v1->field_38 = v6;\n
    if (!v6)\n
    {\n
        cgc_SetFsError(&v1[213].padding_0[35]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v7 = cgc_calloc();\n
    v1->field_38->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_SetFsError(&v1[213].padding_0[35]);\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1->field_38->field_4 = v4;\n
    if (!cgc_Login())\n
    {\n
        cgc_SetFsError(&v1[213].padding_0[21]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_InitPasswd())\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(&v1[213].padding_0[8]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        cgc_bzero(&v1[10].padding_0[44]);\n
        cgc_ClearFsError();\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4204888:sub_402958": null, "4204896:cgc_Login": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Login(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[191].padding_0[36]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strlen();\n
    v2 = cgc_calloc();\n
    if (!v2)\n
    {\n
        cgc_SetFsError(&v1[200].padding_0[15]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v4;\n
    cgc_strcpy(v2);\n
    if (v1->field_3c)\n
    {\n
        cgc_free();\n
        v1->field_3c = 0;\n
    }\n
    v1->field_3c = v2;\n
    cgc_ClearFsError();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4205121:sub_402a41": null, "4205136:cgc_InitPasswd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPasswd(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v2 - 12243);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fopen(v2 - 12120);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v2 - 12219);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_fwrite(v2 - 12192, 5, 1);\n
    v1 = v5;\n
    v6 = cgc_strlen(v5, 5, 1);\n
    v0 = v3;\n
    cgc_fwrite(v1, v6, 1);\n
    cgc_fclose(v3, v6, 1);\n
    cgc_ClearFsError();\n
    v4 = 1;\n
    return v4;\n
}\n
", "4205393:sub_402b51": null, "4205408:cgc_Logout": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Logout()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_3c;\n
        cgc_free();\n
    }\n
    v1->field_3c = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4205489:sub_402bb1": null, "4205504:cgc_FindFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < v1->field_38->field_4)\n
        {\n
            if (*((v1->field_38->field_8 + (v2 << 2))) && *(*((v1->field_38->field_8 + (v2 << 2)))))\n
            {\n
                v0 = v4;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v2 << 2))))))\n
                {\n
                    v3 = *((v1->field_38->field_8 + v2 * 4));\n
                    return v3;\n
                }\n
            }\n
            v2 = v2 + 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4205719:sub_402c97": null, "4205728:cgc_CreateEmptyFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateEmptyFile(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct struct_2 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[199].padding_0[21]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v1->field_3c)\n
    {\n
        cgc_SetFsError(&v1[199].padding_0[4]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((a0 & 153))\n
    {\n
        cgc_SetFsError(&v1[198].padding_0[51]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (cgc_FindFile(v4))\n
    {\n
        cgc_SetFsError(&v1[198].padding_0[38]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_38->field_4)\n
        {\n
LABEL_402fc7:\n
            if (v2 != v1->field_38->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v3 = *((v1->field_38->field_8 + v2 * 4));\n
                return v3;\n
            }\n
            cgc_SetFsError(&v1[198].padding_0[18]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_38->field_8 + (v2 << 2))))\n
        {\n
            v2 = v2 + 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_calloc();\n
            *((v1->field_38->field_8 + v2 * 4)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(&v1[200].padding_0[15]);\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_strlen();\n
            v6 = cgc_calloc();\n
            *(*((v1->field_38->field_8 + v2 * 4))) = v6;\n
            if (!v6)\n
            {\n
                cgc_SetFsError(&v1[200].padding_0[15]);\n
                cgc_free();\n
                *((v1->field_38->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v4;\n
            cgc_strcpy(*(*((v1->field_38->field_8 + v2 * 4))));\n
            v7 = cgc_calloc(5);\n
            *((*((v1->field_38->field_8 + v2 * 4)) + 4)) = v7;\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v1[200].padding_0[15]);\n
                cgc_free();\n
                *(*((v1->field_38->field_8 + v2 * 4))) = 0;\n
                cgc_free();\n
                *((v1->field_38->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v8 = v1;\n
            v0 = v8->field_3c;\n
            cgc_strcpy(*((*((v8->field_38->field_8 + v2 * 4)) + 4)));\n
            v9 = v1;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 8)) = a0;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 12)) = 0;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 16)) = 0;\n
            goto LABEL_402fc7;\n
            goto LABEL_402fc7;\n
        }\n
    }\n
}\n
", "4206624:cgc_fopen": "typedef struct struct_2 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_fopen(unsigned int v5, char *a0)\n
{\n
    struct_2 *v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct_3 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(v0 + 201);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v5 && a0)\n
    {\n
        if (cgc_strlen() > 1)\n
        {\n
            cgc_SetFsError(&v0[198].padding_0[51]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            cgc_SetFsError(&v0[198].padding_0[51]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v0->field_3c)\n
        {\n
            cgc_SetFsError(&v0[199].padding_0[4]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_FindFile(v5);\n
        if (!v2 && *(a0) == 114)\n
        {\n
            cgc_SetFsError(&v0[197].padding_0[42]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2)\n
        {\n
            for (v3 = 0; v3 < 8; v3 += 1)\n
            {\n
                if (*(&v0[10].padding_0[4 + 4 * v3]) && *(*(&v0[10].padding_0[4 + 4 * v3])) == v2)\n
                {\n
                    cgc_SetFsError(&v0[197].padding_0[20]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (v2 && cgc_strcmp(v0->field_3c))\n
        {\n
            if (cgc_strcmp(v2->field_4))\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 64))\n
                {\n
                    cgc_SetFsError(&v0[196].field_3c + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 96))\n
                {\n
                    cgc_SetFsError(&v0[196].field_3c + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 4))\n
                {\n
                    cgc_SetFsError(&v0[196].field_3c + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 6))\n
                {\n
                    cgc_SetFsError(&v0[196].field_3c + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v1 = cgc_calloc();\n
        if (!v1)\n
        {\n
            cgc_SetFsError(&v0[200].padding_0[15]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 += 1)\n
        {\n
            if (!*(&v0[10].padding_0[4 + 4 * v3]))\n
            {\n
                *(&v0[10].padding_0[4 + 4 * v3]) = v1;\n
                break;\n
            }\n
        }\n
        if (v3 == 8)\n
        {\n
            cgc_SetFsError(&v0[196].padding_0[45]);\n
            cgc_free();\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 4;\n
            v1->field_8 = 0;\n
        }\n
        else if (v2)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
            v1->field_0->field_c = 0;\n
            if (v1->field_0->field_10)\n
            {\n
                cgc_free();\n
                v1->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v2 = cgc_CreateEmptyFile(v5, 6);\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[196].padding_0[20]);\n
                *(&v0[10].padding_0[4 + 4 * v3]) = 0;\n
                cgc_free();\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
        }\n
        cgc_ClearFsError();\n
        v4 = v1;\n
        return v4;\n
    }\n
    cgc_SetFsError(&v0[198].padding_0[3]);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207928:sub_403538": null, "4207936:cgc_fclose": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 12542);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 644)) == v3)\n
            *((v0 + v1 * 4 + 644)) = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4208109:sub_4035ed": null, "4208112:cgc_fread": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            cgc_SetFsError(v1 - 12490);\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v4 = a2;\n
            v4->field_8 = a2->field_0->field_c - a2->field_8 + v4->field_8;\n
            cgc_ClearFsError();\n
            v2 = a2->field_0->field_c - a2->field_8;\n
            return v2;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a1 * a0 + v5->field_8;\n
            cgc_ClearFsError();\n
            v2 = a1 * a0;\n
            return v2;\n
        }\n
    }\n
    cgc_SetFsError(v1 - 12521);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4208459:sub_40374b": null, "4208464:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v4, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[5];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a2)\n
    {\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(v1 - 12815);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            cgc_memcpy(v2, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        cgc_memcpy(v2 + *(a2)->field_c, v4);\n
        v5 = *(a2);\n
        v5[3] = a1 * a0 + v5[3];\n
        if (*(a2)->field_10)\n
            cgc_free();\n
        *(a2)->field_10 = v2;\n
        cgc_ClearFsError();\n
        v3 = a1 * a0;\n
        return v3;\n
    }\n
    cgc_SetFsError(v1 - 12521);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4208799:sub_40389f": null, "4208800:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    struct_2 *v6;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        cgc_SetFsError(v1 - 12478);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(v1 - 12463);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        cgc_SetFsError(v1 - 12490);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v2 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = a1->field_0->field_10;\n
            v6 = a1;\n
            v7 = v6->field_8;\n
            v6->field_8 = v7 + 1;\n
            tmp_50 = v5[v7];\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            *((v4 + v8)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v4 + v2)) = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(v1 - 12490);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209181:sub_403a1d": null, "4209184:cgc_ListFiles": "typedef struct struct_1 {\n
    char padding_0[56];\n
    struct struct_2 *field_38;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_ListFiles(unsigned int *v16)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_1 *v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1d]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x1b]\n
    char v12;  // [bp-0x1a]\n
    char v13;  // [bp-0x19]\n
    struct struct_0 **v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x11]\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // eax\n
    struct_1 *v25;  // eax\n
    struct_1 *v26;  // ebx\n
    struct_1 *v27;  // eax\n
    struct_1 *v28;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[214].padding_0[24]);\n
        v15 = 0;\n
        return v15;\n
    }\n
    if (v16)\n
    {\n
        v8 = 79;\n
        for (v14 = 0; v14 < v1->field_38->field_4; v14 += 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v14 << 2))))\n
            {\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                if (!*((*((v1->field_38->field_8 + (v14 << 2))) + 12)))\n
                {\n
                    v8 += 8;\n
                }\n
                else\n
                {\n
                    v4 = *((*((v1->field_38->field_8 + v14 * 4)) + 12));\n
                    v5 = 0;\n
                    v18 = ftop<4> - 1;\n
                    if ([D] GetI(136:I8x8)[t36,0])\n
                    {\n
                        v19 = v18 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v19 = v18 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(136:I8x8)[t6,0] = 0x00\n
                    v20 = v19 + 1;\n
                    cgc_log10();\n
                    [D] PutI(72:F64x8)[t18,0] = t21\n
                    [D] PutI(136:I8x8)[t18,0] = 0x01\n
                    [D] PutI(72:F64x8)[t28,1] = t29\n
                    [D] PutI(136:I8x8)[t28,1] = 0x01\n
                    [D] PutI(136:I8x8)[t28,0] = 0x00\n
                    v22 = v20 - 1 + 1;\n
                    v3 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-62, size=2, endness=Iend_LE)))));\n
                    v2 = v3 | 0xc00;\n
                    v6 = ([D] GetI(136:I8x8)[t74,0] ? [D] GetI(72:F64x8)[t74,0] : nan);\n
                    [D] PutI(136:I8x8)[t74,0] = 0x00\n
                    v23 = v22 + 1;\n
                    v7 = v6;\n
                    if (v7 >= 8)\n
                        v8 = v7 + v8;\n
                    else\n
                        v8 += 8;\n
                }\n
                v8 += 6;\n
            }\n
        }\n
        v24 = cgc_calloc();\n
        *(v16) = v24;\n
        if (!v24)\n
        {\n
            cgc_SetFsError(&v1[213].padding_0[35]);\n
            v15 = 0;\n
            return v15;\n
        }\n
    }\n
    if (!v16)\n
    {\n
        v26 = v1;\n
        cgc_printf(&v26[207].padding_0[30], &v26[207].padding_0[7], &v26[206].field_38 + 2, &v26[206].padding_0[52]);\n
    }\n
    else\n
    {\n
        v25 = v1;\n
        v0 = &v25[206].padding_0[47];\n
        cgc_sprintf(*(v16), &v25[207].padding_0[30], &v25[207].padding_0[7], &v25[206].field_38 + 2, &v25[206].padding_0[52]);\n
    }\n
    for (v14 = 0; v14 < v1->field_38->field_4; v14 += 1)\n
    {\n
        if (*((v1->field_38->field_8 + (v14 << 2))))\n
        {\n
            if (v16)\n
            {\n
                v27 = v1;\n
                v0 = *((*((v27->field_38->field_8 + v14 * 4)) + 12));\n
                cgc_sprintf(*(v16), &v1[206].padding_0[42], *(v16), *(*((v27->field_38->field_8 + v14 * 4))), *((*((v27->field_38->field_8 + v14 * 4)) + 4)));\n
            }\n
            else\n
            {\n
                v28 = v1;\n
                cgc_printf(&v28[206].padding_0[40], *(*((v28->field_38->field_8 + v14 * 4))), *((*((v28->field_38->field_8 + v14 * 4)) + 4)));\n
            }\n
            cgc_memset(&v9, 45);\n
            v13 = 0;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 4))\n
                v9 = 114;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 6))\n
                v10 = 119;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 64))\n
                v11 = 114;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 96))\n
                v12 = 119;\n
            if (!v16)\n
                cgc_printf(&v1[207].padding_0[13]);\n
            else\n
                cgc_sprintf(*(v16), &v1[206].padding_0[22], *(v16));\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v15 = 1;\n
    return v15;\n
}\n
", "4210421:sub_403ef5": null, "4210432:cgc_DeleteFile": "typedef struct struct_1 {\n
    char padding_0[56];\n
    struct struct_2 *field_38;\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DeleteFile(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    struct struct_0 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_1 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(v1 + 201);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6)\n
    {\n
        cgc_SetFsError(&v1[199].padding_0[21]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v1->field_3c)\n
    {\n
        cgc_SetFsError(&v1[199].padding_0[4]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v4 = 0; v4 < v1->field_38->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v4 << 2))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                {\n
                    v2[0] = *((v1->field_38->field_8 + v4 * 4));\n
                    v3 = v4;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v4 == v1->field_38->field_4)\n
        {\n
            cgc_SetFsError(&v1[197].padding_0[42]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v4 = 0; v4 < 8; v4 = v4 + 1)\n
        {\n
            if (*((644 + &v1->padding_0[0] + 0x4 * v4)) && *(*((644 + &v1->padding_0[0] + 0x4 * v4))) == v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        v7 = v1;\n
        v0 = &v7[191].padding_0[41];\n
        if (cgc_strcmp(v7->field_3c))\n
        {\n
            v0 = v2[1];\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[196].field_3c + 3);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_free();\n
        if (v2[1])\n
            cgc_free();\n
        if (v2[4])\n
            cgc_free();\n
        cgc_free();\n
        *((v1->field_38->field_8 + v3 * 4)) = 0;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4211097:sub_404199": null, "4211104:cgc_RenameFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RenameFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    if (v6 && a0)\n
    {\n
        for (v4 = 0; v4 < v1->field_38->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v4 << 2))) && *(*((v1->field_38->field_8 + (v4 << 2)))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                    v3[0] = *((v1->field_38->field_8 + v4 * 4));\n
                v0 = a0;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                {\n
                    cgc_SetFsError(&v1[193].padding_0[22]);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[192].padding_0[54]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v1;\n
        v0 = &v7[191].padding_0[41];\n
        if (cgc_strcmp(v7->field_3c))\n
        {\n
            v0 = *((v3 + 4));\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[196].field_3c + 3);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_strlen();\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[200].padding_0[15]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a0;\n
        cgc_strcpy(v2);\n
        cgc_free(*(v3));\n
        *(v3) = v2;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_SetFsError(&v1[199].padding_0[21]);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211691:sub_4043eb": null, "4211696:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeMode(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[192].padding_0[32]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v2 = cgc_FindFile(v4);\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[192].padding_0[19]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v1;\n
        v0 = &v5[191].padding_0[41];\n
        if (cgc_strcmp(v5->field_3c))\n
        {\n
            v0 = v2->field_4;\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[196].field_3c + 3);\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        v2->field_8 = a0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[198].padding_0[51]);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4211985:sub_404511": null, "4212000:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeOwner(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_0 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        cgc_SetFsError(&v1[199].padding_0[21]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v6 = v1;\n
        v0 = &v6[191].padding_0[41];\n
        if (cgc_strcmp(v6->field_3c))\n
        {\n
            cgc_SetFsError(&v1[191].padding_0[49]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_FindFile(v5);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[192].padding_0[19]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_UserExists())\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v1[200].padding_0[15]);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = a0;\n
            cgc_strcpy(v2);\n
            if (v3->field_4)\n
                cgc_free();\n
            v3->field_4 = v2;\n
            cgc_ClearFsError();\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(&v1[192].padding_0[32]);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[191].field_3c + 3);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4212410:sub_4046ba": null, "4212416:cgc_UserExists": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UserExists(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    char v2;  // [bp-0x90]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v0 - 12260);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v3 = cgc_fopen(v6 - 12120, v6 - 12465);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 12219);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!cgc_fgets(&v2, 127, v3))\n
        {\n
            cgc_fclose(v3);\n
            cgc_ClearFsError();\n
            v4 = 0;\n
            return v4;\n
        }\n
        v1 = cgc_strtok(&v2);\n
        if (!v1)\n
        {\n
            cgc_SetFsError(v0 - 12186);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_strcmp(v1))\n
        {\n
            cgc_fclose(v3);\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4212792:sub_404838": null, "4212800:cgc_Uid": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Uid()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_3c;\n
        v3 = cgc_puts();\n
    }\n
    return v3;\n
}\n
", "4212858:sub_40487a": null, "4212864:cgc_AddUser": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddUser(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct_1 *v2;  // [bp-0xa8]\n
    struct_1 *v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    struct_0 *v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x98]\n
    struct struct_0 **v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v5[191].padding_0[36]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v5[189].field_3c + 2);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v5->field_3c))\n
    {\n
        cgc_SetFsError(&v5[191].padding_0[49]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[191].padding_0[36]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[189].field_3c + 2);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!cgc_UserExists(v10))\n
    {\n
        v11 = v5;\n
        v8 = cgc_fopen(&v11[189].padding_0[24], &v11[194].padding_0[49]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v5[190].padding_0[59]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v5;\n
        v7 = cgc_fopen(&v12[189].padding_0[25], &v12[190].field_3c + 1);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v5[189].padding_0[17]);\n
            cgc_fclose(v8);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (cgc_fgets(&v6, 127, v8))\n
            {\n
                v3 = &v6;\n
                v0 = cgc_strlen();\n
                v4 = cgc_fwrite(v3, v0, 1, v7);\n
                if (v4 != cgc_strlen(&v6, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[188].padding_0[50]);\n
                    cgc_DeleteFile(&v5[189].padding_0[25]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                else if (*(&v5 + cgc_strlen()) != 10 && cgc_fwrite(&v5[175].padding_0[16], 1, 1, v7) != 1)\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[188].padding_0[50]);\n
                    cgc_DeleteFile(&v5[189].padding_0[25]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v5[188].padding_0[18];\n
                v1 = v10;\n
                cgc_sprintf(&v6, v0, v1);\n
                v2 = &v6;\n
                cgc_fwrite(v2, cgc_strlen(&v6, v0, v1), 1, v7);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v5[189].padding_0[24]);\n
                v13 = v5;\n
                cgc_RenameFile(&v13[189].padding_0[25], &v13[189].padding_0[24]);\n
                cgc_ClearFsError();\n
                v9 = 1;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v5[189].padding_0[45]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4214030:sub_404d0e": null, "4214032:cgc_DeleteUser": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteUser(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    struct_1 *v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    struct_0 *v3;  // [bp-0xa0]\n
    struct struct_0 **v4;  // [bp-0x9c]\n
    void* v5;  // [bp-0x98]\n
    char v6;  // [bp-0x91]\n
    unsigned int v7;  // [bp-0x90]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v3[191].padding_0[36]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v3->field_3c))\n
    {\n
        cgc_SetFsError(&v3[191].padding_0[49]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v10))\n
    {\n
        v11 = v3;\n
        v5 = cgc_fopen(&v11[189].padding_0[24], &v11[194].padding_0[49]);\n
        if (!v5)\n
        {\n
            cgc_SetFsError(&v3[190].padding_0[59]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v3;\n
        v4 = cgc_fopen(&v12[189].padding_0[25], &v12[190].field_3c + 1);\n
        if (!v4)\n
        {\n
            cgc_SetFsError(&v3[189].padding_0[17]);\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (v6)\n
                    {\n
                        cgc_DeleteFile(&v3[189].padding_0[24]);\n
                        v13 = v3;\n
                        cgc_RenameFile(&v13[189].padding_0[25], &v13[189].padding_0[24]);\n
                        cgc_ClearFsError();\n
                        v9 = 1;\n
                        return v9;\n
                    }\n
                    cgc_SetFsError(&v3[187].padding_0[53]);\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_DeleteFile(&v3[189].padding_0[25]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen());\n
            v7 = cgc_strtok(&v8);\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v3[190].padding_0[26]);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(&v3[189].padding_0[25]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (cgc_strcmp(v7))\n
            {\n
                (&v8)[cgc_strlen()] = 58;\n
                v1 = &v8;\n
                v0 = cgc_strlen();\n
                v2 = cgc_fwrite(v1, v0, 1, v4);\n
                if (v2 != cgc_strlen(&v8, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v6 = 1;\n
            }\n
        }\n
        cgc_fclose(v5);\n
        cgc_fclose(v4);\n
        cgc_SetFsError(&v3[188].padding_0[50]);\n
        cgc_DeleteFile(&v3[189].padding_0[25]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v3[188].padding_0[12]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4215138:sub_405162": null, "4215152:cgc_ChangePasswd": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangePasswd(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    struct_1 *v2;  // [bp-0xb4]\n
    unsigned int v3;  // [bp-0xb0]\n
    struct_1 *v4;  // [bp-0xac]\n
    unsigned int v5;  // [bp-0xa8]\n
    struct_0 *v6;  // [bp-0xa4]\n
    struct struct_0 **v7;  // [bp-0xa0]\n
    void* v8;  // [bp-0x9c]\n
    char v9;  // [bp-0x95]\n
    unsigned int v10;  // [bp-0x94]\n
    char v11;  // [bp-0x8d]\n
    char v12;  // [bp-0xd]\n
    struct_0 *v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        cgc_SetFsError(&v6[191].padding_0[36]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v6[189].field_3c + 2);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (cgc_strlen() <= 32)\n
    {\n
        if (cgc_strcmp(v6->field_3c) && cgc_strcmp(v6->field_3c))\n
        {\n
            cgc_SetFsError(&v6[187].padding_0[38]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v14 = v6;\n
        v8 = cgc_fopen(&v14[189].padding_0[24], &v14[194].padding_0[49]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v6[190].padding_0[59]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v15 = v6;\n
        v7 = cgc_fopen(&v15[189].padding_0[25], &v15[190].field_3c + 1);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v6[189].padding_0[17]);\n
            cgc_fclose(v8);\n
            v12 = 0;\n
            return v12;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v11, 127, v8))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    if (v9)\n
                    {\n
                        cgc_DeleteFile(&v6[189].padding_0[24]);\n
                        v16 = v6;\n
                        cgc_RenameFile(&v16[189].padding_0[25], &v16[189].padding_0[24]);\n
                        cgc_ClearFsError();\n
                        v12 = 1;\n
                        return v12;\n
                    }\n
                    cgc_SetFsError(&v6[187].padding_0[53]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[189].padding_0[25]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            } while (!cgc_strlen());\n
            v10 = cgc_strtok(&v11);\n
            if (!v10)\n
            {\n
                cgc_SetFsError(&v6[190].padding_0[26]);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v6[189].padding_0[25]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (cgc_strcmp(v10))\n
            {\n
                (&v11)[cgc_strlen()] = 58;\n
                v2 = &v11;\n
                v0 = cgc_strlen();\n
                v3 = cgc_fwrite(v2, v0, 1, v7);\n
                if (v3 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_SetFsError(&v6[188].padding_0[50]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[189].padding_0[25]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v6[186].field_3c + 3;\n
                v1 = v13;\n
                cgc_sprintf(&v11, v0, v1);\n
                v4 = &v11;\n
                v0 = cgc_strlen(&v11, v0, v1);\n
                v5 = cgc_fwrite(v4, v0, 1, v7);\n
                if (v5 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v6[188].padding_0[50]);\n
                    cgc_DeleteFile(&v6[189].padding_0[25]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v6[189].field_3c + 2);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4216572:sub_4056fc": null, "4216576:cgc_CheckPasswd": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckPasswd(unsigned int v9, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xa8]\n
    char v1;  // [bp-0xa1]\n
    void* v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x9c]\n
    char v4;  // [bp-0x95]\n
    unsigned int v5;  // [bp-0x94]\n
    unsigned int v6;  // [bp-0x90]\n
    char v7;  // [bp-0x89]\n
    char v8;  // [bp-0x9]\n
    struct_0 *v10;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v9)\n
    {\n
        cgc_SetFsError(&v0[191].padding_0[36]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v0[189].field_3c + 2);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v0[189].field_3c + 2);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (!v0->field_3c)\n
        {\n
            cgc_Login(&v0[191].padding_0[41]);\n
            v1 = 1;\n
        }\n
        else if (cgc_strcmp(v0->field_3c))\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[200].padding_0[15]);\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_strcpy(v2);\n
            cgc_Logout();\n
            cgc_Login(&v0[191].padding_0[41]);\n
        }\n
        v10 = v0;\n
        v3 = cgc_fopen(&v10[189].padding_0[24], &v10[194].padding_0[49]);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v0[190].padding_0[59]);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v7, 127, v3))\n
                        {\n
                            cgc_fclose(v3);\n
                            if (!v4)\n
                            {\n
                                cgc_SetFsError(&v0[187].padding_0[53]);\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                        }\n
                    } while (!cgc_strlen());\n
                    v6 = cgc_strtok(&v7);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v0[190].padding_0[26]);\n
                        cgc_fclose(v3);\n
                        if (v2)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v2);\n
                            cgc_free();\n
                        }\n
                        if (v1)\n
                            cgc_Logout();\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                } while (cgc_strcmp(v6));\n
                v5 = cgc_strtok(0);\n
                if (!v5)\n
                {\n
                    cgc_SetFsError(&v0[190].padding_0[26]);\n
                    cgc_fclose(v3);\n
                    if (v2)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v2);\n
                        cgc_free();\n
                    }\n
                    if (v1)\n
                        cgc_Logout();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (cgc_strcmp(v5));\n
            cgc_ClearFsError();\n
            cgc_fclose(v3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4218087:sub_405ce7": null, "4218096:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 64));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 64)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4218433:sub_405e41": null, "4218448:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[175].padding_0[60]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_40)\n
    {\n
        v7 = v1;\n
        v7->field_40 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4218673:sub_405f31": null, "4218688:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4218759:sub_405f87": null, "4218768:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[64];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_40);\n
    v3[0] = v1->field_40;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4218985:sub_406069": null, "4218992:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4219076:sub_4060c4": null, "4219088:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_40; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4219369:sub_4061e9": null, "4219376:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4219484:sub_40625c": null, "4219488:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 64)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 64));\n
        *((v6 + v3 * 4 + 64)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4219773:sub_40637d": null, "4219776:cgc_round": null, "4219922:sub_406412": null, "4219936:cgc_floor": null, "4220092:sub_4064bc": null, "4220096:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[804];\n
    unsigned int field_324;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_324 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[676 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[676 + 4 * (v2 + 1 & 31)]);\n
        *((676 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4220319:sub_40659f": null, "4220320:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4220367:sub_4065cf": null, "4220368:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4220651:sub_4066eb": null, "4220656:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4220844:sub_4067ac": null, "4220848:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4220949:sub_406815": null, "4220960:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4220994:sub_406842": null, "4221008:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4221278:sub_40695e": null, "4221280:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4221372:sub_4069bc": null, "4221376:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221564:sub_406a7c": null, "4221568:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4221871:sub_406baf": null, "4221872:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_4070e9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_4070e9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 11872)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4223228:sub_4070fc": null, "4223232:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4223290:sub_40713a": null, "4223296:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4223365:sub_407185": null, "4223376:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4223515:sub_40721b": null, "4223520:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if (!(a2 & 8))\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
        else\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4223792:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4224448:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4226864:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4227530:sub_4081ca": null, "4227536:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4228076:sub_4083ec": null, "4228080:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4228127:sub_40841f": null, "4228128:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4228165:sub_408445": null, "4228176:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4228413:sub_40853d": null, "4228416:cgc_atof": null, "4228701:sub_40865d": null, "4228704:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4228780:sub_4086ac": null, "4228784:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4228921:sub_408739": null, "4228928:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4229064:sub_4087c8": null, "4229072:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_4088ea;\n
    if (*(v7) != 48)\n
    {\n
LABEL_4088ea:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_40893d;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_40893d;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_40893d:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_4088ea;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (cgc_isupper(v1))\n
                v1 -= 55;\n
            else\n
                v1 -= 87;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_408a75:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_408a7a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = v7 + 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_408a7a;\n
            goto LABEL_408a75;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4229843:sub_408ad3": null, "4229856:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4229915:sub_408b1b": null, "4229920:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4229975:sub_408b57": null, "4229984:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4230139:sub_408bfb": null, "4230144:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4230302:sub_408c9e": null, "4230304:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[576];\n
    struct struct_1 *field_240;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_240)\n
        {\n
            v6 = v1->field_240;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_240 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_240 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            *((v6 + v3)) = 0;\n
        }\n
        else\n
        {\n
            v1->field_240 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
    }\n
    if (v3 == v2)\n
        v1->field_240 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4230823:sub_408ea7": null, "4230832:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4231182:sub_40900e": null, "4231184:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4231367:sub_4090c7": null, "4231376:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = *((v4 + v2));\n
            v0 = *((a0 + v2));\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (v1 > v0)\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4231529:sub_409169": null, "4231536:cgc_read_selection": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_selection()\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18]\n
    char v4;  // [bp-0x12]\n
    char v5;  // [bp-0x11]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 2;\n
    v3 = 0;\n
    for (v2 = 0; v6; v6 -= v3)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(0, &v4 + v2, v6))\n
        {\n
            cgc_printf(v1 - 11552);\n
            cgc__terminate();\n
        }\n
        if (!v3)\n
        {\n
            cgc_printf(v1 - 11523);\n
            cgc__terminate();\n
        }\n
        v2 = v3 + v2;\n
    }\n
    if (!cgc_isdigit(v4))\n
    {\n
        cgc_printf(v1 - 11485);\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (v5 == 10)\n
    {\n
        v6 = cgc_atoi(&v4);\n
        v7 = v6;\n
        return v7;\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 11450);\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4231865:sub_4092b9": null, "4231872:cgc_read_string": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_string(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x15]\n
    void* v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v6)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a0)\n
        {\n
            v0 = &v3;\n
            if (cgc_receive(0, &v2, 1))\n
            {\n
                cgc_printf(v1 - 11397);\n
                cgc__terminate();\n
            }\n
            if (!v3)\n
            {\n
                cgc_printf(v1 - 11366);\n
                cgc__terminate();\n
            }\n
            if (v2 == 10)\n
            {\n
                v5 = v4;\n
                return v5;\n
            }\n
            v4[v6] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
    }\n
}\n
", "4232143:sub_4093cf": null, "4232144:cgc_read_cookie": "extern unsigned int magic_index_g;\n
extern unsigned int magic_page_g;\n
\n
int cgc_read_cookie()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = *((magic_page_g + (magic_index_g >> 2) * 4));\n
    magic_index_g = magic_index_g + 4;\n
    return v0;\n
}\n
", "4232204:sub_40940c": null, "4232208:cgc_display_banner": "typedef struct struct_1 {\n
    char padding_0[18480];\n
    struct struct_2 *field_4830;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[619193348];\n
    unsigned int field_24e82404;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[10];\n
    char field_a;\n
    char padding_b[9];\n
    char field_14;\n
    char padding_15[9];\n
    char field_1e;\n
    char padding_1f[9];\n
    char field_28;\n
    char padding_29[9];\n
    char field_32;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern struct_3 *magic_page_g;\n
\n
int cgc_display_banner()\n
{\n
    unsigned int v4;  // [bp-0x4c]\n
    unsigned int v5;  // [bp-0x48]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    unsigned int v8;  // [bp-0x3c]\n
    unsigned int v9;  // [bp-0x38]\n
    struct_1 *v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x2c]\n
    void* v13;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v23;  // ebx\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // ecx\n
\n
    v10 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v11 = magic_page_g->field_0;\n
    v18 = v11 - (magic_page_g->field_0 * 2863311531 >> 32 >> 1 & -0x4) * 3;\n
    v17 = 2016;\n
    v12 = v18;\n
    if (v12 == 1)\n
    {\n
        v16 = (v10->field_4830->field_a >> 31 CONCAT v10->field_4830->field_a) /m 29 >> 32;\n
        goto LABEL_409528;\n
    }\n
    if (v12 != 3 && v12 != 6 && v12 != 9 && v12 != 11)\n
    {\n
        v16 = (v10->field_4830->field_a >> 31 CONCAT v10->field_4830->field_a) /m 31 >> 32;\n
LABEL_409528:\n
        v23 = v10;\n
        v5 = v23->field_4830->field_14;\n
        v15 = v5 - (v23->field_4830->field_14 * 2863311531 >> 32 >> 1 & -8) * 3;\n
        v6 = v23->field_4830->field_1e;\n
        v14 = v6 - (v23->field_4830->field_1e * 2290649225 >> 32 >> 5) * 60;\n
        v7 = v23->field_4830->field_28;\n
        v13 = v7 - (v23->field_4830->field_28 * 2290649225 >> 32 >> 5) * 60;\n
        cgc_printf(&v23->padding_0[11337]);\n
        v8 = v10->field_4830->field_32;\n
        v24 = v8;\n
        v25 = (v24 - (v8 * 613566757 >> 32) >> 1) + (v8 * 613566757 >> 32) >> 2;\n
        v9 = v24 + v25 - v25 * 8;\n
        if (v9 <= 6)\n
        {\n
            goto *(((stack_base)[52] + (stack_base)[56] * 4 - 11716)) + (stack_base)[52];\n
        }\n
        else\n
        {\n
            v4 = v18;\n
            if (!(v4 <= 11))\n
                goto LABEL_0x4097a2;\n
            goto *(((stack_base)[52] + (stack_base)[76] * 4 - 11688)) + (stack_base)[52];\n
        }\n
    }\n
    v16 = (v10->field_4830->field_a >> 31 CONCAT v10->field_4830->field_a) /m 30 >> 32;\n
    goto LABEL_409528;\n
}\n
", "4232682:sub_4095ea": "int sub_4095ea()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11329);\n
}\n
", "4232704:sub_409600": "int sub_409600()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11324);\n
}\n
", "4232726:sub_409616": "int sub_409616()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11319);\n
}\n
", "4232748:sub_40962c": "int sub_40962c()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11314);\n
}\n
", "4232770:sub_409642": "int sub_409642()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11309);\n
}\n
", "4232792:sub_409658": "int sub_409658()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11304);\n
}\n
", "4232814:sub_40966e": "int sub_40966e()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_printf(*(&v0) - 11299);\n
}\n
", "4233175:sub_4097d7": null, "4233184:cgc_instruction_prompt": "typedef struct struct_0 {\n
    char padding_0[128];\n
    unsigned int field_80;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_instruction_prompt()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1 = cgc_malloc(136);\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    cgc_bzero(v1, 0x88);\n
    cgc_printf(v0 - 11214);\n
    if (!cgc_read_string(v1, 127))\n
    {\n
        cgc_free(v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (cgc_strcmp(v1, v0 - 11194))\n
    {\n
        v1->field_80 = cgc_read_cookie();\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4233438:sub_4098de": null, "4233440:cgc_recipe_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recipe_menu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"1) Add Recipe\\n
\");\n
    cgc_printf(v0 - 11174);\n
    cgc_printf(v0 - 11156);\n
    cgc_printf(v0 - 11140);\n
    cgc_printf(v0 - 11127);\n
    cgc_printf(v0 - 11112);\n
    cgc_printf(v0 - 11095);\n
    v4 = v1;\n
    return cgc_printf(v0 - 11080);\n
}\n
", "4233601:sub_409981": null, "4233616:cgc_ingredient_prompt": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ingredient_prompt()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x16]\n
    struct_0 *v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v2 = cgc_malloc(44);\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    cgc_bzero(v2, 0x2c);\n
    cgc_printf(v0 - 11076);\n
    cgc_printf(v0 - 10917);\n
    if (!cgc_read_string(v2 + 1, 15))\n
    {\n
        cgc_free(v2);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (cgc_strcmp(v2 + 1, v0 - 11194))\n
    {\n
        cgc_bzero(&v1, 0x6);\n
        cgc_printf(v0 - 11032);\n
        if (!cgc_read_string(&v1, 5))\n
        {\n
            cgc_printf(v0 - 11013);\n
            cgc_free(v2);\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_atof(&v1);\n
        *(&v2->field_0) = ([D] GetI(136:I8x8)[t16,0] ? [D] GetI(72:F64x8)[t16,0] : nan);\n
        [D] PutI(136:I8x8)[t16,0] = 0x00\n
        cgc_bzero(&v1, 0x6);\n
        cgc_printf(v0 - 10989);\n
        if (!cgc_read_string(&v1, 5))\n
        {\n
            cgc_printf(v0 - 10963);\n
            cgc_free(v2);\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_atof(&v1);\n
        v7 = v2;\n
        if ([D] GetI(136:I8x8)[t14,0])\n
        {\n
            *(&v7->field_8) = [D] GetI(72:F64x8)[t6,0];\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
        }\n
        else\n
        {\n
            v7->field_8 = nan;\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
        }\n
        cgc_printf(v0 - 10941);\n
        cgc_bzero(&v1, 0x6);\n
        if (!cgc_read_string(&v1, 5))\n
        {\n
            cgc_printf(v0 - 10914);\n
            cgc_free(v2);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!cgc_strcmp(&v1, v0 - 10868))\n
        {\n
            v2->field_10 = 1;\n
        }\n
        else\n
        {\n
            if (cgc_strcmp(&v1, v0 - 10865))\n
            {\n
                cgc_printf(v0 - 10860);\n
                cgc_free(v2);\n
                v3 = 0;\n
                return v3;\n
            }\n
            v2->field_10 = 2;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_free(v2);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4234398:sub_409c9e": null, "4234400:cgc_link_recipe_ingredient": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_1;\n
\n
int cgc_link_recipe_ingredient(struct_0 *v0, struct_1 *a0)\n
{\n
    if (a0 && v0)\n
    {\n
        a0->field_28 = v0->field_14;\n
        v0->field_14 = a0;\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4234457:sub_409cd9": null, "4234464:cgc_check_ingredient_exists": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[32];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_ingredient_exists(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        v1 = v3;\n
        while (true)\n
        {\n
            if (!v1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            if (!cgc_strcmp(&v1->padding_8[12], a0 + 20))\n
            {\n
                cgc_printf(v0 - 10838);\n
                [D] PutI(72:F64x8)[t9,0] = t12\n
                [D] PutI(136:I8x8)[t9,0] = 0x01\n
                [D] PutI(72:F64x8)[t22,0] = t25\n
                [D] PutI(136:I8x8)[t22,0] = 0x01\n
                [D] PutI(72:F64x8)[t32,1] = t33\n
                [D] PutI(136:I8x8)[t32,1] = 0x01\n
                [D] PutI(136:I8x8)[t32,0] = 0x00\n
                *(v1) = ([D] GetI(136:I8x8)[t55,0] ? [D] GetI(72:F64x8)[t55,0] : nan);\n
                [D] PutI(136:I8x8)[t55,0] = 0x00\n
                v2 = 1;\n
                return v2;\n
            }\n
            v1 = v1->field_28;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4234657:sub_409da1": null, "4234672:cgc_link_recipe_instruction": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
    char padding_1c[104];\n
    struct struct_0 *field_84;\n
} struct_0;\n
\n
int cgc_link_recipe_instruction(struct_0 *v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax\n
    unsigned int v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    if (a0 && v1)\n
    {\n
        if (v1->field_18)\n
        {\n
            for (v0 = v1->field_18; v0->field_84; v0 = v0->field_84);\n
            v3 = v0;\n
            *((v3 + 132)) = a0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v3 = v1;\n
            *((v3 + 24)) = a0;\n
            return v1;\n
        }\n
    }\n
    return v1;\n
}\n
", "4234800:cgc_add_recipe": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    void* field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_recipe()\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5[6];  // [bp-0x10], Other Possible Types: struct_0 *\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5[0] = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((v1 + 4144 + v6 * 28 + 16)))\n
            v0 = v6 < 0x200;\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (v6 == 0x200)\n
    {\n
        v8 = cgc_printf(v1 - 10781);\n
        return v8;\n
    }\n
    v5 = v1 + 4144 + v6 * 28;\n
    cgc_bzero(v5, 0x1c);\n
    cgc_printf(v1 - 0x2a00);\n
    if (!cgc_read_string(v5, 15))\n
    {\n
        v8 = cgc_printf(v1 - 10732);\n
        return v8;\n
    }\n
    v2 = v6;\n
    v6 = 0;\n
    while (true)\n
    {\n
        if (v6 < 0x200)\n
        {\n
            if (v6 != v2 && *((v1 + 4144 + v6 * 28 + 16)))\n
            {\n
                v9 = v1;\n
                if (!cgc_strcmp(v9 + 4144 + v6 * 28, v9 + 4144 + v2 * 28))\n
                {\n
                    cgc_printf(v1 - 10703);\n
                    v8 = cgc_bzero(v5, 0x10);\n
                    return v8;\n
                }\n
            }\n
            v6 += 1;\n
        }\n
        else\n
        {\n
            v5->field_10 = cgc_read_cookie();\n
            do\n
            {\n
                v4 = cgc_ingredient_prompt();\n
                if (!cgc_check_ingredient_exists(v5->field_14, v4))\n
                    cgc_link_recipe_ingredient(v5, v4);\n
                else\n
                    cgc_free(v4);\n
            } while (v4);\n
            do\n
            {\n
                v3 = cgc_instruction_prompt();\n
                v8 = cgc_link_recipe_instruction(v5, v3);\n
            } while (v3);\n
            return v8;\n
        }\n
    }\n
}\n
", "4235449:sub_40a0b9": null, "4235456:cgc_print_recipe": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[20];\n
    struct struct_1 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[132];\n
    struct struct_0 *field_84;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_recipe(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ebx\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 1;\n
    if (0x200 <= v6)\n
    {\n
        v0 = v6;\n
        v7 = cgc_printf(v2 - 10656);\n
        return v7;\n
    }\n
    else if (*((v2 + 4144 + v6 * 28 + 16)))\n
    {\n
        v8 = v2;\n
        v0 = v8 + 4144 + v6 * 28;\n
        cgc_printf(v8 - 10421);\n
        cgc_printf(v2 - 10603);\n
        for (v5 = *((v2 + 4144 + v6 * 28 + 20)); v5; v5 = v5->field_28)\n
        {\n
            [D] PutI(72:F64x8)[t14,0] = t17\n
            [D] PutI(136:I8x8)[t14,0] = 0x01\n
            v0 = ([D] GetI(136:I8x8)[t32,0] ? [D] GetI(72:F64x8)[t32,0] : nan);\n
            [D] PutI(136:I8x8)[t32,0] = 0x00\n
            v11 = ftop<4> - 1 + 1;\n
            cgc_printf(v2 - 10589);\n
            if (v5->field_10 != 1)\n
                cgc_printf(v2 - 10580);\n
            else\n
                cgc_printf(v2 - 10584);\n
            v0 = &v5->padding_14;\n
            cgc_printf(v2 - 10556);\n
        }\n
        v12 = v2;\n
        v4 = *((v12 + 4144 + v6 * 28 + 24));\n
        cgc_printf(v12 - 10577);\n
        for (; v4; v4 = *((v4 + 132)))\n
        {\n
            v0 = v3;\n
            v1 = v4;\n
            cgc_printf(v2 - 10561);\n
            v3 += 1;\n
        }\n
        v7 = cgc_printf(v2 - 11217);\n
        return v7;\n
    }\n
    else\n
    {\n
        v0 = v6 + 1;\n
        v7 = cgc_printf(v2 - 10629);\n
        return v7;\n
    }\n
}\n
", "4235953:sub_40a2b1": null, "4235968:cgc_list_recipe": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_recipe()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_bzero(&v2, 0x5);\n
    cgc_printf(v0 - 10552);\n
    v6 = cgc_read_string(&v2, 5);\n
    if (!v6)\n
        return v6;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 > 0 && 0x200 >= v1)\n
    {\n
        v6 = cgc_print_recipe(v1 - 1);\n
        return v6;\n
    }\n
    v6 = cgc_printf(v0 - 10528);\n
    return v6;\n
}\n
", "4236155:sub_40a37b": null, "4236160:cgc_list_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_all()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v2 = 0; v2 < 0x200; v2 = v4)\n
    {\n
        if (*((v1 + 4144 + v2 * 28 + 16)))\n
        {\n
            v0 = v2 + 1;\n
            cgc_printf(v1 - 10493);\n
            cgc_print_recipe(v2);\n
        }\n
        v4 = v2 + 1;\n
    }\n
    return v4;\n
}\n
", "4236305:sub_40a411": null, "4236320:cgc_remove_recipe": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_recipe()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_bzero(&v2, 0x4);\n
    cgc_list_all();\n
    cgc_printf(v0 - 10552);\n
    v6 = cgc_read_string(&v2, 4);\n
    if (!v6)\n
        return v6;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 > 0 && 0x200 >= v1)\n
    {\n
        if (!*((v0 + 4144 + (v1 - 1) * 28 + 16)))\n
        {\n
            v6 = cgc_printf(v0 - 10482);\n
            return v6;\n
        }\n
        v6 = cgc_bzero(v0 + 4144 + (v1 - 1) * 28, 0x1c);\n
        return v6;\n
    }\n
    v6 = cgc_printf(v0 - 10528);\n
    return v6;\n
}\n
", "4236596:sub_40a534": null, "4236608:cgc_print_recipe_costs": null, "4236890:sub_40a65a": null, "4236896:cgc_print_recipe_name": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_recipe_name()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_bzero(&v2, 0x5);\n
    cgc_printf(v0 - 10552);\n
    v6 = cgc_read_string(&v2, 5);\n
    if (!v6)\n
        return v6;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 > 0 && 0x200 >= v1)\n
    {\n
        if (!*((v0 + 4144 + (v1 - 1) * 28 + 16)))\n
        {\n
            v6 = cgc_printf(v0 - 10629);\n
            return v6;\n
        }\n
        v6 = cgc_printf(v0 - 10428);\n
        return v6;\n
    }\n
    v6 = cgc_printf(v0 - 10656);\n
    return v6;\n
}\n
", "4237180:sub_40a77c": null, "4237184:cgc_handle_recipe": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_recipe()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        cgc_recipe_menu();\n
        v2 = cgc_read_selection();\n
        v0 = v2 - 1;\n
        if (v0 <= 6)\n
            break;\n
        cgc_printf(v1 - 10404);\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[20] * 4 - 11640)) + (stack_base)[16];\n
}\n
", "4237267:sub_40a7d3": "int sub_40a7d3()\n
{\n
    cgc_add_recipe();\n
}\n
", "4237280:sub_40a7e0": "int sub_40a7e0()\n
{\n
    cgc_remove_recipe();\n
}\n
", "4237293:sub_40a7ed": "int sub_40a7ed()\n
{\n
    cgc_list_recipe();\n
}\n
", "4237306:sub_40a7fa": "int sub_40a7fa()\n
{\n
    cgc_list_all();\n
}\n
", "4237319:sub_40a807": "int sub_40a807()\n
{\n
    cgc_print_recipe_name();\n
}\n
", "4237332:sub_40a814": "int sub_40a814()\n
{\n
    cgc_print_recipe_costs();\n
}\n
", "4237345:sub_40a821": "int sub_40a821()\n
{\n
    char v0;  // [bp-0xc]\n
    char v2;  // [bp+0x14]\n
    char v3;  // [bp+0x18]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebp\n
\n
    cgc_printf(*(&v0) - 10411);\n
    v4 = *(&v2);\n
    v5 = *(&v3);\n
    return;\n
}\n
", "4237390:sub_40a84e": null, "4237392:cgc_pantry_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pantry_menu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"1) Create Pantry\\n
\");\n
    cgc_printf(v0 - 10366);\n
    cgc_printf(v0 - 10348);\n
    cgc_printf(v0 - 10331);\n
    cgc_printf(v0 - 10308);\n
    cgc_printf(v0 - 10290);\n
    v4 = v1;\n
    return cgc_printf(v0 - 11080);\n
}\n
", "4237536:cgc_init_globals": "extern unsigned int _GLOBAL_OFFSET_TABLE_[4621];\n
extern unsigned int g;\n
\n
int cgc_init_globals(unsigned int v2)\n
{\n
    unsigned int v0[4621];  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4[4621];  // eax\n
    unsigned int v5;  // ebx\n
\n
    v1 = v3;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_bzero(&g, 0xc00);\n
    cgc_bzero(&v0[1036], 0x3800);\n
    v4 = v0;\n
    v4[267] = 0;\n
    v4[4620] = v2;\n
    v5 = v1;\n
    return v0;\n
}\n
", "4237641:sub_40a949": null, "4237648:cgc_link_pantry_ingredient": "typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
int cgc_link_pantry_ingredient(struct_1 *v0, struct_0 *a0)\n
{\n
    if (a0 && v0)\n
    {\n
        a0->field_28 = v0->field_14;\n
        v0->field_14 = a0;\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4237705:sub_40a989": null, "4237712:cgc_print_single_pantry": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[20];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_single_pantry(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ebx\n
    unsigned int v9;  // ftop\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 1;\n
    if (128 <= v4)\n
    {\n
        v0 = v4;\n
        v5 = cgc_printf(v1 - 10656);\n
        return v5;\n
    }\n
    else if (*((v1 + 1072 + v4 * 24 + 16)))\n
    {\n
        v6 = v1;\n
        v0 = v6 + 1072 + v4 * 24;\n
        cgc_printf(v6 - 10421);\n
        cgc_printf(v1 - 10249);\n
        for (v3 = *((v1 + 1072 + v4 * 24 + 20)); v3; v3 = v3->field_28)\n
        {\n
            [D] PutI(72:F64x8)[t14,0] = t17\n
            [D] PutI(136:I8x8)[t14,0] = 0x01\n
            v0 = ([D] GetI(136:I8x8)[t32,0] ? [D] GetI(72:F64x8)[t32,0] : nan);\n
            [D] PutI(136:I8x8)[t32,0] = 0x00\n
            v9 = ftop<4> - 1 + 1;\n
            cgc_printf(v1 - 10589);\n
            if (*((v3 + 16)) == 1)\n
                cgc_printf(v1 - 10584);\n
            else\n
                cgc_printf(v1 - 10580);\n
            v0 = &v3->padding_14;\n
            cgc_printf(v1 - 10556);\n
        }\n
        v5 = cgc_printf(v1 - 11217);\n
        return v5;\n
    }\n
    else\n
    {\n
        v0 = v4 + 1;\n
        v5 = cgc_printf(v1 - 10275);\n
        return v5;\n
    }\n
}\n
", "4238080:cgc_print_pantry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_pantry()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_bzero(&v2, 0x4);\n
    cgc_printf(v0 - 10242);\n
    v6 = cgc_read_string(&v2, 4);\n
    if (!v6)\n
        return v6;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 > 0 && 128 >= v1)\n
    {\n
        v6 = cgc_print_single_pantry(v1 - 1);\n
        return v6;\n
    }\n
    v6 = cgc_printf(v0 - 10218);\n
    return v6;\n
}\n
", "4238267:sub_40abbb": null, "4238272:cgc_create_pantry": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    void* field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_pantry()\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    unsigned int v4[6];  // [bp-0x10], Other Possible Types: struct_0 *\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4[0] = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((v1 + 1072 + v5 * 24 + 16)))\n
            v0 = v5 < 128;\n
        if (!(v0 & 1))\n
            break;\n
        v5 += 1;\n
    }\n
    if (v5 == 128)\n
    {\n
        v7 = cgc_printf(v1 - 10183);\n
        return v7;\n
    }\n
    v4 = v1 + 1072 + v5 * 24;\n
    cgc_bzero(v4, 0x18);\n
    cgc_printf(v1 - 10154);\n
    if (!cgc_read_string(v4, 15))\n
    {\n
        v7 = cgc_printf(v1 - 10134);\n
        return v7;\n
    }\n
    v2 = v5;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (v5 >= 128)\n
        {\n
            v4->field_10 = cgc_read_cookie();\n
            do\n
            {\n
                v3 = cgc_ingredient_prompt();\n
                if (!cgc_check_ingredient_exists(v4->field_14, v3))\n
                    v7 = cgc_link_pantry_ingredient(v4, v3);\n
                else\n
                    v7 = cgc_free(v3);\n
            } while (v3);\n
            return v7;\n
        }\n
        if (v5 != v2 && *((v1 + 1072 + v5 * 24 + 16)))\n
        {\n
            v8 = v1;\n
            if (!cgc_strcmp(v8 + 1072 + v5 * 24, v8 + 1072 + v2 * 24))\n
            {\n
                cgc_printf(v1 - 10105);\n
                v7 = cgc_bzero(v4, 0x10);\n
                return v7;\n
            }\n
        }\n
        v5 += 1;\n
    }\n
}\n
", "4238847:sub_40adff": null, "4238848:cgc_list_all_pantries": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_all_pantries()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v2 = 0; v2 < 128; v2 = v4)\n
    {\n
        if (*((v1 + 1072 + v2 * 24 + 16)))\n
        {\n
            v0 = v2 + 1;\n
            cgc_printf(v1 - 10493);\n
            cgc_print_single_pantry(v2);\n
        }\n
        v4 = v2 + 1;\n
    }\n
    return v4;\n
}\n
", "4238988:sub_40ae8c": null, "4238992:cgc_delete_pantry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_pantry()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_bzero(&v2, 0x4);\n
    cgc_list_all_pantries();\n
    cgc_printf(v0 - 10242);\n
    v6 = cgc_read_string(&v2, 4);\n
    if (!v6)\n
        return v6;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 > 0 && 128 >= v1)\n
    {\n
        if (!*((v0 + 1072 + (v1 - 1) * 24 + 16)))\n
        {\n
            v6 = cgc_printf(v0 - 10058);\n
            return v6;\n
        }\n
        v6 = cgc_bzero(v0 + 1072 + (v1 - 1) * 24, 0x18);\n
        return v6;\n
    }\n
    v6 = cgc_printf(v0 - 10218);\n
    return v6;\n
}\n
", "4239258:sub_40af9a": null, "4239264:cgc_update_pantry": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    char padding_14[20];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_update_pantry()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_bzero(&v4, 0x10);\n
    cgc_list_all_pantries();\n
    cgc_printf(v0 - 10242);\n
    v8 = cgc_read_string(&v4, 4);\n
    if (!v8)\n
        return v8;\n
    v3 = cgc_atoi(&v4);\n
    if (v3 > 0 && 128 >= v3)\n
    {\n
        if (*((v0 + 1072 + (v3 - 1) * 24 + 16)))\n
        {\n
            v2 = v0 + 1072 + (v3 - 1) * 24;\n
            cgc_print_single_pantry(v3 - 1);\n
            cgc_printf(v0 - 10036);\n
            cgc_bzero(&v4, 0x10);\n
            v8 = cgc_read_string(&v4, 15);\n
            if (!v8)\n
                return v8;\n
            for (v1 = v2->field_14; v1; v1 = v1->field_28)\n
            {\n
                if (!cgc_strcmp(&v1->padding_14, &v4))\n
                    break;\n
            }\n
            if (!v1)\n
            {\n
                v8 = cgc_printf(v0 - 10013);\n
                return v8;\n
            }\n
            cgc_bzero(&v4, 0x10);\n
            cgc_printf(v0 - 11032);\n
            if (!cgc_read_string(&v4, 5))\n
            {\n
                v8 = cgc_printf(v0 - 11013);\n
                return v8;\n
            }\n
            cgc_atof(&v4);\n
            *(v1) = ([D] GetI(136:I8x8)[t15,0] ? [D] GetI(72:F64x8)[t15,0] : nan);\n
            [D] PutI(136:I8x8)[t15,0] = 0x00\n
            cgc_printf(v0 - 10941);\n
            cgc_bzero(&v4, 0x10);\n
            if (!cgc_read_string(&v4, 5))\n
            {\n
                v8 = cgc_printf(v0 - 10914);\n
                return v8;\n
            }\n
            if (!cgc_strcmp(&v4, v0 - 10868))\n
            {\n
                v8 = v1;\n
                v8->field_10 = 1;\n
            }\n
            else if (!cgc_strcmp(&v4, v0 - 10865))\n
            {\n
                v8 = v1;\n
                v8->field_10 = 2;\n
            }\n
            else\n
            {\n
                v8 = cgc_printf(v0 - 10860);\n
            }\n
            return v8;\n
        }\n
        else\n
        {\n
            v8 = cgc_printf(v0 - 10058);\n
            return v8;\n
        }\n
    }\n
    v8 = cgc_printf(v0 - 10218);\n
    return v8;\n
}\n
", "4240062:sub_40b2be": null, "4240064:cgc_handle_pantry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_pantry()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        cgc_pantry_menu();\n
        v2 = cgc_read_selection();\n
        v0 = v2 - 1;\n
        if (v0 <= 5)\n
            break;\n
        cgc_printf(v1 - 9949);\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[20] * 4 - 11612)) + (stack_base)[16];\n
}\n
", "4240147:sub_40b313": "int sub_40b313()\n
{\n
    cgc_create_pantry();\n
}\n
", "4240160:sub_40b320": "int sub_40b320()\n
{\n
    cgc_delete_pantry();\n
}\n
", "4240173:sub_40b32d": "int sub_40b32d()\n
{\n
    cgc_print_pantry();\n
}\n
", "4240186:sub_40b33a": "int sub_40b33a()\n
{\n
    cgc_list_all_pantries();\n
}\n
", "4240199:sub_40b347": "int sub_40b347()\n
{\n
    cgc_update_pantry();\n
}\n
", "4240212:sub_40b354": "int sub_40b354()\n
{\n
    char v0;  // [bp-0xc]\n
    char v2;  // [bp+0x14]\n
    char v3;  // [bp+0x18]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebp\n
\n
    cgc_printf(*(&v0) - 9983);\n
    v4 = *(&v2);\n
    v5 = *(&v3);\n
    return;\n
}\n
", "4240257:sub_40b381": null, "4240272:cgc_query_recipes": "typedef struct struct_0 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_query_recipes()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    char v1;  // [bp-0x31]\n
    unsigned int v2;  // [bp-0x30]\n
    struct_0 *v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x20]\n
    char v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ebx\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    struct_1 *v18;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    cgc_printf(\"Select a pantry:\\n
\");\n
    for (v8 = 0; v8 < 128; v8 += 1)\n
    {\n
        if (*((v2 + 1072 + v8 * 24 + 16)))\n
        {\n
            v12 = v2;\n
            v0 = v12 + 1072 + v8 * 24;\n
            cgc_printf(v12 - 10560);\n
        }\n
    }\n
    cgc_printf(v2 - 11080);\n
    v18 = cgc_read_string(&v7, 4);\n
    if (!v18)\n
        return v18;\n
    v6 = cgc_atoi(&v7);\n
    if (v6 > 0 && 128 >= v6)\n
    {\n
        v18 = v2 + 1072 + (v6 - 1) * 24;\n
        if (!*((v18 + 16)))\n
        {\n
            v18 = cgc_printf(v2 - 10058);\n
            return v18;\n
        }\n
        for (v8 = 0; v8 < 0x200; v8 = v18)\n
        {\n
            if (*((v2 + 4144 + v8 * 28 + 16)))\n
            {\n
                v5 = 0;\n
                for (v4 = *((v2 + 4144 + v8 * 28 + 20)); v4; v4 = v4->field_28)\n
                {\n
                    v5 = 0;\n
                    v3 = *((v2 + 1072 + (v6 - 1) * 24 + 20));\n
                    while (true)\n
                    {\n
                        v1 = 0;\n
                        if (v3)\n
                            v1 = !v5;\n
                        if (!(v1 & 1))\n
                            break;\n
                        if (!cgc_strcmp(v3 + 20, &v4->padding_0[20]))\n
                        {\n
                            [D] PutI(72:F64x8)[t7,0] = t10\n
                            [D] PutI(136:I8x8)[t7,0] = 0x01\n
                            v15 = ftop<4> - 1 - 1;\n
                            [D] PutI(72:F64x8)[t20,0] = t23\n
                            [D] PutI(136:I8x8)[t20,0] = 0x01\n
                            [D] PutI(136:I8x8)[t35,0] = 0x00\n
                            v16 = v15 + 1;\n
                            [D] PutI(72:F64x8)[t49,0] = t50\n
                            [D] PutI(136:I8x8)[t49,0] = 0x01\n
                            [D] PutI(136:I8x8)[t49,0] = 0x00\n
                            v17 = v16 + 1;\n
                            if (((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69) >> 6)) & 1) == 1)\n
                                v5 = 1;\n
                        }\n
                        v3 = v3->field_28;\n
                    }\n
                    if (!v5)\n
                        break;\n
                }\n
                if (v5)\n
                    cgc_printf(v2 - 9930);\n
            }\n
            v18 = v8 + 1;\n
        }\n
        return v18;\n
    }\n
    v18 = cgc_printf(v2 - 9957);\n
    return v18;\n
}\n
", "4240973:sub_40b64d": null, "4240976:cgc_query_by_price": null, "4241385:sub_40b7e9": null, "4241392:cgc_print_cheapest": null, "4241766:sub_40b966": null, "4241776:cgc_print_expensivest": null, "4242150:sub_40bae6": null, "4242160:cgc_query_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_query_menu()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        cgc_printf(v1 - 9758);\n
        cgc_printf(v1 - 9724);\n
        cgc_printf(v1 - 9692);\n
        cgc_printf(v1 - 9666);\n
        cgc_printf(v1 - 9634);\n
        cgc_printf(v1 - 11080);\n
        v2 = cgc_read_selection();\n
        v0 = v2 - 1;\n
        if (v0 <= 4)\n
            break;\n
        cgc_printf(v1 - 9957);\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[20] * 4 - 11588)) + (stack_base)[16];\n
}\n
", "4242343:sub_40bba7": "int sub_40bba7()\n
{\n
    cgc_query_recipes();\n
}\n
", "4242356:sub_40bbb4": "int sub_40bbb4()\n
{\n
    cgc_query_by_price();\n
}\n
", "4242369:sub_40bbc1": "int sub_40bbc1()\n
{\n
    cgc_print_cheapest();\n
}\n
", "4242382:sub_40bbce": "int sub_40bbce()\n
{\n
    cgc_print_expensivest();\n
}\n
", "4242395:sub_40bbdb": "int sub_40bbdb()\n
{\n
    char v0;  // [bp-0xc]\n
    char v2;  // [bp+0x14]\n
    char v3;  // [bp+0x18]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebp\n
\n
    cgc_printf(*(&v0) - 9619);\n
    v4 = *(&v2);\n
    v5 = *(&v3);\n
    return;\n
}\n
", "4242440:sub_40bc08": null, "4242448:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v5 = 0x4347c000;\n
    v2 = 0;\n
    cgc_init_globals(v5);\n
    cgc_display_banner();\n
    while (true)\n
    {\n
        cgc_printf(v1 - 9608);\n
        cgc_printf(v1 - 9592);\n
        cgc_printf(v1 - 9576);\n
        cgc_printf(v1 - 9559);\n
        cgc_printf(v1 - 11080);\n
        v2 = cgc_read_selection();\n
        v0 = v2 - 1;\n
        if (v0 <= 3)\n
            break;\n
        cgc_printf(v1 - 9550);\n
    }\n
    goto *(((stack_base)[28] + (stack_base)[32] * 4 - 11568)) + (stack_base)[28];\n
}\n
", "4242652:sub_40bcdc": "int sub_40bcdc()\n
{\n
    cgc_handle_recipe();\n
}\n
", "4242665:sub_40bce9": "int sub_40bce9()\n
{\n
    cgc_handle_pantry();\n
}\n
", "4242678:sub_40bcf6": "int sub_40bcf6()\n
{\n
    cgc_query_menu();\n
}\n
", "4242691:sub_40bd03": "int sub_40bd03()\n
{\n
    char v0;  // [bp-0x18]\n
\n
    cgc_printf(*(&v0) - 9556);\n
    cgc__terminate();\n
}\n
", "4242748:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}