{"4198400:_init": "extern struct_0 *g_4032fc;\n
\n
int _init()\n
{\n
    if (g_4032fc)\n
    {\n
        g_4032fc();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198528:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198544:sub_401090": "int sub_401090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198550:sub_401096": null, "4198560:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198603:sub_4010cb": null, "4198604:sub_4010cc": "int sub_4010cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198608:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198612:sub_4010d4": null, "4198624:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 8739;\n
    v6 = v5 + 229;\n
    v7 = v5 + 229;\n
    if (v7 == v6)\n
        return v5 + 229;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198675:sub_401113": "int sub_401113()\n
{\n
}\n
", "4198681:sub_401119": "int sub_401119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198688:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 8675;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 229;\n
    v9 = (v6 + 229 - (v6 + 229) >> 31) + (229 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198759:sub_401167": "int sub_401167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198768:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4032f8;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__TMC_END__)\n
        return;\n
    if (g_4032f8)\n
    {\n
        v0 = __dso_handle;\n
        sub_401090();\n
    }\n
    deregister_tm_clones();\n
    __TMC_END__ = 1;\n
    return;\n
}\n
", "4198843:sub_4011bb": "int sub_4011bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198848:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198857:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198861:sub_4011cd": null, "4198864:cgc_receive_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_all(unsigned int v11, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0xbc]\n
    unsigned int v1;  // [bp-0xb0]\n
    void* v2;  // [bp-0xac]\n
    unsigned int v3;  // [bp-0xa8]\n
    struct_0 *v4;  // [bp-0xa4], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xa0]\n
    char v6;  // [bp-0x9c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = a1;\n
    v7 = 0;\n
    v5 = 0;\n
    for (v4 = 0; v4 < 32; v4 += 1)\n
    {\n
        *(&(&v6)[4 * v4]) = 0;\n
    }\n
    v6 = *(&v6) | 1;\n
    v2 = 0;\n
    v3 = 50000;\n
    while (true)\n
    {\n
        if (a1 - v8 == a1)\n
        {\n
            if (a2)\n
                *(a2) = a1;\n
            v10 = v9;\n
            return v10;\n
        }\n
        v7 = 0;\n
        v5 = 0;\n
        v0 = &v5;\n
        if ((Not (Not (0x0<32> == Call(0x401050<32>, <SimCCCdecl>: [0x1<32>, BaseOffset(stack_base, -156), 0x0<32>, BaseOffset(stack_base, -172)], ret: eax<4>, fp_ret: no-fp-ret-value))))) { Goto None } else { Goto None }\n
        if (!v5)\n
        {\n
            *(a2) = a1 - v8;\n
            v10 = v9;\n
            return v10;\n
        }\n
        v9 = cgc_receive(0, a0 + a1 - v8, v8);\n
        if (v9)\n
        {\n
            v10 = v9;\n
            return v10;\n
        }\n
        else if (v7)\n
        {\n
            v8 -= v7;\n
        }\n
        else\n
        {\n
            if (a2)\n
                *(a2) = a1 - v8;\n
            v10 = v9;\n
            return v10;\n
        }\n
    }\n
}\n
", "4199349:sub_4013b5": null, "4199360:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = a1 + 1;\n
    for (v2 = 0; v3 != 1; v3 -= v2)\n
    {\n
        v2 = 0;\n
        v0 = &v2;\n
        v4 = cgc_transmit(0, a0, v3 - 1);\n
        if (v4)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
    }\n
    if (a2)\n
        *(a2) = a1;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4199556:sub_401484": null, "4199568:cgc_memset": "int cgc_memset(char *v1, char a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    a1 += 1;\n
    for (v0 = 0; a1 != 1; a1 -= 1)\n
    {\n
        v1[2 + a1] = a0;\n
    }\n
    return v1;\n
}\n
", "4199649:sub_4014e1": null, "4199664:cgc_memcmp": "int cgc_memcmp(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    a1 += 1;\n
    v0 = 1;\n
    while (true)\n
    {\n
        if (v0 < a1)\n
        {\n
            if (v2[1 + v0] > a0[1 + v0])\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
            if (v2[1 + v0] < a0[1 + v0])\n
            {\n
                v1 = -(v0);\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4199833:sub_401599": null, "4199840:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    for (a1 += 1; a1 != 1; a1 -= 1)\n
    {\n
        v0[2 + a1] = a0[2 + a1];\n
    }\n
    return a1 - 1;\n
}\n
", "4199916:sub_4015ec": null, "4199920:cgc_defrag": "extern unsigned int _GLOBAL_OFFSET_TABLE_[239];\n
extern unsigned int cgc_depth;\n
\n
int cgc_defrag(unsigned int v6)\n
{\n
    unsigned int v0[239];  // [bp-0x10018]\n
    char v1;  // [bp-0x10014]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8[239];  // eax\n
    unsigned int v9[239];  // eax\n
    unsigned int v10[239];  // eax\n
\n
    v5 = v7;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v4 = 0;\n
    v2 = 0;\n
    cgc_depth = cgc_depth + 1;\n
    memset(&v1, 0, 0x10000);\n
    for (v2 = 0; v2 < v6; v2 += 1)\n
    {\n
        if (0x100 <= v0[232])\n
        {\n
            v4 = -15;\n
            break;\n
        }\n
        else\n
        {\n
            v8 = v0;\n
            v3 = *(1469 + &v8[0] + v8[232]);\n
            v8[232] = v8[232] + 1;\n
            if (!(v3 & 128))\n
            {\n
                v9 = v0;\n
                *(1213 + &v9[0] + v9[238]) = v3;\n
                v9[238] = v9[238] + 1;\n
            }\n
            else\n
            {\n
                v4 = cgc_defrag(v3 & 127);\n
                if (v4)\n
                    break;\n
            }\n
        }\n
    }\n
    v10 = v0;\n
    v10[230] = v10[230] - 1;\n
    return v4;\n
}\n
", "4200261:sub_401745": null, "4200272:cgc_exercise_stack": "int cgc_exercise_stack()\n
{\n
    char v0;  // [bp-0x7ff008]\n
\n
    return memset(&v0, 0, 0x7ff000);\n
}\n
", "4200335:sub_40178f": null, "4200336:main": "typedef struct struct_0 {\n
    char padding_0[924];\n
    unsigned int field_39c;\n
    unsigned int field_3a0;\n
    unsigned int field_3a4;\n
    char padding_3a8[16];\n
    unsigned int field_3b8;\n
    char padding_3bc[513];\n
    char field_5bd;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    char **v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
    struct_0 *v17;  // ebx\n
    struct_0 *v18;  // eax\n
    struct_0 *v19;  // ebx\n
\n
    v9 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0x100;\n
    v4 = 0;\n
    cgc_exercise_stack();\n
    v3 = 0xba2bb000;\n
    v2 = &v1->padding_3a8;\n
    *(v3) = v2;\n
    while (true)\n
    {\n
        v12 = v1;\n
        v12->field_39c = 0;\n
        cgc_memset(&v12->field_5bd, 0, 0x100);\n
        v13 = v1;\n
        v7 = cgc_receive_all(0, &v13->field_5bd, 0x100, &v13->field_39c);\n
        if (v7)\n
        {\n
            v7 = -7;\n
            return v7;\n
        }\n
        if (v1->field_39c == 42)\n
        {\n
            v14 = v1;\n
            if (!cgc_memcmp(&v14->field_5bd, &v14->padding_0[828], 42))\n
                break;\n
        }\n
        if (v1->field_39c != v5)\n
        {\n
            v7 = cgc_transmit_all(1, &v1->padding_0[40], 0x100, NULL);\n
            if (v7)\n
            {\n
                v7 = -8;\n
                return v7;\n
            }\n
        }\n
        else\n
        {\n
            v0 = v6;\n
            if (!v0)\n
            {\n
                v15 = v1;\n
                if (!cgc_memcmp(&v15->field_5bd, &v15->padding_3bc, 0x100))\n
                {\n
                    v7 = cgc_transmit_all(1, &v1->padding_0[297], 0x100, NULL);\n
                    if (v7)\n
                    {\n
                        v7 = -8;\n
                        return v7;\n
                    }\n
                    v6 = 1;\n
                    v5 = 16;\n
                }\n
                else\n
                {\n
                    v7 = cgc_transmit_all(1, &v1->padding_0[554], 0x100, NULL);\n
                    if (v7)\n
                    {\n
                        v7 = -8;\n
                        return v7;\n
                    }\n
                    continue;\n
                }\n
            }\n
            else if (v0 == 1)\n
            {\n
                cgc_memcpy(*(v3), &v1->field_5bd, 16);\n
                v6 = 2;\n
                v5 = 0x100;\n
                v7 = cgc_transmit_all(1, &v1->padding_0[811], 16, NULL);\n
                if (v7)\n
                {\n
                    v7 = -8;\n
                    return v7;\n
                }\n
            }\n
            else\n
            {\n
                if (v0 != 2)\n
                {\n
                    v7 = -13;\n
                    return v7;\n
                }\n
                v16 = v1;\n
                if (!cgc_memcmp(&v16->field_5bd, &v16->padding_3bc, 0x100))\n
                {\n
                    v6 = 1;\n
                    v5 = 16;\n
                    continue;\n
                }\n
                else if (v1->field_5bd != 255)\n
                {\n
                    v17 = v1;\n
                    v17->field_3a0 = 0;\n
                    v17->field_3b8 = 0;\n
                    cgc_memset(&v17->padding_3bc[257], 0, 0x100);\n
                    cgc_defrag(0x100);\n
                    for (v4 = 0; v4 < v1->field_3b8; v4 += 1)\n
                    {\n
                        v18 = v1;\n
                        v18->padding_3bc[257 + v4] = v18->padding_3bc[257 + v4] ^ (*(v3))[v4 & 15];\n
                    }\n
                    v19 = v1;\n
                    v19->field_3a4 = 0;\n
                    v7 = cgc_transmit_all(1, &v19->padding_3bc[257], v19->field_3b8, &v19->field_3a4);\n
                    if (v7)\n
                    {\n
                        v7 = -8;\n
                        return v7;\n
                    }\n
                }\n
                else\n
                {\n
                    v7 = cgc_transmit_all(1, &v1->field_5bd, 255, NULL);\n
                    if ((Not (Not (0x0<32> == Load(addr=stack_base-20, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
                    continue;\n
                }\n
            }\n
        }\n
    }\n
    v7 = cgc_transmit_all(1, &v1->padding_0[871], 42, NULL);\n
    if (v7)\n
    {\n
        v7 = -8;\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4201596:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc_transmit": null, "5242892:memset": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}