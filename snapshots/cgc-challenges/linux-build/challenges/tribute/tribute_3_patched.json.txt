{"4198400:_init": "extern struct_0 *g_407e0c;\n
\n
int _init()\n
{\n
    if (g_407e0c)\n
    {\n
        g_407e0c();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198528:sub_401080": "int sub_401080()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198534:sub_401086": null, "4198544:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198587:sub_4010bb": null, "4198588:sub_4010bc": "int sub_4010bc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198592:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198596:sub_4010c4": null, "4198608:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 27971;\n
    v6 = v5 + 85;\n
    v7 = v5 + 85;\n
    if (v7 == v6)\n
        return v5 + 85;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198659:sub_401103": "int sub_401103()\n
{\n
}\n
", "4198665:sub_401109": "int sub_401109()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198672:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 27907;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 85;\n
    v9 = (v6 + 85 - (v6 + 85) >> 31) + (85 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198743:sub_401157": "int sub_401157()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198752:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_407e08;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_407e08)\n
    {\n
        v0 = __dso_handle;\n
        sub_401080();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198827:sub_4011ab": "int sub_4011ab()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198832:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198841:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198845:sub_4011bd": null, "4198848:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
    char *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v5, &v4, 1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        v6[a0] = v4;\n
        a1 -= 1;\n
    }\n
    return v3;\n
}\n
", "4199001:sub_401259": null, "4199008:cgc_read_until_delim": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until_delim(unsigned int v6, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x11]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(v6, &v4, 1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        if (v4 == a2)\n
        {\n
            v5 = v3;\n
            return v5;\n
        }\n
        else if (v3 < a1)\n
        {\n
            v7 = v3;\n
            v3 = v7 + 1;\n
            v7[a0] = v4;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    v5 = -1;\n
    return v5;\n
}\n
", "4199203:sub_401323": null, "4199216:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 7);\n
}\n
", "4199267:sub_401363": null, "4199280:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 6);\n
}\n
", "4199331:sub_4013a3": null, "4199344:cgc_isascii": "int cgc_isascii(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 0)\n
        v1 = v2 < 128;\n
    return v1 & 1;\n
}\n
", "4199392:cgc_isblank": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isblank(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 64);\n
}\n
", "4199443:sub_401413": null, "4199456:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 32);\n
}\n
", "4199507:sub_401453": null, "4199520:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 1);\n
}\n
", "4199571:sub_401493": null, "4199584:cgc_isgraph": "int cgc_isgraph(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 > 32)\n
        v1 = v2 <= 126;\n
    return v1 & 1;\n
}\n
", "4199629:sub_4014cd": null, "4199632:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 4);\n
}\n
", "4199683:sub_401503": null, "4199696:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 32)\n
        v1 = v2 <= 126;\n
    return v1 & 1;\n
}\n
", "4199741:sub_40153d": null, "4199744:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isprint(v3))\n
    {\n
        v1 = !(*((v0 + v3 + 84)) & 15);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199842:sub_4015a2": null, "4199856:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 8);\n
}\n
", "4199907:sub_4015e3": null, "4199920:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 2);\n
}\n
", "4199971:sub_401623": null, "4199984:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[84 + v0] & 16);\n
}\n
", "4200035:sub_401663": null, "4200048:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 & -33;\n
    return v0;\n
}\n
", "4200119:sub_4016b7": null, "4200128:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 | 32;\n
    return v0;\n
}\n
", "4200199:sub_401707": null, "4200208:cgc_strsep": "int cgc_strsep(struct struct_0 **v6, char *a0)\n
{\n
    char v0;  // [bp-0x16]\n
    char v1;  // [bp-0x15]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0xc]\n
    char *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v7;  // eax\n
\n
    v4 = &*(v6)->field_0;\n
    if (!*(v6))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    for (v3 = 0; *(a0); a0 += 1)\n
    {\n
        v2 = v4;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
            {\n
                v0 = 1;\n
                if (v3)\n
                    v0 = v2 < v3;\n
                v1 = v0;\n
            }\n
            if (!(v1 & 1))\n
                break;\n
            if (*(v2) != *(a0))\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = v2;\n
                break;\n
            }\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v3;\n
        v3 = v7 + 1;\n
        *(v7) = 0;\n
    }\n
    *(v6) = v3;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4200461:sub_40180d": null, "4200464:cgc_strtol": "typedef struct struct_0 {\n
    char padding_0[344];\n
    unsigned int field_158;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char *v9, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v9;\n
    v6 = 0;\n
    v4 = 0;\n
    if (!a1)\n
    {\n
LABEL_40187a:\n
        if (a0)\n
            *(a0) = v9;\n
        for (; cgc_isspace(*(v7)); v7 += 1);\n
        if (*(v7) == 43)\n
        {\n
            v7 += 1;\n
        }\n
        else if (*(v7) == 45)\n
        {\n
            v7 += 1;\n
            v6 = 1;\n
        }\n
        if (!a1)\n
        {\n
            a1 = 10;\n
            if (*(v7) == 48)\n
            {\n
                a1 = 8;\n
                v7 += 1;\n
                if (*(v7) != 88 && !(*(v7) == 120))\n
                    goto LABEL_401958;\n
                a1 = 16;\n
                v7 += 1;\n
LABEL_401958:\n
            }\n
        }\n
        while (true)\n
        {\n
            v0 = a1;\n
            v5 = cgc_valueOf(*(v7));\n
            if (v5 == -1)\n
                break;\n
            v3 = a1 * v4 + v5;\n
            if (v3 < v4)\n
            {\n
                v2->field_158 = 20;\n
                v8 = (v6 ? 2147483647 : 0x80000000);\n
                return v8;\n
            }\n
            v4 = v3;\n
            v7 += 1;\n
            if (a0)\n
                *(a0) = v7;\n
        }\n
        if (v6)\n
            v1 = -(v4);\n
        else\n
            v1 = v4;\n
        v8 = v1;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (a1 >= 2 && a1 <= 36)\n
            goto LABEL_40187a;\n
        v2->field_158 = 3;\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4200992:cgc_valueOf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_valueOf(char v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_isdigit(v7))\n
    {\n
        v4 = v7 - 48;\n
        if (v4 >= a0)\n
            v1 = -1;\n
        else\n
            v1 = v4;\n
        v5 = v1;\n
        return v5;\n
    }\n
    else if (cgc_isalpha(v7))\n
    {\n
        v3 = cgc_toupper(v7) + -55;\n
        if (v3 >= a0)\n
            v0 = -1;\n
        else\n
            v0 = v3;\n
        v5 = v0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4201214:sub_401afe": null, "4201216:cgc_htonl": "int cgc_htonl(unsigned int v0)\n
{\n
    v0 = __buildin_bswap32(v0);\n
    return v0;\n
}\n
", "4201235:sub_401b13": null, "4201248:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4201452:sub_401bec": null, "4201456:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v1;\n
}\n
", "4201526:sub_401c36": null, "4201536:cgc_memcmp": "int cgc_memcmp(char *v4, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v3 = v4;\n
    v2 = a0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (a1 > 0)\n
            v1 = *(v3) == *(v2);\n
        if (!(v1 & 1))\n
            break;\n
        v3 += 1;\n
        v2 += 1;\n
        a1 -= 1;\n
    }\n
    if (!a1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(v3) - *(v2);\n
    return v0;\n
}\n
", "4201691:sub_401cdb": null, "4201696:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4201824:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    int tmp_22;  // tmp #22\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // ecx\n
\n
    v0 = v2;\n
    v0 = v1;\n
    do\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_22 = *(v3);\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = *(v3);\n
    } while (tmp_22);\n
    return v1;\n
}\n
", "4201891:sub_401da3": null, "4201904:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4201960:sub_401de8": null, "4201968:cgc_strchr": "int cgc_strchr(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v3))\n
            v2 = *(v3) != a0;\n
        if (!(v2 & 1))\n
            break;\n
        v3 += 1;\n
    }\n
    if (*(v3))\n
    {\n
        v1 = v3;\n
        return v1;\n
    }\n
    if (a0)\n
        v0 = 0;\n
    else\n
        v0 = v3;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4202111:sub_401e7f": null, "4202112:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v1 = &v5;\n
    v0 = v1;\n
    return cgc_vsnprintf(v4, a0, a1);\n
}\n
", "4202186:sub_401eca": null, "4202192:cgc_vsnprintf": "int cgc_vsnprintf(char *v4, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // esi\n
\n
    v3 = v5;\n
    v0 = v4;\n
    v1 = a0;\n
    v2 = 0;\n
    cgc_printf_core(cgc_strn_printer, &v0, a1, a2, v0, v1);\n
    if (v2 < v1)\n
    {\n
        *(v0) = 0;\n
        return v2;\n
    }\n
    if (v1 <= 0)\n
        return v2;\n
    v4[1 + a0] = 0;\n
}\n
", "4202339:sub_401f63": null, "4202352:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = v1;\n
    return cgc_vprintf(v2);\n
}\n
", "4202404:sub_401fa4": null, "4202416:cgc_vprintf": "extern unsigned int cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_vfprintf(cgc_stdout, v1);\n
}\n
", "4202475:sub_401feb": null, "4202480:cgc_vfprintf": "int cgc_vfprintf(unsigned int *v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return cgc_vdprintf(*(v1), a0);\n
}\n
", "4202541:sub_40202d": null, "4202544:cgc_vdprintf": "int cgc_vdprintf(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
\n
    v2 = v4;\n
    v1 = 0;\n
    cgc_printf_core(cgc_fd_printer, &v0, a0, a1, v3, 0);\n
    return v1;\n
}\n
", "4202638:sub_40208e": null, "4202640:cgc_fprintf": "int cgc_fprintf(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0xc]\n
    unsigned int v4;  // esi\n
\n
    v1 = v4;\n
    v0 = &v3;\n
    return cgc_vfprintf(v2, a0, v0);\n
}\n
", "4202703:sub_4020cf": null, "4202704:cgc_printf_core": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_core(struct struct_0 **v9, unsigned int a0, struct struct_0 **a1, unsigned int a2)\n
{\n
    void* v0;  // [bp-0xe4]\n
    unsigned int v1;  // [bp-0xac]\n
    unsigned int v2;  // [bp-0xa8]\n
    unsigned int v3;  // [bp-0x38]\n
    void* v4;  // [bp-0x24]\n
    char v5;  // [bp-0x1d]\n
    void* v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v10;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v4 = 0;\n
    v3 = a2;\n
    v10 = a1;\n
    a1 = v10 + 1;\n
    *(&v10) = *(v10);\n
    for (v5 = *(&v10); v5; v5 = v10)\n
    {\n
        v1 = v8;\n
        if (v1 <= 15)\n
        {\n
            if (v5 == 37)\n
            {\n
                v8 = 2;\n
            }\n
            else if (v5 != 92)\n
            {\n
                v0 = 0;\n
                v9(v5, a0);\n
            }\n
            else\n
            {\n
                v8 = 1;\n
            }\n
        }\n
        v10 = a1;\n
        a1 = v10 + 1;\n
        v10 = *(v10);\n
    }\n
    return v10;\n
}\n
", "4202943:sub_4021bf": "int sub_4021bf()\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_7;  // tmp #7\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
    struct struct_0 **v6;  // [bp+0x8], Other Possible Types: void*\n
    char v7;  // [bp+0xc]\n
    char v8;  // [bp+0x10]\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    struct struct_0 **v17;  // eax\n
\n
    v15 = v0 - 34;\n
    tmp_7 = v15;\n
    v16 = v15 - 86;\n
    if (tmp_7 <= 86)\n
        goto *(((stack_base)[164] + eax<4> * 4 - 7152)) + (stack_base)[164];\n
    if (v0 > 48 && v0 < 56)\n
    {\n
        v3 = 3;\n
        v2 = 1;\n
        v1 = v0 - 48;\n
        goto LABEL_40237e;\n
    }\n
    v17 = v6;\n
    v6 = 0;\n
    v17(*(*(&v8)), *(&v7));\n
LABEL_40237e:\n
}\n
", "4203417:sub_402399": "int sub_402399()\n
{\n
    char v0;  // [bp-0x19]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp+0x8], Other Possible Types: char\n
    char v5;  // [bp+0xc]\n
    char v6;  // [bp+0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // eax\n
\n
    if (v0 != 37)\n
    {\n
        v2 = 15;\n
        v1 = 0;\n
        v6 = *(&v6) - 1;\n
    }\n
    else\n
    {\n
        v7 = *(&v4);\n
        v4 = 0;\n
        v7(v0, *(&v5));\n
        v2 = 0;\n
    }\n
}\n
", "4203507:sub_4023f3": "int sub_4023f3()\n
{\n
    char v0;  // [bp-0x19]\n
    char v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    struct struct_0 **v5;  // [bp+0x8], Other Possible Types: char, void*\n
    char v6;  // [bp+0xc]\n
    char v7;  // [bp+0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v8;  // eax\n
    struct struct_0 **v9;  // eax\n
\n
    if (v0 > 48 && v0 < 56 && *(&v2) < 3)\n
    {\n
        v2 = *(&v2) + 1;\n
        v1 = *(&v1) * 8 + v0 - 48;\n
        if (v2 == 3)\n
        {\n
            v9 = v5;\n
            v5 = 0;\n
            v9(v1, *(&v6));\n
            v3 = 0;\n
        }\n
        goto LABEL_4024a6;\n
    }\n
    v8 = *(&v5);\n
    v5 = 0;\n
    v8(v1, *(&v6));\n
    v3 = 0;\n
    v7 = *(&v7) - 1;\n
LABEL_4024a6:\n
}\n
", "4203691:sub_4024ab": "int sub_4024ab()\n
{\n
    unsigned int v0;  // [bp-0xb0]\n
    char v1;  // [bp-0x19]\n
    char v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc]\n
    struct struct_0 **v6;  // [bp+0x8], Other Possible Types: char, void*\n
    char v7;  // [bp+0xc]\n
    char v8;  // [bp+0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
\n
    if (cgc_isxdigit(v1) && *(&v3) < 2)\n
    {\n
        v3 = *(&v3) + 1;\n
        v0 = *(&v2) * 16;\n
        v2 = v0 + cgc_hex_value_of();\n
        if (v3 == 2)\n
        {\n
            v10 = v6;\n
            v6 = 0;\n
            v10(v2, *(&v7));\n
            v4 = 0;\n
        }\n
        goto LABEL_402578;\n
    }\n
    v9 = *(&v6);\n
    v6 = 0;\n
    v9(*(&v2), *(&v7));\n
    v4 = 0;\n
    v8 = *(&v8) - 1;\n
LABEL_402578:\n
}\n
", "4203901:sub_40257d": "int sub_40257d()\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x19]\n
    void* v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    char *v8;  // [bp+0x10], Other Possible Types: char, unsigned int\n
    char *v9;  // eax\n
\n
    v3 = -1;\n
    v2 = -1;\n
    v5 = 0;\n
    v0 = 0;\n
    v1 = -1;\n
    if (v4 == 48)\n
    {\n
        v8 = *(&v8) - 1;\n
        v6 = 5;\n
    }\n
    else if (!cgc_isdigit(v4))\n
    {\n
        v8 = *(&v8) - 1;\n
        v6 = 5;\n
    }\n
    else\n
    {\n
        for (v3 = 0; cgc_isdigit(v4); v4 = *(v9))\n
        {\n
            v3 = v3 * 10 + v4 - 48;\n
            v9 = v8;\n
            v8 = v9 + 1;\n
        }\n
        if (v4 == 36)\n
        {\n
            v1 = v3 - 1;\n
            v3 = 0;\n
            v6 = 5;\n
        }\n
        else\n
        {\n
            v8 = *(&v8) - 1;\n
            v6 = 7;\n
        }\n
    }\n
}\n
", "4204151:sub_402677": "int sub_402677()\n
{\n
}\n
", "4204325:sub_402725": "int sub_402725()\n
{\n
    unsigned int *v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: char\n
    char v4;  // [bp-0x19]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char *v8;  // eax\n
    char *v9;  // eax\n
    unsigned int *v10;  // eax\n
    char *v11;  // eax\n
\n
    if (v4 == 42)\n
    {\n
        v8 = *(&v7);\n
        v7 = v8 + 1;\n
        v4 = *(v8);\n
        if (!cgc_isdigit(v4))\n
        {\n
            v10 = *(&v3);\n
            v3 = v10 + 1;\n
            v0 = v10;\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            for (v0 = 0; cgc_isdigit(v4); v4 = *(v9))\n
            {\n
                v0 = v0 * 10 + v4 - 48;\n
                v9 = v7;\n
                v7 = v9 + 1;\n
            }\n
            v0 -= 1;\n
            if ((Not (Not (Load(addr=stack_base-25, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
        }\n
        v2 = *((*(&v1) + v0 * 4));\n
    }\n
    else if (!cgc_isdigit(v4))\n
    {\n
        v7 += 1;\n
    }\n
    else\n
    {\n
        for (v2 = 0; cgc_isdigit(v4); v4 = *(v11))\n
        {\n
            v2 = v2 * 10 + v4 - 48;\n
            v11 = v7;\n
            v7 = v11 + 1;\n
        }\n
        v7 += 1;\n
    }\n
    v5 = 7;\n
}\n
", "4204667:sub_40287b": "int sub_40287b()\n
{\n
    unsigned int *v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: char\n
    char v4;  // [bp-0x19]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char *v8;  // eax\n
    char *v9;  // eax\n
    char *v10;  // eax\n
    unsigned int *v11;  // eax\n
    char *v12;  // eax\n
\n
    if (v4 != 46)\n
    {\n
        v7 += 1;\n
    }\n
    else\n
    {\n
        v8 = *(&v7);\n
        v7 = v8 + 1;\n
        v4 = *(v8);\n
        if (v4 == 42)\n
        {\n
            v9 = v7;\n
            v7 = v9 + 1;\n
            v4 = *(v9);\n
            if (!cgc_isdigit(v4))\n
            {\n
                v11 = *(&v3);\n
                v3 = v11 + 1;\n
                v0 = v11;\n
                v7 += 1;\n
            }\n
            else\n
            {\n
                for (v0 = 0; cgc_isdigit(v4); v4 = *(v10))\n
                {\n
                    v0 = v0 * 10 + v4 - 48;\n
                    v10 = v7;\n
                    v7 = v10 + 1;\n
                }\n
                v0 -= 1;\n
                if ((Not (Not (Load(addr=stack_base-25, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
            }\n
            v2 = *((*(&v1) + v0 * 4));\n
        }\n
        else if (!cgc_isdigit(v4))\n
        {\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            for (v2 = 0; cgc_isdigit(v4); v4 = *(v12))\n
            {\n
                v2 = v2 * 10 + v4 - 48;\n
                v12 = v7;\n
                v7 = v12 + 1;\n
            }\n
            v7 += 1;\n
        }\n
    }\n
    v5 = 8;\n
}\n
", "4205052:sub_4029fc": "int sub_4029fc()\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_7;  // tmp #7\n
    char v3;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v6 = v0 - 76;\n
    tmp_7 = v6;\n
    v7 = v6 - 46;\n
    if (tmp_7 > 46)\n
        v3 = *(&v3) - 1;\n
    else\n
        goto *(((stack_base)[164] + eax<4> * 4 - 7408)) + (stack_base)[164];\n
}\n
", "4205247:sub_402abf": "int sub_402abf()\n
{\n
    unsigned int v0;  // [bp-0xbc]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x2c], Other Possible Types: char\n
    char v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x19]\n
    unsigned int v44;  // eax\n
\n
    v1 = 1;\n
    if (*(&v2) == -1)\n
    {\n
        v44 = *(&v3);\n
        v3 = v44 + 1;\n
        v2 = v44;\n
    }\n
    v0 = v4 - 65;\n
    if (!(v0 <= 55))\n
        goto LABEL_0x40427c;\n
    goto *(((stack_base)[164] + (stack_base)[188] * 4 - 7632)) + (stack_base)[164];\n
}\n
", "4211367:sub_4042a7": null, "4211376:cgc_fd_printer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fd_printer(char v4, unsigned int a0[3], unsigned int a1)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[3];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = a0;\n
    if (a1)\n
    {\n
        v3 = v2[2];\n
        return v3;\n
    }\n
    v5 = v2;\n
    v5[2] = v5[2] + 1;\n
    v0 = 0;\n
    cgc_transmit(v2[0], &v4, 1);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4211506:sub_404332": null, "4211520:cgc_fgetc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgetc(unsigned int v5[3])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[3];  // eax\n
    unsigned int v7[3];  // eax\n
    unsigned int v8[3];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if ((v5[1] & 8))\n
    {\n
        v6 = v5;\n
        v6[1] = v6[1] & -9;\n
        v4 = v5[2];\n
        return v4;\n
    }\n
    v0 = &v2;\n
    if (cgc_receive(v5[0], &v3, 1))\n
    {\n
        v7 = v5;\n
        v7[1] = v7[1] | 2;\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (!*(&v2))\n
    {\n
        v8 = v5;\n
        v8[1] = v8[1] | 4;\n
        v4 = -1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
}\n
", "4211716:sub_404404": null, "4211728:cgc_strn_printer": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strn_printer(char v2, struct_0 *a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // eax\n
    struct_0 *v4;  // eax\n
\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v1 = v0->field_8;\n
        return v1;\n
    }\n
    if (v0->field_8 < v0->field_4)\n
    {\n
        v0->field_0->field_0 = v2;\n
        v3 = v0;\n
        v3->field_0 = v3->field_0 + 1;\n
    }\n
    v4 = v0;\n
    v4->field_8 = v4->field_8 + 1;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4211843:sub_404483": null, "4211856:cgc_getc": "int cgc_getc(unsigned int v0[3])\n
{\n
    return cgc_fgetc(v0);\n
}\n
", "4211893:sub_4044b5": null, "4211904:cgc_getchar": "extern unsigned int cgc_stdin[3];\n
\n
int cgc_getchar()\n
{\n
    return cgc_getc(cgc_stdin);\n
}\n
", "4211941:sub_4044e5": null, "4211952:cgc_fgets": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a0 - 1)\n
        {\n
LABEL_4045a4:\n
            *((v4 + v2)) = 0;\n
            v3 = v4;\n
            return v3;\n
        }\n
        v1 = cgc_fgetc(a1);\n
        if (v1 == -1)\n
        {\n
            if ((a1->field_4 & 4) && !(v2 <= 0))\n
                goto LABEL_4045a4;\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        *((v4 + v5)) = v1;\n
        if (v1 == 10)\n
            goto LABEL_4045a4;\n
    }\n
}\n
", "4212158:sub_4045be": null, "4212160:cgc_hex_value_of": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_hex_value_of(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_isdigit(v3))\n
    {\n
        v1 = v3 - 48;\n
        return v1;\n
    }\n
    else if (cgc_isalpha(v3))\n
    {\n
        v1 = cgc_toupper(v3) + -55;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4212295:sub_404647": null, "4212304:cgc_r_utoa": "int cgc_r_utoa(unsigned int v2, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = a0;\n
    for (*(v1) = 48; v2; v2 = (0 CONCAT v2) /m 10)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        *(v3) = ((0 CONCAT v2) /m 10 >> 32) + 48;\n
    }\n
    if (v1 == a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4212428:sub_4046cc": null, "4212432:cgc_r_otoa": "int cgc_r_otoa(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0 = a0;\n
    return cgc_r_llotoa(v2, 0);\n
}\n
", "4212488:sub_404708": null, "4212496:cgc_r_xtoa": "int cgc_r_xtoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = a1;\n
    return cgc_r_llxtoa(v3, 0, a0);\n
}\n
", "4212563:sub_404753": null, "4212576:cgc_r_llotoa": "int cgc_r_llotoa(unsigned int v2, unsigned int a0, char *a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = a1;\n
    for (*(v1) = 48; !(!v2) || !(!a0); v2 = (v4 CONCAT v2) * 0x20000000 >> 32)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        *(v3) = v2 & 7 | 48;\n
        v4 = a0;\n
        a0 = v4 / 8;\n
    }\n
    if (v1 == a1)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4212710:sub_4047e6": null, "4212720:cgc_r_llxtoa": "int cgc_r_llxtoa(unsigned int v4, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v3 = a1;\n
    for (*(v3) = 48; !(!v4) || !(!a0); v4 = (v6 CONCAT v4) * 0x10000000 >> 32)\n
    {\n
        v2 = v4 & 15;\n
        if (v2 < 10)\n
        {\n
            v2 += 48;\n
        }\n
        else\n
        {\n
            if (a2)\n
                v1 = v2 - -55;\n
            else\n
                v1 = v2 - -87;\n
            v2 = v1;\n
        }\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = v2;\n
        v6 = a0;\n
        a0 = v6 / 16;\n
    }\n
    if (v3 == a1)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 - 1;\n
    return v0;\n
}\n
", "4212934:sub_4048c6": null, "4212944:cgc_read_op_value": "int cgc_read_op_value(unsigned int *v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = -1;\n
    if (*((a0 + (a1 << 2) + 16)) == 1)\n
    {\n
        v0 = v1[260 + *((a0 + a1 * 4 + 8))];\n
        return v0;\n
    }\n
    if (!*((a0 + (a1 << 2) + 16)))\n
    {\n
        v0 = v1[*((a0 + a1 * 4 + 8))];\n
    }\n
    else if (*((a0 + (a1 << 2) + 16)) == 2)\n
    {\n
        v0 = *((a0 + a1 * 4 + 8));\n
    }\n
    return v0;\n
}\n
", "4213098:sub_40496a": null, "4213104:cgc_write_op_value": "int cgc_write_op_value(unsigned int *v1, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    if (*((a0 + (a1 << 2) + 16)) == 1)\n
    {\n
        v1[260 + *((a0 + a1 * 4 + 8))] = a2;\n
        return v0;\n
    }\n
    if (*((a0 + (a1 << 2) + 16)))\n
        v0 = -1;\n
    else\n
        v1[*((a0 + a1 * 4 + 8))] = a2;\n
    return v0;\n
}\n
", "4213235:sub_4049f3": null, "4213248:cgc_run_program": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_run_program()\n
{\n
    unsigned int v0;  // [bp-0x840]\n
    unsigned int v1;  // [bp-0x83c]\n
    void* v2;  // [bp-0x838], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x834]\n
    void* v4;  // [bp-0x830]\n
    unsigned int *v5;  // [bp-0x82c]\n
    void* v6;  // [bp-0x828]\n
    char v7;  // [bp-0x824]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // [bp+0x4]\n
    unsigned int v11;  // [bp+0x8]\n
    unsigned int v25;  // ebx\n
\n
    v8 = v25;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&v7, 0, 2068);\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (v6 >= v11)\n
    {\n
        v2 = 0;\n
        return;\n
    }\n
    v5 = v10 + v6 * 32;\n
    v0 = *(v5) - 1;\n
    if (v0 > 12)\n
    {\n
        v2 = -20;\n
        return;\n
    }\n
    goto *(((stack_base)[2108] + (stack_base)[2112] * 4 - 6804)) + (stack_base)[2108];\n
}\n
", "4213439:sub_404abf": "int sub_404abf()\n
{\n
    unsigned int v0;  // [bp-0x834]\n
    char v1;  // [bp-0x828]\n
    char v2;  // [bp-0x824], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x820]\n
    char v4;  // [bp-0x810]\n
    unsigned int *v5;  // [bp-0x10], Other Possible Types: char\n
\n
    if (*(&v5) != 255)\n
    {\n
        v5 = *(&v5) + 1;\n
        *((&v4 + 0x4 * v5)) = cgc_read_op_value(&v3, *(&v1), 0);\n
        v2 = *(&v2) + 1;\n
    }\n
    v0 = -23;\n
}\n
", "4215299:sub_405203": null, "4215312:cgc_execute": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_execute()\n
{\n
    unsigned int v0;  // [bp-0x4024]\n
    void* v1;  // [bp-0x4020], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x401c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    cgc_memset(&v2, 0, 0x4000);\n
    v1 = 0;\n
    do\n
    {\n
        v4 = cgc_read_all(6, &v2 + 0x20 * v1, 32);\n
        if (v4 != 32)\n
        {\n
LABEL_4052c1:\n
            break;\n
        }\n
        else if (*((&v2 + 0x20 * v1)) == -1)\n
        {\n
            goto LABEL_4052c1;\n
        }\n
        if (*((&v2 + 0x20 * v1)) == -2)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v1 += 1;\n
    } while (v1 < 0x200);\n
    if (v4 != 32 && v4)\n
    {\n
        v3 = -1;\n
        goto LABEL_405360;\n
    }\n
    v3 = cgc_run_program(&v2);\n
    cgc_printf(v0 - 6739);\n
LABEL_405360:\n
    return v3;\n
}\n
", "4215665:sub_405371": null, "4215680:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = cgc_execute();\n
    cgc__terminate();\n
}\n
", "4215732:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}