{"4202496:_init": "extern struct_0 *g_406c2c;\n
\n
int _init()\n
{\n
    if (g_406c2c)\n
    {\n
        g_406c2c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 19267;\n
    v6 = v5 + 26;\n
    v7 = v5 + 26;\n
    if (v7 == v6)\n
        return v5 + 26;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 19203;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 26;\n
    v9 = (v6 + 26 - (v6 + 26) >> 31) + (26 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406c28;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406c28)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_fread": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v12, unsigned int a0, unsigned int a1[4])\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    void* v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v13[4];  // eax\n
    unsigned int v14[4];  // eax\n
    unsigned int v15[4];  // eax\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v6 = v12;\n
    if (a0 > 2147483647)\n
    {\n
        v11 = -1;\n
        return v11;\n
    }\n
    else if (a0)\n
    {\n
        if (a1[2] > 0)\n
        {\n
            if (a0 < a1[2])\n
                v4 = a0;\n
            else\n
                v4 = a1[2];\n
            v8 = v4;\n
            cgc_memcpy(v6, a1[1] + a1[3]);\n
            v13 = a1;\n
            v13[2] = v13[2] - v8;\n
            if (!a1[2])\n
                v3 = 0;\n
            else\n
                v3 = a1[3] + v8;\n
            a1[3] = v3;\n
            a0 -= v8;\n
            v6 = v8 + v6;\n
            v10 = v8 + v10;\n
            if (!a0)\n
            {\n
                v11 = v10;\n
                return v11;\n
            }\n
            a1[2] = 0;\n
            a1[3] = 0;\n
        }\n
        if (a0 >= 0x1000)\n
        {\n
            v7 = a0 & -0x1000;\n
            v9 = cgc_readall(a1[0], v6);\n
            if (v9 != v7)\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            a0 &= 4095;\n
            v6 = v7 + v6;\n
            v10 = v7 + v10;\n
            if (!a0)\n
            {\n
                v11 = v10;\n
                return v11;\n
            }\n
        }\n
        while (true)\n
        {\n
            if (a1[2] >= a0 && a1[2] >= a0)\n
            {\n
                if (a0 < a1[2])\n
                    v2 = a0;\n
                else\n
                    v2 = a1[2];\n
                v8 = v2;\n
                cgc_memcpy(v6, a1[1] + a1[3]);\n
                v15 = a1;\n
                v15[2] = v15[2] - v8;\n
                if (!a1[2])\n
                    v1 = 0;\n
                else\n
                    v1 = a1[3] + v8;\n
                a1[3] = v1;\n
                v10 = v8 + v10;\n
                break;\n
            }\n
            v0 = &v9;\n
            if (cgc_receive(a1[0], a1[1] + a1[3] + a1[2], 0x1000 - a1[2]))\n
            {\n
LABEL_402405:\n
                v11 = -1;\n
                return v11;\n
            }\n
            if (!v9)\n
                goto LABEL_402405;\n
            v14 = a1;\n
            v14[2] = v9 + v14[2];\n
        }\n
        v11 = v10;\n
        return v11;\n
    }\n
    else\n
    {\n
        v11 = v10;\n
        return v11;\n
    }\n
}\n
", "4203735:sub_4024d7": null, "4203744:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4203820:sub_40252c": null, "4203824:cgc_readall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readall(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v4, a0 + v3, a1 - v3))\n
            cgc__terminate();\n
        if (!v2)\n
            return v3;\n
        v3 = v2 + v3;\n
    }\n
}\n
", "4203991:sub_4025d7": null, "4204000:cgc_fread_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread_until(char *v10, char a0, unsigned int a1, unsigned int a2[4])\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    char *v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v11[4];  // eax\n
    unsigned int v12[4];  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v5 = 0;\n
    v4 = v10;\n
    if (a1 < 1)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        if (a1 == 1)\n
        {\n
            v9 = -1;\n
            return v9;\n
        }\n
        if (a2[1] && a2[2] > 0)\n
        {\n
            v5 = cgc_memchr(a2[1] + a2[3], a0);\n
            if (v5)\n
                v7 = &v5[-1 * a2[3] + -1 * a2[1] + 1];\n
            else\n
                v7 = a2[2];\n
            if (a1 - 1 < v7)\n
                v2 = a1 - 1;\n
            else\n
                v2 = v7;\n
            v7 = v2;\n
            cgc_memcpy(v4, a2[1] + a2[3], v7);\n
            v11 = a2;\n
            v11[2] = v11[2] - v7;\n
            if (a2[2])\n
                v1 = a2[3] + v7;\n
            else\n
                v1 = 0;\n
            a2[3] = v1;\n
            a1 -= v7;\n
            v4 = v7 + v4;\n
            v8 = v7 + v8;\n
            if (a1 != 1 && !v5)\n
                goto LABEL_4027bd;\n
            v5 = cgc_memchr(v10, a0);\n
            if (v5)\n
            {\n
                *(v5) = 0;\n
                break;\n
            }\n
            else\n
            {\n
                *(v4) = 0;\n
                break;\n
            }\n
        }\n
LABEL_4027bd:\n
        v0 = &v6;\n
        if (cgc_receive(a2[0], a2[1] + a2[3] + a2[2], 0x1000 - a2[2]))\n
        {\n
LABEL_40280e:\n
            v9 = -1;\n
            return v9;\n
        }\n
        if (!*(&v6))\n
            goto LABEL_40280e;\n
        v12 = a2;\n
        v12[2] = *(&v6) + v12[2];\n
    }\n
    v9 = v8;\n
    return v9;\n
}\n
", "4204604:sub_40283c": null, "4204608:cgc_memchr": "int cgc_memchr(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4204709:sub_4028a5": null, "4204720:cgc_readline": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readline(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < a1; v3 = v2 + v3)\n
    {\n
        v2 = 0;\n
        v0 = &v2;\n
        if (cgc_receive(v4, a0 + v3, 1))\n
            cgc__terminate();\n
        if (!v2)\n
            cgc__terminate();\n
        if (v3[a0] == 36)\n
            break;\n
    }\n
    if (*((a0 + v3)) != 36)\n
        cgc__terminate();\n
    *((a0 + v3)) = 0;\n
    return v3;\n
}\n
", "4204961:sub_4029a1": null, "4204976:cgc_sendall": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < a1; v3 = *(&v2) + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_transmit(v4, a0 + v3, a1 - v3))\n
            cgc__terminate();\n
    }\n
    return a1;\n
}\n
", "4205121:sub_402a41": null, "4205136:cgc_memset": "int cgc_memset(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = a0;\n
    }\n
    return v1;\n
}\n
", "4205204:sub_402a94": null, "4205216:cgc_streq": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_streq(struct_0 *v2, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // ecx\n
    struct_0 *v6;  // eax\n
\n
    v0 = v3;\n
    do\n
    {\n
        v4 = v2;\n
        v2 = &v4->field_0;\n
        v5 = v4->field_-1;\n
        v6 = a0;\n
        a0 = &v6->field_0;\n
        v1 = 0;\n
        if (v5 == v6->field_-1)\n
            v1 = *((v2 - 1));\n
    } while ((v1 & 1));\n
    return *((v2 - 1)) == *((a0 - 1));\n
}\n
", "4205333:sub_402b15": null, "4205344:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    do\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
    } while (*(v3));\n
    return -1 + v1 - v0;\n
}\n
", "4205398:sub_402b56": null, "4205408:cgc_strcpy": "int cgc_strcpy(char *v0, struct struct_0 **a0)\n
{\n
    int tmp_22;  // tmp #22\n
    struct struct_0 **v1;  // eax\n
    char *v2;  // ecx\n
\n
    do\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
        tmp_22 = *(v1);\n
        *(&v1) = *(v1);\n
        v2 = v0;\n
        v0 = v2 + 1;\n
        *(v2) = *(&v1);\n
    } while (tmp_22);\n
    return v1;\n
}\n
", "4205458:sub_402b92": null, "4205472:cgc_atoi": "int cgc_atoi(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // ecx\n
\n
    v0 = v2;\n
    for (v0 = 0; *(v1); v0 = v0 * 10 + *(v3) - 48)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
    }\n
    return v0;\n
}\n
", "4205537:sub_402be1": null, "4205552:cgc_strcat": "int cgc_strcat(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    do\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
    } while (*(v3));\n
    for (v1 -= 1; *(a0); *(v5) = tmp_19)\n
    {\n
        v4 = a0;\n
        a0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4205659:sub_402c5b": null, "4205664:cgc_tohex": "int cgc_tohex(unsigned int v2, char a0[9])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    for (v1 = 7; v1 >= 0; v1 -= 1)\n
    {\n
        if ((v2 >> (v1 << 2 & 31) & 15) <= 9)\n
            v0 = (v2 >> (v1 * 4 & 31) & 15) + 48;\n
        else\n
            v0 = (v2 >> (v1 * 4 & 31) & 15) + 55;\n
        a0[7 + -1 * v1] = v0;\n
    }\n
    a0[8] = 0;\n
    return a0;\n
}\n
", "4205809:sub_402cf1": null, "4205824:cgc_sprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_sprintf(unsigned int v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x8]\n
    char v3;  // [bp+0xc]\n
    unsigned int v4;  // esi\n
\n
    v0 = &v3;\n
    return cgc_vsprintf(v2, a0, v0, &v3, v4, *(&v1));\n
}\n
", "4205887:sub_402d3f": null, "4205888:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(char *v7, char a0[2], unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3[2];  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* **v4;  // [bp-0x18]\n
    char v5;  // [bp-0x11]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    char *v9;  // eax\n
    char v10[2];  // eax\n
    char *v11;  // eax\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
    unsigned int v14;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v5, 0, 9);\n
    for (*(&v3) = a0; v3[0]; v3 += 1)\n
    {\n
        if (v3[0] != 64)\n
        {\n
            v9 = v7;\n
            v7 = v9 + 1;\n
            *(v9) = v3[0];\n
        }\n
        else\n
        {\n
            v10 = v3;\n
            v3 = &v10[1];\n
            v0 = v10[1];\n
            if (v0 == 64)\n
            {\n
                v11 = v7;\n
                v7 = v11 + 1;\n
                *(v11) = *(v3);\n
            }\n
            else if (v0 == 98)\n
            {\n
                v12 = a1;\n
                a1 = v12 + 1;\n
                v4 = *(v12);\n
                cgc_strcpy(v7, v4);\n
                v7 = cgc_strlen(v4) + v7;\n
            }\n
            else if (v0 == 105)\n
            {\n
                v13 = a1;\n
                a1 = v13 + 1;\n
                v2 = *(v13);\n
                cgc_tohex(v2, &v5);\n
                cgc_strcpy(v7, &v5);\n
                v7 = cgc_strlen(&v5) + v7;\n
            }\n
        }\n
    }\n
    v14 = v6;\n
    return v3;\n
}\n
", "4206258:sub_402eb2": null, "4206272:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = v1;\n
    return cgc_vfdprintf(1, v2);\n
}\n
", "4206331:sub_402efb": null, "4206336:cgc_vfdprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vfdprintf(unsigned int v10, char a0[2], unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    char v7[2];  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x18]\n
    char v9;  // [bp-0x11]\n
    char v11[2];  // eax\n
    unsigned int *v12;  // eax\n
    unsigned int *v13;  // eax\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    for (*(&v7) = a0; v7[0]; v7 += 1)\n
    {\n
        if (v7[0] != 64)\n
        {\n
            cgc_sendall(v10, v7, 1);\n
        }\n
        else\n
        {\n
            v11 = v7;\n
            v7 = &v11[1];\n
            v4 = v11[1];\n
            if (v4 == 64)\n
            {\n
                cgc_sendall(v10, v7, 1);\n
            }\n
            else if (v4 == 98)\n
            {\n
                v12 = a1;\n
                a1 = v12 + 1;\n
                v8 = *(v12);\n
                v2 = v10;\n
                v3 = v8;\n
                cgc_sendall(v2, v3, cgc_strlen(v8));\n
            }\n
            else if (v4 == 104)\n
            {\n
                v13 = a1;\n
                a1 = v13 + 1;\n
                v6 = *(v13);\n
                cgc_tohex(v6, &v9);\n
                v0 = v10;\n
                v1 = &v9;\n
                cgc_sendall(v0, v1, cgc_strlen(&v9));\n
            }\n
        }\n
    }\n
    return v7;\n
}\n
", "4206719:sub_40307f": null, "4206720:cgc_fdprintf": "int cgc_fdprintf(unsigned int v2, char a0[2])\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0xc]\n
    unsigned int v4;  // esi\n
\n
    v1 = v4;\n
    v0 = &v3;\n
    return cgc_vfdprintf(v2, a0, v0);\n
}\n
", "4206783:sub_4030bf": null, "4206784:cgc_strtok": "typedef struct struct_1 {\n
    char padding_0[108];\n
    struct struct_0 *field_6c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(struct_0 *v4, char a0)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_1 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        if (v1->field_6c)\n
        {\n
            v4 = v1->field_6c;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    v2 = v4;\n
    do\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v5 = v2;\n
            v2 = &v5->field_0;\n
            v0 = v5->field_-1 != a0;\n
        }\n
    } while ((v0 & 1));\n
    if (!*(v2))\n
    {\n
        v1->field_6c = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    v6 = v2;\n
    v2 = &v6->field_0;\n
    v6->field_0 = 0;\n
    v1->field_6c = &v2->field_0;\n
    v3 = v4;\n
    return v3;\n
}\n
", "4207027:sub_4031b3": null, "4207040:cgc_memeq": "int cgc_memeq(char *v2, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (*(v2) != *(a0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4207140:sub_403224": null, "4207152:cgc_list_create_node": "int cgc_list_create_node(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 12;\n
    v1[0] = cgc_malloc();\n
    if (!v1)\n
    {\n
        v2[0] = v1;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4207254:sub_403296": null, "4207264:cgc_list_destroy_node": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy_node(struct_2 *v2, struct struct_0 **a0)\n
{\n
    unsigned int v0[3];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_10)\n
    {\n
        v0 = *(a0)->field_0;\n
        v2->field_10();\n
    }\n
    *(a0)->field_0 = 0;\n
    *(a0)->field_4 = 0;\n
    *(a0)->field_8 = 0;\n
    v0[0] = *(a0);\n
    cgc_free();\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4207393:sub_403321": null, "4207408:cgc_list_init": "int cgc_list_init(unsigned int v0[5], unsigned int a0)\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v0[2] = &v0[1];\n
    v0[3] = &v0[1];\n
    v0[4] = a0;\n
    return v0;\n
}\n
", "4207471:sub_40336f": null, "4207472:cgc_list_destroy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy(unsigned int v2[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 && 0 < cgc_list_length())\n
    {\n
        while (cgc_list_head_node())\n
        {\n
            v1[0] = cgc_list_pop();\n
            cgc_list_destroy_node(v2, v1);\n
        }\n
    }\n
    v2[2] = &v2[1];\n
    v2[3] = &v2[1];\n
    return v2;\n
}\n
", "4207643:sub_40341b": null, "4207648:cgc_list_length": "int cgc_list_length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4207661:sub_40342d": null, "4207664:cgc_list_head_node": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_list_head_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_8;\n
    return v0;\n
}\n
", "4207718:sub_403466": null, "4207728:cgc_list_pop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_pop(void* v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_list_head_node(v4);\n
    v0 = v2;\n
    cgc_list_remove_node(v4);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4207829:sub_4034d5": null, "4207840:cgc_list_insert_node_at_end": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_end(unsigned int v3[4], unsigned int a0[3])\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v0[0] = v3;\n
        v2 = cgc_list_tail_node();\n
        a0[1] = &v3[1];\n
        a0[2] = v3[3];\n
        v3[3] = a0;\n
        if (!v2)\n
            v3[2] = a0;\n
        else\n
            v2->field_4 = a0;\n
        v4 = v3;\n
        *(v4) = *(v4) + 1;\n
        return v3;\n
    }\n
}\n
", "4207990:sub_403576": null, "4208000:cgc_list_tail_node": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_list_tail_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_c)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_c;\n
    return v0;\n
}\n
", "4208054:sub_4035b6": null, "4208064:cgc_list_insert_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_end(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2)\n
    {\n
        v1[0] = cgc_list_create_node(a0);\n
        return cgc_list_insert_node_at_end(v2, v1);\n
    }\n
    return 0;\n
}\n
", "4208147:sub_403613": null, "4208160:cgc_list_insert_node_at_start": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_start(unsigned int v2[4], unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v1 = cgc_list_head_node(v2);\n
        a0[2] = &v2[1];\n
        a0[1] = v2[2];\n
        v2[2] = a0;\n
        if (!v1)\n
            v2[3] = a0;\n
        else\n
            v1->field_8 = a0;\n
        v3 = v2;\n
        *(v3) = *(v3) + 1;\n
        return v2;\n
    }\n
}\n
", "4208310:sub_4036b6": null, "4208320:cgc_list_insert_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_start(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2)\n
    {\n
        v1[0] = cgc_list_create_node(a0);\n
        return cgc_list_insert_node_at_start(v2, v1);\n
    }\n
    return 0;\n
}\n
", "4208403:sub_403713": null, "4208416:cgc_list_remove_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int cgc_list_remove_node(unsigned int *v2, struct_2 *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    if (a0)\n
    {\n
        v3 = 0;\n
        if (0 < *(v2))\n
        {\n
            v1 = a0->field_8;\n
            v0 = a0->field_4;\n
            v1->field_4 = v0;\n
            v0->field_8 = v1;\n
            a0->field_8 = 0;\n
            a0->field_4 = 0;\n
            v3 = v2;\n
            *(v3) = *(v3) - 1;\n
        }\n
    }\n
    return v3;\n
}\n
", "4208523:sub_40378b": null, "4208528:cgc_list_foreach": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_foreach(unsigned int *v3, struct struct_1 **a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v2 = cgc_list_head_node(v3);\n
        for (v1 = 0; v1 < *(v3); v1 += 1)\n
        {\n
            a0();\n
            v2 = *((v2 + 4));\n
        }\n
        return 0;\n
    }\n
}\n
", "4208668:sub_40381c": null, "4208672:cgc_list_find_node_with_data": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find_node_with_data(unsigned int *v5, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a1)\n
    {\n
        v3 = cgc_list_head_node(v5);\n
        for (v2 = 0; v2 < *(v5); v2 += 1)\n
        {\n
            v0 = a1;\n
            if (a0(v3->field_0))\n
            {\n
                v4 = v3;\n
                return v4;\n
            }\n
            v3 = v3->field_4;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4208854:sub_4038d6": null, "4208864:cgc_list_find_node_with_data_recurse": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find_node_with_data_recurse(unsigned int *v6, struct struct_1 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 && a1)\n
    {\n
        v3 = cgc_list_head_node(v6);\n
        for (v2 = 0; v2 < *(v6); v2 += 1)\n
        {\n
            v0 = a1;\n
            v4 = a0(v3);\n
            if (v4)\n
            {\n
                v5 = v4;\n
                return v5;\n
            }\n
            v3 = *((v3 + 4));\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4209048:sub_403998": null, "4209056:cgc_srand": "extern unsigned int _GLOBAL_OFFSET_TABLE_[1057];\n
\n
int cgc_srand(unsigned int v1[8])\n
{\n
    unsigned int v0[1057];  // [bp-0x8]\n
    unsigned int v2[1057];  // eax\n
    unsigned int v3[1057];  // eax\n
\n
    v0[0] = v2;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!v1)\n
        v1 = 0x4347c000;\n
    v3 = v0;\n
    v3[1052] = *(v1) ^ *((v1 + 4));\n
    v3[1053] = *((v1 + 8)) ^ *((v1 + 12));\n
    v3[1054] = *((v1 + 16)) ^ *((v1 + 20));\n
    v3[1055] = *((v1 + 24)) ^ *((v1 + 28));\n
    v3[1056] = 1;\n
    return v0;\n
}\n
", "4209185:sub_403a21": null, "4209200:cgc_getshifty": "extern unsigned int _GLOBAL_OFFSET_TABLE_[1056];\n
extern unsigned int initialized;\n
\n
int cgc_getshifty()\n
{\n
    unsigned int v0[1056];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3[1056];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!initialized)\n
        cgc_srand(NULL);\n
    v3 = v0;\n
    v1 = v3[1052] ^ v3[1052] * 0x1000;\n
    v3[1052] = v3[1053];\n
    v3[1053] = v3[1054];\n
    v3[1054] = v3[1055];\n
    v0[1055] = v0[1055] ^ v0[1055] >> 18 ^ v1 ^ v1 >> 9;\n
    return v0[1055];\n
}\n
", "4209357:sub_403acd": null, "4209360:cgc_malloc": "typedef struct struct_1 {\n
    char padding_0[4228];\n
    unsigned int field_1084;\n
    unsigned int field_1088;\n
    unsigned int field_108c;\n
    char padding_1090[4];\n
    struct struct_0 *field_1094;\n
    unsigned int field_1098;\n
    unsigned int field_109c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 freel;\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // ebx\n
    struct_1 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = &freel.padding_0[0];\n
    v2 = v6;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v1->field_108c)\n
    {\n
        v7 = v1;\n
        v7->field_108c = &v7->field_1088;\n
        v7->field_1088 = &v7->field_1088;\n
        v7->field_109c = &v7->field_1098;\n
        v7->field_1098 = &v7->field_1098;\n
    }\n
    v2 += 12;\n
    do\n
    {\n
        if (*((v3 + 8)) >= v2)\n
        {\n
            cgc__rmchunk();\n
            cgc__addchunk(v3);\n
            v5 = v3 + 12;\n
            return v5;\n
        }\n
        v3 = *((v3 + 4));\n
    } while (v3 != &v1->field_1088);\n
    if (v1->field_1094)\n
    {\n
        if (v1->field_1084 >= v2)\n
        {\n
            v8 = v1;\n
            v3 = v8->field_1094;\n
            v3->field_8 = v2;\n
            v8->field_1094 = &v8->field_1094->padding_0[v2];\n
            v8->field_1084 = v8->field_1084 - v2;\n
            cgc__addchunk(v3);\n
            v5 = v3 + 12;\n
            return v5;\n
        }\n
        else if (v1->field_1084 <= 12)\n
        {\n
            v1->field_1094 = 0;\n
        }\n
        else\n
        {\n
            cgc__addchunk(v1->field_1094);\n
            v1->field_1094 = 0;\n
        }\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v2, 1))\n
        cgc__terminate();\n
    v9 = v1;\n
    v9->field_1094 = *(&v4) + v2;\n
    v9->field_1094 = v9->field_1094 & -0x1000;\n
    v9->field_1084 = 0x1000 + -1 * *(&v4) - v2 + v9->field_1094;\n
    v9->field_1094 = 0x1000 + -1 * v9->field_1084 + v9->field_1094;\n
    if (v9->field_1084 <= 12)\n
        v1->field_1094 = 0;\n
    v3 = *(&v4);\n
    v3->field_8 = v6;\n
    cgc__addchunk(v3);\n
    v5 = v3 + 12;\n
    return v5;\n
}\n
", "4210017:sub_403d61": null, "4210032:cgc__rmchunk": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc__rmchunk(struct_1 *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v0->field_0->field_4 = v0->field_4;\n
    v1 = v0->field_4;\n
    *(v1) = v0->field_0;\n
    return v1;\n
}\n
", "4210067:sub_403d93": null, "4210080:cgc__addchunk": "int cgc__addchunk(unsigned int v0[2], struct struct_0 **a0)\n
{\n
    v0[0] = *(a0);\n
    v0[1] = a0;\n
    *(a0)->field_4 = v0;\n
    *(a0) = &v0[0];\n
    return a0;\n
}\n
", "4210129:sub_403dd1": null, "4210144:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc__rmchunk(v2 - 12);\n
    v4 = v1;\n
    return cgc__addchunk(v2 - 12, v0 + 4232);\n
}\n
", "4210216:sub_403e28": null, "4210224:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc(v4);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memset(v1, 0, v4);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4210331:sub_403e9b": null, "4210336:cgc_free_parking": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_parking(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    cgc_free(v1->field_8);\n
    v5 = v2;\n
    return cgc_free(&v1->padding_0[4]);\n
}\n
", "4210404:sub_403ee4": null, "4210416:cgc_dontfree": "int cgc_dontfree(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4210424:sub_403ef8": null, "4210432:cgc_compare_ticket": "int cgc_compare_ticket(unsigned int *v2, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8]\n
\n
    v1 = v2;\n
    v0 = *(a0);\n
    return *(v1) == v0;\n
}\n
", "4210482:sub_403f32": null, "4210496:cgc_compare_coupon": "int cgc_compare_coupon(unsigned int v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = v2;\n
    v0 = a0;\n
    return cgc_streq(v1 + 4, v0);\n
}\n
", "4210563:sub_403f83": null, "4210576:cgc_send_resp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_resp(unsigned int v5, void* **a0)\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    char v1;  // [bp-0x114], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x110]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v1, 0, 260);\n
    v1 = v5;\n
    cgc_strcpy(&v2, a0);\n
    if (cgc_sendall(1, &v1, 260) == 260)\n
    {\n
        if (!(!1))\n
            goto LABEL_404056;\n
    }\n
    else\n
    {\n
        if (false)\n
        {\n
LABEL_404056:\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    v3 = 1;\n
    return v3;\n
}\n
", "4210793:sub_404069": null, "4210800:cgc_do_pay": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407cf0;\n
extern unsigned int g_407cf4;\n
extern unsigned int stats;\n
\n
int cgc_do_pay(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    stats = stats + 1;\n
    g_407cf4 = v0->field_4 + g_407cf4;\n
    g_407cf0 = (v0->field_4 >> 1) + g_407cf0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4210884:sub_4040c4": null, "4210896:cgc_do_add_ticket": "typedef struct struct_0 {\n
    char padding_0[4290];\n
    unsigned short field_10c2;\n
    char padding_10c4[4];\n
    unsigned int field_10c8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407ce4;\n
extern unsigned int g_407cf0;\n
extern unsigned int ticketl;\n
\n
int cgc_do_add_ticket(struct_1 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = v3;\n
    g_407ce4 = g_407ce4 + 1;\n
    g_407cf0 = g_407cf0 + 1;\n
    v5 = cgc_list_find_node_with_data(&ticketl, cgc_compare_ticket, v1);\n
    if (!v5)\n
    {\n
        cgc_list_insert_at_end(&v0[1].padding_0[28], v1);\n
        v5 = v0;\n
        *((v5 + 4290)) = *((v5 + 4290)) + 1;\n
        *((v5 + 4296)) = v1->field_4 + *((v5 + 4296));\n
        return v0;\n
    }\n
    return v5;\n
}\n
", "4211071:sub_40417f": null, "4211072:cgc_do_pay_ticket": "extern unsigned short _GLOBAL_OFFSET_TABLE_[2146];\n
extern unsigned int g_407cf4;\n
extern unsigned int g_407cfc;\n
extern unsigned int g_407d00;\n
extern unsigned int ticketl;\n
\n
int cgc_do_pay_ticket(unsigned int v5[2])\n
{\n
    unsigned short v0[2146];  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10]\n
    unsigned int v3[2];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
    unsigned short v8[2146];  // ebx\n
\n
    v4 = v6;\n
    *(&v0[0]) = &_GLOBAL_OFFSET_TABLE_[0];\n
    v3[0] = v5;\n
    g_407cfc = v3[1] + g_407cfc;\n
    g_407cf4 = v3[1] + g_407cf4;\n
    g_407d00 = g_407d00 - v3[1];\n
    v7 = cgc_list_find_node_with_data(&ticketl, cgc_compare_ticket, v3);\n
    v2 = v7;\n
    if (!v7)\n
        return v7;\n
    v1[0] = *(v2);\n
    v7 = v1[0];\n
    if (v7 != v3[0])\n
        return v7;\n
    v7 = v1[1];\n
    if (v7 <= v3[1])\n
    {\n
        v8 = v0;\n
        v8[2144] = v8[2144] + 1;\n
        v8[2145] = v8[2145] - 1;\n
        v7 = cgc_list_remove_node(&v8[1 + 18], v2);\n
    }\n
}\n
", "4211315:sub_404273": null, "4211328:cgc_do_coupon": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4276];\n
    unsigned int field_10b8;\n
    char padding_10bc[16];\n
    unsigned int field_10cc;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int couponl;\n
extern unsigned int g_407ce8;\n
extern unsigned int g_407cf4;\n
\n
int cgc_do_coupon(unsigned int *v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.field_0;\n
    v3 = v5;\n
    g_407ce8 = g_407ce8 + 1;\n
    g_407cf4 = *(v3) + g_407cf4;\n
    v7 = cgc_list_find_node_with_data(&couponl, cgc_compare_coupon, v3 + 1);\n
    v2 = v7;\n
    if (v7)\n
    {\n
        v7 = v0;\n
        v1 = &v2->field_0->field_0;\n
        *((v7 + 4300)) = *((v7 + 4300)) - *(v1);\n
        *((v7 + 4280)) = *(v1) + *((v7 + 4280));\n
        return v0;\n
    }\n
    return v7;\n
}\n
", "4211490:sub_404322": null, "4211504:cgc_do_unknown": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned short g_407cec;\n
\n
int cgc_do_unknown(unsigned int v0)\n
{\n
    g_407cec = g_407cec + 1;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4211541:sub_404355": null, "4211552:cgc_add_to_stats": "typedef struct struct_0 {\n
    char padding_0[8];\n
    void* field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_to_stats()\n
{\n
    unsigned int v3;  // [bp+0x0]\n
    struct_0 *v5;  // [bp+0xffffc]\n
\n
    v3 = v5->field_8;\n
    cgc_do_coupon(v5->field_8);\n
    return;\n
}\n
", "4211728:cgc_do_stats": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_stats(unsigned int v13[11])\n
{\n
    unsigned int v0;  // [bp-0x140]\n
    unsigned int v1;  // [bp-0x13c]\n
    unsigned int v2;  // [bp-0x138]\n
    unsigned int v3;  // [bp-0x134]\n
    unsigned int v4;  // [bp-0x130]\n
    unsigned int v5;  // [bp-0x128]\n
    unsigned int v6;  // [bp-0x124]\n
    unsigned int v7;  // [bp-0x120]\n
    unsigned int v8;  // [bp-0x11c]\n
    unsigned int v9;  // [bp-0x118]\n
    unsigned int v10;  // [bp-0x114], Other Possible Types: char\n
    char v11;  // [bp-0x110]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // ebx\n
\n
    v12 = v14;\n
    v9 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v10, 0, 260);\n
    cgc_memset(v13, 0, 44);\n
    v15 = v9;\n
    v13[10] = v15 - 10280;\n
    cgc_list_init(v15 + 4328, v15 - 11592);\n
    v16 = v9;\n
    cgc_list_foreach(v16 + 4308, v16 - 10456);\n
    cgc_list_destroy(v9 + 4328);\n
    v10 = 2;\n
    v6 = &v11;\n
    v5 = v13[4];\n
    v8 = v13[5] - v13[4];\n
    v7 = v9 - 7180;\n
    v0 = v13[1];\n
    v1 = v13[2];\n
    v2 = v13[5];\n
    v3 = v5;\n
    v4 = v8;\n
    cgc_sprintf(v6, v7);\n
    if (cgc_sendall(1, &v10, 260) == 260)\n
        return 1 CONCAT 1;\n
    return cgc__terminate();\n
}\n
", "4212192:cgc_print_cmd": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_cmd(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x120]\n
    unsigned int v1;  // [bp-0x11c]\n
    struct_0 *v2;  // [bp-0x118]\n
    unsigned int v3;  // [bp-0x114], Other Possible Types: char\n
    char v4;  // [bp-0x110]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v3, 0, 260);\n
    v2 = v6;\n
    v3 = 1;\n
    v0 = v2->field_4;\n
    cgc_sprintf(&v4, v1 - 7070);\n
    if (cgc_sendall(1, &v3, 260) == 260)\n
        return 1 CONCAT 1;\n
    return cgc__terminate();\n
}\n
", "4212442:sub_4046da": null, "4212448:cgc_read_instr": "typedef struct struct_2 {\n
    char padding_0[92];\n
    unsigned int field_5c[4];\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char *field_c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_instr()\n
{\n
    struct_2 *v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[4];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc_calloc(16);\n
    if (!v2)\n
    {\n
        v4[0] = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fread(v2, 12, v0->field_5c);\n
    if (v3 != 12)\n
    {\n
        cgc_free(v2);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v2->field_8 != -1)\n
    {\n
        v8 = cgc_malloc(v2->field_8 + 1);\n
        v2->field_c = v8;\n
        if (v8)\n
        {\n
            v1 = 0;\n
            v1 = cgc_fread_until(v2->field_c, 36, v2->field_8 + 1, v0->field_5c);\n
            if (v1 == v2->field_8)\n
            {\n
                v4 = v2;\n
                return v4;\n
            }\n
            cgc_free(v2->field_c);\n
            cgc_free(v2);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    cgc_free(v2);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4212798:sub_40483e": null, "4212800:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_407d08;\n
extern char parkl;\n
extern char stats;\n
extern char statsp;\n
\n
int main()\n
{\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v13;  // ebx\n
\n
    v4 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    g_407d08 = cgc_do_stats;\n
    statsp = &stats;\n
    cgc_list_init(&parkl, cgc_free_parking);\n
    v13 = v1;\n
    cgc_list_init(v13 + 4348, v13 - 11864);\n
    if (!cgc_send_resp(0, v1 - 7040))\n
        goto LABEL_0x4048e3;\n
    v3 = 1;\n
    return;\n
}\n
", "4213428:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}