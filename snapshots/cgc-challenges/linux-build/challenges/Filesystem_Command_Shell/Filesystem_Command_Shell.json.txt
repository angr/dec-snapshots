{"4202496:_init": "extern struct_0 *g_40d7c0;\n
\n
int _init()\n
{\n
    if (g_40d7c0)\n
    {\n
        g_40d7c0();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 46743;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 46679;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40d7bc;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40d7bc)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203094:sub_402256": null, "4203104:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203158:sub_402296": null, "4203168:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203222:sub_4022d6": null, "4203232:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203328:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203424:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203478:sub_4023d6": null, "4203488:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203562:sub_40242a": null, "4203568:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203642:sub_40247a": null, "4203648:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203742:sub_4024de": null, "4203744:cgc_receive_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a0)\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            if (cgc_receive(0, v5 + v3, a0 - v3))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v3 = v2 + v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4203920:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[146];\n
\n
int cgc_receive_until(char *v7, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1[146];  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8[146];  // ecx\n
    unsigned int v9[146];  // eax\n
    unsigned int v10[146];  // eax\n
    unsigned int v11[146];  // eax\n
    unsigned int v12[146];  // eax\n
    unsigned int v13[146];  // ecx\n
    unsigned int v14[146];  // ecx\n
    unsigned int v15[146];  // ebx\n
    unsigned int v16[146];  // eax\n
    unsigned int v17[146];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v5 = 0x200;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            v8 = v1;\n
            if (v8[144] >= v8[145] && v1[144] == 0x200)\n
            {\n
                v12 = v1;\n
                v12[144] = 0;\n
                v12[145] = 0;\n
                break;\n
            }\n
            v9 = v1;\n
            if (*(64 + &v9[0] + v9[144]) == a0)\n
            {\n
                v17 = v1;\n
                *(v7) = 0;\n
                v17[144] = v17[144] + 1;\n
                goto LABEL_402743;\n
            }\n
            else\n
            {\n
                v10 = v1;\n
                *(v7) = *(64 + &v10[0] + v10[144]);\n
                v3 += 1;\n
                v7 += 1;\n
                if (v3 == a1)\n
                {\n
                    *(v7) = 0;\n
LABEL_402743:\n
                    v6 = v3;\n
                    return v6;\n
                }\n
                v11 = v1;\n
                v11[144] = v11[144] + 1;\n
            }\n
        }\n
        v13 = v1;\n
        if (v13[145] >= v13[144])\n
        {\n
            v4 = 0x200 - v1[145];\n
        }\n
        else\n
        {\n
            v14 = v1;\n
            v4 = v14[144] - v14[145];\n
        }\n
        v15 = v1;\n
        v0 = &v2;\n
        if (cgc_receive(0, (&v15[16] + v15[145]), v4))\n
            cgc__terminate();\n
        v16 = v1;\n
        v16[145] = v2 + v16[145];\n
    }\n
}\n
", "4204364:sub_40274c": null, "4204368:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 584));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 584)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204705:sub_4028a1": null, "4204720:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[584];\n
    unsigned int field_248;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_248)\n
    {\n
        v7 = v1;\n
        v7->field_248 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204921:sub_402979": null, "4204928:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204999:sub_4029c7": null, "4205008:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[584];\n
    struct struct_1 *field_248;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
        cgc__terminate();\n
    cgc_bzero(v1->field_248);\n
    v3[0] = v1->field_248;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4205208:sub_402a98": null, "4205216:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4205300:sub_402af4": null, "4205312:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[584];\n
    struct struct_0 *field_248;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_248; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4205593:sub_402c19": null, "4205600:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205708:sub_402c8c": null, "4205712:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 584)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 584));\n
        *((v6 + v3 * 4 + 584)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205997:sub_402dad": null, "4206000:cgc_round": null, "4206146:sub_402e42": null, "4206160:cgc_floor": null, "4206316:sub_402eec": null, "4206320:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[1272];\n
    unsigned int field_4f8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_4f8 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[1144 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[1144 + 4 * (v2 + 1 & 31)]);\n
        *((1144 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4206543:sub_402fcf": null, "4206544:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4206591:sub_402fff": null, "4206592:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1144 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4206875:sub_40311b": null, "4206880:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4207068:sub_4031dc": null, "4207072:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4207173:sub_403245": null, "4207184:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4207218:sub_403272": null, "4207232:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // esi\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (true)\n
    {\n
        if (v3->field_100 >= 0x100)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, v3->field_100))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v2))\n
            {\n
                v6 = v3;\n
                v6->field_100 = v6->field_100 - *(&v2);\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            v7 = v3;\n
            v7->field_100 = v7->field_100 + 1;\n
            (&v3->field_0)[v9] = a0;\n
            v4 = a1 + 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4207463:sub_403367": null, "4207472:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4207564:sub_4033cc": null, "4207568:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4207756:sub_40348c": null, "4207760:cgc_vprintf_buffered": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x130]\n
    unsigned int v2;  // [bp-0x128]\n
    void* v3;  // [bp-0x124]\n
    struct_0 *v4;  // [bp-0x120]\n
    char v5;  // [bp-0x11c]\n
    unsigned short v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // esi\n
\n
    v11 = v13;\n
    v10 = v14;\n
    v9 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v0 = a0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, v12);\n
    if (v6 > 0)\n
    {\n
        if (cgc_transmit(1, &v5, v6))\n
        {\n
            v8 = -1;\n
            goto LABEL_40356b;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
        }\n
    }\n
    v8 = v2;\n
LABEL_40356b:\n
    return v8;\n
}\n
", "4207993:sub_403579": null, "4208000:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_403ab9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_403ab9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 10172)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4209356:sub_403acc": null, "4209360:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4209418:sub_403b0a": null, "4209424:cgc_vprintf": "int cgc_vprintf(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = cgc_WRAPPER_PUTC;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = a0;\n
    return cgc_wrapper_output(v2, v3, v1, v6);\n
}\n
", "4209521:sub_403b71": null, "4209536:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4209605:sub_403bc5": null, "4209616:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4209755:sub_403c5b": null, "4209760:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if (!(a2 & 8))\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
        else\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4210032:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4210688:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213104:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213770:sub_404c0a": null, "4213776:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4214316:sub_404e2c": null, "4214320:cgc_write": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            v0 = &v4;\n
            v2 = cgc_transmit(v6, a0 + v3, a1 - v3);\n
            if (v2)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v3 = v4 + v3;\n
        }\n
        else\n
        {\n
            v5 = a1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4214474:sub_404eca": null, "4214480:cgc_minimum": "int cgc_minimum(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4214527:sub_404eff": null, "4214528:cgc_max": "int cgc_max(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 > a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4214575:sub_404f2f": null, "4214576:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4214623:sub_404f5f": null, "4214624:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4214661:sub_404f85": null, "4214672:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4214909:sub_40507d": null, "4214912:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned long v8;  // [bp-0xc]\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 1;\n
    for (v5 = 0; *(v9) == 32; v9 += 1);\n
    if (*(v9) != 45)\n
    {\n
        v6 = 1;\n
    }\n
    else\n
    {\n
        v6 = -1;\n
        v9 += 1;\n
    }\n
    while (v9)\n
    {\n
        if (*(v9) == 46)\n
        {\n
            v5 = 1;\n
            v9 += 1;\n
            continue;\n
        }\n
        if (*(v9) < 48)\n
        {\n
LABEL_405183:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(*(v9) <= 57))\n
                goto LABEL_405183;\n
            v4 = *(v9) - 48;\n
            v11 = ftop<4> - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v12 = v11 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v12 = v11 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            v13 = v12 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t10,1] = t11\n
            [D] PutI(136:I8x8)[t10,1] = 0x01\n
            [D] PutI(136:I8x8)[t10,0] = 0x00\n
            v15 = v14 + 1;\n
            v8 = ([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan);\n
            [D] PutI(136:I8x8)[t35,0] = 0x00\n
            v1 = v4;\n
            v17 = v15 + 1 - 1;\n
            [D] PutI(72:F64x8)[t50,0] = t53\n
            [D] PutI(136:I8x8)[t50,0] = 0x01\n
            v18 = v17 - 1;\n
            [D] PutI(72:F64x8)[t63,0] = t66\n
            [D] PutI(136:I8x8)[t63,0] = 0x01\n
            [D] PutI(72:F64x8)[t73,1] = t74\n
            [D] PutI(136:I8x8)[t73,1] = 0x01\n
            [D] PutI(136:I8x8)[t73,0] = 0x00\n
            v19 = v18 + 1;\n
            v8 = ([D] GetI(136:I8x8)[t98,0] ? [D] GetI(72:F64x8)[t98,0] : nan);\n
            [D] PutI(136:I8x8)[t98,0] = 0x00\n
            v20 = v19 + 1;\n
            if (v5)\n
                v7 *= 10;\n
            v9 += 1;\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v21 = v6;\n
    v3 = v21;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t5,1] = t6\n
    [D] PutI(136:I8x8)[t5,1] = 0x01\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v8 = ([D] GetI(136:I8x8)[t30,0] ? [D] GetI(72:F64x8)[t30,0] : nan);\n
    [D] PutI(136:I8x8)[t30,0] = 0x00\n
    if (v5)\n
    {\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v21 = v7;\n
        v2 = v21;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t1,1] = t2\n
        [D] PutI(136:I8x8)[t1,1] = 0x01\n
        [D] PutI(136:I8x8)[t1,0] = 0x00\n
        v8 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
        [D] PutI(136:I8x8)[t26,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v21;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v21;\n
}\n
", "4215242:sub_4051ca": null, "4215248:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4215324:sub_40521c": null, "4215328:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4215465:sub_4052a9": null, "4215472:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215608:sub_405338": null, "4215616:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215675:sub_40537b": null, "4215680:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(a0);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        v1 = *(v2) - *(a0);\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4215833:sub_405419": null, "4215840:cgc_strncmp": "int cgc_strncmp(char *v3, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
            {\n
                v0 = 0;\n
                if (*(v3) == *(a0))\n
                    v0 = v1 < a1;\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v3 += 1;\n
            a0 += 1;\n
            v1 += 1;\n
        }\n
        v2 = *(v3) - *(a0);\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4216029:sub_4054dd": null, "4216032:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4216087:sub_405517": null, "4216096:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(&v4) = v0;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = v1;\n
    }\n
    return v2;\n
}\n
", "4216250:sub_4055ba": null, "4216256:cgc_authenticate": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_authenticate(char *v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x1a]\n
    char v7;  // [bp-0x19]\n
    unsigned int v8;  // [bp-0x18]\n
    struct_0 *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0x4347c000;\n
    v1 = 128;\n
    for (v10 = 0; v10 < v1; v10 += 1)\n
    {\n
        v8 = v10 * 32;\n
        for (v9 = 0; v9 < 7; v9 += 1)\n
        {\n
            v7 = v9[v8 + v2].field_0;\n
            v7 = ((v7 >> 31 CONCAT v7) /m 26 >> 32) + 97;\n
            *((&v5 + v9)) = v7;\n
        }\n
        v6 = 0;\n
        if (!cgc_strncmp(v12, &v5, 7))\n
        {\n
            v4 = 0;\n
            for (v9 = 14; v9 < 28; v9 += 1)\n
            {\n
                v4 = *((v2 + v8 + v9)) + v4;\n
            }\n
            if (v4 == a0)\n
            {\n
                v3 = *((v2 + v8 + 28));\n
                v3 &= 2147483647;\n
                v11 = v3;\n
                return v11;\n
            }\n
        }\n
    }\n
    if (!cgc_strcmp(v12, v0 - 10016) && (!(a0 <= 1) & a0 < 8) && !(a0 & 1))\n
    {\n
        v11 = a0;\n
        return v11;\n
    }\n
    v11 = 0;\n
    return v11;\n
}\n
", "4216689:sub_405771": null, "4216704:cgc_lookupName": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lookupName(char v11[7], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    char v4;  // [bp-0x21]\n
    char v5;  // [bp-0x1a]\n
    char v6;  // [bp-0x19]\n
    unsigned int v7;  // [bp-0x18]\n
    struct_0 *v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v11)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    v2 = 0x4347c000;\n
    v1 = 128;\n
    for (v9 = 0; v9 < v1; v9 += 1)\n
    {\n
        v7 = v9 * 32;\n
        v3 = *((v2 + v7 + 28));\n
        v3 &= 2147483647;\n
        if (a0 == v3)\n
        {\n
            for (v8 = 0; v8 < 7; v8 += 1)\n
            {\n
                v6 = v8[v7 + v2].field_0;\n
                v6 = ((v6 >> 31 CONCAT v6) /m 26 >> 32) + 97;\n
                *((&v4 + v8)) = v6;\n
            }\n
            v5 = 0;\n
            cgc_strcpy(v11, &v4);\n
            v10 = 0;\n
            return v10;\n
        }\n
    }\n
    if (a0 > 2 && a0 < 8)\n
    {\n
        cgc_strcpy(v11, v0 - 10016);\n
        v11[5] = a0 + 48;\n
        v11[6] = 0;\n
        v10 = 0;\n
        return v10;\n
    }\n
    v10 = -1;\n
    return v10;\n
}\n
", "4217058:sub_4058e2": null, "4217072:cgc_makeFile": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_makeFile(unsigned int v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v4 < 2)\n
    {\n
        cgc_printf(&v1[8].padding_0[858]);\n
        v3 = -1;\n
        return v3;\n
    }\n
    v0 = v1->field_474;\n
    v2 = cgc_createFile(a0->field_4, 2);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_printf(&v1[8].padding_0[843]);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4217239:sub_405997": null, "4217248:cgc_makeMemFile": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_makeMemFile(unsigned int v6, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v6 < 3)\n
    {\n
        cgc_printf(&v1[8].padding_0[858]);\n
        v5 = -1;\n
        return v5;\n
    }\n
    v3 = cgc_atoi(a0->field_8);\n
    if (v3 >= 0 && v3 <= 0x14000)\n
    {\n
        v2 = cgc_malloc(v3);\n
        if (v2 < 0)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        cgc_bzero(v2, v3);\n
        v0 = v1->field_474;\n
        v4 = cgc_makeMemoryFile(a0->field_4, v2, v3, 0);\n
        if (!v4)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        cgc_printf(&v1[8].padding_0[843]);\n
        v5 = v4;\n
        return v5;\n
    }\n
    v5 = -1;\n
    return v5;\n
}\n
", "4217550:sub_405ace": null, "4217552:cgc_eraseFile": "typedef struct struct_1 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_eraseFile(unsigned int v6, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_1 *v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v6 < 2)\n
    {\n
        cgc_printf(&v2[8].padding_0[858]);\n
        v5 = -1;\n
        return v5;\n
    }\n
    v0 = v2->field_474;\n
    v3 = cgc_openFile(a0->field_4);\n
    v1 = v3;\n
    if (v1 == -14)\n
    {\n
        cgc_printf(&v2[8].padding_0[836]);\n
    }\n
    else if (v1 == -2)\n
    {\n
        cgc_printf(&v2[8].padding_0[798]);\n
    }\n
    else if (v1 == -1)\n
    {\n
        v0 = a0->field_4;\n
        cgc_printf(&v2[8].padding_0[817]);\n
    }\n
    if (v3 < 0)\n
    {\n
        v5 = v3;\n
        return v5;\n
    }\n
    v0 = v2->field_474;\n
    v4 = cgc_deleteFile(v3);\n
    if (v4 >= 0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = a0->field_4;\n
    cgc_printf(&v2[8].padding_0[778]);\n
    cgc_closeFile(v3);\n
    v5 = v4;\n
    return v5;\n
}\n
", "4217919:sub_405c3f": null, "4217920:cgc_listFiles": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40d63c;\n
extern unsigned int g_40d640;\n
extern unsigned int g_40d644;\n
extern unsigned int g_40d648;\n
extern void g_40d64c;\n
\n
int cgc_listFiles(unsigned int v11, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x4c]\n
    char v2;  // [bp-0x46]\n
    char v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = g_40d63c;\n
    v5 = g_40d640;\n
    v6 = g_40d644;\n
    v7 = g_40d648;\n
    memcpy(&v3, &g_40d64c, 20);\n
    v8 = 0;\n
    if (v11 <= 1)\n
        v9 = cgc_findFiles(v1 - 9753);\n
    else\n
        v9 = cgc_findFiles(a0->field_4);\n
    cgc_printf(v1 - 9884);\n
    cgc_printf(v1 - 9818);\n
    for (; !v9; v9 = cgc_findNextFile(v8, &(*(v8))[1].field_4, *(v8)->field_c, &v2, (&v4)[*(v8)->field_8]))\n
    {\n
        if (cgc_lookupName(&v2, *(v8)->field_4) == -1)\n
            cgc_strcpy(&v2, v1 - 9752);\n
        v0 = *(&(&v3)[4 * *(v8)->field_10]);\n
        cgc_printf(v1 - 9744);\n
    }\n
    cgc_printf(v1 - 9754);\n
    return 0;\n
}\n
", "4218327:sub_405dd7": null, "4218336:cgc_overwriteFile": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_overwriteFile(unsigned int v9, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    char v1;  // [bp-0x425]\n
    struct_2 *v2;  // [bp-0x424]\n
    unsigned int v3;  // [bp-0x420]\n
    struct_0 *v4;  // [bp-0x41c]\n
    char v5;  // [bp-0x415]\n
    char v6;  // [bp-0x15]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v9 < 2)\n
    {\n
        cgc_printf(&v4[8].padding_0[858]);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v6 = cgc_openFile(a0->field_4);\n
    if (v6 < 0)\n
    {\n
        v3 = v6;\n
        if (v3 == -14)\n
        {\n
            cgc_printf(&v4[8].padding_0[836]);\n
        }\n
        else if (v3 == -2)\n
        {\n
            cgc_printf(&v4[8].padding_0[561]);\n
        }\n
        else if (v3 != -1)\n
        {\n
            cgc_printf(&v4[8].padding_0[525]);\n
        }\n
        else\n
        {\n
            cgc_printf(&v4[8].padding_0[817]);\n
        }\n
        v8 = v6;\n
        return v8;\n
    }\n
    else\n
    {\n
        v7 = cgc_truncateFile(v6);\n
        if (v7 < 0)\n
        {\n
            if (v7 != -14)\n
                cgc_printf(&v4[8].padding_0[478]);\n
            else\n
                cgc_printf(&v4[8].padding_0[507]);\n
            cgc_closeFile(v6);\n
            v8 = v7;\n
            return v8;\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                cgc_receive_until(&v5, 10, 0x400);\n
                if (!cgc_strlen(&v5))\n
                {\n
                    cgc_closeFile();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                v1 = v6;\n
                v2 = &v5;\n
                v0 = v4->field_474;\n
                v7 = cgc_writeFile(v1, v2, cgc_strlen(&v5));\n
                if (v7 < 0)\n
                {\n
                    cgc_printf(&v4[8].padding_0[478]);\n
                    cgc_closeFile(v6);\n
                    v8 = v7;\n
                    return v8;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4219100:sub_4060dc": null, "4219104:cgc_dumpFile": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dumpFile(unsigned int v8, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x428]\n
    unsigned int v1;  // [bp-0x424]\n
    struct_0 *v2;  // [bp-0x420]\n
    char v3;  // [bp-0x41c]\n
    char v4;  // [bp-0x415]\n
    char v5;  // [bp-0x15]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v8 < 2)\n
    {\n
        cgc_printf(&v2[8].padding_0[858]);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = cgc_openFile(a0->field_4);\n
    if (v5 < 0)\n
    {\n
        v1 = v5;\n
        if (v1 == -14)\n
        {\n
            cgc_printf(&v2[8].padding_0[836]);\n
        }\n
        else if (v1 == -2)\n
        {\n
            cgc_printf(&v2[8].padding_0[457]);\n
        }\n
        else if (v1 != -1)\n
        {\n
            cgc_printf(&v2[8].padding_0[525]);\n
        }\n
        else\n
        {\n
            cgc_printf(&v2[8].padding_0[817]);\n
        }\n
        v7 = v5;\n
        return v7;\n
    }\n
    else\n
    {\n
        cgc_bzero(&v4, 0x400);\n
        v0 = v2->field_474;\n
        v6 = cgc_readFile(v5, &v4, 0x400, 0, &v3);\n
        if (v6 < 0 && v6 != -7)\n
        {\n
            if (v6 != -14)\n
                cgc_printf(&v2[8].padding_0[391]);\n
            else\n
                cgc_printf(&v2[8].padding_0[419]);\n
            cgc_closeFile(v5);\n
            v7 = v6;\n
            return v7;\n
        }\n
        for (v6 = 0; !v6; v6 = cgc_readFile(v5, &v4, 0x400, 0, &v3))\n
        {\n
            cgc_write(1, &v4, *(&v3));\n
            cgc_bzero(&v4, 0x400);\n
            v0 = v2->field_474;\n
        }\n
        cgc_closeFile();\n
        cgc_printf(&v2[8].padding_0[602]);\n
        if (v6 == -7)\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        cgc_printf(&v2[8].padding_0[368]);\n
        v7 = -1;\n
        return v7;\n
    }\n
}\n
", "4219921:sub_406411": null, "4219936:cgc_readFromEnd": "typedef struct struct_1 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readFromEnd(unsigned int v11, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x438]\n
    char v1;  // [bp-0x431]\n
    unsigned int v2;  // [bp-0x430]\n
    unsigned int v3;  // [bp-0x42c]\n
    struct_1 *v4;  // [bp-0x428]\n
    char v5;  // [bp-0x420]\n
    char v6;  // [bp-0x41c]\n
    char v7;  // [bp-0x415]\n
    char v8;  // [bp-0x15]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x10]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v11 < 3)\n
    {\n
        cgc_printf(&v4[8].padding_0[858]);\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (!cgc_statusFile(a0->field_4))\n
    {\n
        v8 = cgc_openFile(a0->field_4);\n
        if (v8 < 0)\n
        {\n
            v3 = v8;\n
            if (v3 == -14)\n
            {\n
                cgc_printf(&v4[8].padding_0[836]);\n
            }\n
            else if (v3 != -1)\n
            {\n
                cgc_printf(&v4[8].padding_0[525]);\n
            }\n
            else\n
            {\n
                cgc_printf(&v4[8].padding_0[817]);\n
            }\n
            v10 = v8;\n
            return v10;\n
        }\n
        else\n
        {\n
            v1 = v8;\n
            v2 = *(&v5);\n
            cgc_atoi(a0->field_8);\n
            cgc_fileReadPosition(v1);\n
            cgc_bzero(&v7, 0x400);\n
            v0 = v4->field_474;\n
            v9 = cgc_readFile(v8, &v7, 0x400, 0, &v6);\n
            if (v9 < 0 && v9 != -7)\n
            {\n
                if (v9 != -14)\n
                {\n
                    cgc_printf(&v4[8].padding_0[391]);\n
                    cgc_printf(&v4[8].padding_0[324]);\n
                }\n
                else\n
                {\n
                    cgc_printf(&v4[8].padding_0[419]);\n
                }\n
                cgc_closeFile(v8);\n
                v10 = v9;\n
                return v10;\n
            }\n
            v9 = 0;\n
            if (*(&v6) > 0)\n
                cgc_write(1, &v7, *(&v6));\n
            while (!v9)\n
            {\n
                cgc_bzero(&v7, 0x400);\n
                v0 = v4->field_474;\n
                v9 = cgc_readFile(v8, &v7, 0x400, 0, &v6);\n
                cgc_write(1, &v7, *(&v6));\n
            }\n
            cgc_closeFile();\n
            cgc_printf(&v4[8].padding_0[602]);\n
            if (v9 == -7)\n
            {\n
                v10 = 0;\n
                return v10;\n
            }\n
            cgc_printf(&v4[8].padding_0[368]);\n
            v10 = -1;\n
            return v10;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(&v4[8].padding_0[348]);\n
        v10 = -1;\n
        return v10;\n
    }\n
}\n
", "4220946:sub_406812": null, "4220960:cgc_readFirstN": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readFirstN(unsigned int v13, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x438]\n
    char v1;  // [bp-0x433]\n
    char v2;  // [bp-0x432]\n
    char v3;  // [bp-0x431]\n
    unsigned int v4;  // [bp-0x430]\n
    struct_0 *v5;  // [bp-0x42c]\n
    void* v6;  // [bp-0x428], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x424]\n
    char v8;  // [bp-0x420]\n
    char v9;  // [bp-0x419]\n
    char v10;  // [bp-0x19]\n
    void* v11;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x14]\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v13 < 3)\n
    {\n
        cgc_printf(&v5[8].padding_0[858]);\n
        v12 = -1;\n
        return v12;\n
    }\n
    v10 = cgc_openFile(a0->field_4);\n
    if (v10 < 0)\n
    {\n
        v4 = v10;\n
        if (v4 == -14)\n
        {\n
            cgc_printf(&v5[8].padding_0[836]);\n
        }\n
        else if (v4 != -1)\n
        {\n
            cgc_printf(&v5[8].padding_0[525]);\n
        }\n
        else\n
        {\n
            cgc_printf(&v5[8].padding_0[817]);\n
        }\n
        v12 = v10;\n
        return v12;\n
    }\n
    else\n
    {\n
        v7 = cgc_atoi(a0->field_8);\n
        if (!v7)\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
        v6 = 0;\n
        cgc_bzero(&v9, 0x400);\n
        v3 = v10;\n
        v0 = v5->field_474;\n
        v11 = cgc_readFile(v3, &v9, cgc_minimum(0x400, v7 - v6), 0, &v8);\n
        if (v11 < 0 && v11 != -7)\n
        {\n
            if (v11 != -14)\n
            {\n
                cgc_printf(&v5[8].padding_0[391]);\n
                cgc_printf(&v5[8].padding_0[324]);\n
            }\n
            else\n
            {\n
                cgc_printf(&v5[8].padding_0[419]);\n
            }\n
            cgc_closeFile(v10);\n
            v12 = v11;\n
            return v12;\n
        }\n
        v11 = 0;\n
        if (*(&v8) > 0)\n
        {\n
            v6 = *(&v8) + v6;\n
            cgc_write(1, &v9, *(&v8));\n
        }\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (!v11)\n
                v2 = v6 < v7;\n
            if (!(v2 & 1))\n
                break;\n
            cgc_bzero(&v9, 0x400);\n
            v1 = v10;\n
            v0 = v5->field_474;\n
            v11 = cgc_readFile(v1, &v9, cgc_minimum(0x400, v7 - v6), 0, &v8);\n
            cgc_write(1, &v9, *(&v8));\n
            v6 = *(&v8) + v6;\n
        }\n
        cgc_closeFile();\n
        cgc_printf(&v5[8].padding_0[602]);\n
        if (v11 != -7 && v11)\n
        {\n
            cgc_printf(&v5[8].padding_0[368]);\n
            v12 = -1;\n
            return v12;\n
        }\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4222056:sub_406c68": null, "4222064:cgc_copyFile": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_copyFile(unsigned int v9, unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x438]\n
    unsigned int v1;  // [bp-0x42c]\n
    struct_0 *v2;  // [bp-0x428]\n
    char v3;  // [bp-0x41c]\n
    char v4;  // [bp-0x416]\n
    char v5;  // [bp-0x16]\n
    char v6;  // [bp-0x15]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x10]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v9 < 3)\n
    {\n
        cgc_printf(&v2[8].padding_0[858]);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v6 = cgc_openFile(a0[1]);\n
    if (v6 < 0)\n
    {\n
        v1 = v6;\n
        if (v1 == -14)\n
        {\n
            cgc_printf(&v2[8].padding_0[836]);\n
        }\n
        else\n
        {\n
            if (v1 != -1)\n
                cgc_printf(&v2[8].padding_0[311]);\n
            else\n
                cgc_printf(&v2[8].padding_0[817]);\n
        }\n
        v8 = v6;\n
        return v8;\n
    }\n
    else if (!cgc_statusFile(a0[2]))\n
    {\n
        cgc_printf(&v2[8].padding_0[274]);\n
        cgc_closeFile(v6);\n
        v8 = -1;\n
        return v8;\n
    }\n
    else\n
    {\n
        v7 = cgc_createFile(a0[2], 2);\n
        if (v7)\n
        {\n
            cgc_printf(&v2[8].padding_0[293]);\n
            v8 = -1;\n
            return v8;\n
        }\n
        v5 = cgc_openFile(a0[2]);\n
        if (v5 < 0)\n
        {\n
            cgc_printf(&v2[8].padding_0[250]);\n
            cgc_closeFile(v6);\n
            v8 = -1;\n
            return v8;\n
        }\n
        v7 = 0;\n
        while (!v7)\n
        {\n
            cgc_bzero(&v4, 0x400);\n
            v0 = v2->field_474;\n
            v7 = cgc_readFile(v6, &v4, 0x400, 0, &v3);\n
            if (*(&v3) > 0)\n
                cgc_writeFile(v5, &v4, *(&v3));\n
        }\n
        cgc_closeFile();\n
        if (v7 == -7)\n
        {\n
            cgc_closeFile();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (v7 == -14)\n
        {\n
            cgc_printf(&v2[8].padding_0[419]);\n
            v7 = cgc_deleteFile(v5);\n
            cgc_closeFile(v5);\n
            v8 = -1;\n
            return v8;\n
        }\n
        else\n
        {\n
            v7 = cgc_deleteFile(v5);\n
            cgc_printf(&v2[8].padding_0[219]);\n
            cgc_closeFile();\n
            v8 = -1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4223126:sub_407096": null, "4223136:cgc_setPermissions": "typedef struct struct_1 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_setPermissions(unsigned int v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct_1 *v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x16]\n
    char v4;  // [bp-0x15]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v7 < 3)\n
    {\n
        cgc_printf(&v2[8].padding_0[858]);\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = cgc_atoi(a0->field_8);\n
    if (v4 > 3)\n
    {\n
        cgc_printf(&v2[8].padding_0[858]);\n
        v6 = -1;\n
        return v6;\n
    }\n
    v3 = cgc_openFile(a0->field_4);\n
    if (v3 < 0)\n
    {\n
        v1 = v3;\n
        if (v1 == -14)\n
        {\n
            cgc_printf(&v2[8].padding_0[836]);\n
            v6 = v3;\n
            return v6;\n
        }\n
        else if (v1 == -1)\n
        {\n
            cgc_printf(&v2[8].padding_0[817]);\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v0 = v2->field_474;\n
    v5 = cgc_setPerms(v3, v4);\n
    if (!v5)\n
    {\n
        cgc_closeFile();\n
        v6 = 0;\n
        return v6;\n
    }\n
    cgc_closeFile();\n
    cgc_printf(&v2[8].padding_0[836]);\n
    v6 = -1;\n
    return v6;\n
}\n
", "4223562:sub_40724a": null, "4223568:cgc_initFileSystem": "typedef struct struct_0 {\n
    char padding_0[1536];\n
    unsigned int field_600;\n
    unsigned int field_604;\n
    struct struct_1 *field_608;\n
    char padding_60c[400];\n
    struct struct_2 *field_79c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initFileSystem(unsigned int v6, unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // ebx\n
    struct_0 *v8;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if ((0 CONCAT a0) /m v6 >> 32)\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
    v3 = (0 CONCAT a1) /m a0;\n
    v4 = (0 CONCAT a1) /m v6;\n
    if (v3 > a0 << 3)\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
    v0 = &v1->field_604;\n
    v2 = cgc_allocate(a1, 0);\n
    if (v2 == 3)\n
    {\n
        v5 = -0x4;\n
        return v5;\n
    }\n
    else if (!v2)\n
    {\n
        cgc_bzero(v1->field_604, a1);\n
        v7 = v1;\n
        v7->field_608 = v7->field_604;\n
        v7->field_608->field_0 = 1;\n
        v7->field_608->field_4 = a1;\n
        v7->field_608->field_8 = a0;\n
        v7->field_608->field_c = v3;\n
        v7->field_608->field_10 = 2;\n
        v7->field_608->field_14 = 1;\n
        v7->field_608->field_18 = a0 >> 6;\n
        v7->field_608->field_1c = a0 - 8 >> 2;\n
        v7->field_608->field_20 = 0;\n
        v7->field_600 = v7->field_604 + a0;\n
        v7->field_79c = v7->field_604 + a0 * 2;\n
        cgc_setBlockInUse(0);\n
        cgc_setBlockInUse();\n
        cgc_setBlockInUse();\n
        v8 = v1;\n
        v8->field_79c->field_0 = a0 - 8 >> 6;\n
        v8->field_79c->field_2 = 0;\n
        cgc_bzero(&v8->padding_60c, 0x190);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
}\n
", "4224072:sub_407448": null, "4224080:cgc_setBlockInUse": "extern struct_0 *freeList;\n
\n
int cgc_setBlockInUse(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = v2 >> 3;\n
    v0 = v2 & 7;\n
    v3 = freeList;\n
    v4 = v1;\n
    v3[v4] = v3[v4] | (1 << (v0 & 31));\n
    return freeList;\n
}\n
", "4224154:sub_40749a": null, "4224160:cgc_statusFile": "typedef struct struct_0 {\n
    char padding_0[1948];\n
    struct struct_1 *field_79c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_statusFile(char *v3, unsigned int a0[2])\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v3)\n
    {\n
        v2 = -6;\n
        return v2;\n
    }\n
    else if (v0->field_79c)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= v0->field_79c->field_0)\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            if (!cgc_strcmp(26 + v0->field_79c + 0x40 * v1, v3))\n
                break;\n
            v1 += 1;\n
        }\n
        if (a0)\n
        {\n
            v4 = v0;\n
            a0[1] = *(&v4->field_79c[8 + 32 * v1]);\n
            a0[0] = *(&v4->field_79c[10 + 32 * v1]);\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -9;\n
        return v2;\n
    }\n
}\n
", "4224426:sub_4075aa": null, "4224432:cgc_openFile": "typedef struct struct_1 {\n
    char padding_0[1544];\n
    struct struct_0 *field_608;\n
    char padding_60c[400];\n
    struct struct_2 *field_79c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_openFile(char *v4, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0xd]\n
    struct_1 *v5;  // eax\n
    struct_1 *v6;  // ecx\n
    struct_1 *v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        v3 = 250;\n
        return v3;\n
    }\n
    else if (v0->field_79c)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (v2 >= v0->field_79c->field_0)\n
            {\n
                v3 = 255;\n
                return v3;\n
            }\n
            if (!cgc_strcmp(26 + v0->field_79c + 0x40 * v2, v4))\n
                break;\n
            v2 += 1;\n
        }\n
        if (a0 != 1 && *(&v0->field_79c[4 + 32 * v2]) != a0 && !v0->field_79c[6 + 32 * v2].field_0)\n
        {\n
            v3 = 242;\n
            return v3;\n
        }\n
        for (v1 = 0; v1 < 10; v1 += 1)\n
        {\n
            if (*(&v0->padding_60c[40 * v1]) == 1 && *(&v0->padding_60c[4 + 40 * v1]) == v2)\n
            {\n
                v3 = 243;\n
                return v3;\n
            }\n
        }\n
        for (v1 = 0; v1 < 10; v1 += 1)\n
        {\n
            if (!*(&v0->padding_60c[40 * v1]))\n
                break;\n
        }\n
        if (v1 == 10)\n
        {\n
            v3 = 246;\n
            return v3;\n
        }\n
        v5 = v0;\n
        *(&v5->padding_60c[40 * v1]) = 1;\n
        *(&v5->padding_60c[4 + 40 * v1]) = v2;\n
        *(&v5->padding_60c[8 + 40 * v1]) = 0;\n
        *(&v5->padding_60c[16 + 40 * v1]) = 0;\n
        *(&v5->padding_60c[12 + 40 * v1]) = 0;\n
        *(&v5->padding_60c[20 + 40 * v1]) = 0;\n
        *(&v5->padding_60c[24 + 40 * v1]) = *(&v5->field_79c[8 + 32 * v2]);\n
        *(&v5->padding_60c[28 + 40 * v1]) = *(&v5->field_79c[4 + 32 * v2]);\n
        v5->padding_60c[32 + 40 * v1] = v5->field_79c[6 + 32 * v2].field_0;\n
        *(&v5->padding_60c[36 + 40 * v1]) = *(&v5->field_79c[10 + 32 * v2]);\n
        if (*(&v5->field_79c[8 + 32 * v2]) > 0)\n
        {\n
            v6 = v0;\n
            v7 = v0;\n
            *(&v7->padding_60c[16 + 40 * v1]) = (0 CONCAT *(&v6->field_79c[8 + 32 * v2])) /m v6->field_608->field_8;\n
            *(&v7->padding_60c[20 + 40 * v1]) = *(&v7->field_79c[8 + 32 * v2]);\n
        }\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 247;\n
        return v3;\n
    }\n
}\n
", "4225267:sub_4078f3": null, "4225280:cgc_setPerms": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_setPerms(char v2, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 > 10)\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (*((v0 + 1548 + v2 * 40)))\n
    {\n
        if (a1 != *((v0 + 1548 + v2 * 40 + 28)) && a1 != 1)\n
        {\n
            v1 = -14;\n
            return v1;\n
        }\n
        if (a0 > 3)\n
        {\n
            v1 = -6;\n
            return v1;\n
        }\n
        *((v0 + 1548 + v2 * 40 + 32)) = a0;\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
}\n
", "4225490:sub_4079d2": null, "4225504:cgc_closeFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_closeFile(char v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 > 10)\n
    {\n
        v2 = -11;\n
        return v2;\n
    }\n
    else if (*((v1 + 1548 + v3 * 40)))\n
    {\n
        v0 = v3;\n
        cgc_flushFile();\n
        v4 = v1;\n
        *((v4 + 1548 + v3 * 40)) = 0;\n
        *((v4 + 1548 + v3 * 40 + 4)) = 0;\n
        *((v4 + 1548 + v3 * 40 + 20)) = 0;\n
        *((v4 + 1548 + v3 * 40 + 12)) = 0;\n
        *((v4 + 1548 + v3 * 40 + 24)) = 0;\n
        *((v4 + 1548 + v3 * 40 + 32)) = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -11;\n
        return v2;\n
    }\n
}\n
", "4225755:sub_407adb": null, "4225760:cgc_flushFile": "typedef struct struct_0 {\n
    char padding_0[1948];\n
    unsigned int field_79c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flushFile(char v2)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v3;  // edx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v2 > 10)\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (!*(&v0->padding_0[1548 + 40 * v2]))\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (v0->field_79c)\n
    {\n
        v3 = v0;\n
        *((v3->field_79c + 4 + *(&v3->padding_0[1552 + 40 * v2]) * 64 + 12)) = *(&v3->padding_0[1572 + 40 * v2]);\n
        *((v3->field_79c + 4 + *(&v3->padding_0[1552 + 40 * v2]) * 64 + 8)) = v3->padding_0[1580 + 40 * v2];\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -9;\n
        return v1;\n
    }\n
}\n
", "4226004:sub_407bd4": null, "4226016:cgc_createFile": "typedef struct struct_2 {\n
    char padding_0[1544];\n
    struct struct_1 *field_608;\n
    char padding_60c[400];\n
    struct struct_0 *field_79c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_createFile(char *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_2 *v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    struct_2 *v6;  // ebx\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        v4 = -6;\n
        return v4;\n
    }\n
    else if (!v1->field_79c)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    else if (cgc_statusFile(v5, NULL))\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            if (v3 >= v1->field_608->field_18)\n
            {\n
                v4 = -10;\n
                return v4;\n
            }\n
            if (!*(28 + &v1->field_79c->padding_0[0] + 0x40 * v3))\n
                break;\n
            v3 += 1;\n
        }\n
        v0 = v5;\n
        cgc_strncpy(&v1->field_79c[16 * v3].padding_0[1 + 24], v0, 40);\n
        v6 = v1;\n
        *(&v6->field_79c[4 + 16 * v3].padding_0) = 0;\n
        *(&v6->field_79c[5 + 16 * v3].padding_0) = a0;\n
        *(&v6->field_79c[2 + 16 * v3].padding_0) = a1;\n
        v6->field_79c[3 + 16 * v3].padding_0[0] = 0;\n
        if (cgc_findFreeBlock(&v2, v0))\n
        {\n
            v4 = -5;\n
            return v4;\n
        }\n
        cgc_eraseBlock();\n
        cgc_setBlockInUse(*(&v2));\n
        *(&v1->field_79c[6 + 16 * v3].padding_0) = *(&v2);\n
        v7 = v1->field_79c;\n
        v7->field_2 = v7->field_2 + 1;\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -12;\n
        return v4;\n
    }\n
}\n
", "4226502:sub_407dc6": null, "4226512:cgc_findFreeBlock": "typedef struct struct_0 {\n
    char padding_0[1536];\n
    unsigned int field_600;\n
    char padding_604[4];\n
    struct struct_1 *field_608;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_findFreeBlock(unsigned int *v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        v4 = -6;\n
        return v4;\n
    }\n
    for (v3 = 0; v3 < v0->field_608->field_8; v3 += 1)\n
    {\n
        if (*((v0->field_600 + v3)) != 255)\n
            break;\n
    }\n
    if (v3 >= v0->field_608->field_c)\n
    {\n
        v4 = -5;\n
        return v4;\n
    }\n
    v1 = *((v0->field_600 + v3));\n
    for (v2 = 0; v2 < 8; v2 += 1)\n
    {\n
        if (!(v1 & 1))\n
            break;\n
        v1 >>= 1;\n
    }\n
    *(v5) = v3 * 8 + v2;\n
    if (*(v5) >= v0->field_608->field_c)\n
    {\n
        v4 = -5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4226819:sub_407f03": null, "4226832:cgc_eraseBlock": "extern unsigned int fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
int cgc_eraseBlock(unsigned int v1)\n
{\n
    char *v0;  // [bp-0xc]\n
\n
    v0 = masterBlocks->field_8;\n
    return cgc_bzero(fileSystem + v1 * v0, v0);\n
}\n
", "4226902:sub_407f56": null, "4226912:cgc_writeFile": "typedef struct struct_1 {\n
    char padding_0[1544];\n
    struct struct_0 *field_608;\n
    char padding_60c[400];\n
    unsigned int field_79c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_writeFile(char v13, char *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    struct_1 *v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    unsigned int v3;  // [bp-0x48]\n
    char v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x30]\n
    char v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    struct_1 *v14;  // eax\n
    struct_1 *v15;  // ebx\n
    struct_1 *v16;  // eax\n
    struct_2 *v18;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v13 > 10)\n
    {\n
        v12 = -11;\n
        return v12;\n
    }\n
    else if (!*(&v1->padding_60c[40 * v13]))\n
    {\n
        v12 = -11;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        v12 = -6;\n
        return v12;\n
    }\n
    else if (a1)\n
    {\n
        if (a2 != *(&v1->padding_60c[28 + 40 * v13]) && a2 != 1 && !(v1->padding_60c[32 + 40 * v13] & 1))\n
        {\n
            v12 = -14;\n
            return v12;\n
        }\n
        if (*(&v1->padding_60c[36 + 40 * v13]) > 2)\n
        {\n
            v2 = cgc_writeMemoryFile(v13, a0);\n
            v12 = v2;\n
            return v12;\n
        }\n
        v14 = v1;\n
        v11 = a1;\n
        v9 = *(&v14->padding_60c[20 + 40 * v13]);\n
        v8 = v14->field_608->field_8;\n
        while (true)\n
        {\n
            if (v11 > 0)\n
            {\n
                v10 = (0 CONCAT v9) /m v8 >> 32;\n
                if (!v10 && v9 == *(&v1->padding_60c[24 + 40 * v13]) && cgc_addNewBlock() == -1)\n
                {\n
                    v12 = -5;\n
                    return v12;\n
                }\n
                v15 = v1;\n
                v5 = *(&v15->padding_60c[4 + 40 * v13]);\n
                if (cgc_readBlock(*((v15->field_79c + 4 + (v5 << 6) + 20))))\n
                {\n
                    v12 = -8;\n
                    return v12;\n
                }\n
                v0 = *(&v4);\n
                v6 = *((v0 + (0 CONCAT v9) /m v8 * 4));\n
                cgc_deallocate(*(&v4));\n
                v3 = cgc_minimum(v8 - v10, v11);\n
                if (cgc_readBlock(v6))\n
                {\n
                    v12 = -8;\n
                    return v12;\n
                }\n
                cgc_memcpy(*(&v7) + v10, a0, v3);\n
                cgc_writeBlock(*(&v7));\n
                cgc_deallocate(*(&v7));\n
                v16 = v1;\n
                v11 -= v3;\n
                v18 = &v16->padding_60c[40 * v13];\n
                v18->field_18 = v3 - (*(&v16->padding_60c[24 + 40 * v13]) - v9) + v18->field_18;\n
                v9 = v3 + v9;\n
            }\n
            else\n
            {\n
                *(&v1->padding_60c[20 + 40 * v13]) = v9;\n
                v12 = 0;\n
                return v12;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v12 = -6;\n
        return v12;\n
    }\n
}\n
", "4227748:sub_4082a4": null, "4227760:cgc_writeMemoryFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char fileCursors;\n
extern unsigned int rootDir;\n
\n
int cgc_writeMemoryFile(char v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char **v1;  // [bp-0x18]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_readBlock(*((rootDir + 4 + (*(&(&fileCursors)[4 + 40 * v5]) << 6) + 20))))\n
    {\n
        v3 = -8;\n
        return v3;\n
    }\n
    v1 = *(&v2);\n
    if (a1 > *((v0 + 1548 + v5 * 40 + 24)))\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    cgc_memcpy(*(v1), a0, a1);\n
    *((v0 + 1548 + v5 * 40 + 24)) = a1;\n
    cgc_deallocate(*(&v2));\n
    v3 = 0;\n
    return v3;\n
}\n
", "4228004:sub_4083a4": null, "4228016:cgc_addNewBlock": "typedef struct struct_1 {\n
    char padding_0[1544];\n
    struct struct_2 *field_608;\n
    char padding_60c[400];\n
    unsigned int field_79c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[16];\n
    unsigned int field_1c;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addNewBlock(char v8)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned int\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    struct_1 *v9;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v8 > 10)\n
    {\n
        v7 = -11;\n
        return v7;\n
    }\n
    else if (*(&v1->padding_60c[40 * v8]))\n
    {\n
        v9 = v1;\n
        v4 = *(&v9->padding_60c[4 + 40 * v8]);\n
        v0 = &v5;\n
        v2 = cgc_readBlock(*((v9->field_79c + 4 + v4 * 64 + 20)));\n
        if (v2)\n
        {\n
            v7 = -8;\n
            return v7;\n
        }\n
        for (v3 = 0; v3 < v1->field_608->field_1c; v3 += 1)\n
        {\n
            if (!*((*(&v5) + (v3 << 2))))\n
                break;\n
        }\n
        if (v3 == v1->field_608->field_1c)\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
        else if (!cgc_findFreeBlock(&v6))\n
        {\n
            cgc_setBlockInUse(v6);\n
            *((*(&v5) + v3 * 4)) = v6;\n
            v0 = *((v1->field_79c + 4 + v4 * 64 + 20));\n
            cgc_writeBlock(*(&v5));\n
            v0 = v1->field_608->field_8;\n
            cgc_deallocate(*(&v5));\n
            v7 = v6;\n
            return v7;\n
        }\n
        else\n
        {\n
            v7 = -5;\n
            return v7;\n
        }\n
    }\n
    else\n
    {\n
        v7 = -11;\n
        return v7;\n
    }\n
}\n
", "4228431:sub_40854f": null, "4228432:cgc_readBlock": "typedef struct struct_1 {\n
    char padding_0[1540];\n
    unsigned int field_604;\n
    struct struct_0 *field_608;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int fileSystem;\n
\n
int cgc_readBlock(unsigned int v5, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!fileSystem)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    v2 = v0->field_608->field_8;\n
    v1 = cgc_allocate(v2, 0);\n
    if (v1 == 3)\n
    {\n
        v4 = -0x4;\n
        return v4;\n
    }\n
    else if (!v1)\n
    {\n
        cgc_memcpy(*(&v3), v0->field_604 + v5 * v2, v2);\n
        *(a0) = *(&v3);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -3;\n
        return v4;\n
    }\n
}\n
", "4228639:sub_40861f": null, "4228640:cgc_writeBlock": "typedef struct struct_1 {\n
    char padding_0[1540];\n
    unsigned int field_604;\n
    struct struct_0 *field_608;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int fileSystem;\n
\n
int cgc_writeBlock(char *v3, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_1 *v4;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!fileSystem)\n
    {\n
        v2 = -9;\n
        return v2;\n
    }\n
    v4 = v0;\n
    v1 = v4->field_608->field_8;\n
    cgc_memcpy(v4->field_604 + a0 * v1, v3, v1);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4228761:sub_408699": null, "4228768:cgc_readFile": "typedef struct struct_1 {\n
    char padding_0[1544];\n
    struct struct_0 *field_608;\n
    char padding_60c[400];\n
    unsigned int field_79c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readFile(char v18, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int *v0;  // [bp-0x60]\n
    struct_1 *v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    unsigned int v5;  // [bp-0x48]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    unsigned int v8;  // [bp-0x3c]\n
    unsigned int v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x2c]\n
    unsigned int v13;  // [bp-0x28]\n
    unsigned int v14;  // [bp-0x24]\n
    void* v15;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x10]\n
    struct_1 *v19;  // eax\n
    struct_1 *v20;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    *(a3) = 0;\n
    if (v18 > 10)\n
    {\n
        v17 = -11;\n
        return v17;\n
    }\n
    else if (!*(&v1->padding_60c[40 * v18]))\n
    {\n
        v17 = -11;\n
        return v17;\n
    }\n
    else if (!a0)\n
    {\n
        v17 = -6;\n
        return v17;\n
    }\n
    else if (a1)\n
    {\n
        if (a4 != *(&v1->padding_60c[28 + 40 * v18]) && a4 != 1 && !(v1->padding_60c[32 + 40 * v18] & 2))\n
        {\n
            v17 = -14;\n
            return v17;\n
        }\n
        if (*(&v1->padding_60c[36 + 40 * v18]) > 2)\n
        {\n
            v0 = a3;\n
            v2 = cgc_readMemoryFile(v18, a0, a1);\n
            v17 = v2;\n
            return v17;\n
        }\n
        v16 = a1;\n
        v15 = 0;\n
        if (a2)\n
        {\n
            v3 = a2;\n
            if (cgc_fileReadPosRelative(v18))\n
            {\n
                v17 = -6;\n
                return v17;\n
            }\n
        }\n
        v19 = v1;\n
        v9 = *(&v19->padding_60c[4 + 40 * v18]);\n
        v14 = *(&v19->padding_60c[12 + 40 * v18]);\n
        for (v6 = v19->field_608->field_8; v16; v14 = v7 + v14)\n
        {\n
            if (v14 == *((v1->field_79c + 4 + (v9 << 6) + 12)))\n
                break;\n
            v13 = (0 CONCAT v14) /m v6;\n
            if (cgc_readBlock(*((v1->field_79c + 4 + (v9 << 6) + 20)), &v10))\n
            {\n
                v17 = -8;\n
                return v17;\n
            }\n
            v12 = *((v10 + v13 * 4));\n
            cgc_deallocate(v10);\n
            if (cgc_readBlock(v12, &v11))\n
            {\n
                v17 = -8;\n
                return v17;\n
            }\n
            v8 = (0 CONCAT v14) /m v6 >> 32;\n
            v4 = v6 - v8;\n
            v5 = *((v1->field_79c + 4 + v9 * 64 + 12)) - v14;\n
            v7 = cgc_minimum(cgc_minimum(v5, v4), v16);\n
            cgc_memcpy(a0 + v15, v11 + v8, v7);\n
            cgc_deallocate(v11);\n
            v15 = v7 + v15;\n
            v16 -= v7;\n
        }\n
        v20 = v1;\n
        *(&v20->padding_60c[12 + 40 * v18]) = v14;\n
        *(a3) = v15;\n
        if (v14 == *((v20->field_79c + 4 + (v9 << 6) + 12)))\n
        {\n
            v17 = -7;\n
            return v17;\n
        }\n
        v17 = 0;\n
        return v17;\n
    }\n
    else\n
    {\n
        v17 = -6;\n
        return v17;\n
    }\n
}\n
", "4229689:sub_408a39": null, "4229696:cgc_readMemoryFile": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char fileCursors;\n
extern unsigned int rootDir;\n
\n
int cgc_readMemoryFile(char v6, char *a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ebx\n
    struct_0 *v10;  // eax\n
    unsigned int v11;  // ecx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_readBlock(*((rootDir + 4 + (*(&(&fileCursors)[4 + 40 * v6]) << 6) + 20)), &v3))\n
    {\n
        v4 = -8;\n
        return v4;\n
    }\n
    v8 = v0;\n
    v1 = v3;\n
    if (*((v8 + 1548 + v6 * 40 + 12)) >= *((v8 + 1548 + v6 * 40 + 24)))\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
    v9 = v0;\n
    v2 = cgc_minimum(a1, *((v9 + 1548 + v6 * 40 + 24)) - *((v9 + 1548 + v6 * 40 + 12)));\n
    cgc_memcpy(a0, *(v1) + *((v0 + 1548 + v6 * 40 + 12)), v2);\n
    *(a2) = v2;\n
    v10 = v0 + 1548 + v6 * 40;\n
    v10->field_c = v2 + v10->field_c;\n
    cgc_deallocate(v3);\n
    v11 = v0;\n
    if (*((v11 + 1548 + v6 * 40 + 12)) >= *((v11 + 1548 + v6 * 40 + 24)))\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4230103:sub_408bd7": null, "4230112:cgc_fileReadPosRelative": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileReadPosRelative(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ecx\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 > 10)\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (*((v0 + 1548 + v2 * 40)))\n
    {\n
        v3 = v0;\n
        if (*((v3 + 1548 + v2 * 40 + 12)) + a0 > *((v3 + 1548 + v2 * 40 + 24)))\n
        {\n
            v1 = -6;\n
            return v1;\n
        }\n
        if (*((v0 + 1548 + v2 * 40 + 12)) + a0 < 0)\n
        {\n
            *((v0 + 1548 + v2 * 40 + 12)) = 0;\n
        }\n
        else\n
        {\n
            v4 = v0 + 1548 + v2 * 40;\n
            v4->field_c = a0 + v4->field_c;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
}\n
", "4230368:cgc_fileReadPosition": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileReadPosition(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 > 10)\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (!*((v0 + 1548 + v2 * 40)))\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (a0 <= *((v0 + 1548 + v2 * 40 + 24)))\n
    {\n
        *((v0 + 1548 + v2 * 40 + 12)) = a0;\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -6;\n
        return v1;\n
    }\n
}\n
", "4230540:sub_408d8c": null, "4230544:cgc_fileWritePosition": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileWritePosition(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 > 10)\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (!*((v0 + 1548 + v2 * 40)))\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (a0 <= *((v0 + 1548 + v2 * 40 + 24)))\n
    {\n
        *((v0 + 1548 + v2 * 40 + 20)) = a0;\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -6;\n
        return v1;\n
    }\n
}\n
", "4230716:sub_408e3c": null, "4230720:cgc_fileWritePosRelative": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileWritePosRelative(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ecx\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 > 10)\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
    else if (*((v0 + 1548 + v2 * 40)))\n
    {\n
        v3 = v0;\n
        if (*((v3 + 1548 + v2 * 40 + 20)) + a0 > *((v3 + 1548 + v2 * 40 + 24)))\n
        {\n
            v1 = -6;\n
            return v1;\n
        }\n
        if (*((v0 + 1548 + v2 * 40 + 20)) + a0 < 0)\n
        {\n
            *((v0 + 1548 + v2 * 40 + 20)) = 0;\n
        }\n
        else\n
        {\n
            v4 = v0 + 1548 + v2 * 40;\n
            v4->field_14 = a0 + v4->field_14;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -11;\n
        return v1;\n
    }\n
}\n
", "4230976:cgc_deleteFile": "typedef struct struct_1 {\n
    char padding_0[1948];\n
    struct struct_0 *field_79c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_deleteFile(char v7, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x24]\n
    unsigned int *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_1 *v8;  // ebx\n
    struct_1 *v9;  // eax\n
    struct_0 *v10;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v7 > 10)\n
    {\n
        v6 = -11;\n
        return v6;\n
    }\n
    else if (*(&v0->padding_0[1548 + 40 * v7]))\n
    {\n
        if (a0 != *(&v0->padding_0[1576 + 40 * v7]) && a0 != 1 && !(v0->padding_0[1580 + 40 * v7] & 1))\n
        {\n
            v6 = -14;\n
            return v6;\n
        }\n
        v8 = v0;\n
        v5 = *(&v8->padding_0[1552 + 40 * v7]);\n
        v2 = cgc_readBlock(*(&v8->field_79c[6 + 16 * v5].padding_0), &v4);\n
        if (v2)\n
        {\n
            v6 = -8;\n
            return v6;\n
        }\n
        if (*(&v0->padding_0[1584 + 40 * v7]) > 2)\n
        {\n
            v1 = v4;\n
            if (*(v1) > 0)\n
                cgc_free(*(v1));\n
        }\n
        else\n
        {\n
            for (v3 = v4; *(v3); v3 += 1)\n
            {\n
                cgc_eraseBlock(*(v3));\n
                cgc_setBlockAsFree();\n
            }\n
        }\n
        cgc_deallocate(v4);\n
        cgc_eraseBlock(*(&v0->field_79c[6 + 16 * v5].padding_0));\n
        cgc_setBlockAsFree();\n
        v9 = v0;\n
        v9->field_79c[7 + 16 * v5].padding_0[0] = 0;\n
        *(&v9->field_79c[4 + 16 * v5].padding_0) = 0;\n
        *(&v9->field_79c[6 + 16 * v5].padding_0) = 0;\n
        v10 = v9->field_79c;\n
        v10->field_2 = v10->field_2 - 1;\n
        *(&v9->padding_0[1552 + 40 * v7]) = 0;\n
        *(&v9->padding_0[1548 + 40 * v7]) = 0;\n
        *(&v9->padding_0[1568 + 40 * v7]) = 0;\n
        *(&v9->padding_0[1560 + 40 * v7]) = 0;\n
        *(&v9->padding_0[1572 + 40 * v7]) = 0;\n
        v9->padding_0[1580 + 40 * v7] = 0;\n
        v6 = 0;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = -11;\n
        return v6;\n
    }\n
}\n
", "4231697:sub_409211": null, "4231712:cgc_setBlockAsFree": "extern struct_0 *freeList;\n
\n
int cgc_setBlockAsFree(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = v2 >> 3;\n
    v0 = v2 & 7;\n
    v3 = freeList;\n
    v4 = v1;\n
    v3[v4] = v3[v4] & ((1 << (v0 & 31)) ^ 255);\n
    return freeList;\n
}\n
", "4231789:sub_40926d": null, "4231792:cgc_truncateFile": "typedef struct struct_0 {\n
    char padding_0[1948];\n
    unsigned int field_79c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_truncateFile(char v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // ebx\n
    struct_0 *v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v6 > 10)\n
    {\n
        v5 = -11;\n
        return v5;\n
    }\n
    else if (!*(&v0->padding_0[1548 + 40 * v6]))\n
    {\n
        v5 = -11;\n
        return v5;\n
    }\n
    else if (*(&v0->padding_0[1584 + 40 * v6]) <= 2)\n
    {\n
        if (a0 != *(&v0->padding_0[1576 + 40 * v6]) && a0 != 1 && !(v0->padding_0[1580 + 40 * v6] & 1))\n
        {\n
            v5 = -14;\n
            return v5;\n
        }\n
        v7 = v0;\n
        v4 = *(&v7->padding_0[1552 + 40 * v6]);\n
        v1 = cgc_readBlock(*((v7->field_79c + 4 + v4 * 64 + 20)), &v3);\n
        if (v1)\n
        {\n
            v5 = -8;\n
            return v5;\n
        }\n
        for (v2 = v3; *(v2); v2 += 1)\n
        {\n
            cgc_eraseBlock(*(v2));\n
            cgc_setBlockAsFree(*(v2));\n
        }\n
        cgc_deallocate(v3);\n
        cgc_eraseBlock(*((v0->field_79c + 4 + v4 * 64 + 20)));\n
        v8 = v0;\n
        *((v8->field_79c + 4 + v4 * 64 + 12)) = 0;\n
        *(&v8->padding_0[1568 + 40 * v6]) = 0;\n
        *(&v8->padding_0[1560 + 40 * v6]) = 0;\n
        *(&v8->padding_0[1556 + 40 * v6]) = 0;\n
        *(&v8->padding_0[1564 + 40 * v6]) = 0;\n
        *(&v8->padding_0[1572 + 40 * v6]) = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4232369:sub_4094b1": null, "4232384:cgc_findFiles": "typedef struct struct_1 {\n
    char padding_0[1096];\n
    unsigned int field_448;\n
    char padding_44c[848];\n
    struct struct_2 *field_79c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int rootDir;\n
\n
int cgc_findFiles(char *v6, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x5c]\n
    char v1;  // [bp-0x3d]\n
    char v2;  // [bp-0x15]\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    struct_1 *v7;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!rootDir)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    v3 = &v0->field_79c[2];\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v0->field_79c->field_0)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!v3->field_18)\n
        {\n
            v3 = &v3[2].padding_0[14];\n
        }\n
        else\n
        {\n
            cgc_strncpy(&v1, &v3->field_18, 40);\n
            v2 = 0;\n
            if (!*(v6))\n
                break;\n
            if (cgc_wildcard_search(v6) == 1)\n
                break;\n
            v3 = &v3[2].padding_0[14];\n
        }\n
        v4 += 1;\n
    }\n
    v7 = v0;\n
    v7->field_448 = v3;\n
    cgc_strncpy(&v7->padding_44c, v6, 40);\n
    *(a0) = &v0->field_448;\n
    v5 = 0;\n
    return v5;\n
}\n
", "4232702:sub_4095fe": null, "4232704:cgc_findNextFile": "typedef struct struct_2 {\n
    char padding_0[1948];\n
    struct struct_3 *field_79c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_findNextFile(struct_1 *v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_2 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_2 *v4;  // edx\n
    struct_1 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v3)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        do\n
        {\n
            v4 = v1;\n
            if (v3->field_0 >= &v4->field_79c[1 + 32 * v4->field_79c->field_0])\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            v7 = v3;\n
            v7->field_0 = &v7->field_0[2].padding_0[14];\n
        } while (!v3->field_0->field_18);\n
        if (!v3->field_4)\n
            break;\n
        v0 = &v3->field_0->field_18;\n
        if (cgc_wildcard_search(&v3->field_4) == 1)\n
            break;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4232915:sub_4096d3": null, "4232928:cgc_getFileSystemInfo": "typedef struct struct_0 {\n
    char padding_0[1544];\n
    struct struct_1 *field_608;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getFileSystemInfo(unsigned int v2[6])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v2)\n
    {\n
        v1 = -6;\n
        return v1;\n
    }\n
    else if (v0->field_608)\n
    {\n
        v3 = v0;\n
        v2[0] = v3->field_608->field_4;\n
        v2[1] = v3->field_608->field_8;\n
        v2[2] = v3->field_608->field_c;\n
        v2[3] = 0;\n
        v2[4] = v3->field_608->field_18;\n
        v2[5] = v3->field_608->field_1c;\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -9;\n
        return v1;\n
    }\n
}\n
", "4233104:cgc_makeMemoryFile": "typedef struct struct_0 {\n
    char padding_0[1948];\n
    struct struct_1 *field_79c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_makeMemoryFile(char *v5, unsigned int a0, unsigned int a1, char a2, unsigned int a3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ebx\n
    unsigned short v7[2];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        v4 = -6;\n
        return v4;\n
    }\n
    else if (!v0->field_79c)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    else if (cgc_statusFile(v5, NULL))\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            if (v3 >= v0->field_79c->field_0)\n
            {\n
                v4 = -10;\n
                return v4;\n
            }\n
            if (!*(28 + &v0->field_79c->field_0 + 0x40 * v3))\n
                break;\n
            v3 += 1;\n
        }\n
        cgc_strncpy(&(&v0->field_79c[16 * v3].field_0)[12] + 1, v5, 40);\n
        v6 = v0;\n
        *(&v6->field_79c[4 + 16 * v3].field_0) = a1;\n
        *(&v6->field_79c[5 + 16 * v3].field_0) = a2 + 3;\n
        *(&v6->field_79c[2 + 16 * v3].field_0) = a3;\n
        *(&v6->field_79c[3 + 16 * v3].field_0) = 0;\n
        if (cgc_findFreeBlock(&v2))\n
        {\n
            v4 = -5;\n
            return v4;\n
        }\n
        cgc_eraseBlock(v2);\n
        cgc_setBlockInUse(v2);\n
        *(&v0->field_79c[6 + 16 * v3].field_0) = v2;\n
        v7 = v0->field_79c;\n
        v7[1] = v7[1] + 1;\n
        cgc_readBlock(v2, &v1);\n
        *(v1) = a0;\n
        v1[1] = a1;\n
        *(&v1[2]) = a2;\n
        cgc_writeBlock(v1, v2);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -12;\n
        return v4;\n
    }\n
}\n
", "4233666:sub_4099c2": null, "4233680:main": "typedef struct struct_0 {\n
    char padding_0[1140];\n
    unsigned int field_474;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void g_40d660;\n
\n
int main(unsigned int v19, unsigned int a0)\n
{\n
    char v0;  // [bp-0x4fd]\n
    struct_2 *v1;  // [bp-0x4fc]\n
    char v2;  // [bp-0x4f5]\n
    struct_2 *v3;  // [bp-0x4f4]\n
    struct_0 *v4;  // [bp-0x4f0]\n
    char v5;  // [bp-0x4ec]\n
    char v6;  // [bp-0x4e8]\n
    char v7;  // [bp-0x495]\n
    char v8;  // [bp-0x494]\n
    unsigned int v9;  // [bp-0x490]\n
    struct struct_1 **v10;  // [bp-0x48c], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x488]\n
    unsigned int v12;  // [bp-0x484]\n
    unsigned int v13;  // [bp-0x480]\n
    char v14[7];  // [bp-0x47a]\n
    char v15;  // [bp-0x470]\n
    char v16;  // [bp-0x40c]\n
    void* v17;  // [bp-0xc]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v20;  // ebx\n
    struct_0 *v21;  // eax\n
    unsigned int v22;  // ebx\n
\n
    v18 = v20;\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v17 = 0;\n
    v12 = 1;\n
    memcpy(&v5, &g_40d660, 80);\n
    v13 = cgc_initFileSystem(0x1000, 0x2000, 0x258000);\n
    if (v13)\n
    {\n
        cgc_printf(&v4[8].padding_0[138]);\n
        cgc__terminate();\n
    }\n
    v13 = cgc_createFile(&v4[8].padding_0[113], 2, 1);\n
    if (v13)\n
    {\n
        cgc_printf(&v4[8].padding_0[102]);\n
        cgc__terminate();\n
    }\n
    v7 = cgc_openFile(&v4[8].padding_0[113], 1);\n
    if (v7 < 0)\n
    {\n
        cgc_printf(&v4[8].padding_0[102]);\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(&v15, &v4[8].padding_0[81]);\n
    v2 = v7;\n
    v3 = &v15;\n
    v13 = cgc_writeFile(v2, v3, cgc_strlen(&v15), 1);\n
    if (v13 < 0)\n
    {\n
        cgc_printf(&v4[8].padding_0[102]);\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(&v15, &v4[8].padding_0[35]);\n
    v0 = v7;\n
    v1 = &v15;\n
    v13 = cgc_writeFile(v0, v1, cgc_strlen(&v15), 1);\n
    if (v13 < 0)\n
    {\n
        cgc_printf(&v4[7].padding_0[1085]);\n
        cgc__terminate();\n
    }\n
    cgc_setPerms(v7, 3, 1);\n
    cgc_closeFile(v7);\n
    cgc_makeMemoryFile(&v4[7].padding_0[1052], 0x4347c000, 0x1000, 1, 0);\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            while (true)\n
            {\n
                do\n
                {\n
                    if (!v12)\n
                        cgc_printf(&v4[7].padding_0[1026]);\n
                    else\n
                        cgc_printf(&v4[7].padding_0[1034]);\n
                    v13 = cgc_receive_until(&v16, 10, 0x400);\n
                } while (!cgc_strlen(&v16));\n
                v9 = cgc_tokenize(&v16, 32);\n
                if (!v12)\n
                    break;\n
                if (v9 != 2)\n
                {\n
                    cgc_free(*(&v8));\n
                }\n
                else\n
                {\n
                    v11 = cgc_atoi(*((*(&v8) + 4)));\n
                    v21 = v4;\n
                    v21->field_474 = cgc_authenticate(*(*(&v8)), v11);\n
                    if (!v21->field_474)\n
                    {\n
                        cgc_printf(&v4[7].padding_0[1023]);\n
                        cgc_free(*(&v8));\n
                    }\n
                    else\n
                    {\n
                        cgc_printf(&v4[7].padding_0[1008]);\n
                        cgc_lookupName(v14, v4->field_474);\n
                        cgc_printf(&v4[7].padding_0[992]);\n
                        v12 = 0;\n
                        cgc_free(*(&v8));\n
                    }\n
                }\n
            }\n
            if (cgc_strcmp(*(*(&v8)), &v4[7].padding_0[980]))\n
                break;\n
            cgc_printf(&v4[7].padding_0[973]);\n
            v12 = 1;\n
        }\n
        if (!cgc_strcmp(*(*(&v8)), &v4[7].padding_0[960]))\n
            break;\n
        for (v10 = 0; v10 < 10; v10 = v10 + 1)\n
        {\n
            if (!cgc_strcmp(*(*(&v8)), *((&v5 + 0x8 * v10))))\n
            {\n
                v13 = *(&(&v6)[8 * v10])(v9);\n
                break;\n
            }\n
        }\n
        if (v10 == 10 && cgc_strlen(*(*(&v8))) > 0)\n
            cgc_printf(&v4[7].padding_0[955]);\n
    }\n
    v22 = v18;\n
    return v17;\n
}\n
", "4235338:sub_40a04a": null, "4235344:cgc_tokenize": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tokenize(char *v9, char a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x1b]\n
    char v2;  // [bp-0x1a]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_strlen(v9))\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v6 = 0;\n
    v5 = 0;\n
    while (v9[v6])\n
    {\n
        while (true)\n
        {\n
            v3 = 0;\n
            if (cgc_isspace(v9[v6]))\n
                v3 = v9[v6];\n
            if (!(v3 & 1))\n
                break;\n
            v6 += 1;\n
        }\n
        if (!v9[v6])\n
            break;\n
        v5 = v5 + 1;\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (!cgc_isspace(v9[v6]))\n
                v2 = v9[v6];\n
            if (!(v2 & 1))\n
                break;\n
            v6 += 1;\n
        }\n
        if (!v9[v6])\n
            break;\n
    }\n
    *(a1) = cgc_malloc(v5 * 4);\n
    if (!*(a1))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = 0;\n
    for (v5 = 0; v9[v6]; v6 += 1)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (cgc_isspace(v9[v6]))\n
                v1 = v9[v6];\n
            if (!(v1 & 1))\n
                break;\n
            v6 += 1;\n
        }\n
        if (!v9[v6])\n
            break;\n
        *((*(a1) + v5 * 4)) = &v9[v6];\n
        v5 = v5 + 1;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (!cgc_isspace(v9[v6]))\n
                v0 = v9[v6];\n
            if (!(v0 & 1))\n
                break;\n
            v6 += 1;\n
        }\n
        if (!v9[v6])\n
            break;\n
        v9[v6] = 0;\n
    }\n
    v7 = v5;\n
    return v7;\n
}\n
", "4236050:sub_40a312": null, "4236064:cgc_wildcard_search": "int cgc_wildcard_search(char v4[2], char *a0)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char v2[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(a0))\n
            v1 = v4[0];\n
        if (!(v1 & 1))\n
            break;\n
        if (v4[0] == 42)\n
        {\n
            if (!v4[1])\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            *(&v4) = &v4[1];\n
            *(&v2) = v4;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v4[0] != *(a0))\n
                    v0 = *(a0);\n
                if (!(v0 & 1))\n
                    break;\n
                a0 += 1;\n
            }\n
            if (!*(a0))\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v4 = &v4[1];\n
            a0 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(a0) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else if (v4[0] == 63)\n
        {\n
            v4 = &v4[1];\n
            a0 += 1;\n
        }\n
        else if (v4[0] == *(a0))\n
        {\n
            v4 = &v4[1];\n
            a0 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(a0) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            if (v4 == v2)\n
            {\n
                a0 += 1;\n
            }\n
            else\n
            {\n
                v4 = v2;\n
                continue;\n
            }\n
        }\n
    }\n
    if (*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4))\n
    {\n
        if (*(v4) != 42)\n
        {\n
LABEL_40a571:\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!(!*((v4 + 1))))\n
        {\n
            goto LABEL_40a571;\n
        }\n
    }\n
    v3 = 1;\n
    return v3;\n
}\n
", "4236684:sub_40a58c": null, "4236688:cgc_contains_wildcards": "int cgc_contains_wildcards(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        if (*(v1) == 42)\n
            break;\n
        if (*(v1) == 63)\n
            break;\n
        v1 += 1;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4236784:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_deallocate": null, "5242912:cgc_log10": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}