{"4198400:_init": "extern struct_0 *g_404628;\n
\n
int _init()\n
{\n
    if (g_404628)\n
    {\n
        g_404628();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198528:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198544:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 13615;\n
    v6 = v5 + 12;\n
    v7 = v5 + 12;\n
    if (v7 == v6)\n
        return v5 + 12;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 13551;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 12;\n
    v9 = (v6 + 12 - (v6 + 12) >> 31) + (12 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_404624;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_404624)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4198966:sub_401236": null, "4198976:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(v5, a0 + v3, a1 - v3))\n
            {\n
                v4 = 3;\n
                return v4;\n
            }\n
            v3 = v2 + v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199154:sub_4012f2": null, "4199168:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -7;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 7)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 7)\n
        {\n
            v4 = -77;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
}\n
", "4199431:sub_401407": null, "4199440:cgc_strncmp": "int cgc_strncmp(char *v1, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (a1 <= 0)\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) == *(a0))\n
        {\n
            v1 += 1;\n
            a0 += 1;\n
            a1 -= 1;\n
        }\n
        else\n
        {\n
            v0 = *(v1) - *(a0);\n
            return v0;\n
        }\n
    }\n
}\n
", "4199557:sub_401485": null, "4199568:cgc_strn2int": "int cgc_strn2int(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 1;\n
    if (!v5)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    if (*(v5) == 45)\n
    {\n
        v0 = -1;\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    for (; v1 < a0; v1 += 1)\n
    {\n
        if (*((v5 + v1)) != 48 && *((v5 + v1)) != 49 && *((v5 + v1)) != 50 && *((v5 + v1)) != 51 && *((v5 + v1)) != 52 && *((v5 + v1)) != 53 && *((v5 + v1)) != 54 && *((v5 + v1)) != 55 && *((v5 + v1)) != 56 && *((v5 + v1)) != 57)\n
            break;\n
        v3 *= 10;\n
        v2 = *((v5 + v1)) - 48;\n
        v3 = v2 + v3;\n
    }\n
    v4 = v0 * v3;\n
    return v4;\n
}\n
", "4199955:sub_401613": null, "4199968:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4200056:sub_401678": null, "4200064:cgc_strnlen": "int cgc_strnlen(unsigned int v2, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a0)\n
        {\n
            v1 = a0;\n
            return v1;\n
        }\n
        else if (v0[v2])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4200153:sub_4016d9": null, "4200160:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4200215:sub_401717": null, "4200224:cgc_itoaB10": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoaB10(unsigned int v14)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x38]\n
    char *v2;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    char v8;  // [bp-0x1c]\n
    char v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // eax\n
\n
    v13 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 16;\n
    v10 = cgc_allocate(v11, 0);\n
    if (v10)\n
        cgc__terminate();\n
    v7 = v14;\n
    if (!v14)\n
    {\n
        cgc_memcpy(*(&v9), v1 - 5676, 2);\n
        v12 = *(&v9);\n
        return v12;\n
    }\n
    v6 = 0;\n
    if (v14 < 0)\n
    {\n
        v6 = 1;\n
        v7 = -(v7);\n
    }\n
    v5 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v5 < v11)\n
            v0 = v7;\n
        if (!(v0 & 1))\n
            break;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10 >> 32;\n
        if (v4 > 9)\n
            v5[*(&v9)] = v4 + 87;\n
        else\n
            v5[*(&v9)] = v4 + 48;\n
        v16 = v7;\n
        v7 = (v16 >> 31 CONCAT v16) /m 10;\n
        v5 += 1;\n
    }\n
    if (v6 == 1)\n
        v5[1 + *(&v9)] = 45;\n
    v10 = cgc_allocate(v11, 0);\n
    if (v10)\n
        cgc__terminate();\n
    v3 = cgc_strnlen(*(&v9), 0x10);\n
    for (v2 = 0; v2 < v3; v2 += 1)\n
    {\n
        v2[*(&v8)] = *(-1 + *(&v9) + v3 - v2);\n
    }\n
    v10 = cgc_deallocate(*(&v9));\n
    if (v10)\n
        cgc__terminate();\n
    v12 = *(&v8);\n
    return v12;\n
}\n
", "4200774:sub_401946": null, "4200784:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x438]\n
    unsigned int v1;  // [bp-0x434]\n
    unsigned int v2;  // [bp-0x430]\n
    unsigned int v3;  // [bp-0x42c]\n
    void* v4;  // [bp-0x428]\n
    void* v5;  // [bp-0x424], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x420], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x41c]\n
    unsigned int v8;  // [bp-0x1c]\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14]\n
    void* v11;  // [bp-0x10]\n
    void* v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
\n
    v13 = v15;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    v8 = -1;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    while (true)\n
    {\n
        memset(&v7, 0, 0x400);\n
        v6 = 0;\n
        v5 = 0;\n
        v6 = cgc_recvline(0, &v7, 1023);\n
        if (v6 <= 0)\n
            cgc__terminate();\n
        if (v10 <= 0)\n
            cgc_initStack(&v8, 0x100);\n
        v5 = cgc_parseCmd(v0 - 5656);\n
        if (v5 > 0)\n
        {\n
            v4 = 0;\n
            cgc_initProgram(&v4);\n
            if (v4)\n
                cgc_pushElement(&v8);\n
            goto LABEL_401bbd;\n
        }\n
        v5 = cgc_parseCmd(v0 - 5648);\n
        if (v5 > 0)\n
            break;\n
LABEL_401bbd:\n
    }\n
    v3 = cgc_strn2int(&(&v7)[v5], 10);\n
    if (v3 <= v8 && v3 >= 0)\n
    {\n
        v1 = v11 + v3 * 4;\n
        cgc_executeProgram();\n
LABEL_401bb8:\n
        goto LABEL_401bbd;\n
    }\n
    v2 = cgc_transmit_all(1, v0 - 5640, 28);\n
    if (v2)\n
        cgc__terminate();\n
    goto LABEL_401bb8;\n
}\n
", "4201415:sub_401bc7": null, "4201424:cgc_initStack": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initStack(unsigned int v4[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a0;\n
    if (v2 > (0 CONCAT 2000000) /m a1)\n
    {\n
        v5 = v4;\n
        v5[3] = 0;\n
        return v4;\n
    }\n
    v0 = &v4[3];\n
    v3 = cgc_allocate(a0 * a1, 0);\n
    if (v3)\n
        cgc__terminate();\n
    v4[2] = a0;\n
    v4[1] = a1;\n
    v5 = v4;\n
    *(v5) = -1;\n
    return v4;\n
}\n
", "4201597:sub_401c7d": null, "4201600:cgc_destroyStack": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destroyStack(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4[1] * v4[2];\n
    v2 = cgc_deallocate(v4[3]);\n
    if (v2)\n
        cgc__terminate();\n
    v4[3] = 0;\n
    v4[2] = 0;\n
    v4[1] = 0;\n
    v4[0] = -1;\n
    return v4;\n
}\n
", "4201729:sub_401d01": null, "4201744:cgc_isStackFull": "int cgc_isStackFull(unsigned int v0[3])\n
{\n
    return !(v0[0] < v0[2] - 1);\n
}\n
", "4201776:cgc_isStackEmpty": "int cgc_isStackEmpty(unsigned int *v0)\n
{\n
    return *(v0) < 0;\n
}\n
", "4201798:sub_401d46": null, "4201808:cgc_pushElement": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pushElement(unsigned int v3[4], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_isStackFull(v3))\n
    {\n
        v1 = cgc_transmit_all(1, v0 - 5622, 20);\n
        if (v1)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = v3;\n
    v5[0] = v5[0] + 1;\n
    return cgc_memcpy(v3[3] + v3[0] * v3[1], a0, v3[1]);\n
}\n
", "4201996:sub_401e0c": null, "4202000:cgc_popElement": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_popElement(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9[4];  // esi\n
    unsigned int v10;  // edx\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_isStackEmpty(v4))\n
    {\n
        v1 = cgc_transmit_all(1, v0 - 5602, 22);\n
        if (v1)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = v4[3];\n
    v8 = v4[1];\n
    v9 = v4;\n
    v10 = v9[0];\n
    v9[0] = v10 - 1;\n
    return v7 + v10 * v8;\n
}\n
", "4202160:cgc_invalid_command": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_invalid_command()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_transmit_all(1, \"Invalid command!\\n
\", 18);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4202246:sub_401f06": null, "4202256:cgc_parseCmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parseCmd(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_strnlen(v4, 0x10);\n
    if (cgc_strncmp(a0, v4, v1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4202370:sub_401f82": null, "4202384:cgc_receiveProgramSize": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receiveProgramSize(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x418]\n
    unsigned int v1;  // [bp-0x414]\n
    unsigned int v2;  // [bp-0x410]\n
    unsigned int v3;  // [bp-0x40c]\n
    char v4;  // [bp-0x408]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v4, 0, 0x400);\n
    v3 = cgc_recvline(v6, &v4, 1023);\n
    if (v3 <= 0)\n
        cgc__terminate();\n
    v2 = cgc_parseCmd(v0 - 5562, &v4);\n
    if (!v2)\n
    {\n
        cgc_invalid_command();\n
        cgc__terminate();\n
    }\n
    v1 = cgc_strn2int(&(&v4)[v2], 8);\n
    return v1;\n
}\n
", "4202652:sub_40209c": null, "4202656:cgc_initProgram": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initProgram(struct struct_0 **v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v2[3];  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5[3];  // [bp-0x1c]\n
    char v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10[3];  // eax, Other Possible Types: unsigned int\n
    unsigned int v11[3];  // edx\n
    unsigned int v12[3];  // eax\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v6, 0, 16);\n
    v10 = cgc_receiveProgramSize(a0);\n
    v5[0] = v10;\n
    if (v5 <= 0)\n
    {\n
        return v10;\n
    }\n
    else if (v5 > 9999)\n
    {\n
        return v10;\n
    }\n
    else\n
    {\n
        v4 = cgc_allocate(v5 * 16 + 20, 0);\n
        if (v4)\n
            cgc__terminate();\n
        v2[0] = *(v8);\n
        v2[2] = -1;\n
        v11 = v5;\n
        v12 = v2;\n
        v12[0] = v11;\n
        v12[1] = v11 >> 31;\n
        for (v1 = 0; v1 < v5; v1 += 1)\n
        {\n
            v3 = cgc_recvline(a0, &v6, 16);\n
            if (v3 <= 0)\n
                cgc__terminate();\n
            cgc_addLine(v2);\n
        }\n
        v10 = v2;\n
        *((v10 + 8)) = 0;\n
        return v2;\n
    }\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_addLine": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addLine(struct_0 *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isProgramFull())\n
    {\n
        v6 = v3;\n
        v6->field_8 = v6->field_8 + 1;\n
        v5 = cgc_memcpy(1 + v3 + 16 * v3->field_8, a0, 16);\n
        return v5;\n
    }\n
    v5 = cgc_transmit_all(1, v0 - 5557, 28);\n
    v1 = v5;\n
    if (!v1)\n
        return v5;\n
    v5 = cgc__terminate();\n
}\n
", "4203167:sub_40229f": null, "4203168:cgc_isProgramFull": "int cgc_isProgramFull(unsigned int v0[3])\n
{\n
    int tmp_18;  // tmp #18\n
    unsigned int v1[3];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int v3;  // esi\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1[2];\n
    v3 = v1[0];\n
    tmp_18 = v3;\n
    v5 = v3 - 1;\n
    v6 = v1[1] - 1 + (tmp_18 - 1 < tmp_18);\n
    return [D] x86g_calculate_condition(0xd<32>, 0xc<32>, Sar(edx<4>, 0x1f<8>), Xor(ecx<4>, Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>))) & 1;\n
}\n
", "4203212:sub_4022cc": null, "4203216:cgc_executeProgram": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_executeProgram(unsigned int v22[3])\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    char *v2;  // [bp-0x64]\n
    void* v3;  // [bp-0x60], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x58]\n
    char *v5;  // [bp-0x54]\n
    unsigned int v6;  // [bp-0x50]\n
    unsigned int v7;  // [bp-0x4c]\n
    unsigned int v8;  // [bp-0x48]\n
    char *v9;  // [bp-0x44]\n
    char *v10;  // [bp-0x40]\n
    char *v11;  // [bp-0x3c]\n
    unsigned int v12;  // [bp-0x38]\n
    unsigned int v13;  // [bp-0x34]\n
    unsigned int v14;  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x2c]\n
    char *v16;  // [bp-0x28]\n
    char *v17;  // [bp-0x24]\n
    unsigned int v18;  // [bp-0x20]\n
    unsigned int v19[4];  // [bp-0x1c]\n
    char v20;  // [bp-0x10]\n
    unsigned int v21;  // [bp-0x8]\n
    unsigned int v23;  // ebx\n
    unsigned int v24;  // eax\n
    unsigned int v25[3];  // ecx\n
    unsigned int v26;  // edx\n
    unsigned int v27;  // esi\n
    unsigned int v28[3];  // eax\n
    unsigned int v29[3];  // eax\n
    unsigned int v30[3];  // eax\n
    unsigned int v31[3];  // eax\n
    unsigned int v32[3];  // eax\n
    unsigned int v33[3];  // eax\n
    unsigned int v34[3];  // eax\n
\n
    v21 = v23;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = cgc_initStack(v19, v22[0] * 16, 8);\n
    if (!*(&v20))\n
        return v24;\n
    for (v22[2] = 0; true; v28[2] = v28[2] + 1)\n
    {\n
        v25 = v22;\n
        v26 = v25[2];\n
        v27 = v25[0];\n
        if (!([D] x86g_calculate_condition(0xc<32>, 0xc<32>, Sar(edx<4>, 0x1f<8>), Xor(Load(addr=(ecx<4> + 0x4<32>), size=4, endness=Iend_LE), Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>)))))\n
            break;\n
        v17 = &v22[4 * v22[2] + 3];\n
        v18 = cgc_parseCmd(v1 - 5529, v17);\n
        if (v18 > 0)\n
        {\n
            cgc_pushElement(v19, &v17[v18]);\n
            v28 = v22;\n
        }\n
        else\n
        {\n
            v18 = cgc_parseCmd(v1 - 5524, v17);\n
            if (v18 > 0)\n
            {\n
                v16 = cgc_popElement(v19);\n
                v15 = cgc_strnlen(v16, 0x8);\n
                cgc_memset(v16, 0, v15);\n
                v29 = v22;\n
            }\n
            else\n
            {\n
                v18 = cgc_parseCmd(v1 - 5520, v17);\n
                if (v18 > 0)\n
                {\n
                    v10 = cgc_popElement(v19);\n
                    v9 = cgc_popElement(v19);\n
                    v14 = cgc_strn2int(v10, 8);\n
                    v13 = cgc_strn2int(v9, 8);\n
                    v14 = v13 + v14;\n
                    v11 = cgc_itoaB10(v14);\n
                    v8 = cgc_strnlen(v10, 0x8);\n
                    cgc_memset(v10, 0, v8);\n
                    v8 = cgc_strnlen(v9, 0x8);\n
                    cgc_memset(v9, 0, v8);\n
                    v8 = cgc_strlen(v11);\n
                    cgc_pushElement(v19, v11);\n
                    v12 = cgc_deallocate(v11);\n
                    if (v12)\n
                        cgc__terminate();\n
                    v34 = v22;\n
                }\n
                else\n
                {\n
                    v18 = cgc_parseCmd(v1 - 5516, v17);\n
                    if (v18 > 0)\n
                    {\n
                        v5 = cgc_popElement(v19);\n
                        v0 = v5;\n
                        v7 = cgc_transmit_all(1, v0, cgc_strnlen(v5, 0x8));\n
                        if (v7)\n
                            cgc__terminate();\n
                        v7 = cgc_transmit_all(1, v1 - 5564, cgc_strnlen(v1 - 5564, 0x8));\n
                        if (v7)\n
                            cgc__terminate();\n
                        v6 = cgc_strnlen(v5, 0x8);\n
                        cgc_memset(v5, 0, v6);\n
                        v33 = v22;\n
                    }\n
                    else\n
                    {\n
                        v18 = cgc_parseCmd(v1 - 5510, v17);\n
                        if (v18 <= 0)\n
                        {\n
                            v30 = v22;\n
                        }\n
                        else\n
                        {\n
                            v4 = cgc_strn2int(&v17[v18], 8);\n
                            if (v4 >= 1)\n
                            {\n
                                v2 = cgc_popElement(v19);\n
                                for (v3 = 0; v3 < v4; v3 += 1)\n
                                {\n
                                    cgc_pushElement(v19, v2);\n
                                }\n
                                v32 = v22;\n
                            }\n
                            else\n
                            {\n
                                v31 = v22;\n
                                continue;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v24 = cgc_destroyStack(v19);\n
    return v24;\n
}\n
", "4204444:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}