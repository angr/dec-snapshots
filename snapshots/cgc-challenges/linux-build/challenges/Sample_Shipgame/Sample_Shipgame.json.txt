{"4198400:_init": "extern struct_0 *g_405548;\n
\n
int _init()\n
{\n
    if (g_405548)\n
    {\n
        g_405548();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198544:sub_401090": "int sub_401090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198550:sub_401096": null, "4198560:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198603:sub_4010cb": null, "4198604:sub_4010cc": "int sub_4010cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198608:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198612:sub_4010d4": null, "4198624:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 17519;\n
    v6 = v5 + 26;\n
    v7 = v5 + 26;\n
    if (v7 == v6)\n
        return v5 + 26;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198675:sub_401113": "int sub_401113()\n
{\n
}\n
", "4198681:sub_401119": "int sub_401119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198688:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 17455;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 26;\n
    v9 = (v6 + 26 - (v6 + 26) >> 31) + (26 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198759:sub_401167": "int sub_401167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198768:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405544;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405544)\n
    {\n
        v0 = __dso_handle;\n
        sub_401090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198843:sub_4011bb": "int sub_4011bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198848:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198857:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198861:sub_4011cd": null, "4198864:cgc_readLine": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readLine(unsigned int v11, struct_0 *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xbc]\n
    unsigned int v1;  // [bp-0xb0]\n
    unsigned int v2;  // [bp-0xac]\n
    void* v3;  // [bp-0xa8]\n
    unsigned int v4;  // [bp-0xa0]\n
    char v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x1c]\n
    struct_0 *v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_0 *v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // eax\n
\n
    v1 = \"8T\";\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v4 = a1;\n
    v4 = 2147483647;\n
    if (!a0)\n
    {\n
        v10 = -3;\n
        return v10;\n
    }\n
    v2 = 1;\n
    v3 = 0;\n
    for (v7 = 0; v7 < 32; v7 += 1)\n
    {\n
        *((&v5 + 0x4 * v7)) = 0;\n
    }\n
    v7 = 0;\n
    while (true)\n
    {\n
        v12 = v11 >> 5;\n
        *(&(&v5)[4 * v12]) = 1 << (v11 & 31 & 31) | *(&(&v5)[4 * v12]);\n
        v0 = 0;\n
        v8 = cgc_fdwait(1, &v5, 0, &v2);\n
        if (v8)\n
        {\n
            v10 = -(v8);\n
            return v10;\n
        }\n
        v8 = cgc_receive(v11, &v9, 1);\n
        if (v8)\n
        {\n
            v10 = -(v8);\n
            return v10;\n
        }\n
        else if (*(&v6))\n
        {\n
            if (*(&v6) == 1)\n
            {\n
                a0[v7].field_0 = v9;\n
                v7 += 1;\n
                if (v7 >= v4)\n
                    v7 = v4 - 1;\n
            }\n
            if (v9 == 10)\n
            {\n
                a0[v7].field_0 = 0;\n
                v10 = v7;\n
                return v10;\n
            }\n
        }\n
        else\n
        {\n
            v10 = -6;\n
            return v10;\n
        }\n
    }\n
}\n
", "4199345:sub_4013b1": null, "4199360:cgc_myStrLen": "int cgc_myStrLen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4199435:sub_40140b": null, "4199440:cgc_write": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"8T\";\n
    for (v4 = a0 + a1; a0 < v4; a0 = *(&v3) + a0)\n
    {\n
        v0 = &v3;\n
        v2 = cgc_transmit(v5, a0, v4 - a0);\n
        if (!v2 && !(!*(&v3)))\n
            goto LABEL_401493;\n
        cgc__terminate();\n
LABEL_401493:\n
    }\n
    return a0;\n
}\n
", "4199592:sub_4014a8": null, "4199600:cgc_getCommand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getCommand(char v8[5])\n
{\n
    unsigned int v0;  // [bp-0x214]\n
    char v1;  // [bp-0x210]\n
    char v2;  // [bp-0x20f]\n
    char v3;  // [bp-0x20e]\n
    char v4;  // [bp-0x20d]\n
    char v5;  // [bp-0x20c]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v0 = \"8T\";\n
    v6 = 0;\n
    v1 = 0;\n
    if (!v8)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = cgc_readLine(0, &v1, 0x200);\n
    if (v6 < 0)\n
    {\n
        v7 = -2;\n
        return v7;\n
    }\n
    if (v1 == 78)\n
    {\n
        v8[0] = 78;\n
    }\n
    else if (v1 == 80)\n
    {\n
        v8[0] = 80;\n
        v8[1] = v2;\n
        v8[2] = v3;\n
        v8[3] = v4;\n
        v8[4] = v5;\n
    }\n
    else if (v1 == 84)\n
    {\n
        v8[0] = 84;\n
        v8[1] = v2;\n
        v8[2] = v3;\n
    }\n
    else if (v1 == 77)\n
    {\n
        v8[0] = 77;\n
    }\n
    else if (v1 == 69)\n
    {\n
        v8[0] = 69;\n
    }\n
    else if (v1 == 72)\n
    {\n
        v8[0] = 72;\n
    }\n
    else\n
    {\n
        if (v1 != 83)\n
        {\n
            v8[0] = 85;\n
            v7 = -1;\n
            return v7;\n
        }\n
        v8[0] = 83;\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4200058:sub_40167a": null, "4200064:cgc_dumpBoard": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dumpBoard(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x1b]\n
    char v3;  // [bp-0x1a]\n
    char v4;  // [bp-0x19]\n
    char v5;  // [bp-0x18]\n
    char v6;  // [bp-0x17]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v0 = \"8T\";\n
    v8 = 0;\n
    v7 = 0;\n
    if (!v10)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    for (v8 = 0; v8 < 10; v8 += 1)\n
    {\n
        if (v8)\n
        {\n
            v1 = v8 + 65;\n
            cgc_write(1, &v1, 1);\n
        }\n
        else\n
        {\n
            v1 = 9;\n
            v2 = 65;\n
            cgc_write(1, &v1, 2);\n
        }\n
    }\n
    v1 = 10;\n
    cgc_write(1, &v1, 1);\n
    for (v8 = 0; v8 < 10; v8 += 1)\n
    {\n
        v1 = 32;\n
        v2 = 32;\n
        v3 = 32;\n
        v4 = v8 + 48;\n
        v5 = 58;\n
        v6 = 9;\n
        cgc_write(1, &v1, 6);\n
        for (v7 = 0; v7 < 10; v7 += 1)\n
        {\n
            v1 = *((v10 + 20 + v8 * 10 + v7));\n
            cgc_write(1, &v1, 1);\n
        }\n
        v1 = 10;\n
        cgc_write(1, &v1, 1);\n
    }\n
    v9 = 0;\n
    return v9;\n
}\n
", "4200515:sub_401843": null, "4200528:cgc_clearPlayerState": "int cgc_clearPlayerState(unsigned int v3[5])\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 10; v1 += 1)\n
    {\n
        for (v0 = 0; v0 < 10; v0 += 1)\n
        {\n
            *(20 + &v3[0] + 0xa * v1 + v0) = 46;\n
        }\n
    }\n
    v3[1] = 0;\n
    v3[2] = 0;\n
    v3[3] = 0;\n
    v3[4] = 0;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4200714:sub_40190a": null, "4200720:cgc_processPlace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_processPlace(unsigned int v3[5], char a0[5])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = \"8T\";\n
    if (v3 && a0)\n
    {\n
        if (cgc_isGoodRow() && cgc_isGoodCol())\n
        {\n
            if (a0[4] != 50)\n
            {\n
                if (a0[4] != 51)\n
                {\n
                    if (a0[4] != 52)\n
                    {\n
                        if (a0[4] != 53)\n
                        {\n
                            v2 = -1;\n
                            return v2;\n
                        }\n
                        v0 = 5;\n
                        if (cgc_isOnBoard(a0[1], a0[2], a0[3]) && v3[4] <= 0)\n
                        {\n
                            if (a0[3] != 82)\n
                            {\n
                                if (a0[3] != 68)\n
                                {\n
                                    v2 = -1;\n
                                    return v2;\n
                                }\n
                                if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-515 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-505 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-495 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-485 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                                {\n
                                    *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-515 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-505 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-495 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-485 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    v3[4] = 5;\n
LABEL_40264c:\n
                                    v2 = 0;\n
                                    return v2;\n
                                }\n
                                v2 = -1;\n
                                return v2;\n
                            }\n
                            else\n
                            {\n
                                if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-524 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-523 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-522 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-521 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                                {\n
                                    *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-524 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-523 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-522 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    *(-521 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                    v3[4] = 5;\n
                                    goto LABEL_40264c;\n
                                }\n
                                v2 = -1;\n
                                return v2;\n
                            }\n
                        }\n
                        v2 = -1;\n
                        return v2;\n
                    }\n
                    v0 = 4;\n
                    if (cgc_isOnBoard(a0[1], a0[2], a0[3]) && v3[3] <= 0)\n
                    {\n
                        if (a0[3] != 82)\n
                        {\n
                            if (a0[3] != 68)\n
                            {\n
                                v2 = -1;\n
                                return v2;\n
                            }\n
                            if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-515 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-505 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-495 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                            {\n
                                *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                *(-515 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                *(-505 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                *(-495 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                v3[3] = 4;\n
LABEL_402212:\n
                                goto LABEL_40264c;\n
                            }\n
                            v2 = -1;\n
                            return v2;\n
                        }\n
                        else\n
                        {\n
                            if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-524 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-523 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-522 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                            {\n
                                *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                *(-524 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                *(-523 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                *(-522 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                                v3[3] = 4;\n
                                goto LABEL_402212;\n
                            }\n
                            v2 = -1;\n
                            return v2;\n
                        }\n
                    }\n
                    v2 = -1;\n
                    return v2;\n
                }\n
                v0 = 3;\n
                if (cgc_isOnBoard(a0[1], a0[2], a0[3]) && v3[2] <= 0)\n
                {\n
                    if (a0[3] != 82)\n
                    {\n
                        if (a0[3] != 68)\n
                        {\n
                            v2 = -1;\n
                            return v2;\n
                        }\n
                        if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-515 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-505 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                        {\n
                            *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                            *(-515 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                            *(-505 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                            v3[2] = 3;\n
LABEL_401e88:\n
                            goto LABEL_40264c;\n
                        }\n
                        v2 = -1;\n
                        return v2;\n
                    }\n
                    else\n
                    {\n
                        if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-524 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-523 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                        {\n
                            *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                            *(-524 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                            *(-523 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                            v3[2] = 3;\n
                            goto LABEL_401e88;\n
                        }\n
                        v2 = -1;\n
                        return v2;\n
                    }\n
                }\n
                v2 = -1;\n
                return v2;\n
            }\n
            v0 = 2;\n
            if (cgc_isOnBoard(a0[1], a0[2], a0[3]) && v3[1] <= 0)\n
            {\n
                if (a0[3] != 82)\n
                {\n
                    if (a0[3] != 68)\n
                    {\n
                        v2 = -1;\n
                        return v2;\n
                    }\n
                    if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-515 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                    {\n
                        *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                        *(-515 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                        v3[1] = 2;\n
LABEL_401bae:\n
                        goto LABEL_40264c;\n
                    }\n
                    v2 = -1;\n
                    return v2;\n
                }\n
                else\n
                {\n
                    if (*(-525 + &v3[0] + 10 * a0[1] + a0[2]) == 46 && *(-524 + &v3[0] + 10 * a0[1] + a0[2]) == 46)\n
                    {\n
                        *(-525 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                        *(-524 + &v3[0] + 10 * a0[1] + a0[2]) = a0[4];\n
                        v3[1] = 2;\n
                        goto LABEL_401bae;\n
                    }\n
                    v2 = -1;\n
                    return v2;\n
                }\n
            }\n
            v2 = -1;\n
            return v2;\n
        }\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4204161:sub_402681": null, "4204176:cgc_isGoodRow": "int cgc_isGoodRow(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 48)\n
        v1 = v2 <= 57;\n
    return v1 & 1;\n
}\n
", "4204227:sub_4026c3": null, "4204240:cgc_isGoodCol": "int cgc_isGoodCol(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 65)\n
        v1 = v2 <= 74;\n
    return v1 & 1;\n
}\n
", "4204291:sub_402703": null, "4204304:cgc_isOnBoard": "int cgc_isOnBoard(char v1, char a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a1 == 82 && a0 - 65 + a2 <= 10)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (a1 == 68 && v1 - 48 + a2 <= 10)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4204433:sub_402791": null, "4204448:cgc_processTarget": "extern unsigned int _GLOBAL_OFFSET_TABLE_[16];\n
\n
int cgc_processTarget(unsigned int v11[5], char a0[3])\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9[16];  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v12[16];  // ebx\n
    unsigned int v13[5];  // eax\n
    unsigned int v14[16];  // ebx\n
    unsigned int v15[5];  // eax\n
    unsigned int v16[16];  // ebx\n
    unsigned int v17[5];  // eax\n
    unsigned int v18[16];  // ebx\n
    unsigned int v19[16];  // ebx\n
    unsigned int v20[5];  // eax\n
    unsigned int v21[16];  // ebx\n
    unsigned int v22[16];  // ebx\n
    unsigned int v23[16];  // ebx\n
    unsigned int v24[16];  // ebx\n
\n
    v9[0] = \"8T\";\n
    if (v11 && a0)\n
    {\n
        if (cgc_isGoodRow(a0[1]) && cgc_isGoodCol(a0[2]))\n
        {\n
            if (*(-525 + &v11[0] + 10 * a0[1] + a0[2]) == 50)\n
            {\n
                v12 = v9;\n
                *(-525 + &v11[0] + 10 * a0[1] + a0[2]) = 88;\n
                v13 = v11;\n
                v13[1] = v13[1] - 1;\n
                v8 = v12[15];\n
                cgc_write(1, v8, cgc_myStrLen(v12[15]));\n
                if (!v11[1])\n
                {\n
                    v18 = v9;\n
                    v7 = v18[10];\n
                    cgc_write(1, v7, cgc_myStrLen(v18[10]));\n
                }\n
            }\n
            else if (*(-525 + &v11[0] + 10 * a0[1] + a0[2]) == 51)\n
            {\n
                v14 = v9;\n
                *(-525 + &v11[0] + 10 * a0[1] + a0[2]) = 88;\n
                v15 = v11;\n
                v15[2] = v15[2] - 1;\n
                v6 = v14[15];\n
                cgc_write(1, v6, cgc_myStrLen(v14[15]));\n
                if (!v11[2])\n
                {\n
                    v22 = v9;\n
                    v5 = v22[11];\n
                    cgc_write(1, v5, cgc_myStrLen(v22[11]));\n
                }\n
            }\n
            else if (*(-525 + &v11[0] + 10 * a0[1] + a0[2]) == 52)\n
            {\n
                v16 = v9;\n
                *(-525 + &v11[0] + 10 * a0[1] + a0[2]) = 88;\n
                v17 = v11;\n
                v17[3] = v17[3] - 1;\n
                v4 = v16[15];\n
                cgc_write(1, v4, cgc_myStrLen(v16[15]));\n
                if (!v11[3])\n
                {\n
                    v23 = v9;\n
                    v3 = v23[12];\n
                    cgc_write(1, v3, cgc_myStrLen(v23[12]));\n
                }\n
            }\n
            else if (*(-525 + &v11[0] + 10 * a0[1] + a0[2]) != 53)\n
            {\n
                v21 = v9;\n
                v0 = v21[14];\n
                cgc_write(1, v0, cgc_myStrLen(v21[14]));\n
            }\n
            else\n
            {\n
                v19 = v9;\n
                *(-525 + &v11[0] + 10 * a0[1] + a0[2]) = 88;\n
                v20 = v11;\n
                v20[4] = v20[4] - 1;\n
                v2 = v19[15];\n
                cgc_write(1, v2, cgc_myStrLen(v19[15]));\n
                if (!v11[4])\n
                {\n
                    v24 = v9;\n
                    v1 = v24[13];\n
                    cgc_write(1, v1, cgc_myStrLen(v24[13]));\n
                }\n
            }\n
            v10 = 0;\n
            return v10;\n
        }\n
        v10 = -1;\n
        return v10;\n
    }\n
    v10 = -1;\n
    return v10;\n
}\n
", "4205509:sub_402bc5": null, "4205520:main": "extern unsigned int _GLOBAL_OFFSET_TABLE_[26];\n
\n
int main(unsigned int v24, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x150]\n
    unsigned int v1;  // [bp-0x14c]\n
    unsigned int v2;  // [bp-0x148]\n
    unsigned int v3;  // [bp-0x144]\n
    unsigned int v4;  // [bp-0x140]\n
    unsigned int v5;  // [bp-0x13c]\n
    unsigned int v6;  // [bp-0x138]\n
    unsigned int v7;  // [bp-0x134]\n
    unsigned int v8;  // [bp-0x130]\n
    unsigned int v9;  // [bp-0x12c]\n
    unsigned int v10;  // [bp-0x128]\n
    unsigned int v11;  // [bp-0x124]\n
    unsigned int v12;  // [bp-0x120]\n
    unsigned int v13;  // [bp-0x11c]\n
    unsigned int v14[26];  // [bp-0x118]\n
    char v15;  // [bp-0x114]\n
    void* v16;  // [bp-0x10c], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x108], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x104], Other Possible Types: unsigned int\n
    void* v19;  // [bp-0x100], Other Possible Types: unsigned int\n
    unsigned int v20[5];  // [bp-0xfc]\n
    unsigned int v21[5];  // [bp-0x84]\n
    void* v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // ebx\n
    unsigned int v26[26];  // ebx\n
    unsigned int v27[26];  // ebx\n
    unsigned int v28[26];  // ebx\n
    unsigned int v29[26];  // ebx\n
    unsigned int v30[26];  // ebx\n
    unsigned int v31[26];  // ebx\n
    unsigned int v32[26];  // ebx\n
    unsigned int v33[26];  // ebx\n
    unsigned int v34[26];  // ebx\n
    unsigned int v36[26];  // ebx\n
    unsigned int v37[26];  // ebx\n
    unsigned int v38[26];  // ebx\n
    unsigned int v39[26];  // ebx\n
    unsigned int v41[26];  // ebx\n
    unsigned int v42;  // ebx\n
\n
    v23 = v25;\n
    v14[0] = \"8T\";\n
    v22 = 0;\n
    v19 = 0;\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 85;\n
    cgc_clearPlayerState(v21);\n
    cgc_clearPlayerState(v20);\n
    while (true)\n
    {\n
        if (v18)\n
        {\n
            v27 = v14;\n
            v12 = v27[25];\n
            cgc_write(1, v12, cgc_myStrLen(v27[25]));\n
        }\n
        else\n
        {\n
            v26 = v14;\n
            v13 = v26[24];\n
            cgc_write(1, v13, cgc_myStrLen(v26[24]));\n
        }\n
        v19 = cgc_getCommand(&v15);\n
        if (v19)\n
        {\n
            if (v19 == -1)\n
            {\n
                v29 = v14;\n
                v1 = v29[16];\n
                cgc_write(1, v1, cgc_myStrLen(v29[16]));\n
            }\n
            else if (v19 == -2)\n
            {\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (v15 == 69)\n
            {\n
                v28 = v14;\n
                v11 = v28[22];\n
                cgc_write(1, v11, cgc_myStrLen(v28[22]));\n
            }\n
            else if (v15 == 78)\n
            {\n
                v15 = 85;\n
                cgc_clearPlayerState(v21);\n
                cgc_clearPlayerState(v20);\n
                v18 = 0;\n
                v17 = 0;\n
                v16 = 0;\n
                continue;\n
            }\n
            else if (v15 == 72)\n
            {\n
                v30 = v14;\n
                v10 = v30[19];\n
                cgc_write(1, v10, cgc_myStrLen(v30[19]));\n
            }\n
            else if (v16)\n
            {\n
                v31 = v14;\n
                v9 = v31[21];\n
                cgc_write(1, v9, cgc_myStrLen(v31[21]));\n
            }\n
            else if (v15 != 77)\n
            {\n
                if (v15 == 83)\n
                {\n
                    if (v17)\n
                    {\n
                        v32 = v14;\n
                        v8 = v32[17];\n
                        cgc_write(1, v8, cgc_myStrLen(v32[17]));\n
                    }\n
                    else\n
                    {\n
                        v17 = 1;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v15 != 80)\n
                    {\n
                        if (v15 == 84)\n
                        {\n
                            if (!v17)\n
                            {\n
                                v34 = v14;\n
                                v5 = v34[18];\n
                                cgc_write(1, v5, cgc_myStrLen(v34[18]));\n
                            }\n
                            else\n
                            {\n
                                if (!v18)\n
                                    v19 = cgc_processTarget(v20, &v15);\n
                                else\n
                                    v19 = cgc_processTarget(v21, &v15);\n
                                if (v19)\n
                                {\n
                                    v37 = v14;\n
                                    v2 = v37[16];\n
                                    cgc_write(1, v2, cgc_myStrLen(v37[16]));\n
                                }\n
                                else\n
                                {\n
                                    if (!v18)\n
                                    {\n
                                        if (cgc_allShipsSunk())\n
                                        {\n
                                            v38 = v14;\n
                                            v4 = v38[20];\n
                                            cgc_write(1, v4, cgc_myStrLen(v38[20]));\n
                                            v17 = 0;\n
                                            v16 = 1;\n
                                        }\n
                                    }\n
                                    else\n
                                    {\n
                                        if (cgc_allShipsSunk())\n
                                        {\n
                                            v39 = v14;\n
                                            v3 = v39[20];\n
                                            cgc_write(1, v3, cgc_myStrLen(v39[20]));\n
                                            v17 = 0;\n
                                            v16 = 1;\n
                                        }\n
                                    }\n
                                    v18 = (!v18 ? 0 : 1);\n
                                }\n
                            }\n
                        }\n
                    }\n
                    else\n
                    {\n
                        if (v17)\n
                        {\n
                            v33 = v14;\n
                            v7 = v33[17];\n
                            cgc_write(1, v7, cgc_myStrLen(v33[17]));\n
                        }\n
                        else\n
                        {\n
                            if (v18)\n
                                v19 = cgc_processPlace(v20, &v15);\n
                            else\n
                                v19 = cgc_processPlace(v21, &v15);\n
                            if (v19)\n
                            {\n
                                v36 = v14;\n
                                v6 = v36[16];\n
                                cgc_write(1, v6, cgc_myStrLen(v36[16]));\n
                            }\n
                            else\n
                            {\n
                                v18 = (!v18 ? 0 : 1);\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                if (v18)\n
                    cgc_dumpBoard(v20);\n
                else\n
                    cgc_dumpBoard(v21);\n
            }\n
        }\n
    }\n
    v41 = v14;\n
    v0 = v41[23];\n
    cgc_write(1, v0, cgc_myStrLen(v41[23]));\n
    v42 = v23;\n
    return 0;\n
}\n
", "4207440:cgc_allShipsSunk": "int cgc_allShipsSunk(unsigned int v2[5])\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    if (!v2[1])\n
    {\n
        v0 = 0;\n
        if (!v2[2])\n
        {\n
            v0 = 0;\n
            if (!v2[3])\n
                v0 = !v2[4];\n
        }\n
    }\n
    v1 = v0 & 1;\n
    return v1;\n
}\n
", "4207560:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}