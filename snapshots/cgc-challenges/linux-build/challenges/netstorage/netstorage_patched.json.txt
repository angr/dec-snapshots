{"4198400:_init": "extern struct_0 *g_404140;\n
\n
int _init()\n
{\n
    if (g_404140)\n
    {\n
        g_404140();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 12359;\n
    v6 = v5 + 122;\n
    v7 = v5 + 122;\n
    if (v7 == v6)\n
        return v5 + 122;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 12295;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 122;\n
    v9 = (v6 + 122 - (v6 + 122) >> 31) + (122 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern unsigned int __dso_handle;\n
extern char completed.0;\n
extern unsigned int g_40413c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (completed.0)\n
        return;\n
    if (g_40413c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    completed.0 = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (v4)\n
    {\n
        v5 = a0;\n
        if (v5)\n
        {\n
            tmp_2 = v5;\n
            if (!([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>)))\n
            {\n
                v7 = v5 * v4;\n
                v8 = cgc_malloc();\n
                if (v8)\n
                {\n
                    v0 = v7;\n
                    return cgc_memset(v8, 0);\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4198974:sub_40123e": null, "4198976:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4199009:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4199028:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4199044:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4199060:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4199076:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4199090:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4199112:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4199134:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4199156:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4199178:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return *((4206600 + v0));\n
}\n
", "4199203:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4199228:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return *((4206728 + v0));\n
}\n
", "4199253:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4199261:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4199280:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4199299:sub_401383": null, "4199300:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-1c;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[7].field_-1c)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 8;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4199379:sub_4013d3": null, "4199380:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_4043c0;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct struct_1 **v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v12[6];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262112 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 32;\n
        v10 = cgc_get_size_class();\n
        do\n
        {\n
            v11 = *(&(&cgc_free_lists)[4 * v10]);\n
            if (v11)\n
            {\n
                if (*(v11) < v9)\n
                {\n
                    v11 = *((v11 + 8));\n
                    continue;\n
                }\n
                goto LABEL_4014e1;\n
            }\n
            v10 = v10 + 1;\n
        } while (v10 != 32);\n
        v0 = &v2;\n
        if (cgc_allocate(0x40000, 0))\n
            return 0;\n
        v12 = *(&v2);\n
        if (!v12)\n
            return 0;\n
        v12[0] = 0x40000;\n
        v12[1] = 1;\n
        v12[3] = 0;\n
        v12[2] = 0;\n
        v12[5] = 0;\n
        v12[4] = 0;\n
        cgc_insert_into_flist();\n
        v11 = g_4043c0;\n
LABEL_4014e1:\n
        cgc_remove_from_flist();\n
        v13 = *(v11) - v9;\n
        if (v13 < 65)\n
            return v11 + 32;\n
        v14 = v9 + v11;\n
        *((&v9->field_0 + v11)) = v13;\n
        *(&v9->padding_4[v11]) = 1;\n
        *((8 + &v9->field_0 + v11)) = 0;\n
        *(&v9->padding_c[v11]) = 0;\n
        *(v11) = v9;\n
        *((20 + &v9->field_0 + v11)) = v11;\n
        *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
        v15 = *((v11 + 16));\n
        if (v15)\n
            v15->field_14 = v14;\n
        *((v11 + 16)) = v14;\n
        cgc_insert_into_flist();\n
    }\n
    else\n
    {\n
        v6 = v4 + 32;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            return &v8[1 + 2];\n
        }\n
        return 0;\n
    }\n
}\n
", "4199741:sub_40153d": null, "4199744:cgc_get_size_class": "extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int *v2;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v2 = &size_class_limits;\n
    while (true)\n
    {\n
        if (*(v2) >= v0)\n
            return v1;\n
        v1 += 1;\n
        v2 += 4;\n
        if (v1 == 32)\n
            return 32;\n
    }\n
}\n
", "4199787:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    while (*(v3) < v1[0])\n
    {\n
        v2 += 1;\n
        v3 += 4;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    v1[1] = 1;\n
    v4 = *((4211524 + 4 * v2));\n
    if (!v4)\n
    {\n
        *((4211524 + 4 * v2)) = v1;\n
        return \"0@\";\n
    }\n
    v1[2] = v4;\n
    *((*((4211524 + 4 * v2)) + 12)) = v1;\n
    *((4211524 + 4 * v2)) = v1;\n
    v1[3] = 0;\n
    return \"0@\";\n
}\n
", "4199890:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // esi\n
    struct_1 *v5;  // edi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    do\n
    {\n
        if (*(v3) >= v1->field_0)\n
        {\n
            v4 = v1->field_c;\n
            if (v4)\n
                v4->field_8 = v1->field_8;\n
            v5 = v1->field_8;\n
            if (v5)\n
                v5->field_c = v4;\n
            if (*((4211524 + 4 * v2)) == v1)\n
            {\n
                *((4211524 + 4 * v2)) = v5;\n
                goto LABEL_401627;\n
            }\n
        }\n
        v2 += 1;\n
        v3 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_401627:\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v0;\n
}\n
", "4199989:cgc_coalesce": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
} struct_1;\n
\n
int cgc_coalesce(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2[5];  // eax, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // ecx\n
    unsigned int v5[5];  // eax\n
    unsigned int v6;  // ecx\n
    struct_0 *v7;  // ecx\n
    struct_0 *v8;  // ecx\n
    unsigned int v9[5];  // eax\n
    unsigned int v10[5];  // ecx\n
    struct_0 *v11;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v12;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_14;\n
    if (!v2)\n
        return v2;\n
    v3 = v1->field_10;\n
    if (!v2[1])\n
    {\n
        if (!v3)\n
            return v2;\n
        if (!v3->field_4)\n
            return v2;\n
        cgc_remove_from_flist(v3);\n
        cgc_remove_from_flist(v1);\n
        v1->field_0 = v1->field_0 + v1->field_10->field_0;\n
        cgc_insert_into_flist(v1);\n
        v7 = v1->field_10;\n
        v2 = v7->field_14;\n
        if (v2)\n
            *((v2 + 16)) = v7->field_10;\n
        v11 = v7->field_10;\n
LABEL_401733:\n
        if (!v11)\n
            return v2;\n
        *((v11 + 20)) = v2;\n
    }\n
    if (v3 && v3->field_4)\n
    {\n
        cgc_remove_from_flist(v2);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v5 = v1->field_14;\n
        v6 = v5[0] + v1->field_0;\n
        v5[0] = v6;\n
        v5[0] = v6 + v1->field_10->field_0;\n
        cgc_insert_into_flist(v5);\n
        v8 = v1->field_10;\n
        v9 = v8->field_14;\n
        if (v9)\n
            v9[4] = v8->field_10;\n
        v12 = v8->field_10;\n
        if (v12)\n
        {\n
            v12->field_14 = &v9[0];\n
            goto LABEL_4016e5;\n
        }\n
    }\n
    v4 = v1->field_10;\n
    if (!v4)\n
        return v2;\n
    if (v4->field_4)\n
        return v1->field_14;\n
    cgc_remove_from_flist(v2);\n
    cgc_remove_from_flist(v1);\n
    v10 = v1->field_14;\n
    v10[0] = v10[0] + v1->field_0;\n
    cgc_insert_into_flist(v10);\n
LABEL_4016e5:\n
    v2 = v1->field_14;\n
    if (v2)\n
        *((v2 + 16)) = v1->field_10;\n
    v11 = v1->field_10;\n
    goto LABEL_401733;\n
}\n
", "4200256:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4200298:sub_40176a": null, "4200300:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v4 != v3)\n
                return v4 - v3;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4200348:cgc_memcpy": "int cgc_memcpy(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = *((a0 + v2));\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4200382:sub_4017be": null, "4200384:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    char *v1;  // eax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = a0;\n
        v3 += 1;\n
    } while (v2 != v3);\n
    return v0;\n
}\n
", "4200417:sub_4017e1": null, "4200420:cgc_output_number": "int cgc_output_number(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    int tmp_6;  // tmp #6\n
    char v0;  // [bp-0x1d]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    char v4;  // dl\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // edx\n
    char v12;  // al\n
\n
    v4 = a2;\n
    v5 = a1;\n
    v6 = a0;\n
    v7 = v3;\n
    if (v7 < v6)\n
    {\n
        v2 = v7;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        tmp_6 = (0 CONCAT v7) /m v6;\n
        v2 = tmp_6 >> 32;\n
        v4 = a2;\n
        v1 = cgc_output_number((0 CONCAT v7) /m v6, v6, v5 - 1, a2);\n
    }\n
    if (v5 > 0 && !v1)\n
    {\n
        v10 = v5 - 1;\n
        if (v10)\n
        {\n
            do\n
            {\n
                if (!(v4 & 1))\n
                    v0 = 32;\n
                else\n
                    v0 = 48;\n
                cgc_transmit(1, &v0, 1);\n
                v4 = a2;\n
                v10 -= 1;\n
            } while (v10);\n
        }\n
    }\n
    if (!(v4 & 2))\n
    {\n
        v11 = v2;\n
        v12 = v11 + 87;\n
    }\n
    else\n
    {\n
        v11 = v2;\n
        v12 = v11 + 55;\n
    }\n
    if (v11 < 10)\n
        v12 = v11 + 48;\n
    v0 = v12;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4200636:cgc_printf": "int cgc_printf(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v6;  // [bp+0x8]\n
    unsigned int v7;  // [bp+0xc]\n
    unsigned int v8;  // [bp+0x10]\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // ebp\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // ebp\n
\n
    v9 = v5;\n
    v2 = &v6;\n
    if (!*(v9))\n
        return 0;\n
    v10 = &v4;\n
    v11 = &v1;\n
    do\n
    {\n
        v15 = v9 + 1;\n
        v5 = v15;\n
        *(&v9) = *(v9);\n
        if (v1 != 37)\n
        {\n
            v1 = v9;\n
            cgc_transmit(1, v11, 1);\n
            v16 = v10;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            while (true)\n
            {\n
                v14 = v15;\n
                while (true)\n
                {\n
                    v15 = v14 + 1;\n
                    v5 = v15;\n
                    v12 = *(v14);\n
                    if (v12 - 49 >= 9)\n
                        break;\n
                    v13 = cgc_strtol(v14, &v5);\n
                    v14 = v5;\n
                }\n
                if (v12 > 99)\n
                {\n
                    if (v12 == 100)\n
                    {\n
                        v17 = v2;\n
                        v2 = v17 + 4;\n
                        if (*(v17) < 0)\n
                        {\n
                            v1 = 45;\n
                            v18 = &v4;\n
                            cgc_transmit(1, &v1, 1);\n
                        }\n
                        else\n
                        {\n
                            v18 = &v4;\n
                        }\n
LABEL_401a78:\n
                        cgc_output_number(v5, *(&v6), v7, v8);\n
                        v11 = &v1;\n
                        v16 = v18;\n
                        goto LABEL_401a4b;\n
                    }\n
                    if (v12 == 115)\n
                    {\n
                        v19 = v2;\n
                        v2 = v19 + 4;\n
                        v20 = *(v19);\n
                        v16 = &v4;\n
                        v11 = &v1;\n
                        if (cgc_strlen())\n
                        {\n
                            v21 = 0;\n
                            do\n
                            {\n
                                v1 = *((v20 + v21));\n
                                v0 = v11;\n
                                cgc_transmit(1, v11, 1);\n
                                v21 += 1;\n
                                v11 = &v1;\n
                            } while (v21 < cgc_strlen(v20, v0, 1));\n
                        }\n
                    }\n
                    if (v12 == 120)\n
                    {\n
                        v18 = &v4;\n
                        goto LABEL_401999;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v12 == 37)\n
                    {\n
                        v1 = 37;\n
                        goto LABEL_401a35;\n
                    }\n
                    if (v12 == 48)\n
                    {\n
                        v3 = 1;\n
                    }\n
                    else\n
                    {\n
                        if (v12 == 88)\n
                        {\n
                            v18 = &v4;\n
LABEL_401999:\n
                            v2 += 4;\n
                            goto LABEL_401a78;\n
                        }\n
                        v1 = *(v14);\n
LABEL_401a35:\n
                        v11 = &v1;\n
                        cgc_transmit(1, &v1, 1);\n
                        v16 = &v4;\n
                        goto LABEL_401a4b;\n
                    }\n
                }\n
            }\n
            continue;\n
        }\n
LABEL_401a4b:\n
        v10 = v16;\n
        v9 = v5;\n
    } while (*(v9));\n
    return 0;\n
}\n
", "4201122:sub_401aa2": null, "4201124:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-20;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[8].field_-20 - 32;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_401b0e;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_401b0e:\n
    return v5;\n
}\n
", "4201240:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4201264:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    int tmp_13;  // tmp #13\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    if (*(v2))\n
    {\n
        v3 = v2 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return *(v1) - v4;\n
            if (v4 != *(v1))\n
                return *(v1) - v4;\n
            v1 += 1;\n
            tmp_13 = *(v3);\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (tmp_13);\n
    }\n
    return *(v1) - 0;\n
}\n
", "4201310:sub_401b5e": null, "4201312:cgc_strcpy": "int cgc_strcpy(char *v0, char a0[2])\n
{\n
    char v1[2];  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v1[0];\n
    if (!v1[0])\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v1[1]);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4201357:sub_401b8d": null, "4201360:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4201378:sub_401ba2": null, "4201380:cgc_strsep": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strsep(struct struct_1 **v0, char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    struct struct_1 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    struct_0 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_401c0a;\n
                }\n
            }\n
            tmp_7 = *(v4);\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (tmp_7);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_401c0a:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4201492:cgc_strtol": "int cgc_strtol()\n
{\n
    char *v0;  // [bp+0x4]\n
    char v1;  // [bp+0x8]\n
    char v2;  // [bp+0xc]\n
    unsigned int v3;  // esi\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
    char *v5;  // edx, Other Possible Types: unsigned int\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char v7;  // bl\n
    char *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edi\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // ebp\n
\n
    v3 = *(&v2);\n
    v4 = *(&v1);\n
    v5 = v0;\n
    if (v3 > 36)\n
    {\n
        v13 = 0;\n
        v6 = v5;\n
    }\n
    else\n
    {\n
        v13 = 0;\n
        v6 = v5;\n
        if (v3 != 1)\n
        {\n
            v8 = v5;\n
            while (true)\n
            {\n
                v7 = *(v8);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v7 != 32)\n
                    break;\n
                v8 += 1;\n
            }\n
            v9 = 0;\n
            *(&v9) = v7 == 45;\n
            v10 = (*((v8 + v9)) == 43) + v9;\n
            v11 = v8 + v10;\n
            if (!v3)\n
            {\n
                v3 = 10;\n
                if (*(v11) == 48)\n
                {\n
                    if ((*((v8 + v10 + 1)) | 32) == 120)\n
                    {\n
                        v11 = v8 + v10 + 2;\n
                        v3 = 16;\n
                    }\n
                    else\n
                    {\n
                        v11 = v8 + v10 + 1;\n
                        v3 = 8;\n
                    }\n
                }\n
            }\n
            else if (v3 == 16)\n
            {\n
                v3 = 16;\n
                if (*(v11) == 48 && (*((v8 + v10 + 1)) | 32) == 120)\n
                    v11 = v8 + v10 + 2;\n
            }\n
            v12 = 0;\n
            v13 = 0;\n
            while (true)\n
            {\n
                v14 = *((v11 + v13));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v15 = v14 - 48;\n
                }\n
                else\n
                {\n
                    v16 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v16 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v15 = v14 + v16 + 10;\n
                }\n
                if (v15 >= v3)\n
                    break;\n
                v12 = v3 * v12 + v15;\n
                v13 += 1;\n
            }\n
            v6 = v11 + v13;\n
            v4 = *(&v1);\n
            v5 = v0;\n
        }\n
    }\n
    if (!v4)\n
        return;\n
    if (!v13)\n
        v6 = v5;\n
    *(v4) = v6;\n
    return;\n
}\n
", "4201775:cgc_strtoul": "int cgc_strtoul(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return cgc_strtol(v1, a0);\n
}\n
", "4201816:cgc_memcpy_fast": "int cgc_memcpy_fast(unsigned int *v1, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // esi\n
    unsigned int *v3;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebp\n
    unsigned int *v7;  // edi\n
    unsigned int *v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edx\n
\n
    v2 = a1;\n
    v3 = a0;\n
    v10 = v1;\n
    if ((((v10 | v2) | v3) & 15))\n
    {\n
        v10 = cgc_memcpy(v10, v3, v2);\n
        return v10;\n
    }\n
    if (!v2)\n
        return v10;\n
    v4 = v2 / 16;\n
    v12 = 1;\n
    v11 = 0;\n
    do\n
    {\n
        v0 = *((v3 + v11));\n
        v5 = *((v3 + v11 + 4));\n
        v6 = *((v3 + v11 + 8));\n
        v7 = v10;\n
        v8 = v3;\n
        v9 = *((v3 + v11 + 12));\n
        *((12 + v7 + v11)) = v9;\n
        v3 = v8;\n
        v10 = v7;\n
        *((8 + v7 + v11)) = v6;\n
        *((4 + v7 + v11)) = v5;\n
        *((v7 + v11)) = v0;\n
        v11 += 16;\n
        v12 -= 1;\n
    } while (v12);\n
}\n
", "4201952:cgc_msc_init": "extern char memory;\n
\n
int cgc_msc_init(unsigned int v1[15])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // esi\n
    unsigned int v3[15];  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    cgc_memset(v3, 0, 4176);\n
    v3[11] = 0;\n
    v3[14] = &memory;\n
    return 1;\n
}\n
", "4202010:cgc_msc_handle_ep0": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_msc_handle_ep0(struct_1 *v2, char a0[30])\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x11]\n
    char v3[30];  // eax\n
    struct_1 *v4;  // edi\n
\n
    v3 = a0;\n
    v4 = v2;\n
    if (v3[28] != 33)\n
    {\n
        if (v3[28] != 161)\n
        {\n
            return 0;\n
        }\n
        else if (v3[29] != 254)\n
        {\n
            return 0;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            v0 = 1;\n
            cgc_usb_send_reply(v4, v3, 0);\n
            v4->field_4(&v1);\n
            return 1;\n
        }\n
    }\n
    else\n
    {\n
        if (v3[29] != 255)\n
            return 0;\n
        v0 = 0;\n
        cgc_usb_send_reply(v4, v3, 0);\n
        return 1;\n
    }\n
}\n
", "4202125:cgc_msc_handle_urb": "typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    char padding_18[3];\n
    char field_1b;\n
    char padding_1c[19];\n
    unsigned int field_2f;\n
    unsigned int field_33;\n
    char field_37;\n
    unsigned int field_38;\n
    char field_3c;\n
    char padding_3d[3];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
    unsigned int field_50;\n
    unsigned short field_54;\n
    char padding_56[2];\n
    unsigned int field_58;\n
    unsigned short field_5c;\n
    char field_5e;\n
    unsigned short field_5f;\n
    char field_61;\n
    unsigned int field_62;\n
    char padding_66[4078];\n
    unsigned int field_1054;\n
    unsigned int field_1058;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[8];\n
    unsigned int field_14;\n
    char padding_18[24];\n
    unsigned int field_30;\n
    char padding_34[11];\n
    struct struct_1 *field_3f;\n
    char field_41;\n
    char padding_42[4];\n
    unsigned short field_46;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    uint128_t field_0;\n
} struct_1;\n
\n
extern char inquiry_data;\n
\n
int cgc_msc_handle_urb(struct_3 *v1, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    int tmp_9;  // tmp #9\n
    struct_3 *v2;  // edi\n
    struct_0 *v3;  // edx, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    uint128_t *v7;  // eax\n
    uint128_t *v8;  // ecx\n
    int v9;  // xmm0\n
    unsigned int v10;  // esi\n
    char *v11;  // ecx\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    struct_0 *v14;  // ebp\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // eax\n
\n
    v2 = v1;\n
    switch (*(&v2->field_37))\n
    {\n
    case 0:\n
        if (v3->field_8)\n
            return 0;\n
        if (v3->field_14 < 31)\n
            return 0;\n
        if (v3->field_30 != 1128420181)\n
            return 0;\n
        v7 = &v2->padding_8[4];\n
        v8 = &v3->field_30;\n
        v9 = *(v8);\n
        *((v7 + 15)) = *((v8 + 15));\n
        *(v7) = v9;\n
        v10 = 0;\n
        *(&v2->field_3c) = 0;\n
        v11 = &v2->field_50;\n
        *(&v2->field_37) = 3;\n
        v2->field_44 = 0;\n
        v2->field_48 = 0;\n
        v2->field_4c = 0;\n
        *(&v7) = (&v3->padding_34)[1];\n
        if ([D] x86g_calculate_condition(0xe<32>, 0x4<32>, Conv(8->32, Load(addr=(edx<4> + 0x3f<32>), size=1, endness=Iend_LE)), 0x27<32>, 0x0<32>))\n
        {\n
            if (!v7)\n
                goto LABEL_4021c8;\n
            if (v7 == 18)\n
            {\n
                v17 = ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, ecx<4>, 0x24<32>, 0x0<32>) ? 36 : *(&v3->field_3f + 3));\n
                v2->field_44 = v17;\n
                v2->field_48 = &inquiry_data;\n
                *(&v2->field_37) = 1;\n
                v20 = v2->field_14;\n
                if (!(v20 < v17))\n
                    break;\n
                goto LABEL_4021c5;\n
            }\n
            else\n
            {\n
                if (!(v7 == 37))\n
                    goto LABEL_402189;\n
                v2->field_50 = 0x7f000000;\n
                *(&v2->field_54) = 0x20000;\n
                v2->field_4c = 0;\n
                v2->field_44 = 8;\n
                v2->field_48 = v11;\n
                *(&v2->field_37) = 1;\n
                v20 = v2->field_14;\n
                if (!(v20 <= 7))\n
                    break;\n
                goto LABEL_4021c5;\n
            }\n
        }\n
        else if (v7 == 40)\n
        {\n
            v15 = __buildin_bswap32(*((&v3->field_3f + 1)));\n
            v10 = 1;\n
            if (!(v15 <= 128))\n
                break;\n
            v19 = *(&v3->padding_42[1]);\n
            *(&v19) = __ROL__(v19, 8);\n
            v10 = 1;\n
            if (!(v15 + v19 <= 128))\n
                break;\n
            v22 = v15 * 0x200 + v2->field_40;\n
            v23 = v19 * 0x200;\n
            v2->field_44 = v23;\n
            v2->field_48 = v22;\n
            *(&v2->field_37) = 1;\n
            v20 = v2->field_14;\n
            if (!(v20 < v23))\n
                goto LABEL_4021c8;\n
LABEL_4021c5:\n
            v2->field_44 = v20;\n
            goto LABEL_4021c8;\n
        }\n
        else if (v7 == 42)\n
        {\n
            v18 = __buildin_bswap32(*((&v3->field_3f + 1)));\n
            v10 = 1;\n
            if (v18 <= 128)\n
            {\n
                v21 = *(&v3->padding_42[1]);\n
                *(&v21) = __ROL__(v21, 8);\n
                v10 = 1;\n
                if (!(v18 + v21 <= 128))\n
                    break;\n
                *(&v2->field_37) = 2;\n
                *(&v2->padding_66[4072]) = v18;\n
                *(&v2->padding_66[4076]) = v21 * 0x200;\n
LABEL_4021c8:\n
                v10 = 0;\n
                break;\n
            }\n
            break;\n
        }\n
        else\n
        {\n
            if (v7 == 90)\n
            {\n
                if (*(&v3->field_3f + 1) != 63)\n
                {\n
                    v10 = 0;\n
                    if (!(*(&v3->field_3f + 1) == 6))\n
                        break;\n
                }\n
                cgc_memset(v11, 0, 18);\n
                *(&v2->field_50) = 0x1000;\n
                *(&v2->field_58) = 2182;\n
                *(&v2->field_58 + 2) = 1;\n
                *((&v2->field_58 + 3)) = 2;\n
                *(&v2->field_5c + 1) = 0;\n
                *(&v2->field_5e) = 0x80000000;\n
                v2->field_4c = 0;\n
                v2->field_44 = 18;\n
                v2->field_48 = v11;\n
                *(&v2->field_37) = 1;\n
                v24 = v2->field_14;\n
                if (v24 <= 17)\n
                    v2->field_44 = v24;\n
                v3 = a0;\n
                goto LABEL_4021c8;\n
            }\n
LABEL_402189:\n
            v10 = 0;\n
            v2->field_44 = 0;\n
            v2->field_48 = 0;\n
            *(&v2->field_37) = 1;\n
            break;\n
        }\n
        v2->field_38 = v10;\n
        v0 = *((v3 + 20));\n
        goto LABEL_4021d2;\n
    case 1:\n
        if (v3->field_8 != 1)\n
            return 0;\n
        v12 = v3->field_14;\n
        if (v12 > v12)\n
            v12 = v2->field_44;\n
        v0 = v12;\n
        cgc_usb_send_reply();\n
        v2->field_4(v2->field_48 + *(&v2->field_3c));\n
        *(&v2->field_3c) = *(&v2->field_3c) + v12;\n
        tmp_9 = v2->field_44;\n
        v2->field_44 = v2->field_44 - v12;\n
        if (tmp_9 == v12)\n
        {\n
            *(&v2->field_37) = 3;\n
            goto LABEL_4021dc;\n
        }\n
        goto LABEL_4021dc;\n
    case 2:\n
        if (v3->field_8)\n
            return 0;\n
        if (v2->field_1b != 42)\n
        {\n
            v2->field_38 = 1;\n
            *(&v2->field_37) = 3;\n
            v0 = 0;\n
            goto LABEL_4021d2;\n
        }\n
        else\n
        {\n
            v5 = *(&v2->field_3c);\n
            v13 = *(&v2->padding_66[4076]) - v5;\n
            if (v5 + v13 <= *(&v2->padding_66[4076]))\n
                v13 = v3->field_14;\n
            v14 = a0;\n
            cgc_memcpy_fast(*(&v2->padding_66[4072]) * 0x200 + v5 + v2->field_40, &a0->field_30, v13);\n
            v16 = v13 + *(&v2->field_3c);\n
            *(&v2->field_3c) = v16;\n
            if (v16 == *(&v2->padding_66[4076]))\n
                *(&v2->field_37) = 3;\n
            v0 = v14->field_14;\n
            cgc_usb_send_reply(v2, v14, 0);\n
            return 1;\n
        }\n
    case 3:\n
        if (v3->field_8 != 1)\n
            return 0;\n
        if (v3->field_14 < 13)\n
            return 0;\n
        strncpy(&v2->padding_1c[15], \"USBS\", 4);\n
        v6 = v2->field_14;\n
        *(&(&v2->padding_1c)[1]) = v2->field_10;\n
        *((&v2->field_2f + 3)) = v6 - *(&v2->field_3c);\n
        *(&v2->field_33 + 3) = v2->field_38;\n
        v0 = 13;\n
        cgc_usb_send_reply(v2, v3, 0);\n
        v2->field_4(&v2->padding_1c[15]);\n
        *(&v2->field_37) = 0;\n
        goto LABEL_4021dc;\n
        goto LABEL_4021dc;\n
    default:\n
LABEL_4021dc:\n
        return 1;\n
    }\n
LABEL_4021d2:\n
    cgc_usb_send_reply(v2);\n
    goto LABEL_4021dc;\n
}\n
", "4203052:main": "extern unsigned int g_4143d4;\n
extern unsigned int usb;\n
\n
int main()\n
{\n
    unsigned int v1;  // esi\n
\n
    cgc_usb_init(&usb, v1);\n
    g_4143d4 = cgc__send;\n
    usb = cgc__recv;\n
    do\n
    { } while (cgc_usb_handle_packet());\n
    return 0;\n
}\n
", "4203118:cgc__send": "int cgc__send(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x8]\n
\n
    v0 = &v1;\n
    cgc_transmit(1, v2, a0);\n
    return 0;\n
}\n
", "4203164:cgc__recv": "int cgc__recv(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // edi\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v3 = a0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 != v3)\n
        {\n
            v5 = v4;\n
            v6 = v3 - v4;\n
            v0 = &v1;\n
            if (cgc_receive(0, v2, v6))\n
                return v5;\n
            v7 = *(&v1);\n
            v4 = v7 + v5;\n
            if (!v7)\n
                return v5;\n
        }\n
        else\n
        {\n
            return v3;\n
        }\n
    }\n
}\n
", "4203248:cgc_usb_handle_packet": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_1 g_40400c;\n
\n
int cgc_usb_handle_packet(struct_2 *v3)\n
{\n
    struct_3 *v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    int tmp_2;  // tmp #2\n
    char v1;  // [bp-0x24]\n
    char v2;  // [bp-0x22]\n
    struct_2 *v4;  // esi\n
    struct_3 *v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
    struct_1 *v8;  // ecx, Other Possible Types: unsigned int\n
\n
    v4 = v3;\n
    if (!v4->field_8)\n
    {\n
        v5 = &v1;\n
        v0 = 8;\n
        if (v4->field_0(&v1) != 8)\n
        {\n
            return 0;\n
        }\n
        else if (*(&v1) != 4353)\n
        {\n
            return 0;\n
        }\n
        else\n
        {\n
            v7 = __ROL__(*(&v2), 8) | 0x80000000;\n
            v8 = &g_40400c.field_-4;\n
            while (*((v8 - 4)) != v7)\n
            {\n
                tmp_2 = *((v8 + 8));\n
                v8 += 8;\n
                if (!tmp_2)\n
                    return 0;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v5 = &v1;\n
        v0 = 20;\n
        if (v4->field_0(&v1) != 20)\n
            return 0;\n
        v6 = __buildin_bswap32(*(&v1));\n
        v8 = &g_40400c.field_-4;\n
        while (*((v8 - 4)) != v6)\n
        {\n
            tmp_2 = *((v8 + 8));\n
            v8 += 8;\n
            if (!tmp_2)\n
                return 0;\n
        }\n
    }\n
    v0 = v5;\n
    return *(v8)(v4);\n
}\n
", "4203422:cgc_usb_send_reply": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char field_10;\n
    char padding_11[3];\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
int cgc_usb_send_reply(struct_2 *v11, struct_0 *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    void* v7;  // [bp-0x28]\n
    void* v8;  // [bp-0x24]\n
    void* v9;  // [bp-0x20]\n
    char v10;  // [bp-0x1c]\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // edi\n
    unsigned int v14;  // ebp\n
    unsigned int v17;  // eax\n
\n
    v12 = a2;\n
    v13 = a0;\n
    v0 = 0x3000000;\n
    v1 = __buildin_bswap32(v13->field_4);\n
    v2 = __buildin_bswap32(v13->field_0);\n
    v14 = __buildin_bswap32(v13->field_8);\n
    v3 = __buildin_bswap32(v13->field_8);\n
    v4 = __buildin_bswap32(v13->field_c);\n
    v6 = __buildin_bswap32(v12);\n
    v5 = __buildin_bswap32(v17);\n
    v7 = 0;\n
    v8 = 0;\n
    v9 = 0;\n
    cgc_memset(&v10, 0, 8);\n
    v11->field_4(&v0);\n
    return 1;\n
}\n
", "4203576:cgc_usb_init": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_4042fc;\n
extern char g_4042fd;\n
extern char g_4042fe;\n
extern unsigned int g_40431c;\n
extern unsigned int g_404320;\n
\n
int cgc_usb_init(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x15]\n
    int tmp_16;  // tmp #16\n
    unsigned int v2;  // ecx\n
    char v3;  // al\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
    char v6;  // al\n
\n
    cgc_random(&v0, 1);\n
    v2 = v0;\n
    v3 = (v2 + v2 * 40 >> 12) * 100;\n
    tmp_16 = v2 - v3;\n
    v0 = v2 - v3;\n
    v4 = v2 - v3;\n
    v5 = v4 * 205 >> 11;\n
    v6 = (v5 * 2) * 5;\n
    *(&v2) = tmp_16 - v6;\n
    g_40431c = v5 * 0x1000000;\n
    g_404320 = (tmp_16 - v6) * 0x1000000;\n
    cgc_memset(\"1\", 0, 32);\n
    g_4042fc = v5 | 48;\n
    g_4042fd = 45;\n
    g_4042fe = v2 | 48;\n
    v1->field_8 = 0;\n
    return 1;\n
}\n
", "4203736:cgc_handle_devlist": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern unsigned int device_info;\n
extern unsigned int device_intf;\n
\n
int cgc_handle_devlist(struct_1 *v3)\n
{\n
    unsigned int v0;  // [bp-0x1c], Other Possible Types: char\n
    void* v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v4;  // esi\n
\n
    cgc_memset(&v0, 0, 12);\n
    v0 = 134222081;\n
    v1 = 0;\n
    v2 = 0x1000000;\n
    v4 = v3;\n
    v4->field_4(&v0);\n
    v4->field_4(\"/sys/devices/pci0000:00/0000:00:1d.1/usb1/1-1\");\n
    v4->field_4(&device_intf);\n
    return 1;\n
}\n
", "4203856:cgc_handle_import": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern void device_info;\n
extern unsigned int g_4042fc;\n
\n
int cgc_handle_import(struct_1 *v4)\n
{\n
    char v0;  // [bp-0x16c]\n
    unsigned int v1;  // [bp-0x14c]\n
    void* v2;  // [bp-0x148], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x144]\n
    struct_1 *v5;  // esi\n
\n
    v5 = v4;\n
    if (v5->field_0(&v0) != 32)\n
        return 0;\n
    v1 = 150999297;\n
    if (cgc_memcmp(&v0, \"1\", 32))\n
    {\n
        v2 = 0x1000000;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        memcpy(&v3, \"/sys/devices/pci0000:00/0000:00:1d.1/usb1/1-1\", 312);\n
        if (cgc_msc_init(v5 + 1))\n
            v5->field_8 = 1;\n
    }\n
    v5->field_4(&v1);\n
    return 1;\n
}\n
", "4204054:cgc_handle_submit": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[25];\n
    char field_1d;\n
    char field_1e;\n
    char field_1f;\n
} struct_1;\n
\n
extern unsigned int config_desc;\n
extern unsigned int device_desc;\n
extern unsigned int ep_desc;\n
extern unsigned int intf_desc;\n
\n
int cgc_handle_submit(struct struct_0 *v20[2], unsigned int a0[5])\n
{\n
    struct_1 *v0;  // [bp-0x98], Other Possible Types: unsigned int\n
    struct struct_1 **v1;  // [bp-0x94], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x90], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x8c], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned int *v5;  // [bp-0x84], Other Possible Types: unsigned int\n
    unsigned int *v6;  // [bp-0x80], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x7c]\n
    char v8;  // [bp-0x78]\n
    char v9;  // [bp-0x74]\n
    char v10;  // [bp-0x6c]\n
    char v11;  // [bp-0x68]\n
    char v12;  // [bp-0x64]\n
    char v13;  // [bp-0x60]\n
    char v14;  // [bp-0x4c]\n
    char v15;  // [bp-0x48]\n
    char v16;  // [bp-0x3c]\n
    char v17;  // [bp-0x38]\n
    char v18;  // [bp-0x30]\n
    char v19;  // [bp-0x1e]\n
    unsigned int v22;  // edi\n
    unsigned int v23[5];  // edx\n
    unsigned int v24;  // ecx\n
    struct_1 *v25;  // eax\n
    unsigned int *v26;  // ebp\n
    struct_1 *v27;  // edi\n
    struct struct_0 *v28[2];  // ecx\n
    unsigned int *v29;  // ebp\n
    struct_1 *v30;  // esi\n
    unsigned int v31;  // eax\n
    struct_1 *v32;  // ecx\n
    struct struct_0 *v33[2];  // edi\n
    struct struct_0 *v34[2];  // esi\n
\n
    if (v20[0](&v14) != 28)\n
        return 0;\n
    v22 = __buildin_bswap32(*(&v15));\n
    if (v22 < 0)\n
        return 0;\n
    v23 = a0;\n
    v24 = v23[3];\n
    if (v24)\n
    {\n
        v1 = &v13;\n
        v2 = &v8;\n
        v5 = &v9;\n
        v3 = &v10;\n
        v6 = &v11;\n
        v4 = &v12;\n
        v0 = &v7;\n
    }\n
    else\n
    {\n
        v25 = cgc_malloc(v22 + 48);\n
        if (!v25)\n
            goto LABEL_402836;\n
        v4 = &v25->padding_4[20];\n
        v6 = &v25->padding_4[16];\n
        v3 = &v25->padding_4[12];\n
        v5 = &v25->padding_4[4];\n
        v1 = &v25->padding_4[24];\n
        v22 = __buildin_bswap32(*(&v15));\n
        v2 = &v25->padding_4;\n
        v0 = v25;\n
        v24 = v23[3];\n
    }\n
    v26 = __buildin_bswap32(v23[2]);\n
    *(v0) = v26;\n
    *(v2) = __buildin_bswap32(v23[1]);\n
    *(v5) = __buildin_bswap32(v24);\n
    v25->field_0 = __buildin_bswap32(v23[4]);\n
    *(v3) = __buildin_bswap32(*(&v14));\n
    *(v26) = v22;\n
    v27 = v25;\n
    *(v4) = __buildin_bswap32(*(&v16));\n
    cgc_memcpy(v1, &v17, 8);\n
    v28 = v20;\n
    v26 = v6;\n
    if (!*(v5) && v28[0](v0 + 48) != *(v29))\n
    {\n
        cgc_free(v0);\n
LABEL_402836:\n
        return 0;\n
    }\n
    v30 = v0;\n
    if (v25->field_0)\n
    {\n
        v31 = cgc_msc_handle_urb(v28, v30);\n
        goto LABEL_40279a;\n
    }\n
    else\n
    {\n
        *(&v25) = *(v1);\n
        if (!*(&v25))\n
        {\n
            if (v30->field_1d == 9)\n
            {\n
                if (v30->field_1e != 1)\n
                    return 0;\n
                cgc_usb_send_reply(v28, v30, 0, 0);\n
LABEL_4028db:\n
                return 1;\n
            }\n
        }\n
        else\n
        {\n
            if (*(&v25) != 128)\n
            {\n
                *(&v25) = v25 & 96;\n
                if (*(&v25) != 32)\n
                    return 0;\n
                v31 = cgc_msc_handle_ep0(v28, v30);\n
LABEL_40279a:\n
                return v31;\n
            }\n
            else if (v30->field_1d == 6)\n
            {\n
                v32 = v30;\n
                if (v30->field_1f == 2)\n
                {\n
                    v0 = v30;\n
                    cgc_memcpy(&v18, &config_desc, 9);\n
                    cgc_memcpy(&v18 + 9, &intf_desc, 9);\n
                    cgc_memcpy(&v19, &ep_desc, 14);\n
                    v27 = (v27 < 32 ? 32 : *(&v18));\n
                    cgc_usb_send_reply(v20, v0, 0, v27);\n
                    v34[1](&v18);\n
                }\n
                else\n
                {\n
                    if (v30->field_1f != 1)\n
                        return 0;\n
                    v30 = (v30 < 18 ? 18 : *(v29));\n
                    cgc_usb_send_reply(v20, v32, 0, v30);\n
                    v33[1](&device_desc);\n
                    goto LABEL_4028db;\n
                }\n
                goto LABEL_4028db;\n
            }\n
        }\n
    }\n
}\n
", "4204774:cgc_handle_unlink": "int cgc_handle_unlink(struct struct_0 **v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0xc]\n
\n
    v0 = 4;\n
    return *(v2)(&v1) == 4;\n
}\n
", "4204824:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:memcpy": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}