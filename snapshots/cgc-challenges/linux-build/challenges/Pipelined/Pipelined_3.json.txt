{"4198400:_init": "extern struct_0 *g_405b74;\n
\n
int _init()\n
{\n
    if (g_405b74)\n
    {\n
        g_405b74();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 19067;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 19003;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405b70;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405b70)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_memset": "int cgc_memset(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1)\n
    {\n
        v0 = v2;\n
        while (true)\n
        {\n
            v3 = a1;\n
            a1 = v3 - 1;\n
            if (!v3)\n
                break;\n
            v4 = v0;\n
            v0 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v1 = v2;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = v2;\n
        return v1;\n
    }\n
}\n
", "4199017:sub_401269": null, "4199024:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(a0);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        v1 = *(v2) - *(a0);\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4199189:sub_401315": null, "4199200:cgc_strncmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strncmp(struct_0 *v1, struct_0 *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ecx\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v3 = a1;\n
            a1 = v3 - 1;\n
            if (!v3)\n
            {\n
                v0 = 0;\n
                return v0;\n
            }\n
            v4 = v1;\n
            v1 = &v4->field_0;\n
            v5 = v4->field_-1;\n
            v6 = a0;\n
            a0 = &v6->field_0;\n
            if (v5 != v6->field_-1)\n
            {\n
                v0 = *((v1 - 1)) - *((a0 - 1));\n
                return v0;\n
            }\n
        }\n
    }\n
}\n
", "4199384:sub_4013d8": null, "4199392:cgc_strlcpy": "int cgc_strlcpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1)\n
    {\n
        for (v0 = 0; v0 < a1 - 1; v0 += 1)\n
        {\n
            if (!v0[a0])\n
                break;\n
            v0[v2] = v0[a0];\n
        }\n
        v0[v2] = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4199582:sub_40149e": null, "4199584:cgc_strlcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strlcat(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"dZ\";\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1)\n
    {\n
        v2 = cgc_strlen();\n
        v0 = v2;\n
        v3 = v0 + cgc_strlcpy(v4 + v2, a0, a1 - v2);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4199757:sub_40154d": null, "4199760:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    char *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = v2; *(v2); v2 += 1);\n
    v1 = v2 - v0;\n
    return v1;\n
}\n
", "4199842:sub_4015a2": null, "4199856:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0 < 0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0 > 255)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            if (*(v1) == a0)\n
            {\n
                v0 = v1;\n
                return v0;\n
            }\n
            v3 = v1;\n
            v1 = v3 + 1;\n
            if (!*(v3))\n
            {\n
                v0 = 0;\n
                return v0;\n
            }\n
        }\n
    }\n
}\n
", "4200011:sub_40164b": null, "4200016:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
\n
    v1 = \"dZ\";\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v4))\n
            {\n
                v5 = v4;\n
                v4 = v5 + 1;\n
                v0 = cgc_strchr(a0, *(v5));\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4200206:sub_40170e": null, "4200208:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"dZ\";\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (!cgc_strchr(a0, *(v3)))\n
        {\n
            v3 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4200386:sub_4017c2": null, "4200400:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
\n
    v2 = &\"dZ\";\n
    if (v4)\n
        v2->field_3c = v4;\n
    if (!v2->field_3c)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v5 = v2;\n
        v0 = &v5->field_3c->field_0;\n
        v4 = &v0[cgc_strspn(v5->field_3c, a0)];\n
        v1 = v4;\n
        v6 = v2;\n
        v6->field_3c = v1 + cgc_strcspn(v4, a0);\n
        if (v6->field_3c == v4)\n
        {\n
            v2->field_3c = 0;\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!v2->field_3c->field_0)\n
        {\n
            v2->field_3c = 0;\n
        }\n
        else\n
        {\n
            v7 = v2;\n
            v7->field_3c->field_0 = 0;\n
            v7->field_3c = v7->field_3c + 1;\n
        }\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4200704:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"dZ\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_strlen(v5) + 1;\n
    v2 = cgc_malloc();\n
    if (v2)\n
    {\n
        v0 = v3;\n
        cgc_memcpy(v2, v5);\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4200855:sub_401997": null, "4200864:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4200950:sub_4019f6": null, "4200960:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"dZ\";\n
    v3 = 0;\n
    for (v2 = 0; v3 < a1; v3 = v2 + v3)\n
    {\n
        v0 = &v2;\n
        v4 = cgc_transmit(v5, a0 + v3, a1 - v3);\n
        if (v4 > 0)\n
        {\n
            cgc_printf(3, v1 - 7032);\n
            cgc_err(3);\n
        }\n
    }\n
    return 1;\n
}\n
", "4201155:sub_401ac3": null, "4201168:cgc_err": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_err()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v6 = &v3;\n
    v2 = v7;\n
    v1 = \"dZ\";\n
    v0 = *(&v5);\n
    cgc_transmit_str(2);\n
    v8 = v1;\n
    cgc__terminate(v4);\n
    cgc_transmit_str();\n
    return;\n
}\n
", "4201232:cgc_transmit_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_str(unsigned int v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"dZ\";\n
    v1 = v4;\n
    v2 = a0;\n
    v6 = v3;\n
    return cgc_transmit_all(v1, v2, cgc_strlen(a0));\n
}\n
", "4201314:sub_401b62": null, "4201328:cgc_receive_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = \"dZ\";\n
    for (v2 = 0; v2 < a1; v2 += 1)\n
    {\n
        v0 = &v3;\n
        v4 = cgc_receive(v5, a0 + v2, 1);\n
        if (v4)\n
        {\n
            v0 = v4;\n
            cgc_printf(2, v1 - 6994, v5);\n
            cgc_err(4);\n
        }\n
        if (!*(&v3))\n
        {\n
            v0 = v4;\n
            cgc_printf(2, v1 - 6937, v5);\n
            cgc_err(5);\n
        }\n
    }\n
    return v2;\n
}\n
", "4201591:sub_401c77": null, "4201600:cgc_read_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(unsigned int v6, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x11]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // ecx\n
\n
    v1 = \"dZ\";\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(v6, &v4, 1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        if (v4 == a2)\n
        {\n
            v5 = v3;\n
            return v5;\n
        }\n
        else if (v3 < a1)\n
        {\n
            v7 = v3;\n
            v3 = v7 + 1;\n
            v7[a0] = v4;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    v5 = -1;\n
    return v5;\n
}\n
", "4201795:sub_401d43": null, "4201808:cgc_memcmp": "int cgc_memcmp(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v4 = a1;\n
        a1 = v4 - 1;\n
        if (!v4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*(v1) != *(v0))\n
        {\n
            v2 = *(v1) - *(v0);\n
            return v2;\n
        }\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
}\n
", "4201935:sub_401dcf": null, "4201936:cgc_sleep": "int cgc_sleep(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
\n
    v1 = v3;\n
    v2 = 0;\n
    v0 = 0;\n
    return cgc_fdwait(0, 0, 0, &v1);\n
}\n
", "4202022:sub_401e26": null, "4202032:cgc_ffs_u": "int cgc_ffs_u(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (v0 < 32)\n
    {\n
        v3 = 1 << (v0 & 31);\n
        if ((v0 & 32))\n
            v3 = 0;\n
        if ((v2 & v3))\n
        {\n
            if (!(!1))\n
                goto LABEL_401eb3;\n
            goto LABEL_401eae;\n
        }\n
        else if (false)\n
        {\n
LABEL_401eb3:\n
            v0 += 1;\n
        }\n
        else\n
        {\n
LABEL_401eae:\n
            break;\n
        }\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4202197:sub_401ed5": null, "4202208:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned short field_44;\n
    char padding_46[120];\n
    char field_be;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    struct struct_2 *field_18;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    struct_3 *v5;  // [bp-0x1c]\n
    struct_4 *v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_3 *v13;  // eax\n
    unsigned int v14;  // edx\n
    struct_3 *v15;  // eax\n
    struct_0 *v16;  // ebx\n
    struct_0 *v17;  // ebx\n
    struct_0 *v18;  // ebx\n
    struct_0 *v19;  // ebx\n
\n
    v4 = &\"dZ\";\n
    if (v10 <= 0)\n
    {\n
        v11 = v4;\n
        v0 = &v11[36].padding_0[8];\n
        v1 = &v11[35].padding_46[102];\n
        v2 = 160;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (!v4->field_be)\n
        cgc_malloc_init();\n
    if (v10 > v4->field_44)\n
    {\n
        v9 = cgc_malloc_large();\n
        return v9;\n
    }\n
    for (v8 = 0; v8 < 10; v8 += 1)\n
    {\n
        if (v10 <= *(&v4->padding_46[8 + 12 * v8]))\n
            break;\n
    }\n
    v6 = &v4->padding_46[12 * v8];\n
    if (!v6->field_0)\n
    {\n
        v5 = cgc_malloc_request_chunk();\n
        v5->field_10 = v6;\n
        v5->field_4 = v6->field_8;\n
        v5->field_a = v6->field_a;\n
        if (!v5)\n
        {\n
            v12 = v4;\n
            v0 = &v12[35].padding_46[33];\n
            v1 = &v12[35].padding_46[102];\n
            v2 = 182;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        v5->field_18 = 0;\n
        v5->field_14 = &v6->field_0->padding_0;\n
        if (v6->field_0)\n
            v6->field_0->field_18 = &v5->padding_0;\n
        v6->field_0 = v5;\n
    }\n
    v5 = v6->field_0;\n
    v8 = cgc_ffs_u(v5->field_c);\n
    v13 = v5;\n
    v13->field_8 = v13->field_8 + 1;\n
    v3 = v8;\n
    v14 = 1 << (v8 & 31);\n
    if ((v3 & 32))\n
        v14 = 0;\n
    v15 = v5;\n
    v15->field_c = v15->field_c | v14;\n
    if (v5->field_8 == v5->field_a)\n
    {\n
        if (!v6->field_0)\n
        {\n
            v16 = v4;\n
            v0 = &v16[35].field_44 + 1;\n
            v1 = &v16[35].padding_46[102];\n
            v2 = 193;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        if (!v5)\n
        {\n
            v17 = v4;\n
            v0 = &v17[35].padding_46[33];\n
            v1 = &v17[35].padding_46[102];\n
            v2 = 193;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        if (v5 == v6->field_0)\n
        {\n
            v6->field_0 = &v5->field_14->padding_0;\n
        }\n
        else\n
        {\n
            if (v5->field_18)\n
                v5->field_18->field_14 = v5->field_14;\n
            if (v5->field_14)\n
                v5->field_14->field_18 = v5->field_18;\n
        }\n
        if (!v5)\n
        {\n
            v18 = v4;\n
            v0 = &v18[35].padding_46[33];\n
            v1 = &v18[35].padding_46[102];\n
            v2 = 194;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        v5->field_18 = 0;\n
        v5->field_14 = v6->field_4;\n
        if (v6->field_4)\n
            v6->field_4->field_18 = v5;\n
        v6->field_4 = &v5->padding_0;\n
        if (!v6->field_4)\n
        {\n
            v19 = v4;\n
            v0 = &v19[35].padding_0[22];\n
            v1 = &v19[35].padding_46[102];\n
            v2 = 195;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
    }\n
    v7 = &v5->padding_0[1 + v8 * v6->field_8];\n
    v9 = v7;\n
    return v9;\n
}\n
", "4203294:sub_40231e": null, "4203296:cgc_malloc_init": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned short field_44;\n
    char padding_46[120];\n
    char field_be;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* state;\n
\n
int cgc_malloc_init()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    struct_0 *v3;  // [bp-0x24]\n
    unsigned short v4;  // [bp-0x20]\n
    unsigned short v5;  // [bp-0x1e]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned short v8;  // [bp-0x12]\n
    unsigned short v9;  // [bp-0x10]\n
    unsigned short v10;  // [bp-0xe]\n
    unsigned short v11[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // eax\n
    struct_0 *v16;  // ebx\n
    struct_0 *v17;  // ebx\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    struct_0 *v25;  // ebx\n
    struct_0 *v26;  // ebx\n
    struct_0 *v27;  // ebx\n
\n
    v12 = v14;\n
    v3 = &\"dZ\";\n
    *(&v11[0]) = 0;\n
    v10 = 128;\n
    state = 0;\n
    cgc_memset(&state, 0, 127);\n
    v9 = 4068;\n
    for (v8 = 0; v8 < 10; v8 += 1)\n
    {\n
        v11 = &v3->padding_46[12 * v8];\n
        *((v11 + 8)) = v10;\n
        v15 = v9;\n
        *((v11 + 10)) = (v15 >> 31 CONCAT v15) /m v10;\n
        if (*((v11 + 10)) <= 1)\n
        {\n
            v16 = v3;\n
            v0 = &v16[33].padding_46[76];\n
            v1 = &v16[35].padding_46[102];\n
            v2 = 93;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        if (*((v11 + 10)) > 32)\n
        {\n
            v17 = v3;\n
            v0 = &v17[33].padding_46[28];\n
            v1 = &v17[35].padding_46[102];\n
            v2 = 94;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        v7 = v10;\n
        v19 = ftop<4> - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v20 = v19 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v20 = v19 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v21 = v20 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v22 = v21 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v22 = v21 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t20,1] = t21\n
        [D] PutI(136:I8x8)[t20,1] = 0x01\n
        [D] PutI(136:I8x8)[t20,0] = 0x00\n
        v23 = v22 + 1;\n
        v5 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-30, size=2, endness=Iend_LE)))));\n
        v4 = v5 | 0xc00;\n
        v6 = ([D] GetI(136:I8x8)[t66,0] ? [D] GetI(72:F64x8)[t66,0] : nan);\n
        [D] PutI(136:I8x8)[t66,0] = 0x00\n
        v24 = v23 + 1;\n
        v10 = v6;\n
    }\n
    if (!v11)\n
    {\n
        v25 = v3;\n
        v0 = &v25[33].padding_0[48];\n
        v1 = &v25[35].padding_46[102];\n
        v2 = 98;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (v8 != 10)\n
    {\n
        v26 = v3;\n
        v0 = &v26[33].padding_0[15];\n
        v1 = &v26[35].padding_46[102];\n
        v2 = 99;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v3->field_44 = *((v11 + 8));\n
    if (v3->field_44 <= 0)\n
    {\n
        v27 = v3;\n
        v0 = &v27[32].padding_46[101];\n
        v1 = &v27[35].padding_46[102];\n
        v2 = 101;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v3->field_be = 1;\n
    return v3;\n
}\n
", "4203961:sub_4025b9": null, "4203968:cgc_malloc_large": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_malloc_large(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v3 = v4 + 4123 >> 12;\n
    v0 = v3;\n
    v1 = cgc_malloc_request_chunk();\n
    v1->field_4 = v4;\n
    v2 = &v1[3].field_4;\n
    return v2;\n
}\n
", "4204048:cgc_malloc_request_chunk": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_request_chunk(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int *v6;  // [bp-0xc]\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // ebx\n
    struct_0 *v10;  // ebx\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // eax\n
\n
    v3 = &\"dZ\";\n
    v5 = v7 * 0x1000;\n
    if (v5 <= 0)\n
    {\n
        v8 = v3;\n
        v0 = &v8[101].padding_0[16];\n
        v1 = &v8[100].padding_0[57];\n
        v2 = 120;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if ((0 CONCAT v5) /m v7 != 0x1000)\n
    {\n
        v9 = v3;\n
        v0 = &v9[91].padding_0[52];\n
        v1 = &v9[100].padding_0[57];\n
        v2 = 121;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v4 = cgc_allocate(v5, 0);\n
    if (v4)\n
    {\n
        v10 = v3;\n
        v0 = &v10[91].padding_0[8];\n
        v1 = &v10[100].padding_0[57];\n
        v2 = 124;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (!v6)\n
    {\n
        v11 = v3;\n
        v0 = &v11[90].padding_0[49];\n
        v1 = &v11[100].padding_0[57];\n
        v2 = 125;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v12 = v3;\n
    *(v6) = v7;\n
    v12->field_40 = v7 + v12->field_40;\n
    return v6;\n
}\n
", "4204462:sub_4027ae": null, "4204464:cgc_free": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
    struct struct_1 *field_14;\n
    struct struct_0 *field_18;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(struct_3 *v8)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct_2 *v6;  // [bp-0x10]\n
    struct_3 *v7;  // [bp-0xc]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edx\n
    struct_3 *v15;  // eax\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // ebx\n
    struct_3 *v19;  // eax\n
    unsigned int v20;  // ebx\n
    unsigned int v21;  // ebx\n
\n
    v4 = \"dZ\";\n
    if (!v8)\n
    {\n
        v9 = v4;\n
        v0 = v9 - 6663;\n
        v1 = v9 - 6857;\n
        v2 = 206;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v7 = v8 & -0x1000;\n
    if (!v7->field_10)\n
    {\n
        v10 = cgc_malloc_release_chunk();\n
        return v10;\n
    }\n
    v6 = v7->field_10;\n
    v5 = (0 CONCAT v8 - v7 - 28) /m v6->field_8;\n
    v11 = 1 << (v5 & 31);\n
    if ((v5 & 32))\n
        v11 = 0;\n
    if ((v7->field_c & v11))\n
    {\n
        if (!(!1))\n
            goto LABEL_4028e2;\n
    }\n
    else\n
    {\n
        if (!(!0))\n
            goto LABEL_4028e2;\n
    }\n
    v12 = v4;\n
    v0 = v12 - 6633;\n
    v1 = v12 - 6857;\n
    v2 = 216;\n
    cgc_printf(2, v0, v1);\n
    cgc__terminate(1, v0, v1);\n
LABEL_4028e2:\n
    v3 = v5;\n
    v13 = 1 << (v5 & 31);\n
    if ((v3 & 32))\n
        v13 = 0;\n
    v14 = ~(v13);\n
    v15 = v7;\n
    v15->field_c = v15->field_c & v14;\n
    if (v7->field_8 == v7->field_a)\n
    {\n
        if (!v6->field_4)\n
        {\n
            v16 = v4;\n
            v0 = v16 - 6583;\n
            v1 = v16 - 6857;\n
            v2 = 220;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        if (!v7)\n
        {\n
            v17 = v4;\n
            v0 = v17 - 6788;\n
            v1 = v17 - 6857;\n
            v2 = 220;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        if (v7 == v6->field_4)\n
        {\n
            v6->field_4 = v7->field_14;\n
        }\n
        else\n
        {\n
            if (v7->field_18)\n
                v7->field_18->field_14 = v7->field_14;\n
            if (v7->field_14)\n
                v7->field_14->field_18 = v7->field_18;\n
        }\n
        if (!v7)\n
        {\n
            v18 = v4;\n
            v0 = v18 - 6788;\n
            v1 = v18 - 6857;\n
            v2 = 221;\n
            cgc_printf(2, v0, v1);\n
            cgc__terminate(1, v0, v1);\n
        }\n
        v7->field_18 = 0;\n
        v7->field_14 = v6->field_0;\n
        if (v6->field_0)\n
            v6->field_0->field_18 = v7;\n
        v6->field_0 = &v7->padding_0;\n
    }\n
    v19 = v7;\n
    v19->field_8 = v19->field_8 - 1;\n
    v10 = v7->field_8;\n
    if (v10)\n
        return v7->field_8;\n
    if (!v6->field_0)\n
    {\n
        v20 = v4;\n
        v0 = v20 - 6754;\n
        v1 = v20 - 6857;\n
        v2 = 227;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (!v7)\n
    {\n
        v21 = v4;\n
        v0 = v21 - 6788;\n
        v1 = v21 - 6857;\n
        v2 = 227;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (v7 == v6->field_0)\n
    {\n
        v6->field_0 = v7->field_14;\n
    }\n
    else\n
    {\n
        if (v7->field_18)\n
            v7->field_18->field_14 = v7->field_14;\n
        if (v7->field_14)\n
            v7->field_14->field_18 = v7->field_18;\n
    }\n
    v10 = cgc_malloc_release_chunk();\n
    return v10;\n
}\n
", "4205546:sub_402bea": null, "4205552:cgc_malloc_release_chunk": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_release_chunk(unsigned int *v5)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    struct_0 *v8;  // ebx\n
    unsigned int v9;  // eax\n
    struct_0 *v10;  // ebx\n
\n
    v3 = &\"dZ\";\n
    if (!v5)\n
    {\n
        v6 = v3;\n
        v0 = &v6[90].padding_0[16];\n
        v1 = &v6[100].padding_0[57];\n
        v2 = 107;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (*(v5) <= 0)\n
    {\n
        v7 = v3;\n
        v0 = &v7[89].padding_0[52];\n
        v1 = &v7[100].padding_0[57];\n
        v2 = 108;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v8 = v3;\n
    v8->field_40 = v8->field_40 - *(v5);\n
    v9 = cgc_deallocate(v5);\n
    v4 = v9;\n
    if (!v4)\n
        return v9;\n
    v10 = v3;\n
    v0 = &v10[89].padding_0[17];\n
    v1 = &v10[100].padding_0[57];\n
    v2 = 111;\n
    cgc_printf(2, v0, v1);\n
    v9 = cgc__terminate(1, v0, v1);\n
    return v9;\n
}\n
", "4205857:sub_402d21": null, "4205872:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v4 = \"dZ\";\n
    if (v6 <= 0)\n
    {\n
        v7 = v4;\n
        v0 = v7 - 6537;\n
        v1 = v7 - 6857;\n
        v2 = 237;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    if (a0 <= 0)\n
    {\n
        v8 = v4;\n
        v0 = v8 - 6884;\n
        v1 = v8 - 6857;\n
        v2 = 238;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    v3 = a0;\n
    if (v3 >= (0 CONCAT -1) /m v6)\n
    {\n
        v9 = v4;\n
        v0 = v9 - 6509;\n
        v1 = v9 - 6857;\n
        v2 = 239;\n
        cgc_printf(2, v0, v1);\n
        cgc__terminate(1, v0, v1);\n
    }\n
    a0 *= v6;\n
    v5 = cgc_malloc(a0);\n
    return cgc_memset(v5, 0, a0);\n
}\n
", "4206212:sub_402e84": null, "4206224:cgc_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf(unsigned int v5, char a0[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v6;  // [bp+0xc]\n
    char v7[2];  // eax\n
    unsigned int *v8;  // eax\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
\n
    v2 = \"dZ\";\n
    v3 = 0;\n
    v4 = &v6;\n
    for (v3 = 0; *(a0); a0 += 1)\n
    {\n
        if (*(a0) != 37)\n
        {\n
            v0 = *(a0);\n
            v3 = cgc_transmit_char(v5) + v3;\n
        }\n
        else\n
        {\n
            v7 = a0;\n
            a0 = &v7[1];\n
            v1 = v7[1];\n
            if (v1 == 99)\n
            {\n
                v8 = v4;\n
                v4 = v8 + 1;\n
                v0 = *(v8);\n
                v3 = cgc_transmit_char(v5) + v3;\n
            }\n
            else if (v1 == 115)\n
            {\n
                v10 = v4;\n
                v4 = v10 + 1;\n
                v0 = *(v10);\n
                v3 = cgc_transmit_string(v5) + v3;\n
            }\n
            else if (v1 != 117)\n
            {\n
                v0 = *(a0);\n
                v3 = cgc_transmit_char(v5) + v3;\n
            }\n
            else\n
            {\n
                v11 = v4;\n
                v4 = v11 + 1;\n
                v0 = *(v11);\n
                v3 = cgc_transmit_unsigned(v5) + v3;\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4206592:cgc_transmit_char": "int cgc_transmit_char(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &v2;\n
    v1 = cgc_transmit(v4, &a0, 1);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4206690:sub_403062": null, "4206704:cgc_transmit_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_string(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"dZ\";\n
    v2 = cgc_strlen(a0);\n
    v1 = cgc_transmit_all(v5, a0, v2);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4206814:sub_4030de": null, "4206816:cgc_transmit_unsigned": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_unsigned(unsigned int v5, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = \"dZ\";\n
    v2 = (0 CONCAT a0) /m 10;\n
    v3 = a0 - v2 * 10 + 48;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = cgc_transmit_unsigned(v5, v2);\n
    v4 = v0;\n
    cgc_transmit_char(v5, v3);\n
    return v4;\n
}\n
", "4206962:sub_403172": null, "4206976:cgc_setup": "extern unsigned int _GLOBAL_OFFSET_TABLE_[14];\n
extern unsigned int read_fd;\n
extern unsigned int write_fd;\n
\n
int cgc_setup()\n
{\n
    unsigned int v0[14];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[14];  // ebx\n
    unsigned int v6[14];  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v0[0] = \"dZ\";\n
    v1 = cgc_receive_all(read_fd, &write_fd, 4);\n
    if (v1 != 4)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1 = cgc_receive_all(v5[12], &v5[12], 4);\n
    if (v1 != 4)\n
        cgc__terminate();\n
    v6 = v0;\n
    if (v6[13] == 65535)\n
        v6 = cgc__terminate();\n
    v7 = v2;\n
    return v6;\n
}\n
", "4207167:sub_40323f": null, "4207168:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_4043e9;\n
extern unsigned int write_fd;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    char v2;  // [bp-0x4]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v2;\n
    v1 = v5;\n
    v0 = \"dZ\";\n
    cgc_transmit_all(write_fd, &g_4043e9, 2);\n
    v6 = v0;\n
    cgc__terminate(v3, &g_4043e9);\n
    count();\n
    return;\n
}\n
", "4207248:count": "extern unsigned int _GLOBAL_OFFSET_TABLE_[14];\n
\n
int count()\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2[14];  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x15]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11[14];  // ebx\n
\n
    v2[0] = \"dZ\";\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        cgc_receive_all(v2[12], &v8, 1);\n
        v6 += 1;\n
        if (!v8)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        if (v8 >= 65 && v8 <= 90)\n
            goto LABEL_403341;\n
        if (v8 < 97)\n
        {\n
LABEL_403357:\n
            if (v7 == 1)\n
            {\n
                v7 = 0;\n
                v4 += 1;\n
            }\n
LABEL_403371:\n
            if (v8 != 10)\n
            {\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                v11 = v2;\n
                v5 += 1;\n
                v0 = v4;\n
                v1 = v5;\n
                cgc_printf(v11[13], &v11[107 + 11]);\n
                if (!v3)\n
                {\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                v3 = 0;\n
            }\n
            cgc_transmit_all(v2[13], &v8, 1);\n
        }\n
        else\n
        {\n
            if (!(v8 <= 122))\n
                goto LABEL_403357;\n
LABEL_403341:\n
            if (!v7)\n
                v7 = 1;\n
            goto LABEL_403371;\n
        }\n
    }\n
}\n
", "4207639:sub_403417": null, "4207648:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"dZ\";\n
    cgc_setup();\n
    cgc_sleep(2);\n
    v1 = count();\n
    cgc_exit();\n
    v5 = v2;\n
    return 0;\n
}\n
", "4207732:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}