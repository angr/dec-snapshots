{"4202496:_init": "extern struct_0 *g_40d124;\n
\n
int _init()\n
{\n
    if (g_40d124)\n
    {\n
        g_40d124();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202678:sub_4020b6": null, "4202688:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202731:sub_4020eb": null, "4202732:sub_4020ec": "int sub_4020ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202736:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202740:sub_4020f4": null, "4202752:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 45099;\n
    v6 = v5 + 803;\n
    v7 = v5 + 803;\n
    if (v7 == v6)\n
        return v5 + 803;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202803:sub_402133": "int sub_402133()\n
{\n
}\n
", "4202809:sub_402139": "int sub_402139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202816:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 45035;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 803;\n
    v9 = (v6 + 803 - (v6 + 803) >> 31) + (803 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202887:sub_402187": "int sub_402187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40d120;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40d120)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202971:sub_4021db": "int sub_4021db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202976:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_calloc": "extern unsigned int g_heap;\n
\n
int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v4;  // eax\n
\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, ecx<4>, Load(addr=stack_base+8, size=4, endness=Iend_LE), 0x0<32>))\n
        return 0;\n
    v4 = cgc_malloc_alloc(&g_heap);\n
    if (v4)\n
    {\n
        v0 = v1 * a0;\n
        cgc_memset(v4, 0);\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4203082:sub_40224a": null, "4203088:cgc_isascii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isascii(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 1;\n
}\n
", "4203117:sub_40226d": null, "4203120:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 2;\n
}\n
", "4203149:sub_40228d": null, "4203152:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 16;\n
}\n
", "4203181:sub_4022ad": null, "4203184:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 14;\n
}\n
", "4203213:sub_4022cd": null, "4203216:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 12;\n
}\n
", "4203245:sub_4022ed": null, "4203248:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 4;\n
}\n
", "4203277:sub_40230d": null, "4203280:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 8;\n
}\n
", "4203309:sub_40232d": null, "4203312:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 64;\n
}\n
", "4203341:sub_40234d": null, "4203344:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 32;\n
}\n
", "4203373:sub_40236d": null, "4203376:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16680 + v0] & 4294967168;\n
}\n
", "4203405:sub_40238d": null, "4203408:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(char v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16680 + v1] & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[16680 + (v1 ^ 32)] & 2) >> 1);\n
    return v1 - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[16680 + v1] & 2) >> 1);\n
}\n
", "4203467:sub_4023cb": null, "4203472:cgc_toupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_toupper(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16680 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203506:sub_4023f2": null, "4203520:cgc_digittoint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_digittoint(char v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = v1 ^ 32;\n
    if (!((&_GLOBAL_OFFSET_TABLE_)[16680 + v1] & 8))\n
        v2 = v1;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16680 + v2] & 2))\n
        return v2 - 48;\n
    v3 = v2 - 65;\n
    v4 = v2 - 55;\n
    if (v3 < 6)\n
        return v4;\n
    return 0;\n
}\n
", "4203582:sub_40243e": null, "4203584:cgc_tolower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tolower(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16680 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203618:sub_402462": null, "4203632:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v2;\n
    cgc__terminate();\n
    cgc_fflush();\n
    return;\n
}\n
", "4203664:cgc_fflush": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_fflush(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    struct_0 *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    char *v9;  // ecx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    char *v13;  // esi, Other Possible Types: unsigned int\n
    char *v14;  // eax\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // esi\n
    void* v18;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
\n
    v5 = v4;\n
    v6 = v4->field_8;\n
    if (v6 == -1)\n
        return 0;\n
    if (v5->field_4 != 1)\n
    {\n
        v8 = v5->field_c;\n
        v9 = v5->field_10;\n
        v16 = v8 - v6;\n
        if (v9 && v16)\n
        {\n
            v2 = v6;\n
            v10 = v8 + ~(v6);\n
            v1 = v16 & 3;\n
            v13 = 0;\n
            if (v10 >= 3)\n
            {\n
                v11 = v16 & -0x4;\n
                v12 = 27 + v2 + v4;\n
                v13 = 0;\n
                do\n
                {\n
                    *((v12 + v13 - 3)) = v9[*((v12 + v13 - 3))];\n
                    *((v12 + v13 - 2)) = v9[*((v12 + v13 - 2))];\n
                    *((v12 + v13 - 1)) = v9[*((v12 + v13 - 1))];\n
                    *((v12 + v13)) = v9[*((v12 + v13))];\n
                    v13 += 4;\n
                } while (v11 != v13);\n
            }\n
            v5 = v4;\n
            if (v1)\n
            {\n
                v14 = v13 + v2 + v5 + 24;\n
                v15 = 0;\n
                do\n
                {\n
                    v14[v15] = v9[v14[v15]];\n
                    v15 += 1;\n
                } while (v1 != v15);\n
            }\n
            v6 = *((v5 + 8));\n
            v16 = *((v5 + 12)) - v6;\n
        }\n
        v1 = *(v5);\n
        v17 = v6 + v5 + 24;\n
        v18 = 0;\n
        while (v16 > v18)\n
        {\n
            v0 = &v3;\n
            v19 = cgc_transmit(v1, v17 + v18, v16 - v18);\n
            v18 += *(&v3);\n
            if (v19)\n
            {\n
                v7 = -1;\n
                v5 = v4;\n
                goto LABEL_4025cd;\n
            }\n
        }\n
        v5 = v4;\n
    }\n
    v7 = 0;\n
LABEL_4025cd:\n
    *((v5 + 12)) = 0;\n
    *((v5 + 8)) = 0;\n
    return v7;\n
}\n
", "4204003:sub_4025e3": null, "4204016:cgc_fbuffered": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_fbuffered(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // esi\n
    char *v10;  // ecx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    char *v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    void* v19;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
\n
    v5 = a0;\n
    v6 = v4;\n
    v7 = v4->field_8;\n
    if (v7 == -1)\n
    {\n
        v21 = -(v5 < 1);\n
        *((v6 + 8)) = v21;\n
        *((v6 + 12)) = 0;\n
        return v21;\n
    }\n
    if (v6->field_4 == 1)\n
    {\n
        v8 = &v6->field_c;\n
    }\n
    else\n
    {\n
        v9 = v6->field_c;\n
        v10 = v6->field_10;\n
        v17 = v9 - v7;\n
        if (v10 && v17)\n
        {\n
            v1 = v7;\n
            v11 = v9 + ~(v7);\n
            v2 = v17 & 3;\n
            v14 = 0;\n
            if (v11 >= 3)\n
            {\n
                v12 = v17 & -0x4;\n
                v13 = v1 + v4 + 27;\n
                v14 = 0;\n
                do\n
                {\n
                    *((v13 + v14 - 3)) = v10[*((v13 + v14 - 3))];\n
                    *((v13 + v14 - 2)) = v10[*((v13 + v14 - 2))];\n
                    *((v13 + v14 - 1)) = v10[*((v13 + v14 - 1))];\n
                    *((v13 + v14)) = v10[*((v13 + v14))];\n
                    v14 += 4;\n
                } while (v12 != v14);\n
            }\n
            v6 = v4;\n
            if (v2)\n
            {\n
                v15 = 24 + v14 + v1 + v6;\n
                v16 = 0;\n
                do\n
                {\n
                    v15[v16] = v10[v15[v16]];\n
                    v16 += 1;\n
                } while (v2 != v16);\n
            }\n
            v7 = *((v6 + 8));\n
            v17 = *((v6 + 12)) - v7;\n
        }\n
        v1 = v6 + 12;\n
        v2 = *(v6);\n
        v18 = v7 + v6 + 24;\n
        v19 = 0;\n
        while (v17 > v19)\n
        {\n
            v0 = &v3;\n
            v20 = cgc_transmit(v2, v18 + v19, v17 - v19);\n
            v19 += *(&v3);\n
            if (v20)\n
                break;\n
        }\n
        v6 = v4;\n
        v5 = a0;\n
        v8 = v1;\n
    }\n
    *(v8) = 0;\n
}\n
", "4204368:cgc_fread": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v6, unsigned int a0, struct_0 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    struct_0 *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edx\n
    struct_0 *v10;  // eax\n
    char *v11;  // eax\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // ebp\n
    void* v15;  // edi, Other Possible Types: unsigned int\n
    char *v16;  // edx\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ecx\n
    void* v20;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v21;  // eax\n
    char *v23;  // eax\n
    unsigned int v24;  // edx\n
    unsigned int v26;  // edx\n
    char *v27;  // edi, Other Possible Types: unsigned int\n
    unsigned int v28;  // esi\n
    char *v29;  // edi\n
    unsigned int v30;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = a1;\n
    v8 = v7->field_8;\n
    if (v8 == v7->field_c)\n
    {\n
        v7->field_c = 0;\n
        v7->field_8 = 0;\n
        v0 = &v5;\n
        if (!cgc_receive(v7->field_0, v7 + 1, 0x400))\n
        {\n
            v9 = *(&v5);\n
            if (v9)\n
            {\n
                v10 = a1;\n
                v10->field_c = v9;\n
                v11 = v10->field_14;\n
                if (v11)\n
                {\n
                    v12 = v9 & 3;\n
                    v15 = 0;\n
                    v13 = a1;\n
                    if (v9 - 1 >= 3)\n
                    {\n
                        v15 = 0;\n
                        do\n
                        {\n
                            *(24 + &v13->field_0 + v15) = v11[*(24 + &v13->field_0 + v15)];\n
                            *(25 + &v13->field_0 + v15) = v11[*(25 + &v13->field_0 + v15)];\n
                            *(26 + &v13->field_0 + v15) = v11[*(26 + &v13->field_0 + v15)];\n
                            *(27 + &v13->field_0 + v15) = v11[*(27 + &v13->field_0 + v15)];\n
                            v15 += 4;\n
                        } while ((v9 & -0x4) != v15);\n
                    }\n
                    if (v12)\n
                    {\n
                        v16 = 24 + a1 + v15;\n
                        v17 = 0;\n
                        do\n
                        {\n
                            v16[v17] = v11[v16[v17]];\n
                            v17 += 1;\n
                        } while (v12 != v17);\n
                    }\n
                }\n
            }\n
        }\n
        v7 = a1;\n
        v8 = *((v7 + 8));\n
    }\n
    v18 = a0;\n
    v19 = v6;\n
    if (v8 != -1)\n
    {\n
        v20 = *((v7 + 12)) - v8;\n
        if (*((v7 + 12)) - v8 > v18)\n
            v20 = v18;\n
        v3 = v20;\n
        cgc_memcpy();\n
        v21 = *((v7 + 8)) + v20;\n
        *((v7 + 8)) = v21;\n
        if (v21 == *((v7 + 12)))\n
        {\n
            *((v7 + 12)) = 0;\n
            *((v7 + 8)) = 0;\n
        }\n
        v19 = v6;\n
        if (!(v20 < v18))\n
            goto LABEL_4029a1;\n
    }\n
    else\n
    {\n
        v20 = 0;\n
        if (0 >= v18)\n
        {\n
LABEL_4029a1:\n
            return v20;\n
        }\n
    }\n
    v4 = v19 + 3;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(*(v7), v6 + v20, v18 - v20))\n
            return -1;\n
        v2 = v3;\n
        if (!v2)\n
            return -1;\n
        v23 = *((v7 + 20));\n
        if (v23)\n
        {\n
            v24 = v2;\n
            v26 = v24 & 3;\n
            v27 = 0;\n
            if (v24 - 1 >= 3)\n
            {\n
                v28 = v4 + v20;\n
                v27 = 0;\n
                do\n
                {\n
                    *((v28 + v27 - 3)) = v23[*((v28 + v27 - 3))];\n
                    *((v28 + v27 - 2)) = v23[*((v28 + v27 - 2))];\n
                    *((v28 + v27 - 1)) = v23[*((v28 + v27 - 1))];\n
                    *((v28 + v27)) = v23[*((v28 + v27))];\n
                    v27 += 4;\n
                } while ((v2 & -0x4) != v27);\n
            }\n
            if (v26)\n
            {\n
                v29 = v27 + v20 + v6;\n
                v30 = 0;\n
                do\n
                {\n
                    v29[v30] = v23[v29[v30]];\n
                    v30 += 1;\n
                } while (v26 != v30);\n
            }\n
        }\n
        v20 += v2;\n
        v18 = a0;\n
        v7 = a1;\n
        if (v20 >= v18)\n
            return v20;\n
    }\n
}\n
", "4204719:sub_4028af": null, "4204971:sub_4029ab": null, "4204976:cgc_freaduntil": "int cgc_freaduntil(unsigned int v0, unsigned int a0, char a1, unsigned int a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // ebp\n
    char *v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v1 = a0;\n
    v2 = a1;\n
    v3 = 0;\n
    tmp_21 = v1;\n
    v5 = v1 - 1;\n
    if (tmp_21 != 1)\n
    {\n
        while (true)\n
        {\n
            v4 = cgc__getc();\n
            if (v4 == -1)\n
                return -1;\n
            if (v4 == v2)\n
                break;\n
            *((v0 + v3)) = v4;\n
            v3 += 1;\n
            goto LABEL_402a08;\n
        }\n
    }\n
    tmp_1 = v5;\n
    v5 = v3;\n
    if (!(v3 == tmp_1))\n
        goto LABEL_402a20;\n
LABEL_402a08:\n
    while (true)\n
    {\n
        v6 = cgc__getc();\n
        if (v6 == -1)\n
            break;\n
        if (v6 == v2)\n
            goto LABEL_402a20;\n
    }\n
LABEL_402a20:\n
    *((v0 + v5)) = 0;\n
    return v5;\n
}\n
", "4205113:sub_402a39": null, "4205120:cgc__getc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc__getc()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct struct_0 **v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    struct_1 *v6;  // ecx\n
    struct_1 *v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    struct struct_0 **v10;  // ecx\n
    unsigned int v11;  // edx\n
    void* v12;  // edi, Other Possible Types: unsigned int\n
    unsigned int v13;  // ebp\n
    char *v14;  // edi\n
    unsigned int v15;  // ebx\n
    struct struct_0 **v16;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v6;\n
    v8 = v6->field_8;\n
    if (v8 == -1)\n
    {\n
        v0 = &v3;\n
        v16 = -1;\n
        if (cgc_receive(v6->field_0, &v1, 1))\n
            return -1;\n
        if (!*(&v3))\n
            return -1;\n
        v9 = v6->field_14;\n
        *(&v16) = v1;\n
        if (!v9)\n
            return v16;\n
        *(&v16) = *(v9 + v16);\n
    }\n
    else if (v8 != v6->field_c)\n
    {\n
LABEL_402b39:\n
        v7->field_8 = v8 + 1;\n
        v16 = *(24 + &v7->field_0 + v8);\n
        return v16;\n
    }\n
    else\n
    {\n
        v6->field_c = 0;\n
        v6->field_8 = 0;\n
        v0 = &v4;\n
        if (cgc_receive(v6->field_0, v6 + 1, 0x400))\n
            return -1;\n
        v13 = *(&v4);\n
        if (*(&v4))\n
        {\n
            v6->field_c = v13;\n
            v10 = v6->field_14;\n
            if (v10)\n
            {\n
                v2 = v13;\n
                v11 = v13 & 3;\n
                v12 = 0;\n
                if (v13 - 1 >= 3)\n
                {\n
                    v12 = 0;\n
                    do\n
                    {\n
                        *(24 + &v7->field_0 + v12) = *(v10 + *(24 + &v7->field_0 + v12));\n
                        *(25 + &v7->field_0 + v12) = *(v10 + *(25 + &v7->field_0 + v12));\n
                        *(26 + &v7->field_0 + v12) = *(v10 + *(26 + &v7->field_0 + v12));\n
                        *(27 + &v7->field_0 + v12) = *(v10 + *(27 + &v7->field_0 + v12));\n
                        v12 += 4;\n
                    } while ((v2 & -0x4) != v12);\n
                }\n
                v13 = v2;\n
                if (v11)\n
                {\n
                    v14 = 24 + v12 + v7;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v14[v15] = *(v10 + v14[v15]);\n
                        v15 += 1;\n
                    } while (v11 != v15);\n
                }\n
            }\n
            if (v13 >= 0)\n
            {\n
                v8 = v7->field_8;\n
                goto LABEL_402b39;\n
            }\n
        }\n
    }\n
}\n
", "4205457:sub_402b91": null, "4205472:cgc_free": "extern unsigned int g_heap;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return malloc_free(&g_heap);\n
}\n
", "4205512:sub_402bc8": null, "4205520:cgc_fwrite": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v9, unsigned int a0, struct_0 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v3;  // [bp-0x418]\n
    char v4;  // [bp-0x414]\n
    char v5;  // [bp-0x410]\n
    unsigned int v6;  // [bp-0x40f]\n
    unsigned int v7;  // [bp-0x40e]\n
    unsigned int v8;  // [bp-0x40d]\n
    struct_0 *v10;  // esi\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // eax\n
    char *v13;  // edi\n
    unsigned int v14;  // eax\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    void* v16;  // edi, Other Possible Types: unsigned int\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // ecx\n
    char *v20;  // ecx\n
    unsigned int v21;  // edx\n
    void* v22;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    void* v24;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = a1;\n
    v11 = a0;\n
    if (v10->field_8 != -1)\n
    {\n
        if (v11 >= 0x400)\n
        {\n
            cgc_fflush(v10);\n
        }\n
        else\n
        {\n
            v12 = v10->field_c;\n
            v16 = 0;\n
            if (v12 + v11 >= 0x400)\n
            {\n
                v16 = 0x400 - v12;\n
                cgc_memcpy(&v10[1].padding_4[v12], v9);\n
                v10->field_c = v10->field_c + v16;\n
                cgc_fflush(v10);\n
            }\n
            if (v16 >= v11)\n
                return v16;\n
            cgc_memcpy(&v10[1].padding_4[v10->field_c], v9 + v16);\n
            v10->field_c = v10->field_c + a0 - v16;\n
            return a0;\n
        }\n
    }\n
    v2 = v10->field_0;\n
    v13 = v10->field_10;\n
    if (!v13)\n
    {\n
        v15 = 0;\n
        do\n
        {\n
            if (v15 >= v11)\n
                return a0;\n
            v0 = &v5;\n
            v14 = cgc_transmit(v2, v9 + v15, v11 - v15);\n
            v15 += *(&v5);\n
        } while (!v14);\n
    }\n
    else\n
    {\n
        if (!v11)\n
            return a0;\n
        v24 = 0;\n
LABEL_402c3e:\n
        v17 = v11 - v24;\n
        if (v17 >= 0x400)\n
            v17 = 0x400;\n
        v3 = v24;\n
        cgc_memcpy();\n
        if (v17)\n
        {\n
            v18 = v17 & 3;\n
            v19 = 0;\n
            if (v17 - 1 >= 3)\n
            {\n
                v19 = 0;\n
                do\n
                {\n
                    (&v5)[v19] = v13[(&v5)[v19]];\n
                    *(&v6 + v19) = v13[*(&v6 + v19)];\n
                    *(&v7 + v19) = v13[*(&v7 + v19)];\n
                    *(&v8 + v19) = v13[*(&v8 + v19)];\n
                    v19 += 4;\n
                } while ((v17 & 2044) != v19);\n
            }\n
            if (v18)\n
            {\n
                v20 = &(&v5)[v19];\n
                v21 = 0;\n
                do\n
                {\n
                    v20[v21] = v13[v20[v21]];\n
                    v21 += 1;\n
                } while (v18 != v21);\n
            }\n
        }\n
        v22 = 0;\n
        do\n
        {\n
            if (v17 <= v22)\n
            {\n
                v24 = v3 + v17;\n
                v11 = a0;\n
                if (v24 >= a0)\n
                    return a0;\n
                goto LABEL_402c3e;\n
            }\n
            v0 = &v4;\n
            v23 = cgc_transmit(v2, &(&v5)[v22], v17 - v22);\n
            v22 += *(&v4);\n
        } while (!v23);\n
    }\n
    return -1;\n
}\n
", "4206110:sub_402e1e": null, "4206112:cgc_fxlat": "int cgc_fxlat(unsigned int v1[6], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v2;  // ebp\n
    unsigned int v3[6];  // edi\n
    char v4[256];  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // esi\n
    unsigned int v7;  // eax\n
    char *v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    char v15;  // al\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v7 = v3[4];\n
    if (!a0)\n
    {\n
        v4 = cgc_free(v7);\n
        v3[4] = 0;\n
        v3[5] = 0;\n
        return v4;\n
    }\n
    v0 = 0x100;\n
    v5 = cgc_realloc(v7);\n
    v3[4] = v5;\n
    v0 = 0x100;\n
    v3[5] = cgc_realloc(v3[5]);\n
    *(&v7) = *(v2);\n
    if (!*(v2))\n
    {\n
        v9 = 826981510;\n
    }\n
    else\n
    {\n
        v8 = v2 + 1;\n
        v9 = 826981510;\n
        do\n
        {\n
            v9 = __ROL__(v9 + v9 * 36 ^ v7, 13);\n
            v7 = *(v8);\n
            v8 += 1;\n
        } while (v7);\n
    }\n
    v10 = 0;\n
    do\n
    {\n
        *((v5 + v10)) = v10;\n
        *((v5 + v10 + 1)) = v10 + 1;\n
        *((v5 + v10 + 2)) = v10 + 2;\n
        *((v5 + v10 + 3)) = v10 + 3;\n
        *((v5 + v10 + 4)) = v10 + 4;\n
        *((v5 + v10 + 5)) = v10 + 5;\n
        *((v5 + v10 + 6)) = v10 + 6;\n
        *((v5 + v10 + 7)) = v10 + 7;\n
        v10 += 8;\n
    } while (v10 != 0x100);\n
    v11 = 255;\n
    while (true)\n
    {\n
        v12 = v9;\n
        v13 = v9 * 3;\n
        v14 = (0 CONCAT v12) /m v11 >> 32;\n
        v9 = v13 / 0x200000 ^ __ROL__(v13, 13);\n
        v15 = *((v5 + v11));\n
        *((v5 + v11)) = *((v5 + v14));\n
        *((v5 + v14)) = v15;\n
        v11 -= 1;\n
    }\n
}\n
", "4206480:cgc_malloc": "extern unsigned int g_heap;\n
\n
int cgc_malloc(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc_malloc_alloc(&g_heap);\n
}\n
", "4206520:sub_402fb8": null, "4206528:cgc_malloc_alloc": "extern char g_409108;\n
extern char g_40913a;\n
\n
int cgc_malloc_alloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v4;  // [bp-0x14]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edi\n
    unsigned int v43;  // eax\n
\n
    v9 = 0;\n
    if (a0 < 0)\n
    {\n
LABEL_4032d4:\n
        return v9;\n
    }\n
    v10 = v8;\n
    v11 = a0 + 3 & -0x4;\n
    if (!(a0 + 3 & -0x4))\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 <= 15)\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 > 131071)\n
    {\n
        v14 = v11 + 4103 & -0x1000;\n
        v0 = &v4;\n
        v9 = 0;\n
        if (!cgc_allocate(v14, 0))\n
        {\n
            v17 = *(&v4);\n
            *(v17) = v8;\n
            *((v17 + 4)) = v14;\n
            v9 = v17 + 8;\n
            goto LABEL_4032d4;\n
        }\n
    }\n
    v12 = v11 + 23;\n
    v13 = v12 & -0x10;\n
    v2 = v13;\n
    if (!(v12 & -0x10))\n
    {\n
        v15 = -1;\n
        v16 = *((v10 + -0x4));\n
        if (!v16)\n
            goto LABEL_0x403244;\n
        else\n
            goto LABEL_0x403260;\n
    }\n
    else if (v13 < 513)\n
    {\n
        v15 = (v12 >> 4) + 2;\n
        v16 = 0;\n
    }\n
    else if (v13 <= 0x1200)\n
    {\n
        v15 = (v13 - 0x200 >> 7) + 34;\n
        v16 = *((v10 + v15 * 4));\n
        if (!v16)\n
            goto LABEL_0x403244;\n
        else\n
            goto LABEL_0x403260;\n
    }\n
    else\n
    {\n
        v15 = 130;\n
        if (v13 <= 0x20000)\n
        {\n
            v15 = (v13 - 0x1200 >> 11) + 66;\n
            v16 = *((v10 + v15 * 4));\n
            if (!v16)\n
                goto LABEL_0x403244;\n
            else\n
                goto LABEL_0x403260;\n
        }\n
    }\n
}\n
", "4207376:tiny_alloc": "int tiny_alloc()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned short *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned short *v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edi\n
    struct struct_0 *v9[1160];  // ecx\n
    struct struct_0 *v10[1160];  // esi\n
    unsigned int v11;  // ebp\n
    unsigned short *v12;  // eax, Other Possible Types: unsigned int\n
    unsigned short v13[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edi\n
\n
    v8 = v7;\n
    v10 = v9;\n
    if (v7 <= 15)\n
    {\n
        v11 = v7 / 4 - 1;\n
    }\n
    else if (v7 <= 0x200)\n
    {\n
        v11 = (v7 >> 4) + 2;\n
    }\n
    else if (v7 <= 0x1200)\n
    {\n
        v11 = (v7 - 0x200 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v11 = 130;\n
        if (v7 <= 0x20000)\n
            v11 = (v7 - 0x1200 >> 11) + 66;\n
    }\n
    v12 = v9[v11];\n
    if (v12)\n
    {\n
        v9[v11] = *(&v12);\n
        return v9[v11];\n
    }\n
    v13 = v9[1155 + v11];\n
    if (v13)\n
    {\n
        v14 = v13[0];\n
        v15 = v13[1];\n
    }\n
    else\n
    {\n
        v16 = v10[1158];\n
        if (v16)\n
        {\n
            v12 = v10[1159];\n
        }\n
        else\n
        {\n
            v0 = &v5;\n
            if (cgc_allocate(0x200000, 0))\n
            {\n
                v10[1158] = 0;\n
                return 0;\n
            }\n
            v17 = *(&v5);\n
            v4 = v17 + 1048575;\n
            v16 = v4 & -0x100000;\n
            v1 = v17;\n
            v2 = v16;\n
            if (v16 > v1)\n
            {\n
                cgc_deallocate(v1);\n
                v16 = v2;\n
            }\n
            v18 = v1 + 0x200000;\n
            v3 = v16 + 0x100000;\n
            v1 = v18 - v3;\n
            if (v18 > v3)\n
            {\n
                cgc_deallocate(v3);\n
                v16 = v2;\n
            }\n
            *(524 + &v10[0] + (v4 >> 20)) = 1;\n
            v10[1158] = v16;\n
            v12 = 0;\n
            if (!v16)\n
                return 0;\n
        }\n
        v13 = v12 + v16;\n
        v10[1155 + v11] = v13;\n
        *((v12 + v16)) = v8;\n
        *((v12 + v16 + 2)) = v8;\n
        v19 = v12 + 0x1000;\n
        v10[1159] = v19;\n
        if (v19 == 0x100000)\n
            v10[1158] = 0;\n
        v14 = v8;\n
        v15 = v8;\n
    }\n
    v20 = v8 + v15;\n
    *((v13 + 2)) = v20;\n
    if (v14 + v20 < 4097)\n
        return v15 + v13;\n
    v10[1155 + v11] = 0;\n
}\n
", "4207807:sub_4034bf": null, "4207808:malloc_free": "int malloc_free(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v15;  // cl\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // edx\n
    unsigned int v38;  // eax\n
\n
    v7 = v11;\n
    v6 = v12;\n
    v5 = v13;\n
    v38 = a0;\n
    if (!v38)\n
    {\n
LABEL_4037e1:\n
        return v38;\n
    }\n
    v23 = v10;\n
    v15 = *((v23 + (v38 >> 20) + 524));\n
    if (v15 != 2)\n
    {\n
        if (v15 == 1)\n
        {\n
            v24 = *((v38 & -0x1000));\n
            if (v24 <= 15)\n
            {\n
                v17 = v24 / 4 - 1;\n
                goto LABEL_403646;\n
            }\n
            if (v24 <= 0x200)\n
            {\n
                v17 = (v24 >> 4) + 2;\n
                goto LABEL_403646;\n
            }\n
        }\n
        if (!(!v15))\n
            goto LABEL_4037e1;\n
        if ((v38 & 4095) != 8)\n
        {\n
            v19 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_40382d;\n
        }\n
        else\n
        {\n
            v20 = *((v38 - 8));\n
            if (v20 != v23)\n
            {\n
                v22 = \"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\";\n
                v1 = v23;\n
            }\n
            else\n
            {\n
                v20 = *((v38 - 4));\n
                if (v20 - 0x20000 <= 2147356671 && !(v20 & 4095))\n
                {\n
                    v38 = cgc_deallocate(v38 - 8);\n
                    goto LABEL_4037e1;\n
                }\n
                v22 = \"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\";\n
            }\n
            v0 = v20;\n
            v38 = cgc_heap_error(v22, v38);\n
        }\n
    }\n
    else if (!(v38 & 7))\n
    {\n
        v24 = v38 - 8;\n
        v16 = *((v24 + 4));\n
        if ((v16 & 1))\n
        {\n
            v19 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_40382d;\n
        }\n
        else if (v16 - 131073 <= -131058)\n
        {\n
            v19 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_40382d;\n
        }\n
        else\n
        {\n
            v21 = *(v24);\n
            v12 = v24 - *(v24);\n
            if (!*(v24))\n
                v12 = v21;\n
            v23 = v16 + v24;\n
            v2 = v24;\n
            if (v12)\n
            {\n
                v4 = v23;\n
                v3 = *((v12 + 4));\n
                if (!((v3 & -2) == v21))\n
                    goto LABEL_403844;\n
                v23 = v4;\n
                v24 = v3;\n
                if (*(v23) == v16)\n
                {\n
                    if ((v24 & 1))\n
                    {\n
                        if (v21 <= 15)\n
                        {\n
                            v25 = v24 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v21 <= 0x200)\n
                            {\n
                                v25 = (v24 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v21 <= 0x1200)\n
                                {\n
                                    v25 = (v21 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v25 = 130;\n
                                    if (v21 <= 0x20000)\n
                                        v25 = (v21 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v12 + 4)) = v21;\n
                        v26 = *((v12 + 8));\n
                        if (v26)\n
                            *((v26 + 12)) = *((v12 + 12));\n
                        v27 = *((v12 + 12));\n
                        if (v27)\n
                            *((v27 + 8)) = v26;\n
                        if (*((v10 + (v25 << 2))) == v12)\n
                            *((v10 + v25 * 4)) = v27;\n
                        *((v12 + 8)) = 0;\n
                        *((v12 + 12)) = 0;\n
                        v28 = v21 + *((v2 + 4));\n
                        *((v12 + 4)) = v28;\n
                        *(v23) = v28;\n
                        v2 = v12;\n
                    }\n
LABEL_4036cc:\n
                    v29 = *((v23 + 4));\n
                    v30 = v10;\n
                    v12 = v2;\n
                    if ((v29 & 1))\n
                    {\n
                        v31 = v29 & -2;\n
                        if (v31 <= 15)\n
                        {\n
                            v32 = v29 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v31 <= 0x200)\n
                            {\n
                                v32 = (v29 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v31 <= 0x1200)\n
                                {\n
                                    v32 = (v31 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v32 = 130;\n
                                    if (v31 <= 0x20000)\n
                                        v32 = (v31 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v23 + 4)) = v31;\n
                        v33 = *((v23 + 8));\n
                        if (v33)\n
                            *((v33 + 12)) = *((v23 + 12));\n
                        v34 = *((v23 + 12));\n
                        if (*((v23 + 12)))\n
                            *((v34 + 8)) = v33;\n
                        v30 = v10;\n
                        if (*((v30 + (v32 << 2))) == v23)\n
                            *((v30 + v32 * 4)) = v34;\n
                        *((v23 + 8)) = 0;\n
                        *((v23 + 12)) = 0;\n
                        v12 = v2;\n
                        v35 = v31 + *((v12 + 4));\n
                        *((v12 + 4)) = v35;\n
                        *((v12 + v35)) = v35;\n
                    }\n
                    v36 = *((v12 + 4));\n
                    if (v36 <= 15)\n
                    {\n
                        v37 = v36 / 4 - 1;\n
                    }\n
                    else\n
                    {\n
                        if (v36 <= 0x200)\n
                        {\n
                            v37 = (v36 >> 4) + 2;\n
                        }\n
                        else\n
                        {\n
                            if (v36 <= 0x1200)\n
                            {\n
                                v37 = (v36 - 0x200 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v37 = 130;\n
                                if (v36 <= 0x20000)\n
                                    v37 = (v36 - 0x1200 >> 11) + 66;\n
                            }\n
                        }\n
                    }\n
                    if (!(!(v36 & 1)))\n
                        goto LABEL_403834;\n
                    *((v12 + 4)) = v36 | 1;\n
                    *((v12 + 8)) = 0;\n
                    *((v12 + 12)) = *((v30 + v37 * 4));\n
                    *((v30 + v37 * 4)) = v12;\n
                    v38 = *((v12 + 12));\n
                    if (v38)\n
                    {\n
                        *((v38 + 8)) = v12;\n
                        goto LABEL_4037e1;\n
                    }\n
                }\n
            }\n
            else if (*((v24 + v16)) == v16)\n
            {\n
                goto LABEL_4036cc;\n
            }\n
            v0 = v38;\n
            v38 = cgc_heap_error(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v23);\n
            v17 = (v24 <= 0x1200 ? (v24 - 0x1200 >> 11) + 66 : (v24 - 0x200 >> 7) + 34);\n
LABEL_403646:\n
            *(v38) = *((v23 + v17 * 4));\n
            *((v23 + v17 * 4)) = v38;\n
            goto LABEL_4037e1;\n
        }\n
    }\n
    v19 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_40382d:\n
    v8 = v38;\n
    v7 = v19;\n
    cgc_heap_error(*(&v9));\n
LABEL_403834:\n
    v6 = v12;\n
    v5 = \"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
    v38 = cgc_heap_error(*(&v9));\n
LABEL_403844:\n
    v7 = v38;\n
    v6 = v12;\n
    v5 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    cgc_heap_error(v10, a0);\n
    return cgc_malloc_size(v10, a0);\n
}\n
", "4208736:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_size(unsigned int v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ecx\n
    char v2;  // dl\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *((v0 + (v1 >> 20) + 524));\n
    if (!(v2 & 253))\n
        return *(&v1->field_0) - 8;\n
    v3 = 0;\n
    if (v2 != 1)\n
        return v3;\n
    v3 = *((v1 & -0x1000));\n
}\n
", "4208785:sub_403891": null, "4208800:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_realloc(unsigned int v1, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // ebp\n
    char v6;  // dl\n
    void* v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    v3 = 0;\n
    if (v2 < 0)\n
    {\n
LABEL_403975:\n
        return v3;\n
    }\n
    v4 = a0;\n
    v7 = v1;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
    {\n
LABEL_40396d:\n
        malloc_free(v1, a0);\n
        goto LABEL_403975;\n
    }\n
    if (!v4)\n
    {\n
        v11 = cgc_malloc_alloc(v7, v2);\n
        return v11;\n
    }\n
    v5 = v4 / 0x100000;\n
    v6 = *(524 + v7 + (v4 >> 20));\n
    if ((*(524 + v7 + (v4 >> 20)) & 253))\n
    {\n
        v7 = 0;\n
        if (v6 == 1)\n
            v7 = *((v4 & -0x1000));\n
        if (!(v7 < v2))\n
            goto LABEL_403950;\n
    }\n
    else if (*(&v4->field_0) - 8 >= v2)\n
    {\n
LABEL_403950:\n
        v3 = v4;\n
        goto LABEL_403975;\n
    }\n
    v8 = cgc_malloc_alloc(v1, v2);\n
    if (!v8)\n
        goto LABEL_403975;\n
    v3 = v8;\n
    v9 = v1;\n
    *(&v7) = *((v9 + v5 + 524));\n
    if (!(*((v9 + v5 + 524)) & 253))\n
    {\n
        v10 = *(&v4->field_0) - 8;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        if (v7 == 1)\n
            v10 = *((v4 & -0x1000));\n
    }\n
    v0 = v10;\n
    cgc_memcpy(v3, v4);\n
    goto LABEL_40396d;\n
}\n
", "4209023:sub_40397f": null, "4209024:cgc_heap_error": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stderr;\n
\n
int cgc_heap_error()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v6;\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v5;\n
    v1 = &v5;\n
    v0 = v4;\n
    cgc_vfprintf(cgc_stderr, v0);\n
    cgc__terminate(1, v0);\n
    cgc_memchr();\n
    return;\n
}\n
", "4209088:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = v0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
            return v2;\n
        v2 += 1;\n
        tmp_5 = v1;\n
        v1 -= 1;\n
        if (tmp_5 == 1)\n
            return 0;\n
    }\n
}\n
", "4209143:sub_4039f7": null, "4209152:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) != *((a0 + v2)))\n
            return *((v0 + v2)) - *((a0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4209215:sub_403a3f": null, "4209216:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4209346:sub_403ac2": null, "4209360:cgc_memmove": "int cgc_memmove(char *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ebp\n
    char *v4;  // ecx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    char *v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    char *v17;  // edx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    char *v21;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v15 = v1;\n
    if (v15 > v4)\n
    {\n
        if (!v3)\n
            return v15;\n
        v5 = v3 - 1;\n
        v16 = v3 & 3;\n
        v14 = 0;\n
        if (v5 >= 3)\n
        {\n
            v0 = v16;\n
            v7 = v3;\n
            v8 = v15 + v5;\n
            v9 = &v4[v5];\n
            v11 = 0;\n
            do\n
            {\n
                v8[v11] = *((v9 + v11));\n
                v8[1 + v11] = *((v9 + v11 - 1));\n
                v8[2 + v11] = *((v9 + v11 - 2));\n
                v8[3 + v11] = *((v9 + v11 - 3));\n
                v11 -= 4;\n
            } while (-(v7 & -0x4) != v11);\n
            v14 = -(v11);\n
            v15 = v1;\n
            v3 = a1;\n
            v16 = v0;\n
        }\n
        if (!v16)\n
            return v15;\n
        v20 = ~(v14) + v3;\n
        v21 = v15 + v20;\n
        v23 = -(v16);\n
        v24 = 0;\n
        do\n
        {\n
            v21[v24] = v4[v24 + v20];\n
            v24 -= 1;\n
        } while (v23 != v24);\n
        return v15;\n
    }\n
    else\n
    {\n
        if (!v3)\n
            return v15;\n
        v6 = v3 & 3;\n
        v13 = 0;\n
        if (v3 - 1 >= 3)\n
        {\n
            v12 = v3 & -0x4;\n
            v13 = 0;\n
            do\n
            {\n
                *((v15 + v13)) = v4[v13];\n
                *((v15 + v13 + 1)) = v4[1 + v13];\n
                *((v15 + v13 + 2)) = v4[2 + v13];\n
                *((v15 + v13 + 3)) = v4[3 + v13];\n
                v13 += 4;\n
            } while (v12 != v13);\n
        }\n
        if (!v6)\n
            return v1;\n
        v17 = v15 + v13;\n
        v18 = &v4[v13];\n
        v19 = 0;\n
        do\n
        {\n
            v17[v19] = *((v18 + v19));\n
            v19 += 1;\n
        } while (v6 != v19);\n
        return v1;\n
    }\n
}\n
", "4209654:sub_403bf6": null, "4209664:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edi\n
    char *v2;  // eax\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // esi\n
    char *v7;  // esi\n
    unsigned int v8;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 7;\n
    v5 = 0;\n
    if (v1 - 1 >= 7)\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2[v5] = v3;\n
            v2[1 + v5] = v3;\n
            v2[2 + v5] = v3;\n
            v2[3 + v5] = v3;\n
            v2[4 + v5] = v3;\n
            v2[5 + v5] = v3;\n
            v2[6 + v5] = v3;\n
            v2[7 + v5] = v3;\n
            v5 += 8;\n
        } while ((v1 & -8) != v5);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v5];\n
    v8 = 0;\n
    do\n
    {\n
        v7[v8] = v3;\n
        v8 += 1;\n
    } while (v4 != v8);\n
    return v0;\n
}\n
", "4209774:sub_403c6e": null, "4209776:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_printf(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0x8]\n
    unsigned int v4;  // esi\n
\n
    v1 = &v3;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v0 = 0;\n
        v4 = cgc__vsfprintf(cgc_stdout);\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = cgc__vsfprintf(cgc_stdout);\n
    return v4;\n
}\n
", "4209889:sub_403ce1": null, "4209904:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v2;  // eax\n
\n
    if (cgc_stdout->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v2 = cgc__vsfprintf(cgc_stdout);\n
        return v2;\n
    }\n
    cgc_stdout->field_8 = 0;\n
    v0 = 0;\n
    v2 = cgc__vsfprintf(cgc_stdout);\n
    cgc_fflush(cgc_stdout);\n
    cgc_stdout->field_8 = -1;\n
    return v2;\n
}\n
", "4210011:sub_403d5b": null, "4210016:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_fprintf(struct_0 *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0xc]\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v4 = v2;\n
    v1 = &v3;\n
    if (v4->field_8 == -1)\n
    {\n
        v4->field_8 = 0;\n
        v0 = 0;\n
        v5 = cgc__vsfprintf(v4);\n
        cgc_fflush(v4);\n
        v4->field_8 = -1;\n
        return v5;\n
    }\n
    v0 = 0;\n
    v5 = cgc__vsfprintf(v4);\n
    return v5;\n
}\n
", "4210125:sub_403dcd": null, "4210128:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_vfprintf(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x18]\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
\n
    v2 = v1;\n
    if (v2->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v3 = cgc__vsfprintf(v2);\n
        return v3;\n
    }\n
    v2->field_8 = 0;\n
    v0 = 0;\n
    v3 = cgc__vsfprintf(v2);\n
    cgc_fflush(v2);\n
    v2->field_8 = -1;\n
    return v3;\n
}\n
", "4210231:sub_403e37": null, "4210240:cgc_sprintf": "int cgc_sprintf(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    char v3;  // [bp+0xc]\n
\n
    v1 = &v3;\n
    v0 = v2;\n
    return cgc__vsfprintf(0);\n
}\n
", "4210288:cgc_vsprintf": "int cgc_vsprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc__vsfprintf(0);\n
}\n
", "4210331:sub_403e9b": null, "4210336:cgc__vsfprintf": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char field_1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_-1;\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__vsfprintf()\n
{\n
    unsigned int v1;  // [bp-0x6c]\n
    struct_0 *v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x58]\n
    char v8;  // [bp-0x50]\n
    unsigned int v11;  // [bp-0x8]\n
    char v13;  // [bp+0x8]\n
    unsigned int v31;  // ebx\n
    char *v32;  // ebx\n
    struct struct_0 **v33;  // ecx\n
    unsigned int v40;  // edx\n
    unsigned int v77;  // esi\n
    struct_0 *v78;  // eax\n
    struct_0 *v79;  // ebp\n
\n
    v11 = v31;\n
    v32 = *(&v13);\n
    v79 = v33 + 1;\n
    v3 = v33 + 1;\n
    v78 = *(v33);\n
    if (!*(v33))\n
    {\n
        v77 = 0;\n
    }\n
    else\n
    {\n
        v4 = v40;\n
        v6 = 20 + -0x1 * &v8;\n
        v77 = 0;\n
        v1 = &_GLOBAL_OFFSET_TABLE_;\n
    }\n
}\n
", "4210406:sub_403ee6": null, "4211920:cgc_realloc": "extern unsigned int g_heap;\n
\n
int cgc_realloc(void* v0, unsigned int a0)\n
{\n
    return cgc_malloc_realloc(&g_heap, v0, a0);\n
}\n
", "4211964:sub_4044fc": null, "4211968:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    char v2;  // al, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v3 = v0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v2 = cgc_tolower(v2);\n
            if (v2 != cgc_tolower(*(v1)))\n
                return *((v3 - 1)) - *(v1);\n
            v1 += 1;\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4212086:sub_404576": null, "4212096:cgc_strcasestr": "int cgc_strcasestr(char v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_7;  // tmp #7\n
    char v2[2];  // esi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (!v2[0])\n
        return 0;\n
    while (true)\n
    {\n
        v0 = cgc_strlen();\n
        if (!cgc_strncasecmp(v2, a0))\n
            return v2;\n
        tmp_7 = *((v2 + 1));\n
        v2 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4212185:sub_4045d9": null, "4212192:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx\n
    unsigned int v3;  // bl, Other Possible Types: char\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v2);\n
    v4 = 0;\n
    if (*(v2))\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            if (v3 == v1)\n
                return &v0[v4];\n
            v3 = v2[1 + v4];\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v5 = (!v1 ? 0 : &v2[v4]);\n
    return v5;\n
}\n
", "4212262:sub_404626": null, "4212272:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4212340:sub_404674": null, "4212352:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char *v3;  // ecx, Other Possible Types: unsigned int\n
    char v4;  // dl\n
    char *v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v1);\n
    v5 = v2;\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        v5 = v2;\n
        do\n
        {\n
            *(v5) = v4;\n
            v5 += 1;\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (v4);\n
    }\n
    *(v5) = 0;\n
    return v0;\n
}\n
", "4212404:sub_4046b4": null, "4212416:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    char *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4212496:cgc_strlen": "int cgc_strlen(char *v0)\n
{\n
    char *v1;  // ecx\n
    void* v2;  // edx, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!*(v1))\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = v1[1 + v2];\n
        v2 += 1;\n
    } while (v3);\n
    return v2;\n
}\n
", "4212528:cgc_strncasecmp": "int cgc_strncasecmp(char v1[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3[2];  // ebp, Other Possible Types: unsigned int\n
    char v4;  // al\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v0 = &v1[a1];\n
    v4 = v1[0];\n
    if (v1[0])\n
    {\n
        while (*(v2))\n
        {\n
            v5 = cgc_tolower(v4);\n
            if (v5 != cgc_tolower(*(v2)))\n
                break;\n
            if (v3 >= v0)\n
                break;\n
            v2 += 1;\n
            v4 = *((v3 + 1));\n
            v3 += 1;\n
            if (!v4)\n
                break;\n
        }\n
    }\n
    v6 = (v3 == v0 ? *(v3) - *(v2) : 0);\n
    return v6;\n
}\n
", "4212656:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi\n
    char *v3;  // eax\n
    char v4;  // bl\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = *(v2);\n
    v6 = 0;\n
    v5 = v3;\n
    if (*(v2) && v1)\n
    {\n
        v6 = 0;\n
        while (true)\n
        {\n
            v3[v6] = v4;\n
            v4 = v2[1 + v6];\n
            v6 += 1;\n
            if (!v4)\n
                break;\n
            if (v6 >= v1)\n
                break;\n
        }\n
        v5 = &v3[v6];\n
    }\n
    if (v6 >= v1)\n
        return v0;\n
    v7 = v5 - v3;\n
    do\n
    {\n
        *(v5) = 0;\n
        v5 += 1;\n
        v7 += 1;\n
    } while (v7 < v1);\n
    return v0;\n
}\n
", "4212737:sub_404801": null, "4212752:cgc_strndup": "int cgc_strndup(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // eax\n
    char *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = a0;\n
    v2 = cgc_strlen(v0);\n
    v3 = (!(v2 <= v1) ? v2 : v1);\n
    v4 = cgc_malloc(v3 + 1);\n
    if (v4)\n
    {\n
        cgc_memcpy(v4, v0, v3);\n
        v3[v4] = 0;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4212841:sub_404869": null, "4212848:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v1, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // edi, Other Possible Types: unsigned int\n
    void* v5;  // ebp, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // ecx, Other Possible Types: unsigned int\n
\n
    v2 = *(v1);\n
    if (!v2)\n
        return v2;\n
    v3 = *(v2);\n
    v0 = v2;\n
    if (!*(v2))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v2 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v6 = v4 - 1;\n
                v2 = v0;\n
                v7 = v1;\n
                if (!(!*((v4 - 1))))\n
                    goto LABEL_4048d1;\n
                goto LABEL_4048cf;\n
            }\n
            v5 += 1;\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        goto LABEL_4048d1;\n
    }\n
    v2 = v0;\n
    v6 = &v2[v5];\n
    v7 = v1;\n
LABEL_4048cf:\n
    v4 = 0;\n
LABEL_4048d1:\n
    *(v7) = v4;\n
    *(v6) = 0;\n
    return v2;\n
}\n
", "4212978:sub_4048f2": null, "4212992:cgc_strstr": "int cgc_strstr(char v0[2], char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v1[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    while (true)\n
    {\n
        if (!cgc_strcmp(v1, a0))\n
            return v1;\n
        tmp_7 = *((v1 + 1));\n
        v1 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4213080:sub_404958": null, "4213088:cgc_strtol": "int cgc_strtol(char v6[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_2;  // tmp #2\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    char v10[2];  // esi\n
    char v11;  // al\n
    unsigned int v12;  // eax, Other Possible Types: char\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // esi\n
    void* v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v22;  // eax, Other Possible Types: unsigned int\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // ecx\n
    char v25[2];  // ebp, Other Possible Types: unsigned int\n
    void* v26;  // esi, Other Possible Types: unsigned int\n
    char v27[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v10 = v6;\n
    v12 = cgc_isspace(v10[0]);\n
    v25 = v10;\n
    if (v12)\n
    {\n
        v25 = v10;\n
        do\n
        {\n
            if (!*(v25))\n
            {\n
                v21 = 0;\n
                v23 = 1;\n
                v24 = 1;\n
                v26 = 0;\n
                v22 = a0;\n
                if (!v22)\n
                    goto LABEL_404b50;\n
            }\n
            v11 = *((v25 + 1));\n
            v25 += 1;\n
            v12 = cgc_isspace(v11);\n
        } while (v12);\n
    }\n
    v13 = a1;\n
    if (*(v25) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v25) == 43)\n
            v25 += 1;\n
        if (!v13)\n
            goto LABEL_404a28;\n
    }\n
    else\n
    {\n
        v25 += 1;\n
        v0 = -1;\n
        if (!v13)\n
        {\n
LABEL_404a28:\n
            *(&v12) = *(v25);\n
            if (*(v25) != 48)\n
            {\n
LABEL_404a63:\n
                v12 = cgc_isdigit(v12);\n
                v13 = 10;\n
                if (!v12)\n
                    goto LABEL_404b30;\n
LABEL_404a7b:\n
                *(&v12) = *(v25);\n
LABEL_404a7e:\n
                if (!v12)\n
                {\n
LABEL_404b30:\n
                    v21 = 0;\n
                    v24 = 1;\n
                    v26 = 0;\n
                    v22 = a0;\n
                    v23 = v0;\n
                    if (!v22)\n
                        goto LABEL_404b50;\n
LABEL_404b45:\n
                    tmp_2 = v24;\n
                    v27 = v6;\n
                    if (!tmp_2)\n
                        v27 = v25;\n
                    *(v22) = v27;\n
                    goto LABEL_404b50;\n
                }\n
LABEL_404a86:\n
                v26 = 0;\n
                v21 = 0;\n
                v24 = 1;\n
                v1 = v13;\n
                do\n
                {\n
                    v2 = v24;\n
                    v14 = cgc_isdigit(v12);\n
                    v15 = *(v25);\n
                    if (v14)\n
                    {\n
                        v16 = v15 - 48;\n
                        v17 = v1;\n
                        if (!(v16 < v17))\n
                            goto LABEL_404b73;\n
                    }\n
                    else\n
                    {\n
                        v19 = *(v25);\n
                        if (cgc_islower(v15))\n
                        {\n
                            v16 = v19 - 87;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_404b73;\n
                        }\n
                        else if (!cgc_isupper(v19))\n
                        {\n
LABEL_404b73:\n
                            v22 = a0;\n
                            v23 = v0;\n
                            v24 = v2;\n
                            if (!v22)\n
                                goto LABEL_404b50;\n
                            goto LABEL_404b45;\n
                        }\n
                        else\n
                        {\n
                            v16 = *(v25) - 55;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_404b73;\n
                        }\n
                    }\n
                    v20 = v17 * v26;\n
                    tmp_5 = v20;\n
                    v26 = v20 + v16;\n
                    if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, t5, ecx<4>, 0x0<32>))\n
                        v21 = 1;\n
                    v12 = *((v25 + 1));\n
                    v25 += 1;\n
                    v24 = 0;\n
                } while (v12);\n
                goto LABEL_404b45;\n
            }\n
            else\n
            {\n
                *(&v12) = *((v25 + 1));\n
                if ((v12 & 248) == 48)\n
                {\n
                    v25 += 1;\n
                    v13 = 8;\n
                    goto LABEL_404a86;\n
                }\n
                v12 = cgc_tolower(v12);\n
                if (v12 != 120)\n
                {\n
                    *(&v12) = *(v25);\n
                    goto LABEL_404a63;\n
                }\n
                else\n
                {\n
                    v25 += 2;\n
                }\n
            }\n
LABEL_404a59:\n
            v13 = 16;\n
            goto LABEL_404a7b;\n
        }\n
    }\n
    if (!(v13 == 16))\n
        goto LABEL_404a7b;\n
    *(&v12) = *(v25);\n
    v13 = 16;\n
    if (!(*(v25) == 48))\n
        goto LABEL_404a7e;\n
    v25 += (cgc_tolower(*((v25 + 1))) == 120) * 2;\n
    goto LABEL_404a59;\n
LABEL_404b50:\n
    v28 = (!v21 ? 0x80000000 : -(v26));\n
    v29 = ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>) ? 2147483647 : v26);\n
    if (v23 < 0)\n
        v29 = v28;\n
    return v29;\n
}\n
", "4213447:sub_404ac7": null, "4213637:sub_404b85": null, "4213648:cgc_strtoul": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoul(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_2;  // tmp #2\n
    int tmp_67;  // tmp #67\n
    int tmp_41;  // tmp #41\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3[2];  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    char v12[2];  // esi\n
    char v13;  // al\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax, Other Possible Types: char\n
    void* v16;  // edi\n
    void* v17;  // edi\n
    void* v18;  // edi, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // ebp\n
    unsigned int v27;  // ebx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // edx\n
    char v32[2];  // ebp\n
    unsigned int v33;  // edi\n
    char v34[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v35;  // eax, Other Possible Types: unsigned int\n
    unsigned int v36;  // edx\n
    char v37[2];  // ecx, Other Possible Types: unsigned int\n
    char v38[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v39;  // ebx\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // cc_dep2\n
    unsigned int v43;  // eax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v12 = v8;\n
    v34 = v12;\n
    if (cgc_isspace(v12[0]))\n
    {\n
        v34 = v12;\n
        do\n
        {\n
            if (!*(v34))\n
            {\n
                v14 = 0;\n
                v36 = 1;\n
                goto LABEL_404c8c;\n
            }\n
            v13 = *((v34 + 1));\n
            v34 += 1;\n
        } while (cgc_isspace(v13));\n
    }\n
    v0 = a1;\n
    if (*(v34) != 45)\n
    {\n
        v36 = 1;\n
        if (*(v34) == 43)\n
            v34 += 1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (!v15)\n
            goto LABEL_404c56;\n
        goto LABEL_404c00;\n
    }\n
    else\n
    {\n
        v34 += 1;\n
        v36 = -1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (v15)\n
        {\n
LABEL_404c00:\n
            if (v15 == 16)\n
            {\n
                *(&v15) = *(v34);\n
                if (*(v34) == 48)\n
                {\n
                    v34 += (cgc_tolower(*((v34 + 1))) == 120) * 2;\n
                    v0 = 16;\n
                    goto LABEL_404cf5;\n
                }\n
                else\n
                {\n
                    v0 = 16;\n
                    if (!(!v15))\n
                        goto LABEL_404cfc;\n
                    goto LABEL_404c8a;\n
                }\n
            }\n
        }\n
        else\n
        {\n
LABEL_404c56:\n
            *(&v15) = *(v34);\n
            if (*(v34) == 48)\n
            {\n
                *(&v15) = *((v34 + 1));\n
                if ((v15 & 248) == 48)\n
                {\n
                    v1 = v36;\n
                    v34 += 1;\n
                    v0 = 8;\n
                    goto LABEL_404d00;\n
                }\n
                v15 = cgc_tolower(v15);\n
                if (v15 != 120)\n
                {\n
                    *(&v15) = *(v34);\n
                }\n
                else\n
                {\n
                    v34 += 2;\n
                    v0 = 16;\n
                    goto LABEL_404cf5;\n
                }\n
            }\n
            v1 = v36;\n
            v15 = cgc_isdigit(v15);\n
            v0 = 10;\n
            if (!v15)\n
            {\n
                v14 = 0;\n
                v37 = 1;\n
                v2 = 0;\n
                v16 = 0;\n
                v35 = a0;\n
                v36 = v1;\n
                if (!v35)\n
                    goto LABEL_404e17;\n
LABEL_404e0c:\n
                tmp_2 = v37;\n
                v38 = v8;\n
                if (!tmp_2)\n
                    v38 = v34;\n
                *(v35) = v38;\n
            }\n
            else\n
            {\n
                v36 = v1;\n
LABEL_404cf5:\n
                *(&v15) = *(v34);\n
                if (*(v34))\n
                {\n
LABEL_404cfc:\n
                    v1 = v36;\n
LABEL_404d00:\n
                    v2 = 0;\n
                    v18 = 0;\n
                    v14 = 0;\n
                    v37 = 1;\n
                    do\n
                    {\n
                        *(&v3) = v37;\n
                        v19 = cgc_isdigit(v15);\n
                        v20 = *(v34);\n
                        if (v19)\n
                        {\n
                            v21 = v20 - 48;\n
                            v22 = v0;\n
                            if (!(v21 < v22))\n
                                goto LABEL_404ddd;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v34);\n
                            if (cgc_islower(v20))\n
                            {\n
                                v21 = v24 - 87;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_404ddd;\n
                            }\n
                            else if (!cgc_isupper(v24))\n
                            {\n
LABEL_404ddd:\n
                                v35 = a0;\n
                                v36 = v1;\n
                                v37 = v3;\n
                                if (!v35)\n
                                    goto LABEL_404e17;\n
                                goto LABEL_404e0c;\n
                            }\n
                            else\n
                            {\n
                                v21 = *(v34) - 55;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_404ddd;\n
                            }\n
                        }\n
                        *(&v3) = v34;\n
                        v25 = v2;\n
                        v26 = v25 * (v22 >> 31);\n
                        v27 = v14;\n
                        v28 = v22;\n
                        tmp_67 = v25 * v22;\n
                        v29 = v25 * v22 >> 32;\n
                        v30 = tmp_67;\n
                        v31 = v28 * v18 + v26 + v29;\n
                        v32 = v3;\n
                        v33 = v21 >> 31;\n
                        v2 = v30 + v21;\n
                        tmp_41 = v33;\n
                        v18 = v33 + v31 + (v30 + v21 < v30);\n
                        v14 = ([D] x86g_calculate_condition(0x5<32>, 0x9<32>, t41, Xor(edx<4>, Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))), Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))) ? v27 : 1);\n
                        v15 = v32[1];\n
                        v34 = &v32[1];\n
                        v37 = 0;\n
                    } while (v15);\n
                    goto LABEL_404e17;\n
                }\n
LABEL_404c8a:\n
                v14 = 0;\n
LABEL_404c8c:\n
                v37 = 1;\n
                v2 = 0;\n
                v17 = 0;\n
                v35 = a0;\n
                if (!v35)\n
                    goto LABEL_404e17;\n
                goto LABEL_404e0c;\n
            }\n
        }\n
    }\n
LABEL_404e17:\n
    v39 = v2;\n
    v40 = -(v39);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v40 = v39;\n
    v41 = -(0 < v14) | v40;\n
    v42 = v39 < 2147483649;\n
    v43 = ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, cc_dep2<4>, cc_dep2<4>) ? -1 : v41);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v43 = v41;\n
    return v43;\n
}\n
", "4214091:sub_404d4b": null, "4214344:sub_404e48": null, "4214352:cgc_free_object": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_object(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int *v4;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    switch (v1->field_0)\n
    {\n
    case 3: case 4:\n
        cgc_free(v1->field_4);\n
    case 6:\n
        cgc_tr_destroy();\n
        goto LABEL_404eb1;\n
    case 7:\n
        if (v1->field_c)\n
        {\n
            v4 = 0;\n
            do\n
            {\n
                cgc_free_object(v1->field_4[v4].field_0);\n
                v4 += 1;\n
            } while (v4 < v1->field_c);\n
        }\n
    case 8:\n
        break;\n
    default:\n
LABEL_404eb1:\n
    }\n
    return cgc_free(v1);\n
}\n
", "4214464:cgc_send_response": "extern void* cgc_stdout;\n
\n
int cgc_send_response(char v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    cgc_fwrite(&v0, 8, cgc_stdout);\n
    v1 = 313764997 ^ a0;\n
    if (!(!(!(1257596688 ^ v0)) || !(!v1)))\n
    {\n
        v1 = cgc_exit();\n
        return v1;\n
    }\n
    return 313764997 ^ a0;\n
}\n
", "4214546:sub_404f12": null, "4214560:cgc_pack_map_item": "int cgc_pack_map_item(unsigned int v2[3], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    unsigned int v4[3];  // edi\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v0 = v4[0];\n
    cgc_xpk_pack_str(a0);\n
    v0 = v4[2];\n
    return cgc_pack_object(a0);\n
}\n
", "4214613:sub_404f55": null, "4214624:cgc_pack_object": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_pack_object(unsigned int v2, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v3;  // ebp\n
    void* v4;  // eax, Other Possible Types: unsigned int, unsigned int *\n
    unsigned int v5;  // esi\n
\n
    v3 = a0;\n
    v4 = a0->field_0;\n
    switch (v4)\n
    {\n
    case 0:\n
        v0 = v3->field_8;\n
        v4 = cgc_xpk_pack_int(v5, v3->field_4);\n
        break;\n
    case 1:\n
        v0 = v3->field_8;\n
        v4 = cgc_xpk_pack_uint(v5, v3->field_4);\n
        break;\n
    case 2:\n
        v4 = cgc_xpk_pack_bool(v5);\n
        break;\n
    case 3:\n
        v4 = cgc_xpk_pack_str(v5);\n
        break;\n
    case 4:\n
        v0 = v3->field_c;\n
        v4 = cgc_xpk_pack_bytes(v5, v3->field_4);\n
        break;\n
    case 5:\n
        v4 = cgc_xpk_pack_nil();\n
        break;\n
    case 6:\n
        v4 = cgc_xpk_pack_map(v5);\n
        if (!(!v4))\n
            goto LABEL_405085;\n
        v0 = v5;\n
        cgc_tr_apply(v3->field_4, cgc_pack_map_item);\n
        goto LABEL_405083;\n
    case 7:\n
        v4 = cgc_xpk_pack_array(v5);\n
        if (!(!v4))\n
            goto LABEL_405085;\n
        v4 = 0;\n
        if (!v3->field_c)\n
            goto LABEL_405085;\n
        v1 = v3->field_4;\n
        do\n
        {\n
            cgc_pack_object(v5, *((v1 + v4 * 4)));\n
            v4 += 1;\n
        } while (v4 < v3->field_c);\n
    case 8:\n
        v4 = cgc_xpk_pack_none();\n
        return v4;\n
    default:\n
        return a0->field_0;\n
    }\n
LABEL_405083:\n
    v4 = 0;\n
LABEL_405085:\n
    return v4;\n
}\n
", "4214939:sub_40509b": null, "4214944:cgc_unpack_object": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_unpack_object(unsigned int v8, unsigned int *a0)\n
{\n
    char v4;  // [bp-0x1d]\n
    unsigned int v9;  // ebp\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax\n
    struct_0 *v12;  // esi\n
\n
    v9 = v8;\n
    v10 = cgc_xpk_next_type(v8);\n
    if (v10)\n
        return v10;\n
    v11 = cgc_malloc(16);\n
    v12 = v11;\n
    *(&v11) = v4 - 128;\n
    if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Load(addr=stack_base-29, size=1, endness=Iend_LE) - 0x80<8>)), 0x80<32>, 0x0<32>))\n
        goto LABEL_0x4050eb;\n
    else\n
        goto LABEL_0x405136;\n
}\n
", "4215743:sub_4053bf": null, "4215744:cgc_add_to_gmap": "extern unsigned int cgc_g_map;\n
\n
int cgc_add_to_gmap(unsigned int v1[3])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2[3];  // eax\n
\n
    v2 = v1;\n
    v0 = v2[2];\n
    cgc_g_map = cgc_tr_insert(cgc_g_map, v2[0]);\n
    return cgc_g_map;\n
}\n
", "4215797:sub_4053f5": null, "4215808:cgc_create_store_out": "int cgc_create_store_out(unsigned int *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = *(v1);\n
    return cgc_xpk_pack_str(a0);\n
}\n
", "4215847:sub_405427": null, "4215856:cgc_handle_store": "extern struct_0 *cgc_g_ctx;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
\n
int cgc_handle_store(unsigned int v4)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2[2];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    unsigned int v7[2];  // edi\n
    unsigned int v8;  // eax\n
\n
    v3 = v5;\n
    v6 = v4;\n
    cgc_xpk_reset(cgc_g_ctx);\n
    v2[0] = 0;\n
    if (cgc_fread(cgc_g_ctx->field_0, v6, cgc_stdin) == v6 && !cgc_unpack_object(cgc_g_ctx, v2))\n
    {\n
        v7 = v2;\n
        if (v7[0] != 6)\n
        {\n
            cgc_free_object(v7);\n
        }\n
        else\n
        {\n
            cgc_tr_apply(v7[1], cgc_add_to_gmap);\n
            cgc_xpk_reset(cgc_g_ctx);\n
            cgc_xpk_pack_array(cgc_g_ctx);\n
            cgc_tr_apply(v7[1], cgc_create_store_out);\n
            cgc_free_object(v7);\n
            v1 = 0;\n
            v0 = 0;\n
            cgc_fwrite(&v0, 8, cgc_stdout);\n
            if (!(1257596688 ^ v0) && !(313764997 ^ v1))\n
                cgc_exit();\n
            v8 = cgc_fwrite(cgc_g_ctx->field_0, cgc_g_ctx->field_4, cgc_stdout);\n
            goto LABEL_4055bd;\n
        }\n
    }\n
    v1 = 313764997;\n
    v0 = 1257596688;\n
    cgc_fwrite(&v0, 8, cgc_stdout);\n
    v8 = 313764997 ^ v1;\n
    if (!(!(1257596688 ^ v0) && !v8))\n
        return 313764997 ^ v1;\n
    v8 = cgc_exit();\n
LABEL_4055bd:\n
    return v8;\n
}\n
", "4216264:sub_4055c8": null, "4216272:cgc_handle_lookup": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_2 *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_3 *cgc_g_ctx;\n
extern unsigned int cgc_g_map;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern char obj_none;\n
\n
int cgc_handle_lookup(unsigned int v10)\n
{\n
    struct_1 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    struct_1 *v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
    struct struct_0 **v13;  // edi\n
    void* v14;  // ebp, Other Possible Types: unsigned int\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v16;  // edi, Other Possible Types: unsigned int\n
    unsigned int v17;  // eax\n
\n
    v9 = v11;\n
    v12 = v10;\n
    cgc_xpk_reset(cgc_g_ctx);\n
    v5 = 0;\n
    if (cgc_fread(cgc_g_ctx->field_0, v12, cgc_stdin) != v12)\n
    {\n
        cgc_tr_destroy();\n
        goto LABEL_40573d;\n
    }\n
    if (!(!cgc_unpack_object(cgc_g_ctx, &v5)))\n
        goto LABEL_40573d;\n
    v16 = v5;\n
    if (v16->field_0 == 7)\n
    {\n
        v0 = v16;\n
        if (!v16->field_c)\n
        {\n
            v15 = 0;\n
        }\n
        else\n
        {\n
            v13 = v16->field_4;\n
            v8 = &obj_none;\n
            v14 = 0;\n
            do\n
            {\n
                if (v13[v14]->field_0 != 3)\n
                {\n
                    cgc_tr_destroy();\n
                    v16 = v0;\n
                    if (!v16)\n
                        goto LABEL_40573d;\n
LABEL_405735:\n
                    cgc_free_object(v16);\n
LABEL_40573d:\n
                    v2 = 313764997;\n
                    v1 = 1257596688;\n
                    cgc_fwrite(&v1, 8, cgc_stdout);\n
                    v17 = 313764997 ^ v2;\n
                    if (!(!(!(1257596688 ^ v1)) || !(!v17)))\n
                    {\n
                        v17 = cgc_exit();\n
                        return v17;\n
                    }\n
                    return 313764997 ^ v2;\n
                }\n
                v15 = cgc_tr_insert();\n
                v14 += 1;\n
            } while (v14 < v0->field_c);\n
        }\n
        cgc_xpk_reset(cgc_g_ctx);\n
        v1 = 6;\n
        v2 = v15;\n
        v3 = 0;\n
        v16 = v0;\n
        v4 = v16->field_c;\n
        if (!cgc_pack_object(cgc_g_ctx, &v1))\n
        {\n
            cgc_tr_destroy();\n
            cgc_free_object(v16);\n
            v7 = 0;\n
            v6 = 0;\n
            cgc_fwrite(&v6, 8, cgc_stdout);\n
            if (!(1257596688 ^ v6) && !(313764997 ^ v7))\n
                cgc_exit();\n
            v17 = cgc_fwrite(cgc_g_ctx->field_0, cgc_g_ctx->field_4, cgc_stdout);\n
            return v17;\n
        }\n
    }\n
    cgc_tr_destroy();\n
    goto LABEL_405735;\n
}\n
", "4216875:sub_40582b": null, "4216880:cgc_handle_delete": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_2 *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char *field_4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_0 *cgc_g_ctx;\n
extern unsigned int cgc_g_map;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern char obj_none;\n
\n
int cgc_handle_delete(unsigned int v12)\n
{\n
    void* v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    struct_1 *v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    struct_1 *v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c]\n
    void* v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // esi\n
    struct_1 *v15;  // eax\n
    struct struct_0 **v16;  // ebp\n
    struct struct_0 **v17;  // esi\n
    struct_3 *v18;  // eax\n
    unsigned int v19;  // edi\n
    struct_1 *v20;  // edi, Other Possible Types: unsigned int\n
    unsigned int v21[2];  // eax, Other Possible Types: unsigned int\n
    struct struct_0 **v22;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v23;  // ebp\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
\n
    v11 = v13;\n
    v14 = v12;\n
    cgc_xpk_reset(cgc_g_ctx);\n
    v7 = 0;\n
    if (cgc_fread(cgc_g_ctx->field_0, v14, cgc_stdin) != v14)\n
    {\n
        cgc_tr_destroy();\n
        goto LABEL_405aff;\n
    }\n
    if (!(!cgc_unpack_object(cgc_g_ctx, &v7)))\n
        goto LABEL_405aff;\n
    v15 = v7;\n
    v20 = v15;\n
    if (v15->field_0 != 7)\n
    {\n
        cgc_tr_destroy();\n
LABEL_405af7:\n
        cgc_free_object(v20);\n
LABEL_405aff:\n
        v3 = 313764997;\n
        v2 = 1257596688;\n
        cgc_fwrite(&v2, 8, cgc_stdout);\n
        v25 = 313764997 ^ v3;\n
        if (!(!(!(1257596688 ^ v2)) || !(!v25)))\n
        {\n
            v25 = cgc_exit();\n
            return v25;\n
        }\n
        return 313764997 ^ v3;\n
    }\n
    v16 = v15->field_4;\n
    v17 = cgc_malloc(v15->field_c * 4);\n
    cgc_memset(v17, 0, v20->field_c * 4);\n
    v1 = v20;\n
    if (!v20->field_c)\n
    {\n
        v0 = 0;\n
    }\n
    else\n
    {\n
        v19 = 0;\n
        v10 = &obj_none;\n
        v6 = v16;\n
        v0 = 0;\n
        do\n
        {\n
            v18 = *((v6 + v19 * 4));\n
            if (v18->field_0 != 3)\n
            {\n
                v20 = v1;\n
                goto LABEL_405ac0;\n
            }\n
            v17[v19] = cgc_strdup(v18->field_4);\n
            v0 = cgc_tr_insert();\n
            v19 += 1;\n
        } while (v19 < v1->field_c);\n
        goto LABEL_405ac0;\n
    }\n
    cgc_xpk_reset(cgc_g_ctx);\n
    v2 = 6;\n
    v3 = v0;\n
    v4 = 0;\n
    v20 = v1;\n
    v5 = *((v20 + 12));\n
    if (!cgc_pack_object(cgc_g_ctx, &v2))\n
    {\n
        cgc_tr_destroy();\n
        cgc_free_object(v20);\n
        if (*((v20 + 12)))\n
        {\n
            v23 = v20;\n
            v24 = 0;\n
            do\n
            {\n
                cgc_g_map = cgc_tr_delete(cgc_g_map);\n
                cgc_free(v17[v24]);\n
                v24 += 1;\n
            } while (v24 < v23->field_c);\n
        }\n
        cgc_free(v17);\n
        v9 = 0;\n
        v8 = 0;\n
        cgc_fwrite(&v8, 8, cgc_stdout);\n
        if (!(1257596688 ^ v8) && !(313764997 ^ v9))\n
            cgc_exit();\n
        v25 = cgc_fwrite(cgc_g_ctx->field_0, cgc_g_ctx->field_4, cgc_stdout);\n
        return v25;\n
    }\n
LABEL_405ac0:\n
    if (v17)\n
    {\n
        v21 = *(v17);\n
        if (v21)\n
        {\n
            v22 = v17 + 1;\n
            do\n
            {\n
                cgc_free(v21);\n
                v21 = *(v22);\n
                v22 += 4;\n
            } while (v21);\n
            cgc_tr_destroy();\n
            if (!v20)\n
                goto LABEL_405aff;\n
            goto LABEL_405af7;\n
        }\n
    }\n
}\n
", "4217689:sub_405b59": null, "4217696:cgc_handle_debug": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_2;\n
\n
extern struct_4 *cgc_g_ctx;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
\n
int cgc_handle_debug(unsigned int v12, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    char v5;  // [bp-0x30]\n
    struct_3 *v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    void* v9;  // [bp-0x1c]\n
    void* v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edi\n
    struct_3 *v15;  // esi\n
    struct_1 *v16;  // ebp\n
    unsigned int v17[4];  // eax\n
    char *v18;  // ecx\n
    unsigned int v19;  // eax\n
\n
    v11 = v13;\n
    v14 = v12;\n
    cgc_xpk_reset(cgc_g_ctx);\n
    v6 = 0;\n
    if (cgc_fread(cgc_g_ctx->field_0, v14, cgc_stdin) != v14)\n
    {\n
LABEL_405cdd:\n
        v1 = 313764997;\n
        v0 = 1257596688;\n
        cgc_fwrite(&v0, 8, cgc_stdout);\n
        v19 = 313764997 ^ v1;\n
        if (!(!(1257596688 ^ v0) && !v19))\n
            return 313764997 ^ v1;\n
        v19 = cgc_exit();\n
LABEL_405d27:\n
        return v19;\n
    }\n
    if (!(!cgc_unpack_object(cgc_g_ctx, &v6)))\n
        goto LABEL_405cdd;\n
    v15 = v6;\n
    if (v15->field_0 != 7)\n
    {\n
LABEL_405cd1:\n
        cgc_free_object(v15);\n
        goto LABEL_405cdd;\n
    }\n
    else\n
    {\n
        if (!(v15->field_c == 2))\n
            goto LABEL_405cd1;\n
        v16 = v15->field_4;\n
        if (!(v15->field_4->field_0->field_0 == 2))\n
            goto LABEL_405cd1;\n
        if (!(v16->field_4->field_0 == 4))\n
            goto LABEL_405cd1;\n
        v5 = 0;\n
        v4 = 933692396;\n
        v3 = 3783224128;\n
        v2 = 4006374346;\n
        v1 = 127759235;\n
        v0 = 2607660563;\n
        v17 = v16->field_4;\n
        if (v17[3] == 20 && !cgc_memcmp(v17[1], &v0, 20))\n
        {\n
            v18 = a0;\n
            *(v18) = v16->field_0->field_4;\n
            cgc_xpk_reset(cgc_g_ctx);\n
            v7 = 2;\n
            v8 = *(v18);\n
            v9 = 0;\n
            v10 = 0;\n
            if (!cgc_pack_object(cgc_g_ctx, &v7))\n
            {\n
                cgc_send_response(0, 0);\n
                cgc_fwrite(cgc_g_ctx->field_0, cgc_g_ctx->field_4, cgc_stdout);\n
LABEL_405c66:\n
                v19 = cgc_free_object(v15);\n
                goto LABEL_405d27;\n
            }\n
        }\n
        cgc_send_response(234, 3757378066);\n
        goto LABEL_405c66;\n
    }\n
}\n
", "4218209:sub_405d61": null, "4218224:cgc_print_item": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char g_409601;\n
extern char g_409605;\n
extern char g_409609;\n
extern char g_409618;\n
extern char g_40961e;\n
extern unsigned int g_409623;\n
extern char g_409626;\n
extern unsigned int g_409629;\n
\n
int cgc_print_item(unsigned int v5, struct_0 *a0, unsigned int a1[2], unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x10020]\n
    int tmp_3;  // tmp #3\n
    int tmp_7;  // tmp #7\n
    unsigned int v1;  // [bp-0x1001c]\n
    unsigned int *v2;  // [bp-0x10018]\n
    unsigned int v3;  // [bp-0x10014]\n
    char v4;  // [bp-0x10010]\n
    struct_0 *v6;  // ebp\n
    unsigned int v7;  // eax\n
    unsigned int v8[2];  // edi\n
    unsigned int v9;  // esi\n
    char *v10;  // ebp\n
    struct_2 *v11;  // esi, Other Possible Types: unsigned int\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ebp\n
    unsigned int v16;  // edx\n
    unsigned int v18;  // ebp\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // eax\n
    unsigned int v24;  // ecx\n
\n
    v6 = a0;\n
    v7 = a0->field_0;\n
    switch (v7)\n
    {\n
    case 0:\n
        v14 = &g_409601;\n
        break;\n
    case 1:\n
        v14 = &g_409605;\n
        break;\n
    case 2:\n
        v14 = &g_409609;\n
        goto LABEL_405ed1;\n
    case 3:\n
        v14 = &g_409618;\n
        break;\n
    case 4:\n
        v1 = v6->field_c;\n
        if (!v1)\n
        {\n
            v11 = 0;\n
        }\n
        else\n
        {\n
            v10 = v6->field_4;\n
            v11 = 0;\n
            v0 = \"\\\\&02X\";\n
            v12 = 0;\n
            do\n
            {\n
                if (!cgc_isalnum(v10[v12]))\n
                {\n
                    if (v11 > 65531)\n
                        break;\n
                    cgc_sprintf(&(&v4)[v11], v0);\n
                    v11 += 3;\n
                }\n
                else\n
                {\n
                    if (v11 > 65533)\n
                        break;\n
                    (&v4)[v11] = v10[v12];\n
                    v11 += 1;\n
                    continue;\n
                }\n
                v12 += 1;\n
            } while (v1 != v12);\n
        }\n
        (&v4)[v11] = 0;\n
        goto LABEL_405f72;\n
    case 5:\n
        v14 = &g_40961e;\n
        goto LABEL_405ed1;\n
    case 6:\n
        cgc_printf(&g_409623);\n
        cgc_print_map(v9 + 1, v6->field_4, v8, a2);\n
        v14 = &g_409626;\n
LABEL_405ed1:\n
        v7 = cgc_printf(v14);\n
        return v7;\n
    case 7:\n
        cgc_printf(&g_409629);\n
        v13 = v9 + 1;\n
        if (v13 != 32)\n
        {\n
            v2 = &v6->field_4;\n
            v15 = v6->field_c;\n
            cgc_memset(&v4, 9, 32);\n
            (&v4)[v13] = 0;\n
            v1 = v15;\n
            if (v1)\n
            {\n
                v16 = a2;\n
                tmp_3 = v16;\n
                v18 = a3 - 1 + (tmp_3 - 1 < tmp_3);\n
                v19 = v8[0];\n
                v20 = v8[1];\n
                v0 = v16 - 1;\n
                v3 = v18;\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base-65556, size=4, endness=Iend_LE), Xor(ecx<4>, Conv(1->32, (Load(addr=stack_base-65568, size=4, endness=Iend_LE) < eax<4>))), Conv(1->32, (Load(addr=stack_base-65568, size=4, endness=Iend_LE) < eax<4>)))))\n
                {\n
                    v21 = 0;\n
                    do\n
                    {\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base-65556, size=4, endness=Iend_LE), Xor(ecx<4>, Conv(1->32, (Load(addr=stack_base-65568, size=4, endness=Iend_LE) < eax<4>))), Conv(1->32, (Load(addr=stack_base-65568, size=4, endness=Iend_LE) < eax<4>)))))\n
                        {\n
                            cgc_printf(\"&s&d  =>  [VALUE]: \");\n
                            cgc_print_item(v13, v2[v21], v8, a2, a3);\n
                            v22 = v8[0];\n
                            tmp_7 = v22;\n
                            v24 = v8[1] + (tmp_7 + 1 < tmp_7);\n
                            v8[0] = v22 + 1;\n
                            v8[1] = v24;\n
                        }\n
                        v21 += 1;\n
                    } while (v1 != v21);\n
                }\n
            }\n
        }\n
LABEL_405f72:\n
        v7 = cgc_printf(v5);\n
        goto LABEL_405f7a;\n
    default:\n
LABEL_405f7a:\n
        return v7;\n
    }\n
    goto LABEL_405ed1;\n
}\n
", "4218399:sub_405e1f": null, "4218460:sub_405e5c": null, "4218761:sub_405f89": null, "4218862:sub_405fee": null, "4218864:cgc_print_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int g_409664;\n
\n
int cgc_print_bytes(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10024]\n
    unsigned int v1;  // [bp-0x10014]\n
    char v2;  // [bp-0x10010]\n
    char *v4;  // ebp\n
    struct_0 *v5;  // esi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edi\n
\n
    if (!a0)\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        v5 = 0;\n
        v1 = \"\\\\&02X\";\n
        v6 = 0;\n
        while (true)\n
        {\n
            if (!cgc_isalnum(v4[v6]))\n
            {\n
                if (v5 > 65531)\n
                    break;\n
                v0 = v4[v6];\n
                cgc_sprintf(&(&v2)[v5], v1);\n
                v5 += 3;\n
                v6 += 1;\n
                if (a0 == v6)\n
                    break;\n
            }\n
            else\n
            {\n
                if (v5 > 65533)\n
                    break;\n
                (&v2)[v5] = v4[v6];\n
                v5 += 1;\n
                v6 += 1;\n
                if (a0 == v6)\n
                    break;\n
            }\n
        }\n
    }\n
    (&v2)[v5] = 0;\n
    return cgc_printf(&g_409664);\n
}\n
", "4218923:sub_40602b": null, "4219072:cgc_print_map": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_print_map(struct_0 *v2, unsigned int a0[5], unsigned int a1[2], unsigned int a2, unsigned int a3)\n
{\n
    void* v0;  // [bp-0x38]\n
    int tmp_5;  // tmp #5\n
    char v1;  // [bp-0x31]\n
    struct_0 *v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6[2];  // ecx\n
    unsigned int v7;  // ebp\n
    unsigned int v8;  // edi\n
    unsigned int v9[2];  // ecx\n
    unsigned int v10[2];  // ebp\n
    unsigned int v11;  // edi\n
\n
    v3 = v2;\n
    if (v3 == 32)\n
        return v4;\n
    v4 = cgc_memset(&v1, 9, 32);\n
    *((&v1 + v3)) = 0;\n
    if (!a0)\n
        return v4;\n
    v5 = a2;\n
    v6 = a1;\n
    v7 = v5 - 1;\n
    v8 = a3 - 1 + (v5 - 1 < v5);\n
    if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, Xor(Load(addr=(ecx<4> + 0x4<32>), size=4, endness=Iend_LE), Conv(1->32, ((edx<4> - 0x1<32>) < Load(addr=ecx<4>, size=4, endness=Iend_LE)))), Conv(1->32, ((edx<4> - 0x1<32>) < Load(addr=ecx<4>, size=4, endness=Iend_LE)))))\n
        return v8 - v6[1] - (v5 - 1 < v6[0]);\n
    v4 = cgc_print_map(v3, a0[3], v6, v5, a3);\n
    v9 = a1;\n
    if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, Xor(Load(addr=(ecx<4> + 0x4<32>), size=4, endness=Iend_LE), Conv(1->32, ((edx<4> - 0x1<32>) < Load(addr=ecx<4>, size=4, endness=Iend_LE)))), Conv(1->32, ((edx<4> - 0x1<32>) < Load(addr=ecx<4>, size=4, endness=Iend_LE))))))\n
    {\n
        v0 = a0[2];\n
        v10 = v9;\n
        v11 = a2;\n
        cgc_printf(\"&s[KEY]: &s  =>  [VALUE]: \");\n
        cgc_print_item(v3, v0, v9, v11, a3);\n
        tmp_5 = v9[0];\n
        v10[0] = v10[0] + 1;\n
        v10[1] = v10[1] + (tmp_5 + 1 < tmp_5);\n
        v4 = cgc_print_map(v3, a0[4], v9, v11, a3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4219315:sub_4061b3": null, "4219328:cgc_print_array": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_print_array(struct_0 *v2, unsigned int a0, unsigned int a1, struct_1 *a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v0;  // [bp-0x38]\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp-0x31]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // ebp\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ecx\n
    struct_0 *v9;  // eax\n
    unsigned int v10;  // ecx\n
    void* *v11;  // esi, Other Possible Types: unsigned int\n
\n
    if (v2 == 32)\n
        return v3;\n
    cgc_memset(&v1, 9, 32);\n
    v3 = v2;\n
    (&v1)[v3] = 0;\n
    if (!a1)\n
        return v2;\n
    v4 = a3;\n
    v5 = a2;\n
    tmp_5 = v4;\n
    v7 = a4 - 1 + (tmp_5 - 1 < tmp_5);\n
    v3 = a2->field_0;\n
    v8 = a2->field_4;\n
    v0 = v4 - 1;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, Xor(ecx<4>, Conv(1->32, (Load(addr=stack_base-56, size=4, endness=Iend_LE) < eax<4>))), Conv(1->32, (Load(addr=stack_base-56, size=4, endness=Iend_LE) < eax<4>))))\n
        return a2->field_0;\n
    v11 = 0;\n
    do\n
    {\n
        if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, Xor(ecx<4>, Conv(1->32, (Load(addr=stack_base-56, size=4, endness=Iend_LE) < eax<4>))), Conv(1->32, (Load(addr=stack_base-56, size=4, endness=Iend_LE) < eax<4>)))))\n
        {\n
            cgc_printf(\"&s&d  =>  [VALUE]: \");\n
            cgc_print_item(v2, *((a0 + v11 * 4)), v5, a3, a4);\n
            v9 = v5->field_0;\n
            tmp_7 = v9;\n
            v3 = v9 + 1;\n
            v10 = v5->field_4 + (tmp_7 + 1 < tmp_7);\n
            v5->field_0 = v3;\n
            v5->field_4 = v10;\n
        }\n
        v11 += 1;\n
    } while (a1 != v11);\n
    return v3;\n
}\n
", "4219438:sub_40622e": null, "4219531:sub_40628b": null, "4219536:cgc_handle_print": "extern struct_0 *cgc_g_ctx;\n
extern unsigned int cgc_g_map[5];\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern unsigned int g_40961c;\n
\n
int cgc_handle_print(unsigned int v4, char a0)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2[3];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    unsigned int v7[3];  // esi\n
    unsigned int v8;  // eax\n
\n
    v3 = v5;\n
    v6 = v4;\n
    cgc_xpk_reset(cgc_g_ctx);\n
    v2[0] = 0;\n
    if (cgc_fread(cgc_g_ctx->field_0, v6, cgc_stdin) == v6 && !cgc_unpack_object(cgc_g_ctx, v2))\n
    {\n
        v7 = v2;\n
        if (v7[0] != 1)\n
        {\n
            cgc_free_object(v7);\n
        }\n
        else\n
        {\n
            if (a0)\n
            {\n
                v1 = 0;\n
                v0 = 0;\n
                cgc_fwrite(&v0, 8, cgc_stdout);\n
                if (!(1257596688 ^ v0) && !(313764997 ^ v1))\n
                    cgc_exit();\n
                v1 = 0;\n
                v0 = 0;\n
                cgc_printf(&g_40961c);\n
                cgc_print_map(NULL, cgc_g_map, &v0, v7[1], v7[2]);\n
                cgc_printf(&g_40961c);\n
            }\n
            else\n
            {\n
                v1 = 1549844217;\n
                v0 = 1732510832;\n
                cgc_fwrite(&v0, 8, cgc_stdout);\n
                if (!(!(1257596688 ^ v0)) || !(!(313764997 ^ v1)))\n
                    goto LABEL_406453;\n
                cgc_exit();\n
            }\n
LABEL_406453:\n
            v8 = cgc_free_object(v7);\n
            goto LABEL_4063fd;\n
        }\n
    }\n
    v1 = 313764997;\n
    v0 = 1257596688;\n
    cgc_fwrite(&v0, 8, cgc_stdout);\n
    v8 = 313764997 ^ v1;\n
    if (!(!(1257596688 ^ v0) && !v8))\n
        return 313764997 ^ v1;\n
    v8 = cgc_exit();\n
LABEL_4063fd:\n
    return v8;\n
}\n
", "4219998:sub_40645e": null, "4220000:cgc_check_seed": "extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
\n
int cgc_check_seed()\n
{\n
    void* v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = 0;\n
    cgc_fread(&v0, 4, cgc_stdin);\n
    v2 = v0;\n
    if (v2 == *(0x4347c000))\n
    {\n
        v2 = cgc_fwrite(0x4347c000, 0x1000, cgc_stdout);\n
        return v2;\n
    }\n
    return v0;\n
}\n
", "4220096:main": "extern unsigned int cgc_g_ctx;\n
extern void* cgc_stdin;\n
extern void* cgc_stdout;\n
extern char g_40966a;\n
\n
int main()\n
{\n
    char v0;  // [bp-0x31]\n
    unsigned int v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x24]\n
    char v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x18]\n
    char v7;  // [bp-0x14]\n
    void* v9;  // esi, Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ebp\n
\n
    v0 = 0;\n
    cgc_g_ctx = cgc_xpk_init();\n
    v2 = 0;\n
    v9 = cgc_stdin;\n
    cgc_fread(&v2, 4, cgc_stdin);\n
    if (v2 == *(0x4347c000))\n
        cgc_fwrite(0x4347c000, 0x1000, cgc_stdout);\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_fflush(cgc_stdout);\n
    if (cgc_fread(&v4, 8, cgc_stdin) != 8)\n
    {\n
        cgc_fflush(cgc_stdout);\n
        return 0;\n
    }\n
    v6 = &g_40966a;\n
    v1 = cgc_stdin;\n
    while (cgc_fread(&v7, 4, v9) == 4)\n
    {\n
        v10 = *(&v7);\n
        if (v10 >= 73729)\n
        {\n
            cgc_printf(v6);\n
            goto LABEL_40659c;\n
        }\n
        v11 = *(&v4);\n
        v12 = *(&v5);\n
        if ([D] x86g_calculate_condition(0xc<32>, 0xc<32>, 0x842abe0<32>, Xor(Load(addr=stack_base-32, size=4, endness=Iend_LE), Conv(1->32, (0x98a0d38d<32> < ecx<4>))), Conv(1->32, (0x98a0d38d<32> < ecx<4>))))\n
        {\n
            if (!(v12 ^ 138587104) && !(v11 ^ 2560676750))\n
            {\n
                cgc_handle_delete(v10);\n
                goto LABEL_4067b7;\n
            }\n
            if (!(v12 ^ 2071545808) && !(v11 ^ 1046345821))\n
            {\n
                cgc_handle_debug(v10, &v0);\n
LABEL_4067b7:\n
                v9 = v1;\n
LABEL_40659c:\n
                cgc_fflush(cgc_stdout);\n
                if (cgc_fread(&v4, 8, v9) != 8)\n
                    break;\n
            }\n
            else\n
            {\n
                v9 = v1;\n
                if (!(&v4 ^ 1142194235) && !(v11 ^ 2771170573))\n
                {\n
                    cgc_handle_store(v10);\n
                    goto LABEL_40659c;\n
                }\n
LABEL_406733:\n
                v3 = 1549844217;\n
                v2 = 1732510832;\n
                cgc_fwrite(&v2, 8, cgc_stdout);\n
                if (!(v2 ^ 1257596688) && !(v3 ^ 313764997))\n
                {\n
                    cgc_exit();\n
                    goto LABEL_40659c;\n
                }\n
            }\n
        }\n
        else if (!(v12 ^ 3028501858) && !(v11 ^ 553408460))\n
        {\n
            v3 = 0;\n
            v2 = 0;\n
            cgc_fwrite(&v2, 8, cgc_stdout);\n
            if (!(v2 ^ 1257596688) && !(v3 ^ 313764997))\n
                cgc_exit();\n
            cgc_fflush(cgc_stdout);\n
            cgc_exit();\n
            v9 = v1;\n
            goto LABEL_406733;\n
        }\n
        else if (!(v12 ^ 3987866405) && !(v11 ^ 2997047387))\n
        {\n
            cgc_handle_print(v10, v0);\n
            goto LABEL_4067b7;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            if (!(&v4 ^ -254884662) && !(v11 ^ 1613549560))\n
            {\n
                cgc_handle_lookup(v10);\n
                goto LABEL_40659c;\n
            }\n
        }\n
    }\n
}\n
", "4220295:sub_406587": null, "4220514:sub_406662": null, "4220888:sub_4067d8": null, "4220896:cgc__tr_rot_left": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc__tr_rot_left(struct_1 *v0)\n
{\n
    struct_1 *v1;  // ecx\n
    struct_0 *v2;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_c;\n
    v1->field_c = v2->field_10;\n
    v2->field_10 = v1;\n
    return v2;\n
}\n
", "4220913:sub_4067f1": null, "4220928:cgc__tr_rot_right": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc__tr_rot_right(struct_1 *v0)\n
{\n
    struct_1 *v1;  // ecx\n
    struct_0 *v2;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_10;\n
    v1->field_10 = v2->field_c;\n
    v2->field_c = v1;\n
    return v2;\n
}\n
", "4220945:sub_406811": null, "4220960:cgc_tr_insert": "typedef struct struct_2 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
int cgc_tr_insert(unsigned int v0[5], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edi\n
    char *v2;  // ebp\n
    struct_2 *v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4[5];  // eax\n
    unsigned int v5[5];  // eax\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    if (!v3)\n
    {\n
        v3 = cgc_malloc(20);\n
        *(v3) = cgc_strdup(v2);\n
        cgc_random(v3 + 4, 4);\n
        *((v3 + 8)) = v1;\n
        *((v3 + 16)) = 0;\n
        *((v3 + 12)) = 0;\n
        return v3;\n
    }\n
    else if (cgc_strcmp(v2, v3->field_0) < 0)\n
    {\n
        v4 = cgc_tr_insert(v3->field_c, v2, v1);\n
        v3->field_c = v4;\n
        if (v4[1] < v3->field_4)\n
        {\n
            v3->field_c = v4[4];\n
            v4[4] = v3;\n
            return v4;\n
        }\n
        return v3;\n
    }\n
    else if (cgc_strcmp(v2, v3->field_0) > 0)\n
    {\n
        v5 = cgc_tr_insert(v3->field_10, v2, v1);\n
        v3->field_10 = v5;\n
        if (v5[1] < v3->field_4)\n
        {\n
            v3->field_10 = v5[3];\n
            v5[3] = v3;\n
            return v5;\n
        }\n
        return v0;\n
    }\n
    else\n
    {\n
        *(&_GLOBAL_OFFSET_TABLE_.padding_0[3208])();\n
        v3->field_8 = v1;\n
        return v0;\n
    }\n
}\n
", "4221220:sub_406924": null, "4221232:cgc__tr_destroy_node": "int cgc__tr_destroy_node(unsigned int *v0)\n
{\n
    cgc_free(*(v0));\n
    return cgc_free(v0);\n
}\n
", "4221275:sub_40695b": null, "4221280:cgc_tr_delete": "int cgc_tr_delete(unsigned int v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ecx\n
\n
    v3 = v2;\n
    if (!v3)\n
        return 0;\n
    v4 = a0;\n
    if (cgc_strcmp(v4, *(v3)) < 0)\n
        goto LABEL_4069c5;\n
    if (cgc_strcmp(v4, *(v3)) > 0)\n
    {\n
        *((v3 + 16)) = cgc_tr_delete(*((v3 + 16)), v4);\n
        return v3;\n
    }\n
    v5 = *((v3 + 12));\n
    v6 = *((v3 + 16));\n
    if (!*((v3 + 12)))\n
    {\n
        v5 = v6;\n
    }\n
    else if (v6)\n
    {\n
        if (*((v5 + 4)) < *((v6 + 4)))\n
        {\n
            *((v3 + 12)) = *((v5 + 16));\n
            *((v5 + 16)) = v3;\n
            *((v5 + 16)) = cgc_tr_delete(v3, v4);\n
            goto LABEL_406a13;\n
        }\n
        else\n
        {\n
            *((v3 + 16)) = *((v6 + 12));\n
            *((v6 + 12)) = v3;\n
            v3 = v6;\n
LABEL_4069c5:\n
            *((v3 + 12)) = cgc_tr_delete(*(&v0), *(&v1));\n
            return v3;\n
        }\n
    }\n
    cgc_free(*(v3));\n
    cgc_free(v3);\n
LABEL_406a13:\n
    return v5;\n
}\n
", "4221491:sub_406a33": null, "4221504:cgc_tr_find": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
int cgc_tr_find(struct_0 *v0, unsigned int a0)\n
{\n
    struct_1 *v1;  // edi, Other Possible Types: unsigned int\n
    char *v3;  // ebp\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v3 = a0;\n
    while (true)\n
    {\n
        if (cgc_strcmp(v3, *(v1)) < 0)\n
        {\n
            v1 = *((v1 + 12));\n
            if (!v1)\n
                return 0;\n
        }\n
        else if (cgc_strcmp(v3, *(v1)) <= 0)\n
        {\n
            return *((v1 + 8));\n
        }\n
        else\n
        {\n
            v1 = *((v1 + 16));\n
            if (!v1)\n
                return 0;\n
        }\n
    }\n
}\n
", "4221539:sub_406a63": null, "4221621:sub_406ab5": null, "4221632:cgc_tr_destroy": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int cgc_tr_destroy(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi, Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v2;\n
    do\n
    {\n
        cgc_tr_destroy(*((v1 + 12)));\n
        cgc_free(*(v1));\n
        v2 = cgc_free(v1);\n
        v1 = *((v1 + 16));\n
    } while (v1);\n
    return v2;\n
}\n
", "4221706:sub_406b0a": null, "4221712:cgc_tr_apply": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int cgc_tr_apply(struct_0 *v0, struct struct_1 **a0, unsigned int a1)\n
{\n
    struct_0 *v1;  // esi, Other Possible Types: unsigned int\n
    struct struct_1 **v2;  // ebp\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v3;\n
    do\n
    {\n
        cgc_tr_apply(*((v1 + 12)), a0, a1);\n
        v3 = v2(v1);\n
        v1 = *((v1 + 16));\n
    } while (v1);\n
    return v3;\n
}\n
", "4221798:sub_406b66": null, "4221808:cgc_tr_print": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
extern unsigned int g_409672;\n
\n
int cgc_tr_print(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v3 = v2;\n
    if (!v3)\n
        return v4;\n
    do\n
    {\n
        cgc_tr_print(*((v3 + 12)));\n
        v1 = *((v3 + 8));\n
        v0 = *(v3);\n
        v4 = cgc_printf(&g_409672);\n
        v3 = *((v3 + 16));\n
    } while (v3);\n
    return v4;\n
}\n
", "4221879:sub_406bb7": null, "4221888:cgc_xpk_init": "int cgc_xpk_init(unsigned int v0)\n
{\n
    unsigned int v1;  // edi\n
    unsigned int v2[3];  // esi\n
    unsigned int v3;  // ebp\n
\n
    v1 = v0;\n
    v2 = cgc_malloc(12);\n
    v3 = (v1 ? 0x400 : v1);\n
    v2[0] = cgc_malloc(v3);\n
    v2[1] = 0;\n
    v2[2] = v3;\n
    return v2;\n
}\n
", "4221965:sub_406c0d": null, "4221968:cgc__xpk_resize": "typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc__xpk_resize(unsigned int v0[3], unsigned int a0)\n
{\n
    unsigned int v1;  // esi\n
    struct_0 *v2;  // edi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (v2->field_8 >= v1)\n
    {\n
        return 0;\n
    }\n
    else if (v1 > 0x400000)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v2->field_0 = cgc_realloc(v2->field_0, v1);\n
        v2->field_8 = v1;\n
        return 0;\n
    }\n
}\n
", "4222036:sub_406c54": null, "4222048:cgc_xpk_reset": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_reset(unsigned int v0[3], unsigned int a0)\n
{\n
    unsigned int v1;  // edi\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // ecx\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v2->field_8;\n
    if (v3 >= v1)\n
    {\n
        v4 = v2->field_0;\n
    }\n
    else\n
    {\n
        if (v1 > 0x400000)\n
            return v5;\n
        v4 = cgc_realloc(v2->field_0, v1);\n
        v2->field_0 = v4;\n
        v2->field_8 = v1;\n
        v3 = v1;\n
    }\n
    v5 = cgc_memset(v4, 0, v3);\n
    v2->field_4 = 0;\n
    return v5;\n
}\n
", "4222137:sub_406cb9": null, "4222144:cgc_le2be16_s": "int cgc_le2be16_s(unsigned short v0)\n
{\n
    return v0 >> 8 | v0 * 0x100;\n
}\n
", "4222158:sub_406cce": null, "4222160:cgc_le2be16_u": "int cgc_le2be16_u(unsigned short v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = __ROL__(v1, 8);\n
    return v1;\n
}\n
", "4222170:sub_406cda": null, "4222176:cgc_le2be32_s": "int cgc_le2be32_s(unsigned int v0)\n
{\n
    return __buildin_bswap32(v0);\n
}\n
", "4222183:sub_406ce7": null, "4222192:cgc_le2be32_u": "int cgc_le2be32_u(unsigned int v0)\n
{\n
    return __buildin_bswap32(v0);\n
}\n
", "4222199:sub_406cf7": null, "4222208:cgc_le2be64_s": "int cgc_le2be64_s(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v2;  // edx\n
\n
    v2 = __buildin_bswap32(v0);\n
    return __buildin_bswap32(a0);\n
}\n
", "4222221:sub_406d0d": null, "4222224:cgc_le2be64_u": "int cgc_le2be64_u(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v2;  // edx\n
\n
    v2 = __buildin_bswap32(v0);\n
    return __buildin_bswap32(a0);\n
}\n
", "4222237:sub_406d1d": null, "4222240:cgc_xpk_pack_fixint": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_fixint(unsigned int v0[3])\n
{\n
    char v1;  // [bp+0x8]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v2 = v0;\n
    v3 = v2->field_4;\n
    v4 = v2->field_8;\n
    if (v3 + 1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v5)\n
        {\n
            *(&v3) = 5;\n
            if (v5 > 0x400000)\n
                return v3;\n
            v2->field_0 = cgc_realloc(v2->field_0, v5);\n
            v2->field_8 = v5;\n
            v3 = v2->field_4;\n
        }\n
    }\n
    cgc_memcpy(v3 + v2->field_0, &v1, 1);\n
    v2->field_4 = v2->field_4 + 1;\n
    return 0;\n
}\n
", "4222342:sub_406d86": null, "4222352:cgc_xpk_write": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_write(unsigned int v0[3], char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ebp\n
\n
    v1 = a1;\n
    v2 = v0;\n
    v3 = v2->field_4;\n
    v4 = v2->field_8;\n
    if (v3 + v1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v4 << 1)\n
        {\n
            *(&v3) = 5;\n
            if (v5 > 0x400000)\n
                return v3;\n
            v2->field_0 = cgc_realloc(v2->field_0, v5);\n
            v2->field_8 = v5;\n
            v3 = v2->field_4;\n
        }\n
    }\n
    cgc_memcpy(v3 + v2->field_0, a0, v1);\n
    v2->field_4 = v2->field_4 + v1;\n
    return 0;\n
}\n
", "4222463:sub_406dff": null, "4222464:cgc_xpk_write_marker": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_write_marker(unsigned int v0[3])\n
{\n
    char v1;  // [bp+0x8]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v2 = v0;\n
    v3 = v2->field_4;\n
    v4 = v2->field_8;\n
    if (v3 + 1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v5)\n
        {\n
            *(&v3) = 5;\n
            if (v5 > 0x400000)\n
                return v3;\n
            v2->field_0 = cgc_realloc(v2->field_0, v5);\n
            v2->field_8 = v5;\n
            v3 = v2->field_4;\n
        }\n
    }\n
    cgc_memcpy(v3 + v2->field_0, &v1, 1);\n
    v2->field_4 = v2->field_4 + 1;\n
    return 0;\n
}\n
", "4222566:sub_406e66": null, "4222576:cgc_xpk_read_marker": "int cgc_xpk_read_marker(unsigned int v1[3], char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax, Other Possible Types: char\n
    unsigned int v3[3];  // esi\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v4 = v3[1];\n
    v2 = 5;\n
    if (v4 + 1 <= v3[2])\n
    {\n
        cgc_memcpy(a0, v4 + v3[0], 1);\n
        v3[1] = v3[1] + 1;\n
        return 0;\n
    }\n
    return v2;\n
}\n
", "4222640:cgc_xpk_read": "int cgc_xpk_read(unsigned int v0[3], char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int v2[3];  // edi\n
    unsigned int v3;  // ecx\n
\n
    v1 = a1;\n
    v2 = v0;\n
    v3 = v2[1];\n
    if (v3 + v1 <= v2[2])\n
    {\n
        cgc_memcpy(a0, v3 + v2[0], v1);\n
        v2[1] = v2[1] + v1;\n
        return 0;\n
    }\n
    return 5;\n
}\n
", "4222704:cgc_xpk_read_obj": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_xpk_read_obj(unsigned int v5[3], struct_0 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v7[3];  // edi\n
    unsigned int v8;  // ecx\n
    struct_0 *v28;  // esi\n
    struct_0 *v44;  // eax\n
    unsigned int v45;  // eax\n
    struct_0 *v46;  // ecx\n
    struct_0 *v47;  // eax\n
\n
    v7 = v5;\n
    v0 = 160;\n
    v8 = v7[1];\n
    if (v8 + 1 > v7[2])\n
        return 5;\n
    v28 = a0;\n
    cgc_memcpy(&v0, v8 + v7[0], 1);\n
    v7[1] = v7[1] + 1;\n
    *(&v8) = v0;\n
    v28->field_0 = v0;\n
    *(&v8) = v0 + 95;\n
    if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Load(addr=stack_base-17, size=1, endness=Iend_LE) + 0x5f<8>)), 0x2f<32>, 0x0<32>))\n
    {\n
        goto *((4247856 + ch<1> * 4 - 15028)) + 4247856;\n
    }\n
    else if (v8 >= 0)\n
    {\n
        v44 = a0;\n
        v44->field_0 = 0;\n
        v44->field_4 = v8;\n
    }\n
    else if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Load(addr=stack_base-17, size=1, endness=Iend_LE) + 0x5f<8>)), 0x2f<32>, 0x0<32>))\n
    {\n
        v45 = v8;\n
        v46 = a0;\n
        v46->field_0 = 128;\n
        *(&v46->field_4) = v45 & 31;\n
    }\n
    else\n
    {\n
        v47 = a0;\n
        if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Load(addr=stack_base-17, size=1, endness=Iend_LE) + 0x5f<8>)), 0x2f<32>, 0x0<32>)))\n
        {\n
            v47->field_0 = 224;\n
            v47->field_4 = v8;\n
        }\n
        else\n
        {\n
            v47->field_0 = 160;\n
            v47->field_8 = 0;\n
            *(&v47->field_4) = 0;\n
        }\n
    }\n
}\n
", "4223312:cgc_xpk_next_type": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_xpk_next_type(unsigned int v1[3], char *a0)\n
{\n
    char v0;  // [bp-0xc]\n
    unsigned int v2;  // eax, Other Possible Types: char\n
    unsigned int v4;  // ecx\n
    char v5;  // ecx\n
    unsigned int v6;  // ebx\n
    unsigned int v7[3];  // dl, Other Possible Types: unsigned int, char\n
\n
    *(&v0) = v2;\n
    v7 = v1;\n
    v4 = v7[1];\n
    v2 = 5;\n
    if (v4 + 1 > v7[2])\n
        return v2;\n
    v5 = v4 + v7[0];\n
    cgc_memcpy(&v0, v5, 1);\n
    v5 = (&v0)[3];\n
    v2 = v5;\n
    *(&v2) = al<1> + 95;\n
    if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, al<1>), 0x2f<32>, 0x0<32>))\n
    {\n
        v6 = &(&_GLOBAL_OFFSET_TABLE_)[*(&(&_GLOBAL_OFFSET_TABLE_)[14836 + 4 * eax<4>])];\n
        v7 = v5;\n
        goto ebx<4>;\n
    }\n
    if (v5 >= 0)\n
    {\n
        v7 = 0;\n
    }\n
    else\n
    {\n
        *(&v7) = 128;\n
        if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, al<1>), 0x2f<32>, 0x0<32>)))\n
        {\n
            *(&v2) = 4;\n
            *(&v7) = 224;\n
            if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, al<1>), 0x2f<32>, 0x0<32>))\n
                return v2;\n
        }\n
    }\n
    *(a0) = v7;\n
    return 0;\n
}\n
", "4223431:sub_4071c7": null, "4223440:cgc_xpk_peek": "int cgc_xpk_peek(unsigned int v0[3], char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    unsigned int v2[3];  // esi\n
    unsigned int v3;  // edx\n
\n
    v1 = a1;\n
    v2 = v0;\n
    v3 = v2[1];\n
    if (v3 + v1 <= v2[2])\n
    {\n
        cgc_memcpy(a0, v3 + v2[0], v1);\n
        return 0;\n
    }\n
    return 5;\n
}\n
", "4223501:sub_40720d": null, "4223504:cgc_xpk_pack_int": "typedef struct struct_1 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_int(unsigned int v10[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x21]\n
    char v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1f]\n
    char v4;  // [bp-0x1e]\n
    char v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ecx\n
    struct_1 *v13;  // esi\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edi\n
    void* v19;  // eax, Other Possible Types: unsigned int, char\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // edi\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // edi\n
    unsigned int v26;  // ebp\n
    char *v27;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v28;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v29;  // edx\n
    unsigned int v31;  // ecx\n
    unsigned int v32;  // edi\n
    unsigned int v33;  // ecx\n
    struct_0 *v34;  // eax, Other Possible Types: unsigned int\n
    unsigned int v35;  // ecx\n
    unsigned int v36;  // edi\n
\n
    v9 = v11;\n
    v12 = a0;\n
    v13 = v10;\n
    v7 = a1;\n
    v6 = v12;\n
    if (v7 >= 0)\n
    {\n
        v19 = cgc_xpk_pack_uint(v13, v12);\n
        return v19;\n
    }\n
    if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base-24, size=4, endness=Iend_LE), Xor(0xffffffff<32>, Conv(1->32, (ecx<4> < 0xffffff80<32>))), Conv(1->32, (ecx<4> < 0xffffff80<32>)))))\n
    {\n
        v1 = v12;\n
        v19 = v13->field_4;\n
        v14 = v13->field_8;\n
        if (v19 + 1 > v14)\n
        {\n
            v15 = v14 * 2;\n
            if (v14 < v15)\n
            {\n
                v19 = 5;\n
                if (!(v15 <= &g_400000))\n
                    goto LABEL_4074dd;\n
                v13->field_0 = cgc_realloc(v13->field_0, v15);\n
                v13->field_8 = v15;\n
                v19 = v13->field_4;\n
            }\n
        }\n
        v27 = v19 + v13->field_0;\n
        v28 = &v1;\n
        goto LABEL_407347;\n
    }\n
    if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base-24, size=4, endness=Iend_LE), Xor(0xffffffff<32>, Conv(1->32, (ecx<4> < 0xffffff80<32>))), Conv(1->32, (ecx<4> < 0xffffff80<32>)))))\n
    {\n
        v2 = 176;\n
        v19 = v13->field_4;\n
        v16 = v13->field_8;\n
        if (v19 + 1 <= v16)\n
        {\n
LABEL_4072eb:\n
            cgc_memcpy(v19 + v13->field_0, &v2, 1);\n
            v29 = v13->field_4;\n
            v19 = v29 + 1;\n
            *(&v13->field_4) = v19;\n
            v31 = v13->field_8;\n
            if (v29 + 2 > v31)\n
            {\n
                v32 = v31 * 2;\n
                if (v31 < v32)\n
                {\n
                    v19 = 5;\n
                    if (!(v32 <= &g_400000))\n
                        goto LABEL_4074dd;\n
                    v13->field_0 = cgc_realloc(v13->field_0, v32);\n
                    v13->field_8 = v32;\n
                    v19 = v13->field_4;\n
                }\n
            }\n
            v27 = v19 + v13->field_0;\n
            v28 = &v6;\n
LABEL_407347:\n
            cgc_memcpy(v27, v28, 1);\n
            v13->field_4 = v13->field_4 + 1;\n
            v19 = 0;\n
            goto LABEL_4074dd;\n
        }\n
        else\n
        {\n
            v17 = v16 * 2;\n
            if (!(v16 < v17))\n
                goto LABEL_4072eb;\n
            if (v17 <= 0x400000)\n
            {\n
                v13->field_0 = cgc_realloc(v13->field_0, v17);\n
                v13->field_8 = v17;\n
                v19 = v13->field_4;\n
                goto LABEL_4072eb;\n
            }\n
        }\n
    }\n
    else if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base-24, size=4, endness=Iend_LE), Xor(0xffffffff<32>, Conv(1->32, (ecx<4> < 0xffffff80<32>))), Conv(1->32, (ecx<4> < 0xffffff80<32>)))))\n
    {\n
        v3 = 177;\n
        v19 = v13->field_4;\n
        v20 = v13->field_8;\n
        if (v19 + 1 <= v20)\n
        {\n
LABEL_4073a8:\n
            cgc_memcpy(v19 + v13->field_0, &v3, 1);\n
            v13->field_4 = v13->field_4 + 1;\n
            v33 = __buildin_bswap32(v12);\n
            v7 = v33 >> 31;\n
            v6 = v33 >> 16;\n
            v34 = &v6;\n
            v0 = 2;\n
            goto LABEL_4074cf;\n
        }\n
        else\n
        {\n
            v21 = v20 * 2;\n
            if (!(v20 < v21))\n
                goto LABEL_4073a8;\n
            if (v21 <= 0x400000)\n
            {\n
                v13->field_0 = cgc_realloc(v13->field_0, v21);\n
                v13->field_8 = v21;\n
                v19 = v13->field_4;\n
                goto LABEL_4073a8;\n
            }\n
        }\n
    }\n
    else if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base-24, size=4, endness=Iend_LE), Xor(0xffffffff<32>, Conv(1->32, (ecx<4> < 0xffffff80<32>))), Conv(1->32, (ecx<4> < 0xffffff80<32>))))\n
    {\n
        v8 = v12;\n
        v5 = 179;\n
        v19 = v13->field_4;\n
        v24 = v13->field_8;\n
        if (v19 + 1 <= v24)\n
        {\n
LABEL_40749d:\n
            cgc_memcpy(v19 + v13->field_0, &v5, 1);\n
            v13->field_4 = v13->field_4 + 1;\n
            v36 = __buildin_bswap32(v7);\n
            v7 = __buildin_bswap32(v8);\n
            v6 = v36;\n
            v34 = &v6;\n
            v0 = 8;\n
LABEL_4074cf:\n
            v19 = cgc_xpk_write(v13, v34, v0);\n
            goto LABEL_4074dd;\n
        }\n
        else\n
        {\n
            v26 = v24 * 2;\n
            if (!(v24 < v24 << 1))\n
                goto LABEL_40749d;\n
            if (v26 <= 0x400000)\n
            {\n
                v13->field_0 = cgc_realloc(v13->field_0, v26);\n
                v13->field_8 = v26;\n
                v19 = v13->field_4;\n
                goto LABEL_40749d;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v4 = 178;\n
        v19 = v13->field_4;\n
        v23 = v13->field_8;\n
        if (v19 + 1 <= v23)\n
        {\n
LABEL_40742d:\n
            cgc_memcpy(v19 + v13->field_0, &v4, 1);\n
            v13->field_4 = v13->field_4 + 1;\n
            v35 = __buildin_bswap32(v12);\n
            v7 = v35 >> 31;\n
            v6 = v35;\n
            v34 = &v6;\n
            v0 = 4;\n
            goto LABEL_4074cf;\n
        }\n
        else\n
        {\n
            v25 = v23 * 2;\n
            if (!(v23 < v25))\n
                goto LABEL_40742d;\n
            if (v25 <= 0x400000)\n
            {\n
                v13->field_0 = cgc_realloc(v13->field_0, v25);\n
                v13->field_8 = v25;\n
                v19 = v13->field_4;\n
                goto LABEL_40742d;\n
            }\n
        }\n
    }\n
    v19 = 5;\n
LABEL_4074dd:\n
    return v19;\n
}\n
", "4224229:sub_4074e5": null, "4224240:cgc_xpk_pack_uint": "typedef struct struct_1 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_uint(unsigned int v9[3], unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1f]\n
    char v3;  // [bp-0x1e]\n
    char v4;  // [bp-0x1d]\n
    char v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10;  // edi\n
    struct_1 *v11;  // esi\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // edi\n
    unsigned int v22;  // ebp\n
    char *v23;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v24;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v25;  // edx\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // edi\n
    unsigned int v29;  // edx\n
    unsigned int v31;  // ecx\n
    unsigned int v32;  // edi\n
    unsigned int v33;  // edx\n
    unsigned int v35;  // ecx\n
    unsigned int v36;  // edx\n
    unsigned int v37;  // edi\n
    unsigned int v39;  // ecx\n
    unsigned int v40;  // edi\n
    unsigned int v41;  // edi\n
\n
    v8 = v10;\n
    v11 = v9;\n
    v6 = a1;\n
    *(&v5) = a0;\n
    if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (0xff<32> < Load(addr=stack_base-28, size=4, endness=Iend_LE)))), Conv(1->32, (0xff<32> < Load(addr=stack_base-28, size=4, endness=Iend_LE))))))\n
    {\n
        v0 = *(&v5);\n
        v18 = v11->field_4;\n
        v12 = v11->field_8;\n
        if (v18 + 1 > v12)\n
        {\n
            v13 = v12 * 2;\n
            if (v12 < v13)\n
            {\n
                *(&v18) = 5;\n
                if (v13 > 0x400000)\n
                    return v18;\n
                v11->field_0 = cgc_realloc(v11->field_0, v13);\n
                v11->field_8 = v13;\n
                v18 = v11->field_4;\n
            }\n
        }\n
        v23 = v18 + v11->field_0;\n
        v24 = &v0;\n
        goto LABEL_407615;\n
    }\n
    if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (0xff<32> < Load(addr=stack_base-28, size=4, endness=Iend_LE)))), Conv(1->32, (0xff<32> < Load(addr=stack_base-28, size=4, endness=Iend_LE))))))\n
    {\n
        v1 = 192;\n
        v18 = v11->field_4;\n
        v14 = v11->field_8;\n
        if (v18 + 1 <= v14)\n
        {\n
LABEL_4075bd:\n
            cgc_memcpy(v18 + v11->field_0, &v1, 1);\n
            v25 = v11->field_4;\n
            v18 = v25 + 1;\n
            v11->field_4 = v18;\n
            v27 = v11->field_8;\n
            if (v25 + 2 > v27)\n
            {\n
                v28 = v27 * 2;\n
                if (v27 < v28)\n
                {\n
                    *(&v18) = 5;\n
                    if (v28 > 0x400000)\n
                        return v18;\n
                    v11->field_0 = cgc_realloc(v11->field_0, v28);\n
                    v11->field_8 = v28;\n
                    v18 = v11->field_4;\n
                }\n
            }\n
            v23 = v18 + v11->field_0;\n
            v24 = &v5;\n
LABEL_407615:\n
            cgc_memcpy(v23, v24, 1);\n
            v11->field_4 = v11->field_4 + 1;\n
            goto LABEL_407625;\n
        }\n
        else\n
        {\n
            v15 = v14 * 2;\n
            if (!(v14 < v15))\n
                goto LABEL_4075bd;\n
            if (v15 <= 0x400000)\n
            {\n
                v11->field_0 = cgc_realloc(v11->field_0, v15);\n
                v11->field_8 = v15;\n
                v18 = v11->field_4;\n
                goto LABEL_4075bd;\n
            }\n
        }\n
    }\n
    else if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (0xff<32> < Load(addr=stack_base-28, size=4, endness=Iend_LE)))), Conv(1->32, (0xff<32> < Load(addr=stack_base-28, size=4, endness=Iend_LE)))))\n
    {\n
        v7 = *(&v5);\n
        if (v6)\n
        {\n
            v4 = 195;\n
            v18 = v11->field_4;\n
            v20 = v11->field_8;\n
            if (v18 + 1 <= v20)\n
            {\n
LABEL_407806:\n
                cgc_memcpy(v18 + v11->field_0, &v4, 1);\n
                v36 = v11->field_4;\n
                v11->field_4 = v36 + 1;\n
                v37 = __buildin_bswap32(v6);\n
                v6 = __buildin_bswap32(v7);\n
                *(&v5) = v37;\n
                v39 = v11->field_8;\n
                if (v36 + 9 > v39)\n
                {\n
                    v41 = v39 * 2;\n
                    if (v39 < v41)\n
                    {\n
                        *(&v18) = 5;\n
                        if (v41 > 0x400000)\n
                            return v18;\n
                        v11->field_0 = cgc_realloc(v11->field_0, v41);\n
                        v11->field_8 = v41;\n
                        v18 = v11->field_4;\n
                    }\n
                }\n
                cgc_memcpy(v18 + v11->field_0, &v5, 8);\n
                v11->field_4 = v11->field_4 + 8;\n
LABEL_407625:\n
                return 0;\n
            }\n
            else\n
            {\n
                v22 = v20 * 2;\n
                if (!(v20 < v20 << 1))\n
                    goto LABEL_407806;\n
                if (v22 <= 0x400000)\n
                {\n
                    v11->field_0 = cgc_realloc(v11->field_0, v22);\n
                    v11->field_8 = v22;\n
                    v18 = v11->field_4;\n
                    goto LABEL_407806;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v3 = 194;\n
            v18 = v11->field_4;\n
            v19 = v11->field_8;\n
            if (v18 + 1 <= v19)\n
            {\n
LABEL_407748:\n
                v18 += v11->field_0;\n
                cgc_memcpy(v18, &v3, 1);\n
                v33 = v11->field_4;\n
                v11->field_4 = v33 + 1;\n
                *(&v5) = __buildin_bswap32(v7);\n
                v6 = 0;\n
                v35 = v11->field_8;\n
                if (v33 + 5 > v35)\n
                {\n
                    v40 = v35 * 2;\n
                    if (v35 < v40)\n
                    {\n
                        *(&v18) = 5;\n
                        if (v40 > 0x400000)\n
                            return v18;\n
                        v11->field_0 = cgc_realloc(v11->field_0, v40);\n
                        v11->field_8 = v40;\n
                        v18 = v11->field_4;\n
                    }\n
                }\n
                cgc_memcpy(v18 + v11->field_0, &v5, 4);\n
                v11->field_4 = v11->field_4 + 4;\n
                goto LABEL_407625;\n
            }\n
            else\n
            {\n
                v21 = v19 * 2;\n
                if (!(v19 < v21))\n
                    goto LABEL_407748;\n
                if (v21 <= 0x400000)\n
                {\n
                    v11->field_0 = cgc_realloc(v11->field_0, v21);\n
                    v11->field_8 = v21;\n
                    v18 = v11->field_4;\n
                    goto LABEL_407748;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v2 = 193;\n
        v18 = v11->field_4;\n
        v16 = v11->field_8;\n
        if (v18 + 1 <= v16)\n
        {\n
LABEL_40767d:\n
            cgc_memcpy(v18 + v11->field_0, &v2, 1);\n
            v29 = v11->field_4;\n
            v18 = v29 + 1;\n
            v11->field_4 = v18;\n
            *(&v5) = __ROL__(*(&v5), 8);\n
            v6 = 0;\n
            v31 = v11->field_8;\n
            if (v29 + 3 > v31)\n
            {\n
                v32 = v31 * 2;\n
                if (v31 < v32)\n
                {\n
                    *(&v18) = 5;\n
                    if (v32 > 0x400000)\n
                        return v18;\n
                    v11->field_0 = cgc_realloc(v11->field_0, v32);\n
                    v11->field_8 = v32;\n
                    v18 = v11->field_4;\n
                }\n
            }\n
            cgc_memcpy(v18 + v11->field_0, &v5, 2);\n
            v11->field_4 = v11->field_4 + 2;\n
            goto LABEL_407625;\n
        }\n
        else\n
        {\n
            v17 = v16 * 2;\n
            if (!(v16 < v17))\n
                goto LABEL_40767d;\n
            if (v17 <= 0x400000)\n
            {\n
                v11->field_0 = cgc_realloc(v11->field_0, v17);\n
                v11->field_8 = v17;\n
                v18 = v11->field_4;\n
                goto LABEL_40767d;\n
            }\n
        }\n
    }\n
    *(&v18) = 5;\n
    return v18;\n
}\n
", "4225166:sub_40788e": null, "4225168:cgc_xpk_pack_none": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_none(unsigned int v1[3])\n
{\n
    char v0;  // [bp-0xd]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v2 = v1;\n
    v0 = 160;\n
    v3 = v2->field_4;\n
    v4 = v2->field_8;\n
    if (v3 + 1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v5)\n
        {\n
            *(&v3) = 5;\n
            if (v5 > 0x400000)\n
                return v3;\n
            v2->field_0 = cgc_realloc(v2->field_0, v5);\n
            v2->field_8 = v5;\n
            v3 = v2->field_4;\n
        }\n
    }\n
    cgc_memcpy(v3 + v2->field_0, &v0, 1);\n
    v2->field_4 = v2->field_4 + 1;\n
    return 0;\n
}\n
", "4225281:sub_407901": null, "4225296:cgc_xpk_pack_nil": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_nil(unsigned int v1[3])\n
{\n
    char v0;  // [bp-0xd]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v2 = v1;\n
    v0 = 166;\n
    v3 = v2->field_4;\n
    v4 = v2->field_8;\n
    if (v3 + 1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v5)\n
        {\n
            *(&v3) = 5;\n
            if (v5 > 0x400000)\n
                return v3;\n
            v2->field_0 = cgc_realloc(v2->field_0, v5);\n
            v2->field_8 = v5;\n
            v3 = v2->field_4;\n
        }\n
    }\n
    cgc_memcpy(v3 + v2->field_0, &v0, 1);\n
    v2->field_4 = v2->field_4 + 1;\n
    return 0;\n
}\n
", "4225409:sub_407981": null, "4225424:cgc_xpk_pack_bool": "typedef struct struct_1 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_bool(unsigned int v2[3], char a0)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    struct_1 *v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // edi\n
    char *v9;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v10;  // ecx, Other Possible Types: unsigned int\n
\n
    v3 = v2;\n
    if (!a0)\n
    {\n
        v1 = 161;\n
        v4 = v3->field_4;\n
        v6 = v3->field_8;\n
        if (v4 + 1 > v6)\n
        {\n
            v8 = v6 * 2;\n
            if (v6 < v8)\n
            {\n
                *(&v4) = 5;\n
                if (v8 > 0x400000)\n
                    return v4;\n
                v3->field_0 = cgc_realloc(v3->field_0, v8);\n
                v3->field_8 = v8;\n
                v4 = v3->field_4;\n
            }\n
        }\n
        v9 = v4 + v3->field_0;\n
        v10 = &v1;\n
    }\n
    else\n
    {\n
        v0 = 162;\n
        v4 = v3->field_4;\n
        v5 = v3->field_8;\n
        if (v4 + 1 > v5)\n
        {\n
            v7 = v5 * 2;\n
            if (v5 < v7)\n
            {\n
                *(&v4) = 5;\n
                if (v7 > 0x400000)\n
                    return v4;\n
                v3->field_0 = cgc_realloc(v3->field_0, v7);\n
                v3->field_8 = v7;\n
                v4 = v3->field_4;\n
            }\n
        }\n
        v9 = v4 + v3->field_0;\n
        v10 = &v0;\n
    }\n
    cgc_memcpy(v9, v10, 1);\n
    v3->field_4 = v3->field_4 + 1;\n
    return 0;\n
}\n
", "4225612:sub_407a4c": null, "4225616:cgc_xpk_pack_str": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_str(unsigned int v3[3], char *a0)\n
{\n
    char v0;  // [bp-0x16]\n
    char v1;  // [bp-0x15]\n
    char v2;  // [bp-0x14]\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // ebp\n
    unsigned int v18;  // ebp\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // ecx\n
\n
    v4 = v3;\n
    v5 = cgc_strlen(a0);\n
    v6 = v5;\n
    if (v5 <= 31)\n
    {\n
        v7 = v5;\n
        v0 = v5 | 128;\n
        v5 = v4->field_4;\n
        v8 = v4->field_8;\n
        if (v5 + 1 > v8)\n
        {\n
            v9 = v8 * 2;\n
            if (v8 < v8 << 1)\n
            {\n
                if (!(v9 <= &g_400000))\n
                    goto LABEL_407c30;\n
                v4->field_0 = cgc_realloc(v4->field_0, v9);\n
                v4->field_8 = v9;\n
                v5 = v4->field_4;\n
            }\n
        }\n
        cgc_memcpy(v5 + v4->field_0, &v0, 1);\n
        v5 = v4->field_4 + 1;\n
        v4->field_4 = v5;\n
        if (!v7)\n
            goto LABEL_407c26;\n
        v12 = v4->field_8;\n
        if (v7 + v5 <= v12)\n
            goto LABEL_407c10;\n
        v17 = v12 * 2;\n
        if (!(v12 < v12 << 1))\n
            goto LABEL_407c10;\n
        if (v17 <= &g_400000)\n
            goto LABEL_407bfa;\n
    }\n
    else\n
    {\n
        *(&v5) = 1;\n
        if (v6 > 65535)\n
            return v5;\n
        v7 = v6;\n
        v1 = 208;\n
        v5 = v4->field_4;\n
        v10 = v4->field_8;\n
        if (v5 + 1 <= v10)\n
        {\n
LABEL_407b5d:\n
            cgc_memcpy(v5 + v4->field_0, &v1, 1);\n
            v13 = v4->field_4;\n
            v5 = v13 + 1;\n
            v4->field_4 = v5;\n
            v14 = v7;\n
            *(&v14) = __ROL__(v7, 8);\n
            *(&v2) = v14;\n
            v16 = v4->field_8;\n
            if (v13 + 3 > v16)\n
            {\n
                v18 = v16 * 2;\n
                if (v16 < v16 << 1)\n
                {\n
                    *(&v5) = 5;\n
                    if (v18 > 0x400000)\n
                        return v5;\n
                    v4->field_0 = cgc_realloc(v4->field_0, v18);\n
                    v4->field_8 = v18;\n
                    v5 = v4->field_4;\n
                }\n
            }\n
            cgc_memcpy(v5 + v4->field_0, &v2, 2);\n
            v19 = v4->field_4;\n
            v20 = v4->field_8;\n
            v5 = v19 + 2;\n
            v4->field_4 = v5;\n
            if (v19 + v7 + 2 <= v20)\n
                goto LABEL_407c10;\n
            v17 = v20 * 2;\n
            if (!(v20 < v20 << 1))\n
                goto LABEL_407c10;\n
            *(&v5) = 5;\n
            if (v17 > 0x400000)\n
                return v5;\n
LABEL_407bfa:\n
            v4->field_0 = cgc_realloc(v4->field_0, v17);\n
            v4->field_8 = v17;\n
            v5 = v4->field_4;\n
LABEL_407c10:\n
            cgc_memcpy(v5 + v4->field_0, a0, v7);\n
            v4->field_4 = v4->field_4 + v7;\n
LABEL_407c26:\n
            return 0;\n
        }\n
        else\n
        {\n
            v11 = v10 * 2;\n
            if (!(v10 < v10 << 1))\n
                goto LABEL_407b5d;\n
            if (v11 <= 0x400000)\n
            {\n
                v4->field_0 = cgc_realloc(v4->field_0, v11);\n
                v4->field_8 = v11;\n
                v5 = v4->field_4;\n
                goto LABEL_407b5d;\n
            }\n
        }\n
    }\n
LABEL_407c30:\n
    *(&v5) = 5;\n
    return v5;\n
}\n
", "4226100:sub_407c34": null, "4226112:cgc_xpk_pack_bytes": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_bytes(unsigned int v2[3], char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x15]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // al, Other Possible Types: char\n
    struct_0 *v5;  // edi\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ebp\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // ebp\n
\n
    v3 = a1;\n
    v4 = 1;\n
    if (v3 > 65535)\n
        return v4;\n
    v5 = v2;\n
    v0 = 163;\n
    v4 = v5->field_4;\n
    v6 = v5->field_8;\n
    if (v4 + 1 > v6)\n
    {\n
        v7 = v6 * 2;\n
        if (v6 < v6 << 1)\n
        {\n
            if (v7 <= 0x400000)\n
            {\n
                v5->field_0 = cgc_realloc(v5->field_0, v7);\n
                v5->field_8 = v7;\n
                v4 = v5->field_4;\n
            }\n
            else\n
            {\n
                *(&v4) = 5;\n
                return v4;\n
            }\n
        }\n
    }\n
    cgc_memcpy(v4 + v5->field_0, &v0, 1);\n
    v8 = v5->field_4;\n
    v4 = v8 + 1;\n
    v5->field_4 = v4;\n
    v9 = v3;\n
    *(&v9) = __ROL__(v3, 8);\n
    *(&v1) = v9;\n
    v11 = v5->field_8;\n
    if (v8 + 3 > v11)\n
    {\n
        v12 = v11 * 2;\n
        if (v11 < v11 << 1)\n
        {\n
            *(&v4) = 5;\n
            if (v12 > 0x400000)\n
                return v4;\n
            v5->field_0 = cgc_realloc(v5->field_0, v12);\n
            v5->field_8 = v12;\n
            v4 = v5->field_4;\n
        }\n
    }\n
    cgc_memcpy(v4 + v5->field_0, &v9, 2);\n
    v4 = v5->field_4 + 2;\n
    v5->field_4 = v4;\n
    if (!v3)\n
        return 0;\n
    v13 = v5->field_8;\n
    if (v4 + v3 > v13)\n
    {\n
        v14 = v13 * 2;\n
        if (v13 < v13 << 1)\n
        {\n
            *(&v4) = 5;\n
            if (v14 > 0x400000)\n
                return v4;\n
            v5->field_0 = cgc_realloc(v5->field_0, v14);\n
            v5->field_8 = v14;\n
            v4 = v5->field_4;\n
        }\n
    }\n
    cgc_memcpy(v4 + v5->field_0, a0, v3);\n
    v5->field_4 = v5->field_4 + v3;\n
}\n
", "4226427:sub_407d7b": null, "4226432:cgc_xpk_pack_array": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_array(unsigned int v1[3], char a0)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v2;  // al, Other Possible Types: char\n
    struct_0 *v3;  // esi\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v2 = 2;\n
    if (*(&a0) > 255)\n
        return v2;\n
    v3 = v1;\n
    v0 = 164;\n
    v2 = v3->field_4;\n
    v4 = v3->field_8;\n
    if (v2 + 1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v5)\n
        {\n
            if (v5 <= 0x400000)\n
            {\n
                v3->field_0 = cgc_realloc(v3->field_0, v5);\n
                v3->field_8 = v5;\n
                v2 = v3->field_4;\n
            }\n
            else\n
            {\n
                *(&v2) = 5;\n
                return v2;\n
            }\n
        }\n
    }\n
    cgc_memcpy(v2 + v3->field_0, &v0, 1);\n
    v6 = v3->field_4;\n
    v2 = v6 + 1;\n
    v3->field_4 = v2;\n
    v8 = v3->field_8;\n
    if (v6 + 2 > v8)\n
    {\n
        v9 = v8 * 2;\n
        if (v8 < v9)\n
        {\n
            *(&v2) = 5;\n
            if (v9 > 0x400000)\n
                return v2;\n
            v3->field_0 = cgc_realloc(v3->field_0, v9);\n
            v3->field_8 = v9;\n
            v2 = v3->field_4;\n
        }\n
    }\n
    cgc_memcpy(v2 + v3->field_0, &a0, 1);\n
    v3->field_4 = v3->field_4 + 1;\n
    return 0;\n
}\n
", "4226646:sub_407e56": null, "4226656:cgc_xpk_pack_map": "typedef struct struct_0 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_400000;\n
\n
int cgc_xpk_pack_map(unsigned int v1[3], char a0)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v2;  // al, Other Possible Types: char\n
    struct_0 *v3;  // esi\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // edx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v2 = 3;\n
    if (*(&a0) > 255)\n
        return v2;\n
    v3 = v1;\n
    v0 = 165;\n
    v2 = v3->field_4;\n
    v4 = v3->field_8;\n
    if (v2 + 1 > v4)\n
    {\n
        v5 = v4 * 2;\n
        if (v4 < v5)\n
        {\n
            if (v5 <= 0x400000)\n
            {\n
                v3->field_0 = cgc_realloc(v3->field_0, v5);\n
                v3->field_8 = v5;\n
                v2 = v3->field_4;\n
            }\n
            else\n
            {\n
                *(&v2) = 5;\n
                return v2;\n
            }\n
        }\n
    }\n
    cgc_memcpy(v2 + v3->field_0, &v0, 1);\n
    v6 = v3->field_4;\n
    v2 = v6 + 1;\n
    v3->field_4 = v2;\n
    v8 = v3->field_8;\n
    if (v6 + 2 > v8)\n
    {\n
        v9 = v8 * 2;\n
        if (v8 < v9)\n
        {\n
            *(&v2) = 5;\n
            if (v9 > 0x400000)\n
                return v2;\n
            v3->field_0 = cgc_realloc(v3->field_0, v9);\n
            v3->field_8 = v9;\n
            v2 = v3->field_4;\n
        }\n
    }\n
    cgc_memcpy(v2 + v3->field_0, &a0, 1);\n
    v3->field_4 = v3->field_4 + 1;\n
    return 0;\n
}\n
", "4226870:sub_407f36": null, "4226880:cgc_xpk_unpack_int": "int cgc_xpk_unpack_int(unsigned int v6[3], unsigned int a0[2], char *a1)\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    unsigned int v7;  // eax\n
    char v8;  // cl\n
\n
    v7 = cgc_xpk_read_obj(v6, &v2, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    if (v7)\n
    {\n
LABEL_407fdf:\n
        return v7;\n
    }\n
    *(&v7) = 4;\n
    v8 = v2 + 80;\n
    if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Load(addr=stack_base-28, size=1, endness=Iend_LE) + 0x50<8>)), 0x50<32>, 0x0<32>)))\n
        goto LABEL_407fdf;\n
}\n
", "4227046:sub_407fe6": null, "4227056:cgc_xpk_unpack_nil": "int cgc_xpk_unpack_nil(unsigned int v7[3])\n
{\n
    char v0;  // [bp-0x24]\n
    int tmp_44;  // tmp #44\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x4]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
\n
    v6 = v8;\n
    v9 = cgc_xpk_read_obj(v7, &v4, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    tmp_44 = v9;\n
    if (!tmp_44)\n
        return (v4 != 166) * 4;\n
    return v9;\n
}\n
", "4227119:sub_40802f": null, "4227120:cgc_xpk_unpack_bool": "int cgc_xpk_unpack_bool(unsigned int v6[3], char *a0)\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    char v7;  // eax\n
\n
    v7 = cgc_xpk_read_obj(v6, &v4, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    if (v7)\n
        return v7;\n
    v7 = 4;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Load(addr=stack_base-20, size=1, endness=Iend_LE) + 0x5d<8>)), 0xfe<32>, 0x0<32>))\n
        return v7;\n
    *(a0) = v5;\n
    return 0;\n
}\n
", "4227196:sub_40807c": null, "4227200:cgc_xpk_unpack_str": "int cgc_xpk_unpack_str(unsigned int v6[3], unsigned int *a0)\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    char v7;  // eax\n
\n
    v7 = cgc_xpk_read_obj(v6, &v4, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    if (v7)\n
        return v7;\n
    if (v4 == 208)\n
    {\n
        *(a0) = *(&v5);\n
        return 0;\n
    }\n
    v7 = 4;\n
    if (v4 != 128)\n
        return v7;\n
}\n
", "4227278:sub_4080ce": null, "4227280:cgc_xpk_unpack_bytes": "int cgc_xpk_unpack_bytes(unsigned int v6[3], unsigned int *a0)\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    char v7;  // eax\n
\n
    v7 = cgc_xpk_read_obj(v6, &v4, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    if (v7)\n
        return v7;\n
    v7 = 4;\n
    if (v4 != 163)\n
        return v7;\n
    *(a0) = *(&v5);\n
    return 0;\n
}\n
", "4227351:sub_408117": null, "4227360:cgc_xpk_unpack_array": "int cgc_xpk_unpack_array(unsigned int v6[3], unsigned int *a0)\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    char v7;  // eax\n
\n
    v7 = cgc_xpk_read_obj(v6, &v4, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    if (v7)\n
        return v7;\n
    v7 = 4;\n
    if (v4 != 164)\n
        return v7;\n
    *(a0) = *(&v5);\n
    return 0;\n
}\n
", "4227431:sub_408167": null, "4227440:cgc_xpk_unpack_map": "int cgc_xpk_unpack_map(unsigned int v6[3], unsigned int *a0)\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    char v7;  // eax\n
\n
    v7 = cgc_xpk_read_obj(v6, &v4, *(&v0), *(&v1), *(&v2), *(&v3), *(&v4), *(&v5));\n
    if (v7)\n
        return v7;\n
    v7 = 4;\n
    if (v4 != 165)\n
        return v7;\n
    *(a0) = *(&v5);\n
    return 0;\n
}\n
", "4227512:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}