{"4198400:_init": "extern struct_0 *g_407734;\n
\n
int _init()\n
{\n
    if (g_407734)\n
    {\n
        g_407734();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 26187;\n
    v6 = v5 + 43;\n
    v7 = v5 + 43;\n
    if (v7 == v6)\n
        return v5 + 43;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 26123;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 43;\n
    v9 = (v6 + 43 - (v6 + 43) >> 31) + (43 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_407730;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_407730)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (!v4)\n
        return 0;\n
    v5 = a0;\n
    if (!v5)\n
        return 0;\n
    tmp_2 = v5;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v7 = v5 * v4;\n
    v8 = cgc_malloc();\n
    if (v8)\n
    {\n
        v0 = v7;\n
        return cgc_memset(v8, 0);\n
    }\n
    return 0;\n
}\n
", "4198959:sub_40122f": null, "4198960:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4198993:sub_401251": null, "4199008:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4199027:sub_401273": null, "4199040:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4199056:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4199072:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4199088:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4199102:sub_4012be": null, "4199104:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4199126:sub_4012d6": null, "4199136:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4199158:sub_4012f6": null, "4199168:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4199190:sub_401316": null, "4199200:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4199222:sub_401336": null, "4199232:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return *((4214792 + v0));\n
}\n
", "4199257:sub_401359": null, "4199264:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4199289:sub_401379": null, "4199296:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return *((4214920 + v0));\n
}\n
", "4199321:sub_401399": null, "4199328:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4199336:sub_4013a8": null, "4199344:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4199363:sub_4013c3": null, "4199376:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4199395:sub_4013e3": null, "4199408:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (!v3)\n
    {\n
        return v2;\n
    }\n
    else if (v3[5].field_-14)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = v3 + 6;\n
        cgc_insert_into_flist();\n
        v0 = v0;\n
        return cgc_coalesce();\n
    }\n
}\n
", "4199468:sub_40142c": null, "4199472:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_40786c;\n
\n
int cgc_malloc(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned int v5;  // edi\n
    struct_1 *v6;  // edi\n
    struct_2 *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // ebp\n
    unsigned int v9[6];  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    struct_0 *v12;  // ecx\n
\n
    v3 = v2;\n
    if (!v3)\n
        return 0;\n
    v5 = v3 + 7 & -8;\n
    if (!(v3 & 7))\n
        v5 = v3;\n
    v6 = v5 + 24;\n
    v7 = cgc_get_size_class();\n
    if (v7 <= 31)\n
    {\n
        v8 = *((&cgc_free_lists + 0x4 * v7));\n
        if (!*((&cgc_free_lists + 0x4 * v7)))\n
            goto LABEL_401480;\n
        else\n
            goto LABEL_0x401490;\n
    }\n
    else\n
    {\n
        v0 = &v1;\n
        if (cgc_allocate(0x40000, 0))\n
            return 0;\n
        v9 = *(&v1);\n
        if (!v9)\n
            return 0;\n
        v9[0] = 0x40000;\n
        v9[1] = 1;\n
        v9[3] = 0;\n
        v9[2] = 0;\n
        v9[5] = 0;\n
        v9[4] = 0;\n
        cgc_insert_into_flist();\n
        v8 = g_40786c;\n
        cgc_remove_from_flist();\n
        v10 = *(v8) - v6;\n
        if (v10 < 25)\n
            return v8 + 24;\n
        v11 = v6 + v8;\n
        *((&v6->field_0 + v8)) = v10;\n
        *(&v6->padding_4[v8]) = 1;\n
        *((8 + &v6->field_0 + v8)) = 0;\n
        *(&v6->padding_c[v8]) = 0;\n
        *(v8) = v6;\n
        *((20 + &v6->field_0 + v8)) = v8;\n
        *((16 + &v6->field_0 + v8)) = *((v8 + 16));\n
        v12 = *((v8 + 16));\n
        if (v12)\n
            v12->field_14 = v11;\n
        *((v8 + 16)) = v11;\n
        cgc_insert_into_flist();\n
    }\n
    while (true)\n
    {\n
        while (*(v8) < v6)\n
        {\n
            v8 = *((v8 + 8));\n
            if (!v8)\n
                goto LABEL_401480;\n
        }\n
        while (true)\n
        {\n
LABEL_401480:\n
            v7 += 1;\n
            if (v7 == 32)\n
                break;\n
            v8 = *(&(&cgc_free_lists)[4 * v7]);\n
        }\n
    }\n
}\n
", "4199786:sub_40156a": null, "4199792:cgc_get_size_class": "extern unsigned int g_407770;\n
extern unsigned int g_407774;\n
extern unsigned int g_407778;\n
extern unsigned int g_40777c;\n
extern unsigned int g_407780;\n
extern unsigned int g_407784;\n
extern unsigned int g_407788;\n
extern unsigned int g_40778c;\n
extern unsigned int g_407790;\n
extern unsigned int g_407794;\n
extern unsigned int g_407798;\n
extern unsigned int g_40779c;\n
extern unsigned int g_4077a0;\n
extern unsigned int g_4077a4;\n
extern unsigned int g_4077a8;\n
extern unsigned int g_4077ac;\n
extern unsigned int g_4077b0;\n
extern unsigned int g_4077b4;\n
extern unsigned int g_4077b8;\n
extern unsigned int g_4077bc;\n
extern unsigned int g_4077c0;\n
extern unsigned int g_4077c4;\n
extern unsigned int g_4077c8;\n
extern unsigned int g_4077cc;\n
extern unsigned int g_4077d0;\n
extern unsigned int g_4077d4;\n
extern unsigned int g_4077d8;\n
extern unsigned int g_4077dc;\n
extern unsigned int g_4077e0;\n
extern unsigned int g_4077e4;\n
extern unsigned int g_4077e8;\n
extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (size_class_limits >= v1)\n
        return v2;\n
    v2 = 1;\n
    if (g_407770 < v1)\n
    {\n
        v2 = 2;\n
        if (g_407774 < v1)\n
        {\n
            v2 = 3;\n
            if (g_407778 < v1)\n
            {\n
                v2 = 4;\n
                if (g_40777c < v1)\n
                {\n
                    v2 = 5;\n
                    if (g_407780 < v1)\n
                    {\n
                        v2 = 6;\n
                        if (g_407784 < v1)\n
                        {\n
                            v2 = 7;\n
                            if (g_407788 < v1)\n
                            {\n
                                v2 = 8;\n
                                if (g_40778c < v1)\n
                                {\n
                                    v2 = 9;\n
                                    if (g_407790 < v1)\n
                                    {\n
                                        v2 = 10;\n
                                        if (g_407794 < v1)\n
                                        {\n
                                            v2 = 11;\n
                                            if (g_407798 < v1)\n
                                            {\n
                                                v2 = 12;\n
                                                if (g_40779c < v1)\n
                                                {\n
                                                    v2 = 13;\n
                                                    if (g_4077a0 < v1)\n
                                                    {\n
                                                        v2 = 14;\n
                                                        if (g_4077a4 < v1)\n
                                                        {\n
                                                            v2 = 15;\n
                                                            if (g_4077a8 < v1)\n
                                                            {\n
                                                                v2 = 16;\n
                                                                if (g_4077ac < v1)\n
                                                                {\n
                                                                    v2 = 17;\n
                                                                    if (g_4077b0 < v1)\n
                                                                    {\n
                                                                        v2 = 18;\n
                                                                        if (g_4077b4 < v1)\n
                                                                        {\n
                                                                            v2 = 19;\n
                                                                            if (g_4077b8 < v1)\n
                                                                            {\n
                                                                                v2 = 20;\n
                                                                                if (g_4077bc < v1)\n
                                                                                {\n
                                                                                    v2 = 21;\n
                                                                                    if (g_4077c0 < v1)\n
                                                                                    {\n
                                                                                        v2 = 22;\n
                                                                                        if (g_4077c4 < v1)\n
                                                                                        {\n
                                                                                            v2 = 23;\n
                                                                                            if (g_4077c8 < v1)\n
                                                                                            {\n
                                                                                                v2 = 24;\n
                                                                                                if (g_4077cc < v1)\n
                                                                                                {\n
                                                                                                    v2 = 25;\n
                                                                                                    if (g_4077d0 < v1)\n
                                                                                                    {\n
                                                                                                        v2 = 26;\n
                                                                                                        if (g_4077d4 < v1)\n
                                                                                                        {\n
                                                                                                            v2 = 27;\n
                                                                                                            if (g_4077d8 < v1)\n
                                                                                                            {\n
                                                                                                                v2 = 28;\n
                                                                                                                if (g_4077dc < v1)\n
                                                                                                                {\n
                                                                                                                    v2 = 29;\n
                                                                                                                    if (g_4077e0 < v1)\n
                                                                                                                    {\n
                                                                                                                        v2 = 30;\n
                                                                                                                        if (g_4077e4 < v1)\n
                                                                                                                            v2 = 31 + (g_4077e8 < v1);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4200311:sub_401777": null, "4200320:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1[0]);\n
    v1[1] = 1;\n
    v3 = *((4225008 + 4 * v2));\n
    if (v3)\n
    {\n
        v1[2] = v3;\n
        *((*((4225008 + 4 * v2)) + 12)) = v1;\n
        *((4225008 + 4 * v2)) = v1;\n
        v1[3] = 0;\n
        return v2;\n
    }\n
    *((4225008 + 4 * v2)) = v1;\n
    return v2;\n
}\n
", "4200413:sub_4017dd": null, "4200416:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // ecx\n
    struct_1 *v4;  // edx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1->field_0);\n
    v3 = v1->field_c;\n
    if (v3)\n
        v3->field_8 = v1->field_8;\n
    v4 = v1->field_8;\n
    if (v4)\n
        v4->field_c = v3;\n
    if (*((4225008 + 4 * v2)) == v1)\n
        *((4225008 + 4 * v2)) = v4;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v2;\n
}\n
", "4200511:sub_40183f": null, "4200512:cgc_coalesce": "typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_4 *field_14;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_c;\n
    unsigned int field_10;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_0 *field_14;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_5 *v0)\n
{\n
    struct_5 *v1;  // esi\n
    struct_4 *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    struct_2 *v5;  // ecx\n
    struct_2 *v6;  // ecx\n
    unsigned int v7;  // eax\n
    struct_1 *v8;  // edx\n
    struct_2 *v9;  // ecx\n
    struct_1 *v10;  // edx\n
    struct_1 *v11;  // edx\n
    struct_3 *v12;  // edi, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // eax\n
    struct_2 *v16;  // ecx\n
    struct_2 *v17;  // ecx\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // eax\n
    struct_1 *v20;  // edx\n
    struct_2 *v21;  // ecx\n
    struct_1 *v22;  // edx\n
    struct_1 *v23;  // edx\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // eax\n
    struct_2 *v28;  // ecx\n
    unsigned int v29;  // ecx\n
    struct_4 *v30;  // ebp\n
    unsigned int v31;  // edi\n
    unsigned int v32;  // eax\n
    struct_3 *v33;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v34;  // eax, Other Possible Types: unsigned int, struct_0 *, struct_3 *\n
    struct_1 *v35;  // edx\n
    unsigned int v36;  // ecx\n
    struct_3 *v37;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v38;  // ebp\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // edi\n
    unsigned int v41;  // eax\n
    unsigned int v42;  // ecx\n
    struct_3 *v43;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v44;  // eax, Other Possible Types: unsigned int\n
    struct_3 *v45;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_14;\n
    if (!v1->field_14)\n
        return v34;\n
    v12 = v1->field_10;\n
    if (!v2->field_4)\n
    {\n
        if (!v12)\n
        {\n
            return v34;\n
        }\n
        else if (!v12->field_4)\n
        {\n
            return v34;\n
        }\n
        else\n
        {\n
            v4 = cgc_get_size_class(v12->field_0);\n
            v6 = v12->field_c;\n
            if (v6)\n
                v6->field_8 = v12->field_8;\n
            v10 = v12->field_8;\n
            if (v10)\n
                v10->field_c = v6;\n
            if (*((4225008 + 4 * v4)) == v12)\n
                *((4225008 + 4 * v4)) = v10;\n
            v12->field_8 = 0;\n
            v12->field_c = 0;\n
            v12->field_4 = 0;\n
            v14 = v1->field_0;\n
            v15 = cgc_get_size_class(v14);\n
            v17 = v1->field_c;\n
            if (v17)\n
                v17->field_8 = v1->field_8;\n
            v22 = v1->field_8;\n
            if (v22)\n
                v22->field_c = v17;\n
            if (*((4225008 + 4 * v15)) == v1)\n
                *((4225008 + 4 * v15)) = v22;\n
            v1->field_8 = 0;\n
            v1->field_c = 0;\n
            v1->field_4 = 0;\n
            v26 = v14 + v1->field_10->field_0;\n
            v1->field_0 = v26;\n
            v27 = cgc_get_size_class(v26);\n
            v1->field_4 = 1;\n
            v29 = *((4225008 + 4 * v27));\n
            if (v29)\n
            {\n
                v1->field_8 = v29;\n
                *((*((4225008 + 4 * v27)) + 12)) = v1;\n
                *((4225008 + 4 * v27)) = v1;\n
                v1->field_c = 0;\n
                v33 = v1->field_10;\n
                v34 = v33->field_14;\n
                if (!v34)\n
                    goto LABEL_401bba;\n
            }\n
            else\n
            {\n
                *((4225008 + 4 * v27)) = v1;\n
                v33 = v1->field_10;\n
                v34 = *((v33 + 20));\n
                if (!v34)\n
                    goto LABEL_401bba;\n
            }\n
            *((v34 + 16)) = *((v33 + 16));\n
LABEL_401bba:\n
            v37 = *((v33 + 16));\n
            if (!v37)\n
                return v34;\n
        }\n
LABEL_401bc1:\n
        *((v37 + 20)) = v34;\n
        return v34;\n
    }\n
    if (v12 && v12->field_4)\n
    {\n
        v3 = cgc_get_size_class(v2->field_0);\n
        v5 = v2->field_c;\n
        if (v5)\n
            v5->field_8 = v2->field_8;\n
        v8 = v2->field_8;\n
        if (v8)\n
            v8->field_c = v5;\n
        if (*((4225008 + 4 * v3)) == v2)\n
        {\n
            *((4225008 + 4 * v3)) = v8;\n
            v12 = v1->field_10;\n
        }\n
        v2->field_8 = 0;\n
        v2->field_c = 0;\n
        v2->field_4 = 0;\n
        v13 = cgc_get_size_class(*(v12));\n
        v16 = *((v12 + 12));\n
        if (v16)\n
            v16->field_8 = *((v12 + 8));\n
        v20 = *((v12 + 8));\n
        if (v20)\n
            v20->field_c = v16;\n
        if (*((4225008 + 4 * v13)) == v12)\n
            *((4225008 + 4 * v13)) = v20;\n
        *((v12 + 8)) = 0;\n
        *((v12 + 12)) = 0;\n
        *((v12 + 4)) = 0;\n
        v24 = v1->field_0;\n
        v25 = cgc_get_size_class(v24);\n
        v28 = v1->field_c;\n
        if (v28)\n
            v28->field_8 = v1->field_8;\n
        v35 = v1->field_8;\n
        if (v35)\n
            v35->field_c = v28;\n
        if (*((4225008 + 4 * v25)) == v1)\n
            *((4225008 + 4 * v25)) = v35;\n
        v1->field_8 = 0;\n
        v1->field_c = 0;\n
        v1->field_4 = 0;\n
        v38 = v1->field_14;\n
        v39 = v24 + v1->field_14->field_0;\n
        v1->field_14->field_0 = v39;\n
        v40 = v39 + v1->field_10->field_0;\n
        v38->field_0 = v40;\n
        v41 = cgc_get_size_class(v40);\n
        v38->field_4 = 1;\n
        v42 = *((4225008 + 4 * v41));\n
        if (v42)\n
        {\n
            v38->field_8 = v42;\n
            *((*((4225008 + 4 * v41)) + 12)) = v38;\n
            *((4225008 + 4 * v41)) = v38;\n
            v38->field_c = 0;\n
            v43 = v1->field_10;\n
            v44 = v43->field_14;\n
            if (!v44)\n
                goto LABEL_4019b1;\n
        }\n
        else\n
        {\n
            *((4225008 + 4 * v41)) = v38;\n
            v43 = v1->field_10;\n
            v44 = *((v43 + 20));\n
            if (!v44)\n
                goto LABEL_4019b1;\n
        }\n
        *((v44 + 16)) = *((v43 + 16));\n
LABEL_4019b1:\n
        v45 = *((v43 + 16));\n
        if (v45)\n
        {\n
            v45->field_14 = v44;\n
            v34 = v1->field_14;\n
            if (!v34)\n
                goto LABEL_401ac0;\n
            goto LABEL_401aba;\n
        }\n
    }\n
    v34 = v1->field_10;\n
    if (!v34)\n
        return v1->field_10;\n
    if (v34->field_4)\n
        return v1->field_10;\n
    v7 = cgc_get_size_class(v2->field_0);\n
    v9 = v2->field_c;\n
    if (v9)\n
        v9->field_8 = v2->field_8;\n
    v11 = v2->field_8;\n
    if (v11)\n
        v11->field_c = v9;\n
    if (*((4225008 + 4 * v7)) == v2)\n
        *((4225008 + 4 * v7)) = v11;\n
    v2->field_8 = 0;\n
    v2->field_c = 0;\n
    v2->field_4 = 0;\n
    v18 = v1->field_0;\n
    v19 = cgc_get_size_class(v18);\n
    v21 = v1->field_c;\n
    if (v21)\n
        v21->field_8 = v1->field_8;\n
    v23 = v1->field_8;\n
    if (v23)\n
        v23->field_c = v21;\n
    if (*((4225008 + 4 * v19)) == v1)\n
        *((4225008 + 4 * v19)) = v23;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    v30 = v1->field_14;\n
    v31 = v18 + v1->field_14->field_0;\n
    v1->field_14->field_0 = v31;\n
    v32 = cgc_get_size_class(v31);\n
    v30->field_4 = 1;\n
    v36 = *((4225008 + 4 * v32));\n
    if (v36)\n
    {\n
        v30->field_8 = v36;\n
        *((*((4225008 + 4 * v32)) + 12)) = v30;\n
        *((4225008 + 4 * v32)) = v30;\n
        v30->field_c = 0;\n
    }\n
    else\n
    {\n
        *((4225008 + 4 * v32)) = v30;\n
        v34 = v1->field_14;\n
        if (!v34)\n
            goto LABEL_401ac0;\n
LABEL_401aba:\n
        *((v34 + 16)) = v1->field_10;\n
LABEL_401ac0:\n
        v37 = v1->field_10;\n
        if (!v37)\n
            return v34;\n
        goto LABEL_401bc1;\n
    }\n
    v34 = v1->field_14;\n
    if (!v34)\n
        goto LABEL_401ac0;\n
    goto LABEL_401aba;\n
}\n
", "4201488:cgc_memchr": "int cgc_memchr(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) == a0)\n
            return v0 + v2;\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4201545:sub_401c49": null, "4201552:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4201682:sub_401cd2": null, "4201696:cgc_memset": "int cgc_memset(char v0[8], unsigned int a0, unsigned int a1)\n
{\n
    int tmp_13;  // tmp #13\n
    char v1[8];  // eax\n
    unsigned int v2;  // edi\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edi\n
    char v6[8];  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = a0;\n
    v4 = v2 & 7;\n
    v6 = v1;\n
    if (v2 - 1 >= 7)\n
    {\n
        v5 = v2 & -8;\n
        v6 = v1;\n
        do\n
        {\n
            *(v6) = v3;\n
            *((v6 + 1)) = v3;\n
            *((v6 + 2)) = v3;\n
            *((v6 + 3)) = v3;\n
            *((v6 + 4)) = v3;\n
            *((v6 + 5)) = v3;\n
            *((v6 + 6)) = v3;\n
            *((v6 + 7)) = v3;\n
            v6 += 8;\n
            tmp_13 = v5;\n
            v5 -= 8;\n
        } while (tmp_13 != 8);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = v3;\n
        v7 += 1;\n
    } while (v4 != v7);\n
    return v0;\n
}\n
", "4201806:sub_401d4e": null, "4201808:cgc_output_number": "int cgc_output_number(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    int tmp_6;  // tmp #6\n
    int tmp_2;  // tmp #2\n
    int tmp_5;  // tmp #5\n
    char v0;  // [bp-0x1d]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // edx\n
    char v11;  // al\n
\n
    v4 = a1;\n
    v5 = a0;\n
    v6 = v3;\n
    if (v6 < v5)\n
    {\n
        v2 = v6;\n
        v1 = 0;\n
        if (v4 <= 0)\n
            goto LABEL_401e08;\n
    }\n
    else\n
    {\n
        tmp_6 = (0 CONCAT v6) /m v5;\n
        v2 = tmp_6 >> 32;\n
        v1 = cgc_output_number((0 CONCAT v6) /m v5, v5, v4 - 1, a2);\n
        if (v4 <= 0)\n
            goto LABEL_401e08;\n
    }\n
    if (!v1)\n
    {\n
        tmp_2 = v4;\n
        v9 = v4 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            if (!(a2 & 1))\n
            {\n
                do\n
                {\n
                    v0 = 32;\n
                    cgc_transmit(1, &v0, 1);\n
                    tmp_5 = v9;\n
                    v9 -= 1;\n
                } while (tmp_5 != 1);\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v0 = 48;\n
                    cgc_transmit(1, &v0, 1);\n
                    tmp_5 = v9;\n
                    v9 -= 1;\n
                } while (tmp_5 != 1);\n
            }\n
        }\n
    }\n
LABEL_401e08:\n
    if (!(a2 & 2))\n
    {\n
        v10 = v2;\n
        v11 = v10 + 87;\n
    }\n
    else\n
    {\n
        v10 = v2;\n
        v11 = v10 + 55;\n
    }\n
    if (v10 < 10)\n
        v11 = v10 + 48;\n
    v0 = v11;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4201962:sub_401dea": null, "4202066:sub_401e52": null, "4202080:cgc_printf": "int cgc_printf(unsigned int v3)\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v4;  // [bp+0x8]\n
    unsigned int v5;  // [bp+0xc]\n
    unsigned int v6;  // [bp+0x10]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // ebp\n
    unsigned int v18;  // eax\n
\n
    v7 = v3;\n
    v1 = &v4;\n
    if (!*(v7))\n
        return 0;\n
    v8 = &v0;\n
    do\n
    {\n
        v13 = v7 + 1;\n
        v3 = v13;\n
        *(&v7) = *(v7);\n
        if (v0 == 37)\n
        {\n
            v2 = 0;\n
            v12 = v13;\n
            while (true)\n
            {\n
                v13 = v12 + 1;\n
                v3 = v13;\n
                v9 = *(v12);\n
                v10 = v9;\n
                if (v9 - 49 >= 9)\n
                    break;\n
                v11 = cgc_strtol(v12, &v3);\n
                v12 = v3;\n
            }\n
            switch (v10)\n
            {\n
            case 88:\n
                break;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 99: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 117: case 118: case 119:\n
LABEL_401f57:\n
                v0 = v9;\n
                goto LABEL_40201d;\n
            case 100:\n
                v14 = v1;\n
                v1 = v14 + 4;\n
                if (*(v14) < 0)\n
                {\n
                    v0 = 45;\n
                    cgc_transmit(1, &v0, 1);\n
                }\n
                goto LABEL_402007;\n
            case 115:\n
                v15 = v1;\n
                v1 = v15 + 4;\n
                v16 = *(v15);\n
                v8 = &v0;\n
                if (cgc_strlen())\n
                {\n
                    v17 = 0;\n
                    do\n
                    {\n
                        v0 = *((v16 + v17));\n
                        cgc_transmit(1, v8, 1);\n
                        v17 += 1;\n
                        v18 = cgc_strlen(v16, v8, 1);\n
                        v8 = &v0;\n
                    } while (v17 < v18);\n
                }\n
                goto LABEL_401eb6;\n
            case 120:\n
                break;\n
            default:\n
                if (v10 == 37)\n
                {\n
                    v0 = 37;\n
LABEL_40201d:\n
                    cgc_transmit(1, &v0, 1);\n
                    goto LABEL_0x402033;\n
                }\n
                if (v10 == 48)\n
                    goto LABEL_0x401f2a;\n
                else\n
                    goto LABEL_401f57;\n
            }\n
            v1 += 4;\n
LABEL_402007:\n
            cgc_output_number(v3, *(&v4), v5, v6);\n
            v8 = &v0;\n
            goto LABEL_401eb6;\n
        }\n
        v0 = v7;\n
        cgc_transmit(1, v8, 1);\n
        v8 = &v0;\n
LABEL_401eb6:\n
        v7 = v3;\n
    } while (*(v7));\n
    return 0;\n
}\n
", "4202130:sub_401e92": null, "4202292:sub_401f34": null, "4202557:sub_40203d": null, "4202560:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_4020aa;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_4020aa:\n
    return v5;\n
}\n
", "4202676:sub_4020b4": null, "4202688:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4202722:sub_4020e2": null, "4202736:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return *(v1) - v5;\n
            if (v5 != v3)\n
                return *(v1) - v5;\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return *(v1) - 0;\n
}\n
", "4202804:sub_402134": null, "4202816:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        *(v2) = 0;\n
        return v0;\n
    }\n
    v4 = 0;\n
    do\n
    {\n
        v2[v4] = v3;\n
        v3 = v1[1 + v4];\n
        v4 += 1;\n
    } while (v3);\n
    v2[v4] = 0;\n
    return v0;\n
}\n
", "4202881:sub_402181": null, "4202896:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4202923:sub_4021ab": null, "4202928:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    struct struct_0 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_40221d;\n
                }\n
            }\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_40221d:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4203047:sub_402227": null, "4203056:cgc_strtol": "int cgc_strtol(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    void* v4;  // ebp, Other Possible Types: unsigned int\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char v6;  // bl\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebp\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = 0;\n
    if (v1 > 36)\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
        if (v1 != 1)\n
        {\n
            v7 = v3;\n
            while (true)\n
            {\n
                v6 = *(v7);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v6 != 32)\n
                    break;\n
                v7 += 1;\n
            }\n
            v8 = 0;\n
            *(&v8) = v6 == 45;\n
            v9 = (*((v7 + v8)) == 43) + v8;\n
            v10 = v7 + v9;\n
            if (!v1)\n
            {\n
                v1 = 10;\n
                if (*(v10) == 48)\n
                {\n
                    if ((*((v7 + v9 + 1)) | 32) == 120)\n
                    {\n
                        v10 = v7 + v9 + 2;\n
                        v1 = 16;\n
                    }\n
                    else\n
                    {\n
                        v10 = v7 + v9 + 1;\n
                        v1 = 8;\n
                    }\n
                }\n
            }\n
            else if (v1 == 16)\n
            {\n
                v1 = 16;\n
                if (*(v10) == 48 && (*((v7 + v9 + 1)) | 32) == 120)\n
                    v10 = v7 + v9 + 2;\n
            }\n
            v11 = 0;\n
            v12 = 0;\n
            while (true)\n
            {\n
                v13 = *((v10 + v12));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v14 = v13 - 48;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v15 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v15 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v14 = v13 + v15 + 10;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                v11 = v1 * v11 + v14;\n
                v12 += 1;\n
            }\n
            v4 = -(v11);\n
            if (v6 != 45)\n
                v4 = v11;\n
            v5 = v10 + v12;\n
            v2 = a0;\n
            v3 = v0;\n
        }\n
    }\n
    if (!v2)\n
        return v4;\n
    if (!v12)\n
        v5 = v3;\n
    *(v2) = v5;\n
    return v4;\n
}\n
", "4203099:sub_40225b": null, "4203271:sub_402307": null, "4203367:sub_402367": null, "4203376:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4203417:sub_402399": null, "4203424:cgc_cpu_interrupt": "typedef struct struct_0 {\n
    char padding_0[65295];\n
    char field_ff0f;\n
} struct_0;\n
\n
int cgc_cpu_interrupt(struct struct_0 **v0, char a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = *(v0);\n
    v1->field_ff0f = v1->field_ff0f | (1 << (a0 & 31));\n
    return v1;\n
}\n
", "4203448:sub_4023b8": null, "4203456:cgc_cpu_tick": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40565c;\n
\n
int cgc_cpu_tick(unsigned int v5)\n
{\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // ecx\n
    unsigned int v17;  // ecx\n
    unsigned int v41;  // eax\n
    unsigned int v57;  // edx\n
    unsigned int v68;  // edi\n
\n
    v6 = \"$v\";\n
    v7 = v5;\n
    v57 = *((v7 + 58));\n
    if ((v57 & 128))\n
    {\n
        *(&v57) = v57 & 127;\n
    }\n
    else\n
    {\n
        v57 = v57 & 254;\n
        if (!(v57 & 64))\n
            v57 = v57;\n
        *(&v57) = v57 & 159 | v57 / 32 & 1;\n
        v57 = v57;\n
    }\n
    *((v7 + 58)) = v57;\n
    v9 = *(v7);\n
    *(&v57) = *((*(v7) + 65295)) & *((*(v7) + 65535));\n
    if ((*((*(v7) + 65295)) & *((*(v7) + 65535))))\n
        *((v7 + 60)) = 0;\n
    if ((v57 & 1))\n
    {\n
        if ((v57 & 1))\n
        {\n
            *((v9 + 65295)) = *((v9 + 65295)) & 254;\n
            *((v7 + 58)) = 0;\n
            v8 = *((v7 + 54)) - 2;\n
            *((v7 + 54)) = v8;\n
            v9 = *(v7);\n
            *((*(v7) + v8)) = *((v7 + 56));\n
            *((v7 + 56)) = 64;\n
        }\n
        else if ((v57 & 2))\n
        {\n
            *((v9 + 65295)) = *((v9 + 65295)) & 253;\n
            *((v7 + 58)) = 0;\n
            v10 = *((v7 + 54)) - 2;\n
            *((v7 + 54)) = v10;\n
            v9 = *(v7);\n
            *((*(v7) + v10)) = *((v7 + 56));\n
            *((v7 + 56)) = 72;\n
        }\n
        else if ((v57 & 4))\n
        {\n
            *((v9 + 65295)) = *((v9 + 65295)) & 251;\n
            *((v7 + 58)) = 0;\n
            v11 = *((v7 + 54)) - 2;\n
            *((v7 + 54)) = v11;\n
            v9 = *(v7);\n
            *((*(v7) + v11)) = *((v7 + 56));\n
            *((v7 + 56)) = 80;\n
        }\n
        else if ((v57 & 8))\n
        {\n
            *((v9 + 65295)) = *((v9 + 65295)) & 247;\n
            *((v7 + 58)) = 0;\n
            v12 = *((v7 + 54)) - 2;\n
            *((v7 + 54)) = v12;\n
            v9 = *(v7);\n
            *((*(v7) + v12)) = *((v7 + 56));\n
            *((v7 + 56)) = 88;\n
        }\n
        else\n
        {\n
            if (!(v57 & 16))\n
                goto LABEL_40252e;\n
            *((v9 + 65295)) = *((v9 + 65295)) & 239;\n
            *((v7 + 58)) = 0;\n
            v13 = *((v7 + 54)) - 2;\n
            *((v7 + 54)) = v13;\n
            v9 = *(v7);\n
            *((*(v7) + v13)) = *((v7 + 56));\n
            *((v7 + 56)) = 96;\n
        }\n
        v57 = 0;\n
    }\n
LABEL_40252e:\n
    v14 = *((v7 + 76));\n
    if (v14 >= 2)\n
        v15 = v14 - 1;\n
    if (*((v7 + 60)))\n
        return 1;\n
    v41 = v7 + 46;\n
    v1 = v7 + 56;\n
    v68 = *((v7 + 56));\n
    v2 = v68 + v9;\n
    v17 = *((v9 + v68));\n
    v3 = v17;\n
    *(&v17) = v17 + 64;\n
    if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, cl<1>), 0xb6<32>, 0x0<32>))\n
        goto LABEL_0x402573;\n
    else\n
        goto LABEL_0x4025a8;\n
}\n
", "4208078:sub_4035ce": null, "4208080:do_add_8b": "typedef struct struct_0 {\n
    char padding_0[46];\n
    char field_2e;\n
} struct_0;\n
\n
int do_add_8b(char v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // eax\n
    char v15;  // dil\n
    struct_0 *v17;  // ecx\n
\n
    v4 = v6;\n
    v3 = v7;\n
    v2 = v8;\n
    v1 = v9;\n
    v11 = v5;\n
    v12 = a0;\n
    v13 = v11 + v9;\n
    v14 = v13 + v12;\n
    v0 = v14;\n
    v15 = ((!v14) * 128) | 16;\n
    if (v0 < 0x100)\n
        v15 = (!v14) * 128;\n
    *(&v17->field_2e) = (!(((v12 & 15) + (v13 & 15)) & 16) ? 32 : ((v11 & 15) + (v1 & 15)) * 2 & 32) | v15;\n
    return v0;\n
}\n
", "4208193:sub_403641": null, "4208208:do_sub_8b": "typedef struct struct_0 {\n
    char padding_0[46];\n
    char field_2e;\n
} struct_0;\n
\n
int do_sub_8b(char v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x12]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ebx\n
    unsigned int v16;  // eax\n
    char v17;  // dl\n
    struct_0 *v18;  // ecx\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // ebx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v0 = v10;\n
    v11 = v6;\n
    v12 = a0;\n
    v14 = v13 - v11;\n
    v16 = v14 - v12;\n
    v2 = (v16) * 128;\n
    v1 = (v16 & 0xff00);\n
    v17 = (!(((v14 & 15) - (v12 & 15)) & 16) ? 32 : ((v13 & 15) - (v11 & 15)) * 2 & 32);\n
    v18->field_2e = (v17 | (v1 * 16) + v2) - 64;\n
    v19 = v3;\n
    v20 = v4;\n
    v21 = v5;\n
    return v16;\n
}\n
", "4208323:sub_4036c3": null, "4208336:step_prefix": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[42];\n
    char field_2e;\n
    char padding_2f[5];\n
    unsigned short field_34;\n
    char padding_36[2];\n
    unsigned short field_38;\n
} struct_0;\n
\n
int step_prefix()\n
{\n
    int tmp_37;  // tmp #37\n
    unsigned int v0;  // [bp-0x9c]\n
    struct_0 *v2;  // ecx\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // esi\n
    unsigned int v6;  // ecx\n
    char *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // dl, Other Possible Types: char\n
    unsigned int v13;  // cc_op\n
    unsigned int v14;  // cc_dep1\n
    void* v15;  // cc_dep2\n
    char v16;  // bl\n
    unsigned int v17;  // cc_op\n
    unsigned int v18;  // cc_dep1\n
    char v19;  // bl\n
    unsigned int v20;  // cc_op\n
    unsigned int v21;  // cc_dep1\n
    unsigned int v22;  // cc_dep2\n
    unsigned int v23;  // dl, Other Possible Types: char\n
    unsigned int v24;  // edx\n
    unsigned int v25;  // cc_op\n
    unsigned int v26;  // cc_dep1\n
\n
    v3 = v2;\n
    v4 = v2->field_0;\n
    v23 = *((v4 + v2->field_38 + 1));\n
    v6 = v23 & 7;\n
    switch (v6)\n
    {\n
    case 0:\n
        v7 = &v3->padding_2f[2];\n
        break;\n
    case 1:\n
        v7 = &v3->padding_2f[1];\n
        break;\n
    case 2:\n
        v7 = &v3->padding_2f[4];\n
        break;\n
    case 3:\n
        v7 = &v3->padding_2f[3];\n
        break;\n
    case 4:\n
        v7 = &v3->field_34 + 1;\n
        break;\n
    case 5:\n
        v7 = &v3->field_34;\n
        break;\n
    case 6:\n
        v7 = v4 + v3->field_34;\n
        break;\n
    default:\n
        v7 = &v3->padding_2f;\n
        break;\n
    }\n
    v9 = v23 / 8;\n
    v10 = *(v7);\n
    switch (v9)\n
    {\n
    case 0:\n
        v12 = v10;\n
        v9 = (v10 >> 7) + v10 * 2;\n
        *(v7) = v9;\n
        v13 = 13;\n
        v14 = v9;\n
        v15 = 0;\n
        goto LABEL_4037e9;\n
    case 1:\n
        v16 = v10;\n
        *(v7) = v10 * 128 | v10 / 2;\n
        v17 = 15;\n
        v18 = v10;\n
        goto LABEL_403807;\n
    case 2:\n
        v19 = v10;\n
        tmp_37 = v3->field_2e;\n
        *(v7) = (v3->field_2e >> 4) & 1 | v10 + v19;\n
        *(&v9) = (!((tmp_37 >> 4) & 1) && !v10 + v19) * 128;\n
        v3->field_2e = (!((tmp_37 >> 4) & 1) && !v10 + v19) * 128;\n
        if (!(v19 < 0))\n
            break;\n
        goto LABEL_40384a;\n
    case 3:\n
        v16 = v10;\n
        *(&v9) = v10 / 2;\n
        *(&v23) = v3->field_2e * 8;\n
        goto LABEL_403800;\n
    case 4:\n
        v12 = v10;\n
        v20 = 1;\n
        v21 = v10;\n
        v22 = v12;\n
        *(v7) = v10 + v12;\n
LABEL_4037e9:\n
        *(&v9) = [D] x86g_calculate_condition(0x4<32>, cc_op<4>, cc_dep1<4>, cc_dep2<4>, 0x0<32>) * 128;\n
        v3->field_2e = [D] x86g_calculate_condition(0x4<32>, cc_op<4>, cc_dep1<4>, cc_dep2<4>, 0x0<32>) * 128;\n
        if (!(v12 < 0))\n
            break;\n
        goto LABEL_40384a;\n
    case 5:\n
        v16 = v10;\n
        *(&v9) = v10 / 2;\n
        v23 = v10;\n
LABEL_403800:\n
        v25 = 13;\n
        v26 = v23 & 128 | v9;\n
        *(v7) = v23 & 128 | v9;\n
LABEL_403807:\n
        *(&v9) = [D] x86g_calculate_condition(0x4<32>, cc_op<4>, cc_dep1<4>, 0x0<32>, 0x0<32>) * 128;\n
        v3->field_2e = [D] x86g_calculate_condition(0x4<32>, cc_op<4>, cc_dep1<4>, 0x0<32>, 0x0<32>) * 128;\n
        if (!(v16 & 1))\n
            break;\n
        goto LABEL_40384a;\n
    case 6:\n
        *(v7) = v10 * 16 | v10 / 16;\n
        *(&v9) = (!v10) * 128;\n
        goto LABEL_40384d;\n
    case 7:\n
        v24 = v10;\n
        *(v7) = v10 / 2;\n
        *(&v9) = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, dl<1>), 0x2<32>, 0x0<32>) * 128;\n
        v3->field_2e = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, dl<1>), 0x2<32>, 0x0<32>) * 128;\n
        if (!(v24 & 1))\n
            break;\n
LABEL_40384a:\n
        *(&v9) = v9 | 16;\n
LABEL_40384d:\n
        v3->field_2e = v9;\n
        break;\n
    default:\n
        v11 = v9 & 7;\n
        *(&v23) = v23 & 192;\n
        if (*(&v23) == 128)\n
        {\n
            *(v7) = ~((1 << (v11 & 31))) & v10;\n
            break;\n
        }\n
        else if (*(&v23) == 192)\n
        {\n
            v0 = v10;\n
            *(&v0 + ((v11 & 31) >> 3)) = *(&v0 + ((v11 & 31) >> 3)) | 1 << (v11 & 31 & 7);\n
            *(v7) = v0;\n
            break;\n
        }\n
        else if (*(&v23) != 64)\n
        {\n
            cgc_printf(\"Invalid prefix opcode\\n
\");\n
            return 0;\n
        }\n
        else\n
        {\n
            v3->field_2e = v3->field_2e & 31 | 32;\n
            v0 = v10;\n
            if (((*(&v0 + ((v11 & 31) >> 3)) >> (v11 & 31 & 7)) & 1) != 1)\n
            {\n
                v3->field_2e = v3->field_2e & 31 | 160;\n
                break;\n
            }\n
        }\n
    }\n
    v3->field_38 = v3->field_38 + 2;\n
    return (v6 == 6) * 8 + 8;\n
}\n
", "4208794:sub_40389a": null, "4208800:cgc_gb_reset": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[40];\n
    char field_2c;\n
    char padding_2d[1];\n
    unsigned int field_2e;\n
    unsigned int field_32;\n
    unsigned int field_36;\n
    char padding_3a[2];\n
    unsigned int field_3c;\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
    unsigned int field_50;\n
    unsigned int field_54;\n
    unsigned int field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[65285];\n
    char field_ff05;\n
    char field_ff06;\n
    char field_ff07;\n
    char padding_ff08[8];\n
    char field_ff10;\n
    char field_ff11;\n
    char field_ff12;\n
    char padding_ff13[1];\n
    char field_ff14;\n
    char padding_ff15[1];\n
    char field_ff16;\n
    char field_ff17;\n
    char padding_ff18[1];\n
    char field_ff19;\n
    char field_ff1a;\n
    char field_ff1b;\n
    char field_ff1c;\n
    char field_ff1d;\n
    char padding_ff1e[2];\n
    char field_ff20;\n
    char field_ff21;\n
    char field_ff22;\n
    char field_ff23;\n
    char field_ff24;\n
    char field_ff25;\n
    char field_ff26;\n
    char padding_ff27[25];\n
    char field_ff40;\n
    char padding_ff41[1];\n
    char field_ff42;\n
    char field_ff43;\n
    char padding_ff44[1];\n
    char field_ff45;\n
    char field_ff46;\n
    char field_ff47;\n
    char field_ff48;\n
    char field_ff49;\n
    char field_ff4a;\n
    char field_ff4b;\n
    char padding_ff4c[179];\n
    char field_ffff;\n
} struct_1;\n
\n
int cgc_gb_reset(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&(&v1->padding_2d)[1]) = 1245616;\n
    *((&v1->field_2e + 2)) = 21823704;\n
    *((&v1->field_32 + 2)) = 16842750;\n
    v1->field_0->field_ff05 = 0;\n
    v1->field_0->field_ff06 = 0;\n
    v1->field_0->field_ff07 = 0;\n
    v1->field_0->field_ff10 = 128;\n
    v1->field_0->field_ff11 = 191;\n
    v1->field_0->field_ff12 = 243;\n
    v1->field_0->field_ff14 = 191;\n
    v1->field_0->field_ff16 = 63;\n
    v1->field_0->field_ff17 = 0;\n
    v1->field_0->field_ff19 = 191;\n
    v1->field_0->field_ff1a = 127;\n
    v1->field_0->field_ff1b = 255;\n
    v1->field_0->field_ff1c = 159;\n
    v1->field_0->field_ff1d = 191;\n
    v1->field_0->field_ff20 = 255;\n
    v1->field_0->field_ff21 = 0;\n
    v1->field_0->field_ff22 = 0;\n
    v1->field_0->field_ff23 = 191;\n
    v1->field_0->field_ff24 = 119;\n
    v1->field_0->field_ff25 = 243;\n
    v1->field_0->field_ff26 = 241;\n
    v1->field_0->field_ff40 = 144;\n
    v1->field_0->field_ff42 = 0;\n
    v1->field_0->field_ff43 = 0;\n
    v1->field_0->field_ff45 = 0;\n
    v1->field_0->field_ff47 = 252;\n
    v1->field_0->field_ff48 = 255;\n
    v1->field_0->field_ff49 = 255;\n
    v1->field_0->field_ff4a = 0;\n
    v1->field_0->field_ff4b = 0;\n
    v1->field_0->field_ffff = 0;\n
    v1->field_0->field_ff46 = 255;\n
    v1->field_44 = 0;\n
    v1->field_4c = 0;\n
    v1->field_50 = 0;\n
    v1->field_54 = 0;\n
    v1->field_48 = 0;\n
    v1->field_2c = 0;\n
    *(&v1->padding_3a) = 0;\n
    v1->field_3c = 0x41000000;\n
    v1->field_40 = 0;\n
    return v0;\n
}\n
", "4209174:sub_403a16": null, "4209184:cgc_gb_new": "int cgc_gb_new()\n
{\n
    unsigned int v0[2];  // [bp-0x24], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x10]\n
\n
    v0[0] = &v1;\n
    if (cgc_allocate(92, 0))\n
        return 0;\n
    v0[0] = *(&v1);\n
    if (cgc_allocate(65537, 0))\n
        return 0;\n
    v0[1] = v0[0];\n
    v0[0] = &v0[3 + 1];\n
    if (cgc_allocate(0x5a00, 0))\n
        return 0;\n
    v0 += 3;\n
    if (!cgc_allocate(0x10000, 0))\n
        return *(&v1);\n
    return 0;\n
}\n
", "4209325:sub_403aad": null, "4209328:cgc_gb_load": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[308];\n
    char field_134;\n
    char padding_135[19];\n
    char field_148;\n
    char field_149;\n
} struct_1;\n
\n
int cgc_gb_load(struct_0 *v1, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v2;  // edi\n
    char v3[330];  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
    void* v6;  // ebp, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    cgc_memcpy(v2->field_4, a0, 0x8000);\n
    v3 = v2->field_4;\n
    v0 = v2 + 1;\n
    v4 = cgc_isupper(v3[308]);\n
    v6 = 0;\n
    while (v4)\n
    {\n
        if (v6 <= 15)\n
            v2[1].padding_0[v6] = v3[308 + v6];\n
        v5 = v3[309 + v6];\n
        v6 += 1;\n
        v4 = cgc_isupper(v5);\n
    }\n
    v2[1].padding_0[v6] = 0;\n
    cgc_printf(\"Loading %s\\n
\");\n
    if (!v3[328] && !v3[329])\n
        return 1;\n
    cgc_printf(\"Incompatible cartridge.\\n
\");\n
    return 0;\n
}\n
", "4209407:sub_403aff": null, "4209526:sub_403b76": null, "4209536:cgc_gb_tick": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[40];\n
    char field_2c;\n
    char padding_2d[27];\n
    unsigned int field_48;\n
    char padding_4c[8];\n
    unsigned int field_54;\n
    unsigned int field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[65280];\n
    char field_ff00;\n
    char padding_ff01[3];\n
    char field_ff04;\n
    char field_ff05;\n
    char field_ff06;\n
    char field_ff07;\n
    char padding_ff08[62];\n
    char field_ff46;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gb_tick(struct_0 *v0)\n
{\n
    int tmp_3;  // tmp #3\n
    struct_0 *v1;  // edi\n
    char v3[65351];  // eax, Other Possible Types: unsigned int\n
    char v4;  // cl\n
    unsigned int v5;  // eax\n
    char v6[65351];  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char v10[65351];  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v14;  // edx\n
    char v15[65351];  // eax\n
\n
    v1 = v0;\n
    v1->field_0->field_ff00 = v1->field_0->field_ff00 | 15;\n
    v3 = v1->field_0;\n
    v4 = v3[0xff00];\n
    if (!(v3[0xff00] & 16))\n
    {\n
        v3[0xff00] = v4 & (~(v1->field_2c) | 240);\n
        v3 = v1->field_0;\n
        v4 = *((v3 + 0xff00));\n
    }\n
    if (!(v4 & 32))\n
        *((v3 + 0xff00)) = v4 & ~((v1->field_2c >> 4));\n
    if (!cgc_cpu_tick(v1))\n
    {\n
        return 0;\n
    }\n
    else if (!cgc_lcd_tick())\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v5 = v1->field_48 + 1;\n
        v1->field_48 = v5;\n
        if (v5 == 10000000)\n
        {\n
            cgc_printf(\"Game Over\\n
\");\n
            return 0;\n
        }\n
        v6 = v1->field_0;\n
        v7 = v6[65350];\n
        if (v7 != 255)\n
        {\n
            cgc_memcpy(&v6[0xfe00], &v6[0x100 * v7], 160);\n
            v1->field_0->field_ff46 = 255;\n
        }\n
        v8 = v1->field_54 + 1;\n
        v1->field_54 = v8;\n
        if (v8 == 61)\n
        {\n
            v1->field_0->field_ff04 = v1->field_0->field_ff04 + 1;\n
            v1->field_54 = 0;\n
        }\n
        v10 = v1->field_0;\n
        v11 = v10[65287];\n
        if (!(v11 & 4))\n
            return 1;\n
        v14 = v1->field_58 + 1;\n
        v1->field_58 = v14;\n
        if (v14 >= *((4216504 + 4 * (v11 & 3))))\n
        {\n
            v1->field_58 = 0;\n
            tmp_3 = v10[65285];\n
            v10[65285] = v10[65285] + 1;\n
            if ([D] x86g_calculate_condition(0x4<32>, 0x1<32>, Conv(8->32, t3), 0x1<32>, 0x0<32>))\n
            {\n
                v15 = v1->field_0;\n
                v15[65285] = v15[65286];\n
                cgc_cpu_interrupt(v1, 2);\n
            }\n
        }\n
    }\n
}\n
", "4209875:sub_403cd3": null, "4209888:cgc_lcd_tick": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[20];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char field_20;\n
    char field_21;\n
    char field_22;\n
    char field_23;\n
    char field_24;\n
    char field_25;\n
    char field_26;\n
    char field_27;\n
    char field_28;\n
    char field_29;\n
    char field_2a;\n
    char field_2b;\n
    char padding_2c[24];\n
    unsigned int field_44;\n
    char padding_48[8];\n
    unsigned int field_50;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[65344];\n
    char field_ff40;\n
    char field_ff41;\n
    char field_ff42;\n
    char field_ff43;\n
    char field_ff44;\n
    char field_ff45;\n
    char padding_ff46[3];\n
    struct struct_0 *field_ff49;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_-7;\n
    char field_-6;\n
    char field_-5;\n
    char field_-4;\n
    char field_-3;\n
    char field_-2;\n
    char padding_-1[1];\n
    char field_0;\n
} struct_2;\n
\n
int cgc_lcd_tick(struct_1 *v6)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    int tmp_12;  // tmp #12\n
    int tmp_110;  // tmp #110\n
    int tmp_170;  // tmp #170\n
    int tmp_230;  // tmp #230\n
    char *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct_1 *v7;  // esi\n
    unsigned int v8;  // eax\n
    struct_0 *v11;  // ecx\n
    char v12;  // dl\n
    struct_0 *v18;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v19;  // eax, Other Possible Types: unsigned int\n
    void* v20;  // eax, Other Possible Types: unsigned int\n
    void* v21;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v22;  // ecx\n
    unsigned int v24;  // ecx\n
    struct_0 *v25;  // edx\n
    struct_2 *v26;  // eax, Other Possible Types: unsigned int\n
    char *v27;  // edx\n
    unsigned int v28;  // ecx\n
    struct_0 *v29;  // ecx\n
    char *v30;  // edx\n
    unsigned int v32;  // ecx\n
    char *v33;  // edx, Other Possible Types: unsigned int\n
    unsigned int v34;  // edi\n
\n
    v7 = v6;\n
    v8 = (v8 != 109 ? 0 : v7->field_50 + 1);\n
    v7->field_50 = v8;\n
    if (v8 == 60)\n
    {\n
        if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, t12), 0x8f<32>, 0x0<32>)))\n
            return 1;\n
        v7->field_0->field_ff41 = v7->field_0->field_ff41 & 252;\n
        if (!(v7->field_0->field_ff41 & 8))\n
            return 1;\n
        v0 = 1;\n
LABEL_403da4:\n
        cgc_cpu_interrupt(v7, v0);\n
        return 1;\n
    }\n
    if (v8 == 19)\n
    {\n
        if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, t12), 0x8f<32>, 0x0<32>)))\n
            return 1;\n
        v7->field_0->field_ff41 = v7->field_0->field_ff41 & 252;\n
        v7->field_0->field_ff41 = v7->field_0->field_ff41 | 3;\n
    }\n
    if (v8)\n
        return 1;\n
    v11 = v7->field_0;\n
    tmp_12 = v11->field_ff44;\n
    v12 = v11->field_ff44;\n
    *(&v8) = v12 + 1;\n
    v11->field_ff44 = v12 + 1;\n
    if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, t12), 0x8f<32>, 0x0<32>)))\n
    {\n
        if (v8 == 154)\n
            v7->field_0->field_ff44 = 0;\n
        else\n
            return 1;\n
    }\n
    else\n
    {\n
        if (v8 == 144)\n
        {\n
            v7->field_44 = 1;\n
            v7->field_0->field_ff41 = v7->field_0->field_ff41 & 252;\n
            v7->field_0->field_ff41 = v7->field_0->field_ff41 | 1;\n
            if ((v7->field_0->field_ff41 & 16))\n
                cgc_cpu_interrupt(v7, 1);\n
            v0 = 0;\n
            goto LABEL_403da4;\n
        }\n
    }\n
    v7->field_0->field_ff41 = v7->field_0->field_ff41 & 252;\n
    v7->field_0->field_ff41 = v7->field_0->field_ff41 | 2;\n
    v18 = v7->field_0;\n
    *(&v11) = v18->field_ff41;\n
    if ((v18->field_ff41 & 32))\n
    {\n
        cgc_cpu_interrupt(v7, 1);\n
        v18 = v7->field_0;\n
        *(&v11) = *((v18 + 65345));\n
    }\n
    *((v18 + 65345)) = v11 & 251;\n
    v19 = v7->field_0;\n
    if (v19->field_ff44 == v19->field_ff45)\n
    {\n
        v19->field_ff41 = v19->field_ff41 | 4;\n
        v19 = v7->field_0;\n
        if ((*((v19 + 65345)) & 64))\n
        {\n
            cgc_cpu_interrupt(v7, 1);\n
            v19 = v7->field_0;\n
        }\n
    }\n
    tmp_110 = *((v19 + 65351));\n
    *(&v11) = *((v19 + 65351));\n
    v7->field_20 = v11 & 3;\n
    v7->field_21 = v11 / 4 & 3;\n
    v7->field_22 = v11 / 16 & 3;\n
    v7->field_23 = tmp_110 >> 6;\n
    tmp_170 = *((v19 + 65352));\n
    *(&v11) = *((v19 + 65352));\n
    v7->field_24 = v11 & 3;\n
    v7->field_25 = v11 / 4 & 3;\n
    v7->field_26 = v11 / 16 & 3;\n
    v7->field_27 = tmp_170 >> 6;\n
    tmp_230 = *((v19 + 65353));\n
    *(&v11) = *((v19 + 65353));\n
    v7->field_28 = v11 & 3;\n
    v7->field_29 = v11 / 4 & 3;\n
    v7->field_2a = v11 / 16 & 3;\n
    v7->field_2b = tmp_230 >> 6;\n
    if (!(*((v19 + 65344)) & 1))\n
        return 1;\n
    v1 = *((v19 + 65348));\n
    v3 = v19 + ((*((v19 + 65344)) & 8) >> 3) * 0x400 + 0x9800;\n
    v20 = 0;\n
    do\n
    {\n
        v5 = v20 * 32;\n
        v2 = v20;\n
        v4 = v20 * 0x800;\n
        v21 = 0;\n
        do\n
        {\n
            v22 = v3[v21 + v5];\n
            v24 = v22 * 16 + 0x9000;\n
            v25 = v7->field_0;\n
            if ((v25->field_ff40 & 16))\n
                v24 = v22 * 16 | 0x8000;\n
            v26 = (v21 * 8 | v4) + v7->field_18 + 7;\n
            v27 = &v25->padding_0[v24 + 1];\n
            v28 = 0;\n
            do\n
            {\n
                *((v26 - 7)) = (&v7->field_20)[v27[1 + 2 * v28] >> 7 | v27[2 * v28] >> 6 & 2];\n
                *((v26 - 6)) = (&v7->field_20)[v27[1 + 2 * v28] >> 6 & 1 | v27[2 * v28] >> 5 & 2];\n
                *((v26 - 5)) = (&v7->field_20)[v27[1 + 2 * v28] >> 5 & 1 | v27[2 * v28] >> 4 & 2];\n
                *((v26 - 4)) = (&v7->field_20)[v27[1 + 2 * v28] >> 4 & 1 | v27[2 * v28] >> 3 & 2];\n
                *((v26 - 3)) = (&v7->field_20)[v27[1 + 2 * v28] >> 3 & 1 | v27[2 * v28] >> 2 & 2];\n
                *((v26 - 2)) = (&v7->field_20)[v27[1 + 2 * v28] >> 2 & 1 | v27[2 * v28] >> 1 & 2];\n
                *((v26 - 1)) = (&v7->field_20)[v27[1 + 2 * v28] >> 1 & 1 | v27[2 * v28] & 2];\n
                *(v26) = (&v7->field_20)[2 * (v27[2 * v28] & 1) + (v27[1 + 2 * v28] & 1)];\n
                v28 += 1;\n
                v26 += 0x100;\n
            } while (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, t12), 0x8f<32>, 0x0<32>)));\n
            v21 += 1;\n
        } while (v21 != 32);\n
        v20 = v2 + 1;\n
    } while (v20 != 32);\n
    v29 = v7->field_0;\n
    *(&v20) = v29->field_ff43;\n
    v30 = v1;\n
    v32 = (v29->field_ff42 + v30) * 0x100;\n
    v33 = v30 * 32 * 5;\n
    v34 = 160;\n
    while (true)\n
    {\n
        *((v7->field_1c + v33)) = *((v7->field_18 + (v20 | v32)));\n
        *((v7->field_1c + v33 + 1)) = *((v7->field_18 + (v20 + 1 | v32)));\n
        *(&v20) = v20 + 2;\n
        v33 += 2;\n
        v34 -= 2;\n
    }\n
}\n
", "4210945:sub_404101": null, "4210960:cgc_process_input": "typedef struct struct_0 {\n
    char padding_0[44];\n
    char field_2c;\n
} struct_0;\n
\n
int cgc_process_input(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0xd]\n
    char v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // ecx\n
    struct_0 *v6;  // eax\n
\n
    v0 = &v2;\n
    v4 = 0;\n
    if (!(!cgc_receive(0, &v1, 1) && *(&v2) == 1))\n
        return v4;\n
    v4 = 1;\n
    v5 = v1 - 63;\n
    switch (v5)\n
    {\n
    case 0: case 41:\n
        cgc_printf(\"HELP: (q)uit, (h)elp, (wasd) direction keys, (j) A, (k) B, (u) SELECT, (i) START\\n
\");\n
        break;\n
    case 2:\n
        v6->field_2c = v6->field_2c & 253;\n
        break;\n
    case 5:\n
        v6->field_2c = v6->field_2c & 254;\n
        break;\n
    case 10:\n
        v6->field_2c = v6->field_2c & 127;\n
        break;\n
    case 11:\n
        v6->field_2c = v6->field_2c & 239;\n
        break;\n
    case 12:\n
        v6->field_2c = v6->field_2c & 223;\n
        break;\n
    case 20:\n
        v6->field_2c = v6->field_2c & 247;\n
        break;\n
    case 22:\n
        v6->field_2c = v6->field_2c & 191;\n
        break;\n
    case 24:\n
        v6->field_2c = v6->field_2c & 251;\n
        break;\n
    case 34:\n
        v6->field_2c = v6->field_2c | 2;\n
        break;\n
    case 37:\n
        v6->field_2c = v6->field_2c | 1;\n
        break;\n
    case 42:\n
        v6->field_2c = v6->field_2c | 128;\n
        break;\n
    case 43:\n
        v6->field_2c = v6->field_2c | 16;\n
        break;\n
    case 44:\n
        v6->field_2c = v6->field_2c | 32;\n
        break;\n
    case 50:\n
        cgc_printf(\"Good-Bye\\n
\");\n
        v4 = 0;\n
        break;\n
    case 52:\n
        v6->field_2c = v6->field_2c | 8;\n
        break;\n
    case 54:\n
        v6->field_2c = v6->field_2c | 64;\n
        break;\n
    case 56:\n
        v6->field_2c = v6->field_2c | 4;\n
        break;\n
    }\n
}\n
", "4211201:sub_404201": null, "4211216:cgc_check_input": "int cgc_check_input(void* v35)\n
{\n
    void* v0;  // [bp-0x90]\n
    void* v1;  // [bp-0x8c]\n
    unsigned int v2;  // [bp-0x88]\n
    unsigned int v3;  // [bp-0x84]\n
    void* v4;  // [bp-0x80]\n
    void* v5;  // [bp-0x7c]\n
    void* v6;  // [bp-0x78]\n
    void* v7;  // [bp-0x74]\n
    void* v8;  // [bp-0x70]\n
    void* v9;  // [bp-0x6c]\n
    void* v10;  // [bp-0x68]\n
    void* v11;  // [bp-0x64]\n
    void* v12;  // [bp-0x60]\n
    void* v13;  // [bp-0x5c]\n
    void* v14;  // [bp-0x58]\n
    void* v15;  // [bp-0x54]\n
    void* v16;  // [bp-0x50]\n
    void* v17;  // [bp-0x4c]\n
    void* v18;  // [bp-0x48]\n
    void* v19;  // [bp-0x44]\n
    void* v20;  // [bp-0x40]\n
    void* v21;  // [bp-0x3c]\n
    void* v22;  // [bp-0x38]\n
    void* v23;  // [bp-0x34]\n
    void* v24;  // [bp-0x30]\n
    void* v25;  // [bp-0x2c]\n
    void* v26;  // [bp-0x28]\n
    void* v27;  // [bp-0x24]\n
    void* v28;  // [bp-0x20]\n
    void* v29;  // [bp-0x1c]\n
    void* v30;  // [bp-0x18]\n
    void* v31;  // [bp-0x14]\n
    void* v32;  // [bp-0x10]\n
    void* v33;  // [bp-0xc]\n
    void* v34;  // [bp-0x8]\n
\n
    v0 = 0;\n
    v4 = 0;\n
    v5 = 0;\n
    v6 = 0;\n
    v7 = 0;\n
    v8 = 0;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = 0;\n
    v13 = 0;\n
    v14 = 0;\n
    v15 = 0;\n
    v16 = 0;\n
    v17 = 0;\n
    v18 = 0;\n
    v19 = 0;\n
    v20 = 0;\n
    v21 = 0;\n
    v22 = 0;\n
    v23 = 0;\n
    v24 = 0;\n
    v25 = 0;\n
    v26 = 0;\n
    v27 = 0;\n
    v28 = 0;\n
    v29 = 0;\n
    v30 = 0;\n
    v31 = 0;\n
    v32 = 0;\n
    v33 = 0;\n
    v34 = 0;\n
    v3 = 1;\n
    v1 = 0;\n
    v2 = 100;\n
    if (cgc_fdwait(1, &v3, 0, &v1))\n
    {\n
        return 0;\n
    }\n
    else if (!v0)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        return cgc_process_input(v35);\n
    }\n
}\n
", "4211625:sub_4043a9": null, "4211632:main": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[24];\n
    struct struct_2 *field_1c;\n
    char padding_20[14];\n
    unsigned short field_2e;\n
    unsigned short field_30;\n
    unsigned short field_32;\n
    unsigned short field_34;\n
    unsigned short field_36;\n
    unsigned short field_38;\n
    char padding_3a[10];\n
    unsigned int field_44;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[65344];\n
    char field_ff40;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_405824;\n
extern struct_1 g_40583e;\n
extern char g_405845;\n
extern char g_405849;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x8040]\n
    char v1;  // [bp-0x8020]\n
    char v2;  // [bp-0x8010]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    struct_1 *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp-0x4]\n
    struct_1 *v11;  // [bp+0x0], Other Possible Types: unsigned int\n
    struct_1 *v12;  // [bp+0x4], Other Possible Types: unsigned int\n
    char *v13;  // [bp+0x8], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp+0xc]\n
    unsigned int v15;  // [bp+0x10]\n
    unsigned int v16;  // [bp+0x14]\n
    unsigned int v17;  // [bp+0x18]\n
    char v18;  // [bp+0x1c]\n
    unsigned int v19;  // [bp+0x20], Other Possible Types: char\n
    void* v20;  // [bp+0x24], Other Possible Types: char\n
    char v21;  // [bp+0x2c]\n
    char v22;  // [bp+0x3c]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    struct_1 *v28;  // esi\n
    struct_1 *v29;  // eax\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // ebp\n
    unsigned int v32;  // edi\n
    void* v33;  // edi, Other Possible Types: unsigned int\n
    void* v34;  // ebp, Other Possible Types: unsigned int\n
    void* v35;  // eax, Other Possible Types: unsigned int\n
    void* v36;  // ecx, Other Possible Types: unsigned int\n
    struct_1 *v37;  // ebp\n
    char *v38;  // eax\n
    unsigned int v39;  // esi\n
    unsigned int v40;  // ecx\n
    unsigned int v43;  // eax\n
    struct_1 *v45;  // esi, Other Possible Types: unsigned int\n
    unsigned int v47;  // ftop\n
    unsigned int v48;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // cc_dep1\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
\n
    v9 = v26;\n
    v8 = v27;\n
    v7 = v28;\n
    v29 = cgc_gb_new();\n
    if (!v29)\n
    {\n
        cgc_printf(\"Unable to allocate memory.\\n
\");\n
        cgc__terminate();\n
    }\n
    v45 = v29;\n
    cgc_printf(&g_405824);\n
    v32 = &v2;\n
    v31 = 0x8000;\n
    while (v31)\n
    {\n
        v0 = &v1;\n
        if (!(!cgc_receive(0, v32, v31)))\n
            goto LABEL_404415;\n
        v30 = *(&v1);\n
        v31 -= v30;\n
        v32 += v30;\n
        if (!v30)\n
            goto LABEL_404415;\n
    }\n
    while (true)\n
    {\n
        v8 = &v21;\n
        v7 = v45;\n
        if (cgc_gb_load(v12, v13))\n
            break;\n
LABEL_404415:\n
        v7 = &\"Unable to load ROM.\";\n
        cgc_printf(2);\n
        v11 = 2;\n
        cgc__terminate();\n
    }\n
    v7 = &g_40583e.field_0;\n
    cgc_printf(2);\n
    v11 = v45;\n
    cgc_gb_reset(v45);\n
    v11 = v45;\n
    if (!cgc_gb_tick(v45))\n
    {\n
        v7 = *((v45 + 52));\n
        v6 = *((v45 + 50));\n
        v5 = *((v45 + 48));\n
        v4 = *((v45 + 46));\n
        v3 = \"AF = %04X, BC = %04X, DE = %04X, HL = %04X\\n
\";\n
        cgc_printf(v11);\n
        v17 = *((v45 + 56));\n
        v16 = *((v45 + 54));\n
        v15 = \"SP = %04X, PC = %04X\\n
\";\n
        cgc_printf(v11);\n
        return 0;\n
    }\n
    v33 = 0;\n
    v13 = &g_405845;\n
    v34 = 0;\n
    do\n
    {\n
        if (*((v45 + 68)))\n
        {\n
            v33 += 1;\n
            if (__ROR__(v33 * 4008636143, 1) <= 143165576 && *((*(v45) + 65344)) < 0)\n
            {\n
                v14 = v34;\n
                v15 = v33;\n
                v10 = &v21;\n
                v9 = 3;\n
                v8 = v13;\n
                v7 = 1;\n
                cgc_transmit(v12, v13, v14);\n
                v35 = 0;\n
                do\n
                {\n
                    v16 = v35;\n
                    v17 = v35 * 32 * 5;\n
                    v36 = 0;\n
                    do\n
                    {\n
                        v37 = v45;\n
                        v38 = *((v45 + 28));\n
                        v39 = v36;\n
                        v40 = v36 + v17;\n
                        v43 = (v38[321 + v40] + v38[320 + v40] + v38[161 + v40] + v38[160 + v40] + v38[1 + v40] + v38[v40]) * 43691 >> 18;\n
                        v7 = (v43 - 1 <= 2 ? &g_405849 : *((4224532 + 4 * v43)));\n
                        v14 = &v22;\n
                        v13 = cgc_strlen(v11);\n
                        v12 = v7;\n
                        v11 = 1;\n
                        cgc_transmit(v12, v13, v14);\n
                        v36 = v39 + 2;\n
                        v45 = v37;\n
                    } while (v36 < 160);\n
                    v10 = &v21;\n
                    v9 = 1;\n
                    v8 = \"\\n
\";\n
                    v7 = 1;\n
                    cgc_transmit(v12, v13, v14);\n
                    v35 = *(&v20) + 3;\n
                } while (v35 < 144);\n
                v10 = &v21;\n
                v9 = 1;\n
                v8 = \"\\n
\";\n
                v7 = 1;\n
                cgc_transmit(v12, v13, v14);\n
                v33 = *(&v19);\n
                v34 = *(&v18);\n
            }\n
            *((v45 + 68)) = 0;\n
        }\n
        v19 = v34;\n
        v20 = 0;\n
        v47 = ftop<4> - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v48 = v47 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v48 = v47 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v49 = v48 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v50 = v49 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v50 = v49 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v51 = CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69;\n
        [D] PutI(136:I8x8)[t5,0] = 0x00\n
        v52 = v50 + 1;\n
        [D] PutI(72:F64x8)[t19,0] = t20\n
        [D] PutI(136:I8x8)[t19,0] = 0x01\n
        [D] PutI(136:I8x8)[t19,0] = 0x00\n
        v53 = v52 + 1;\n
        if ((((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69) >> 6) & 1) != 1)\n
        {\n
LABEL_404480:\n
            v34 += 1;\n
            continue;\n
        }\n
        else\n
        {\n
            if ([D] x86g_calculate_condition(0xa<32>, 0x0<32>, cc_dep1<4>, 0x0<32>, 0x0<32>))\n
                goto LABEL_404480;\n
            v7 = v45;\n
            v34 = 0;\n
            if (!cgc_check_input(v11))\n
                break;\n
            continue;\n
        }\n
        v7 = v45;\n
    } while (cgc_gb_tick(v11));\n
}\n
", "4211839:sub_40447f": null, "4211943:sub_4044e7": null, "4212015:sub_40452f": null, "4212360:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}