{"4198400:_init": "extern struct_0 *g_407118;\n
\n
int _init()\n
{\n
    if (g_407118)\n
    {\n
        g_407118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24623;\n
    v6 = v5 + 3162;\n
    v7 = v5 + 3162;\n
    if (v7 == v6)\n
        return v5 + 3162;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 24559;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 3162;\n
    v9 = (v6 + 3162 - (v6 + 3162) >> 31) + (3162 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_407114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_407114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_is_non_printable": "int cgc_is_non_printable(char v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = v2;\n
    if (!cgc_is_printable())\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4198950:sub_401226": null, "4198960:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_digit() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_letter() != 1)\n
        {\n
            v0 = v4;\n
            if (cgc_is_symbol() != 1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4199098:sub_4012ba": null, "4199104:cgc_is_digit": "int cgc_is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4199167:sub_4012ff": null, "4199168:cgc_is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_upper() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_lower() != 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4199275:sub_40136b": null, "4199280:cgc_is_symbol": "int cgc_is_symbol(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (33 <= v2 && v2 <= 47)\n
        goto LABEL_4013ef;\n
    if (58 <= v2 && v2 <= 64)\n
        goto LABEL_4013ef;\n
    if (91 <= v2 && v2 <= 96)\n
        goto LABEL_4013ef;\n
    if (123 > v2)\n
    {\n
LABEL_4013f8:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(v2 <= 126))\n
    {\n
        goto LABEL_4013f8;\n
    }\n
LABEL_4013ef:\n
    v1 = 1;\n
    return v1;\n
}\n
", "4199429:sub_401405": null, "4199440:cgc_is_upper": "int cgc_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 90 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4199503:sub_40144f": null, "4199504:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (97 <= v2 && 122 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4199567:sub_40148f": null, "4199568:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 7);\n
}\n
", "4199619:sub_4014c3": null, "4199632:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 6);\n
}\n
", "4199683:sub_401503": null, "4199696:cgc_isascii": "int cgc_isascii(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 0)\n
        v1 = v2 < 128;\n
    return v1 & 1;\n
}\n
", "4199744:cgc_isblank": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isblank(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 64);\n
}\n
", "4199795:sub_401573": null, "4199808:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 32);\n
}\n
", "4199859:sub_4015b3": null, "4199872:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 1);\n
}\n
", "4199923:sub_4015f3": null, "4199936:cgc_isgraph": "int cgc_isgraph(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 > 32)\n
        v1 = v2 <= 126;\n
    return v1 & 1;\n
}\n
", "4199981:sub_40162d": null, "4199984:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 4);\n
}\n
", "4200035:sub_401663": null, "4200048:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 32)\n
        v1 = v2 <= 126;\n
    return v1 & 1;\n
}\n
", "4200093:sub_40169d": null, "4200096:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isprint(v3))\n
    {\n
        v1 = !(*((v0 + v3 + 12392)) & 15);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4200194:sub_401702": null, "4200208:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 8);\n
}\n
", "4200259:sub_401743": null, "4200272:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 2);\n
}\n
", "4200323:sub_401783": null, "4200336:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return ((&_GLOBAL_OFFSET_TABLE_)[12392 + v0] & 16);\n
}\n
", "4200387:sub_4017c3": null, "4200400:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 & -33;\n
    return v0;\n
}\n
", "4200471:sub_401817": null, "4200480:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 | 32;\n
    return v0;\n
}\n
", "4200551:sub_401867": null, "4200560:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, v4 + a0, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4200764:sub_40193c": null, "4200768:cgc_receive_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    for (v3 = 0; v4 < a1; v4 = v3 + v4)\n
    {\n
        v0 = &v3;\n
        v2 = cgc_receive(v6, a0 + v4, a1 - v4);\n
        if (v2)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!v3)\n
            break;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4200937:sub_4019e9": null, "4200944:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4201072:cgc_memcmp": "int cgc_memcmp(char *v2, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v2) == *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = *(v2) - *(a0);\n
            return v1;\n
        }\n
    }\n
}\n
", "4201195:sub_401aeb": null, "4201200:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_24;  // tmp #24\n
    char *v1;  // eax\n
    char *v2;  // eax\n
\n
    for (; a1; a1 -= 1)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
        tmp_24 = *(v1);\n
        v2 = v0;\n
        v0 = v2 + 1;\n
        *(v2) = tmp_24;\n
    }\n
    return v0;\n
}\n
", "4201267:sub_401b33": null, "4201280:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    int tmp_22;  // tmp #22\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // ecx\n
\n
    v0 = v2;\n
    v0 = v1;\n
    do\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_22 = *(v3);\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = *(v3);\n
    } while (tmp_22);\n
    return v1;\n
}\n
", "4201347:sub_401b83": null, "4201360:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4201416:sub_401bc8": null, "4201424:cgc_strchr": "int cgc_strchr(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v3))\n
            v2 = *(v3) != a0;\n
        if (!(v2 & 1))\n
            break;\n
        v3 += 1;\n
    }\n
    if (*(v3))\n
    {\n
        v1 = v3;\n
        return v1;\n
    }\n
    if (a0)\n
        v0 = 0;\n
    else\n
        v0 = v3;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4201567:sub_401c5f": null, "4201568:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = v1;\n
    return cgc_vprintf(v2);\n
}\n
", "4201620:sub_401c94": null, "4201632:cgc_vprintf": "extern unsigned int cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_vfprintf(cgc_stdout, v1);\n
}\n
", "4201691:sub_401cdb": null, "4201696:cgc_vfprintf": "int cgc_vfprintf(unsigned int *v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return cgc_vdprintf(*(v1), a0);\n
}\n
", "4201757:sub_401d1d": null, "4201760:cgc_fprintf": "int cgc_fprintf(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0xc]\n
    unsigned int v4;  // esi\n
\n
    v1 = v4;\n
    v0 = &v3;\n
    return cgc_vfprintf(v2, a0, v0);\n
}\n
", "4201823:sub_401d5f": null, "4201824:cgc_vdprintf": "int cgc_vdprintf(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x101c]\n
    void* v1;  // [bp-0x1014]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
\n
    v2 = v4;\n
    v1 = 0;\n
    cgc_printf_core(cgc_fd_printer, &v0, a0, a1, v3, 0);\n
    return v1;\n
}\n
", "4201939:sub_401dd3": null, "4201952:cgc_printf_core": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_core(struct struct_0 **v9, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    void* v0;  // [bp-0xd4], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xa0]\n
    unsigned int v2;  // [bp-0x9c]\n
    unsigned int v3;  // [bp-0x38]\n
    void* v4;  // [bp-0x24]\n
    char v5;  // [bp-0x1d]\n
    void* v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v10;  // eax\n
    char *v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v4 = 0;\n
    v3 = a2;\n
    v10 = a1;\n
    a1 = v10 + 1;\n
    for (v5 = *(v10); v5; v5 = *(v11))\n
    {\n
        v1 = v8;\n
        if (v1 <= 15)\n
        {\n
            if (v5 == 37)\n
            {\n
                v8 = 2;\n
            }\n
            else if (v5 == 92)\n
            {\n
                v8 = 1;\n
            }\n
            else\n
            {\n
                v0 = 0;\n
                v9(v5, a0);\n
            }\n
        }\n
        v11 = a1;\n
        a1 = v11 + 1;\n
    }\n
    v0 = 2;\n
    return v9(0, a0);\n
}\n
", "4202191:sub_401ecf": "int sub_401ecf()\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_7;  // tmp #7\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0xc]\n
    struct struct_0 **v6;  // [bp+0x8], Other Possible Types: void*\n
    char v7;  // [bp+0xc]\n
    char v8;  // [bp+0x10]\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    struct struct_0 **v17;  // eax\n
\n
    v15 = v0 - 34;\n
    tmp_7 = v15;\n
    v16 = v15 - 86;\n
    if (tmp_7 <= 86)\n
        goto *(((stack_base)[152] + eax<4> * 4 - 3836)) + (stack_base)[152];\n
    if (v0 > 48 && v0 < 56)\n
    {\n
        v3 = 3;\n
        v2 = 1;\n
        v1 = v0 - 48;\n
        goto LABEL_40208e;\n
    }\n
    v17 = v6;\n
    v6 = 0;\n
    v17(*(*(&v8)), *(&v7));\n
LABEL_40208e:\n
}\n
", "4202665:sub_4020a9": "int sub_4020a9()\n
{\n
    char v0;  // [bp-0x19]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v4;  // [bp+0x8], Other Possible Types: char\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // [bp+0x10], Other Possible Types: char\n
    struct struct_0 **v7;  // eax\n
\n
    if (v0 != 37)\n
    {\n
        v2 = 15;\n
        v1 = 0;\n
        v6 = *(&v6) - 1;\n
    }\n
    else\n
    {\n
        v7 = *(&v4);\n
        v4 = 0;\n
        v7(v0, *(&v5));\n
        v2 = 0;\n
    }\n
}\n
", "4202755:sub_402103": "int sub_402103()\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x18], Other Possible Types: char\n
    char v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    void* v5;  // [bp+0x8], Other Possible Types: char, struct struct_0 **\n
    char v6;  // [bp+0xc]\n
    char v7;  // [bp+0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v8;  // eax\n
    struct struct_0 **v9;  // eax\n
\n
    if (v0 > 48 && v0 < 56 && *(&v2) < 3)\n
    {\n
        v2 = *(&v2) + 1;\n
        v1 = *(&v1) * 8 + v0 - 48;\n
        if (v2 == 3)\n
        {\n
            v9 = v5;\n
            v5 = 0;\n
            v9(v1, *(&v6));\n
            v3 = 0;\n
        }\n
        goto LABEL_4021b6;\n
    }\n
    v8 = *(&v5);\n
    v5 = 0;\n
    v8(v1, *(&v6));\n
    v3 = 0;\n
    v7 = *(&v7) - 1;\n
LABEL_4021b6:\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    char v1;  // [bp-0x19]\n
    char v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14], Other Possible Types: char\n
    void* v4;  // [bp-0xc]\n
    struct struct_0 **v6;  // [bp+0x8], Other Possible Types: char, void*\n
    char v7;  // [bp+0xc]\n
    char v8;  // [bp+0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
\n
    if (cgc_isxdigit(v1) && *(&v3) < 2)\n
    {\n
        v3 = *(&v3) + 1;\n
        v0 = *(&v2) * 16;\n
        v2 = v0 + cgc_hex_value_of();\n
        if (v3 == 2)\n
        {\n
            v10 = v6;\n
            v6 = 0;\n
            v10(v2, *(&v7));\n
            v4 = 0;\n
        }\n
        goto LABEL_402288;\n
    }\n
    v9 = *(&v6);\n
    v6 = 0;\n
    v9(*(&v2), *(&v7));\n
    v4 = 0;\n
    v8 = *(&v8) - 1;\n
LABEL_402288:\n
}\n
", "4203149:sub_40228d": "int sub_40228d()\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x19]\n
    void* v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    char *v8;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char *v9;  // eax\n
\n
    v3 = -1;\n
    v2 = -1;\n
    v5 = 0;\n
    v0 = 0;\n
    v1 = -1;\n
    if (v4 == 48)\n
    {\n
        v8 = *(&v8) - 1;\n
        v6 = 5;\n
    }\n
    else if (!cgc_isdigit(v4))\n
    {\n
        v8 = *(&v8) - 1;\n
        v6 = 5;\n
    }\n
    else\n
    {\n
        for (v3 = 0; cgc_isdigit(v4); v4 = *(v9))\n
        {\n
            v3 = v3 * 10 + v4 - 48;\n
            v9 = v8;\n
            v8 = v9 + 1;\n
        }\n
        if (v4 == 36)\n
        {\n
            v1 = v3 - 1;\n
            v3 = 0;\n
            v6 = 5;\n
        }\n
        else\n
        {\n
            v8 = *(&v8) - 1;\n
            v6 = 7;\n
        }\n
    }\n
}\n
", "4203399:sub_402387": "int sub_402387()\n
{\n
}\n
", "4203573:sub_402435": "int sub_402435()\n
{\n
    unsigned int *v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: char\n
    char v4;  // [bp-0x19]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char *v8;  // eax\n
    char *v9;  // eax\n
    unsigned int *v10;  // eax\n
    char *v11;  // eax\n
\n
    if (v4 == 42)\n
    {\n
        v8 = *(&v7);\n
        v7 = v8 + 1;\n
        v4 = *(v8);\n
        if (!cgc_isdigit(v4))\n
        {\n
            v10 = *(&v3);\n
            v3 = v10 + 1;\n
            v0 = v10;\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            for (v0 = 0; cgc_isdigit(v4); v4 = *(v9))\n
            {\n
                v0 = v0 * 10 + v4 - 48;\n
                v9 = v7;\n
                v7 = v9 + 1;\n
            }\n
            v0 -= 1;\n
            if ((Not (Not (Load(addr=stack_base-25, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
        }\n
        v2 = *((*(&v1) + v0 * 4));\n
    }\n
    else if (!cgc_isdigit(v4))\n
    {\n
        v7 += 1;\n
    }\n
    else\n
    {\n
        for (v2 = 0; cgc_isdigit(v4); v4 = *(v11))\n
        {\n
            v2 = v2 * 10 + v4 - 48;\n
            v11 = v7;\n
            v7 = v11 + 1;\n
        }\n
        v7 += 1;\n
    }\n
    v5 = 7;\n
}\n
", "4203915:sub_40258b": "int sub_40258b()\n
{\n
    unsigned int *v0;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x19]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // [bp+0x10], Other Possible Types: unsigned int, char\n
    char *v8;  // eax\n
    char *v9;  // eax\n
    char *v10;  // eax\n
    unsigned int *v11;  // eax\n
    char *v12;  // eax\n
\n
    if (v4 != 46)\n
    {\n
        v7 += 1;\n
    }\n
    else\n
    {\n
        v8 = *(&v7);\n
        v7 = v8 + 1;\n
        v4 = *(v8);\n
        if (v4 == 42)\n
        {\n
            v9 = v7;\n
            v7 = v9 + 1;\n
            v4 = *(v9);\n
            if (!cgc_isdigit(v4))\n
            {\n
                v11 = *(&v3);\n
                v3 = v11 + 1;\n
                v0 = v11;\n
                v7 += 1;\n
            }\n
            else\n
            {\n
                for (v0 = 0; cgc_isdigit(v4); v4 = *(v10))\n
                {\n
                    v0 = v0 * 10 + v4 - 48;\n
                    v10 = v7;\n
                    v7 = v10 + 1;\n
                }\n
                v0 -= 1;\n
                if ((Not (Not (Load(addr=stack_base-25, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
            }\n
            v2 = *((*(&v1) + v0 * 4));\n
        }\n
        else if (!cgc_isdigit(v4))\n
        {\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            for (v2 = 0; cgc_isdigit(v4); v4 = *(v12))\n
            {\n
                v2 = v2 * 10 + v4 - 48;\n
                v12 = v7;\n
                v7 = v12 + 1;\n
            }\n
            v7 += 1;\n
        }\n
    }\n
    v5 = 8;\n
}\n
", "4204300:sub_40270c": "int sub_40270c()\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_7;  // tmp #7\n
    char v3;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v6 = v0 - 76;\n
    tmp_7 = v6;\n
    v7 = v6 - 46;\n
    if (tmp_7 > 46)\n
        v3 = *(&v3) - 1;\n
    else\n
        goto *(((stack_base)[152] + eax<4> * 4 - 4092)) + (stack_base)[152];\n
}\n
", "4204495:sub_4027cf": "int sub_4027cf()\n
{\n
    unsigned int v0;  // [bp-0xb0]\n
    unsigned int v1;  // [bp-0x64]\n
    char v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20], Other Possible Types: char\n
    char v4;  // [bp-0x19]\n
    unsigned int v44;  // eax\n
\n
    v1 = 1;\n
    if (*(&v2) == -1)\n
    {\n
        v44 = *(&v3);\n
        v3 = v44 + 1;\n
        v2 = v44;\n
    }\n
    v0 = v4 - 65;\n
    if (!(v0 <= 55))\n
        goto LABEL_0x403f53;\n
    goto *(((stack_base)[152] + (stack_base)[176] * 4 - 4316)) + (stack_base)[152];\n
}\n
", "4210593:sub_403fa1": null, "4210608:cgc_fd_printer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fd_printer(char v4, unsigned int a0[3], unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[3];  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5[3];  // esi\n
    unsigned int v6;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = a0;\n
    if (!a1)\n
    {\n
        v5 = v2;\n
        v6 = v5[2];\n
        v5[2] = v6 + 1;\n
        *(12 + &v2[0] + (v6 & 4095)) = v4;\n
        if (!(v2[2] & 4095) && cgc_transmit_all(v2[0], &v4, 0x1000))\n
            cgc__terminate();\n
    }\n
    else if (a1 == 1)\n
    {\n
        v3 = v2[2];\n
        return v3;\n
    }\n
    else if (a1 == 2)\n
    {\n
        v1 = v2[2] & 4095;\n
        if (v1 && cgc_transmit_all(v2[0], v2 + 1, v1))\n
            cgc__terminate();\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4210925:sub_4040ed": null, "4210928:cgc_fgetc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgetc(unsigned int v3[4])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v4[4];  // edx\n
    unsigned int v5;  // ecx\n
    unsigned int v6[4];  // eax\n
    unsigned int v7[4];  // eax\n
    unsigned int v8[4];  // edx\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3[3] < v3[2])\n
    {\n
        v4 = v3;\n
        v5 = v4[3];\n
        v4[3] = v5 + 1;\n
        v2 = *(16 + &v3[0] + v5);\n
        return v2;\n
    }\n
    v3[2] = 0;\n
    v3[3] = 0;\n
    v0 = &v3[2];\n
    if (cgc_receive(v3[0], v3 + 1, 0x1000))\n
    {\n
        v6 = v3;\n
        v6[1] = v6[1] | 2;\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (!v3[2])\n
    {\n
        v7 = v3;\n
        v7[1] = v7[1] | 4;\n
        v2 = -1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v8 = v3;\n
        v9 = v8[3];\n
        v8[3] = v9 + 1;\n
        v2 = *(16 + &v3[0] + v9);\n
        return v2;\n
    }\n
}\n
", "4211171:sub_4041e3": null, "4211184:cgc_getc": "int cgc_getc(unsigned int v0[4])\n
{\n
    return cgc_fgetc(v0);\n
}\n
", "4211221:sub_404215": null, "4211232:cgc_getchar": "extern unsigned int cgc_stdin[4];\n
\n
int cgc_getchar()\n
{\n
    return cgc_getc(cgc_stdin);\n
}\n
", "4211269:sub_404245": null, "4211280:cgc_fgets": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a0 - 1)\n
        {\n
LABEL_404304:\n
            *((v4 + v2)) = 0;\n
            v3 = v4;\n
            return v3;\n
        }\n
        v1 = cgc_fgetc(a1);\n
        if (v1 == -1)\n
        {\n
            if ((a1->field_4 & 4) && !(v2 <= 0))\n
                goto LABEL_404304;\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        *((v4 + v5)) = v1;\n
        if (v1 == 10)\n
            goto LABEL_404304;\n
    }\n
}\n
", "4211486:sub_40431e": null, "4211488:cgc_fread": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v6, unsigned int a0, unsigned int a1, unsigned int a2[4])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    char *v7;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v4 = 0; v4 < a1; v4 += 1)\n
    {\n
        for (v3 = 0; v3 < a0; v3 += 1)\n
        {\n
            v1 = cgc_fgetc(a2);\n
            if (v1 == -1)\n
            {\n
                v5 = v4;\n
                return v5;\n
            }\n
            v7 = v2;\n
            v2 = v7 + 1;\n
            v7[v6] = v1;\n
        }\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4211677:sub_4043dd": null, "4211680:cgc_hex_value_of": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_hex_value_of(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_isdigit(v3))\n
    {\n
        v1 = v3 - 48;\n
        return v1;\n
    }\n
    else if (cgc_isalpha(v3))\n
    {\n
        v1 = cgc_toupper(v3) + -55;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4211815:sub_404467": null, "4211824:cgc_r_utoa": "int cgc_r_utoa(unsigned int v2, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = a0;\n
    for (*(v1) = 48; v2; v2 = (0 CONCAT v2) /m 10)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        *(v3) = ((0 CONCAT v2) /m 10 >> 32) + 48;\n
    }\n
    if (v1 == a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4211948:sub_4044ec": null, "4211952:cgc_r_otoa": "int cgc_r_otoa(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0 = a0;\n
    return cgc_r_llotoa(v2, 0);\n
}\n
", "4212008:sub_404528": null, "4212016:cgc_r_xtoa": "int cgc_r_xtoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = a1;\n
    return cgc_r_llxtoa(v3, 0, a0);\n
}\n
", "4212083:sub_404573": null, "4212096:cgc_r_llotoa": "int cgc_r_llotoa(unsigned int v2, unsigned int a0, char *a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = a1;\n
    for (*(v1) = 48; !(!v2) || !(!a0); v2 = (v4 CONCAT v2) * 0x20000000 >> 32)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        *(v3) = v2 & 7 | 48;\n
        v4 = a0;\n
        a0 = v4 / 8;\n
    }\n
    if (v1 == a1)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "4212230:sub_404606": null, "4212240:cgc_r_llxtoa": "int cgc_r_llxtoa(unsigned int v4, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v3 = a1;\n
    for (*(v3) = 48; !(!v4) || !(!a0); v4 = (v6 CONCAT v4) * 0x10000000 >> 32)\n
    {\n
        v2 = v4 & 15;\n
        if (v2 < 10)\n
        {\n
            v2 += 48;\n
        }\n
        else\n
        {\n
            if (a2)\n
                v1 = v2 - -55;\n
            else\n
                v1 = v2 - -87;\n
            v2 = v1;\n
        }\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = v2;\n
        v6 = a0;\n
        a0 = v6 / 16;\n
    }\n
    if (v3 == a1)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 - 1;\n
    return v0;\n
}\n
", "4212454:sub_4046e6": null, "4212464:cgc_memset": "int cgc_memset(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v3;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v1[v0] = a0;\n
    }\n
    v2 = a1;\n
    return v2;\n
}\n
", "4212567:sub_404757": null, "4212576:cgc_rand": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rand(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    for (v2 = 0; a0 > v3; v3 = v2 + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_random(v4 + v3, a0 - v3))\n
            cgc__terminate();\n
    }\n
    return a0;\n
}\n
", "4212711:sub_4047e7": null, "4212720:cgc_recv_until_delim_n": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_until_delim_n(unsigned int v7, char a0, char *a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    char *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a1 && a2)\n
    {\n
        v5 = 0;\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = 0; v2 < a2; v2 += 1)\n
        {\n
            v0 = &v3;\n
            v4 = cgc_recv_char(v7);\n
            if (v4 == -1)\n
            {\n
                if (v3 == -11)\n
                {\n
                    v6 = -11;\n
                    return v6;\n
                }\n
                if (v3 == -1)\n
                    break;\n
            }\n
            v8 = v5;\n
            v5 = v8 + 1;\n
            a1[v8] = v4;\n
            if (a0 == v4)\n
                break;\n
        }\n
        if (a0 != a1[1 + v5])\n
        {\n
            v6 = -11;\n
            return v6;\n
        }\n
        v6 = v5;\n
        return v6;\n
    }\n
    v6 = -11;\n
    return v6;\n
}\n
", "4213030:sub_404926": null, "4213040:cgc_recv_char": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_char(unsigned int v5, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14]\n
    char v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[3];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2[0] = 0;\n
    if (v5)\n
    {\n
        v4 = -11;\n
        return v4;\n
    }\n
    v2[0] = v1 + 12652;\n
    *(a0) = 0;\n
    if (v2[2] && !(v2[2] - 1 < v2[1]))\n
        goto LABEL_404a3e;\n
    v2[1] = 0;\n
    v2[2] = 0;\n
    v0 = &v2[2];\n
    if (cgc_receive(v2[0], v2 + 1, 0x400))\n
    {\n
        *(a0) = -11;\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (!v2[2])\n
    {\n
        *(a0) = -1;\n
        v4 = -1;\n
        return v4;\n
    }\n
LABEL_404a3e:\n
    v3 = *(12 + &v2[0] + v2[1]);\n
    v6 = v2;\n
    v6[1] = v6[1] + 1;\n
    v4 = v3;\n
    return v4;\n
}\n
", "4213354:sub_404a6a": null, "4213360:cgc_send_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v3 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(v6, v2, a1 - v3))\n
            {\n
                v5 = -9;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -9;\n
    return v5;\n
}\n
", "4213575:sub_404b47": null, "4213584:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    char v1;  // [bp-0x42c]\n
    void* v2;  // [bp-0x410], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x40c]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    memset(&v3, 0, 0x400);\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (cgc_send_bytes(1, v0 - 3488, 24) != 24)\n
            cgc__terminate();\n
        cgc_memset(&v3, 0, 0x400);\n
        cgc_memset(&v1, 0, 24);\n
        v2 = cgc_recv_until_delim_n(0, 3, &v3, 1048);\n
        if (0 > v2)\n
            cgc__terminate();\n
        if (cgc_process(&v3, 3))\n
            cgc__terminate();\n
        if (cgc_send_bytes(1, v0 - 3463, 25) != 25)\n
            cgc__terminate();\n
        if (cgc_send_bytes(1, &v1, 24) != 24)\n
            cgc__terminate();\n
    }\n
}\n
", "4214105:sub_404d59": null, "4214112:cgc_compute_char_type": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compute_char_type(char *v2, char a0, unsigned short a1[11])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned short v3[11];  // eax\n
    unsigned short v4[11];  // eax\n
    unsigned short v5[11];  // eax\n
    unsigned short v6[11];  // eax\n
    unsigned short v7[11];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v1 = v2; a0 != *(v1); v1 += 1)\n
    {\n
        if (cgc_is_non_printable(*(v1)) == 1)\n
        {\n
            v3 = a1;\n
            v3[7] = v3[7] + 1;\n
        }\n
        else if (cgc_is_printable(*(v1)) == 1)\n
        {\n
            v4 = a1;\n
            v4[6] = v4[6] + 1;\n
            if (cgc_is_digit(*(v1)) == 1)\n
            {\n
                v5 = a1;\n
                v5[9] = v5[9] + 1;\n
            }\n
            else if (cgc_is_letter(*(v1)) == 1)\n
            {\n
                v6 = a1;\n
                v6[8] = v6[8] + 1;\n
            }\n
            else\n
            {\n
                v7 = a1;\n
                v7[10] = v7[10] + 1;\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4214426:sub_404e9a": null, "4214432:cgc_is_word_end_char": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_word_end_char(char v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 != 32)\n
    {\n
        v0 = v3;\n
        if (cgc_is_sentence_end_char() != 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4214528:cgc_is_sentence_end_char": "int cgc_is_sentence_end_char(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 != 46 && v2 != 33 && v2 != 63)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4214608:cgc_is_paragraph_end_char": "int cgc_is_paragraph_end_char(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 == 10)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4214654:sub_404f7e": null, "4214656:cgc_compute_grammar_components": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compute_grammar_components(char *v3, char a0, unsigned short a1[6])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned short v4[6];  // eax\n
    unsigned short v5[6];  // eax\n
    unsigned short v6[6];  // eax\n
    unsigned short v7[6];  // eax\n
    unsigned short v8[6];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v3;\n
    for (v1 = 0; a0 != *(v2); v2 += 1)\n
    {\n
        v4 = a1;\n
        v4[2] = v4[2] + 1;\n
        if (cgc_is_word_end_char(*(v2)) == 1 && cgc_is_letter(v1) == 1)\n
        {\n
            v5 = a1;\n
            v5[3] = v5[3] + 1;\n
        }\n
        if (cgc_is_sentence_end_char(v1) == 1)\n
        {\n
            if (*(v2) == 32)\n
            {\n
                v6 = a1;\n
                v6[4] = v6[4] + 1;\n
            }\n
            else if (cgc_is_paragraph_end_char(*(v2)) == 1)\n
            {\n
                v7 = a1;\n
                v7[4] = v7[4] + 1;\n
                v8 = a1;\n
                v8[5] = v8[5] + 1;\n
            }\n
        }\n
        v1 = *(v2);\n
    }\n
    return a0;\n
}\n
", "4214980:sub_4050c4": null, "4214992:cgc_compute_hash": "int cgc_compute_hash(char *v8, char a0, unsigned int *a1)\n
{\n
    unsigned short v0;  // [bp-0x1e]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x16], Other Possible Types: unsigned short\n
    char v3;  // [bp-0x14]\n
    char v4;  // [bp-0x13]\n
    char v5;  // [bp-0x12]\n
    char v6;  // [bp-0x11]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v9;  // eax\n
    char v10;  // cl\n
    unsigned int v11;  // edx\n
\n
    v7 = v8;\n
    memset(&v3, 0, 4);\n
    *(&v2) = 0;\n
    v1 = 0x4347c000;\n
    for (v0 = 0; a0 != *(v7); (&v3)[v11] = (&v3)[v11] ^ v10)\n
    {\n
        v9 = v7;\n
        v7 = v9 + 1;\n
        v10 = *(v9);\n
        *(&v9) = v2;\n
        v2 = v9 + 1;\n
        v11 = (v9 >> 31 CONCAT v9) /m 4 >> 32;\n
    }\n
    v3 ^= 17;\n
    v4 ^= 34;\n
    v5 ^= 51;\n
    v6 ^= 68;\n
    *(a1) = *(&v3);\n
    return a1;\n
}\n
", "4215205:sub_4051a5": null, "4215216:cgc_compute_session_id": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
} struct_1;\n
\n
int cgc_compute_session_id(struct_1 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xe]\n
    char v2;  // [bp-0xd]\n
    char v3[3001];  // [bp-0xc]\n
\n
    *(&v3[0]) = 0x4347c000;\n
    memset(&v1, 0, 2);\n
    v0 = &v1;\n
    v1 = v3[0] ^ v3[1000];\n
    v2 = v3[2000] ^ v3[3000];\n
    v4->field_16 = *(&v0);\n
    return v4;\n
}\n
", "4215346:sub_405232": null, "4215360:cgc_process": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process(char *v2, char a0, void* a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_compute_char_type(v2, a0, a1);\n
    cgc_compute_grammar_components(v2, a0, a1);\n
    cgc_compute_hash(v2, a0, a1);\n
    cgc_compute_session_id(a1);\n
    v4 = v1;\n
    return 0;\n
}\n
", "4215504:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}