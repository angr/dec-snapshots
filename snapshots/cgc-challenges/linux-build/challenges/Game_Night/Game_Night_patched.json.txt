{"4210688:_init": "extern struct_0 *g_40f138;\n
\n
int _init()\n
{\n
    if (g_40f138)\n
    {\n
        g_40f138();\n
        return;\n
    }\n
    return;\n
}\n
", "4210736:sub_404030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4210752:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4210768:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4210784:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4210800:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4210816:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4210832:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4210848:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4210864:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4210880:sub_4040c0": "int sub_4040c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4210886:sub_4040c6": null, "4210896:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4210939:sub_4040fb": null, "4210940:sub_4040fc": "int sub_4040fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4210944:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4210948:sub_404104": null, "4210960:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 45103;\n
    v6 = v5 + 1082;\n
    v7 = v5 + 1082;\n
    if (v7 == v6)\n
        return v5 + 1082;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4211011:sub_404143": "int sub_404143()\n
{\n
}\n
", "4211017:sub_404149": "int sub_404149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4211024:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 45039;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 1082;\n
    v9 = (v6 + 1082 - (v6 + 1082) >> 31) + (1082 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4211095:sub_404197": "int sub_404197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4211104:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40f134;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40f134)\n
    {\n
        v0 = __dso_handle;\n
        sub_4040c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4211179:sub_4041eb": "int sub_4041eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4211184:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211193:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4211197:sub_4041fd": null, "4211200:cgc_bitset_init": "int cgc_bitset_init(unsigned int *v1, unsigned int a0)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    *(v1) = a0;\n
    return cgc_bitset_clear(v1, *(&v0));\n
}\n
", "4211248:cgc_bitset_clear": "int cgc_bitset_clear(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = (*(v1) + 7 & -8) >> 3;\n
    return cgc_memset(v1 + 1, 0);\n
}\n
", "4211318:sub_404276": null, "4211328:cgc_bitset_set_bit": "int cgc_bitset_set_bit(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 1;\n
    return cgc_bitset_set_bit_value(v1, a0);\n
}\n
", "4211385:sub_4042b9": null, "4211392:cgc_bitset_set_bit_value": "int cgc_bitset_set_bit_value(unsigned int *v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int *v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v1 = a0 >> 3;\n
    v0 = 1 << (a0 & 7 & 31);\n
    if (a0 > *(v3))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (a1)\n
    {\n
        v4 = v3;\n
        v5 = v1;\n
        *(4 + v4 + v5) = *(4 + v4 + v5) | v0;\n
    }\n
    else\n
    {\n
        v6 = v3;\n
        v7 = v1;\n
        *(4 + v6 + v7) = *(4 + v6 + v7) & (v0 ^ -1);\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211535:sub_40434f": null, "4211536:cgc_bitset_clear_bit": "int cgc_bitset_clear_bit(unsigned int *v0, unsigned int a0)\n
{\n
    return cgc_bitset_set_bit_value(v0, a0, 0);\n
}\n
", "4211595:sub_40438b": null, "4211600:cgc_bitset_get_bit": "int cgc_bitset_get_bit(unsigned int *v3, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = a0 >> 3;\n
    v0 = 1 << (a0 & 7 & 31);\n
    if (a0 > *(v3))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = ((*(4 + v3 + v1) & v0) ? 0 : 1);\n
    return v2;\n
}\n
", "4211704:sub_4043f8": null, "4211712:cgc_bitset_find_first": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bitset_find_first(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = \"(\";\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= *(v3))\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        else if (cgc_bitset_get_bit(v3, v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4211837:sub_40447d": null, "4211840:cgc_isdigit": "int cgc_isdigit(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 48)\n
        v1 = v2 <= 57;\n
    return v1 & 1;\n
}\n
", "4211885:sub_4044ad": null, "4211888:cgc_ishexdigit": "int cgc_ishexdigit(unsigned int v2)\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
\n
    v1 = 1;\n
    if (cgc_isdigit(v2))\n
        return v1 & 1;\n
    if (v2 >= 97)\n
    {\n
        v1 = 1;\n
        if (v2 <= 102)\n
            return v1 & 1;\n
    }\n
    v0 = 0;\n
    if (v2 >= 65)\n
        v0 = v2 <= 70;\n
    v1 = v0;\n
    return v1 & 1;\n
}\n
", "4212007:sub_404527": null, "4212016:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"(\";\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_isupper())\n
    {\n
        v0 = v4;\n
        v2 = cgc_islower();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4212105:sub_404589": null, "4212112:cgc_isupper": "int cgc_isupper(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 65)\n
        v1 = v2 <= 90;\n
    return v1 & 1;\n
}\n
", "4212157:sub_4045bd": null, "4212160:cgc_islower": "int cgc_islower(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 97)\n
        v1 = v2 <= 122;\n
    return v1 & 1;\n
}\n
", "4212205:sub_4045ed": null, "4212208:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4212282:sub_40463a": null, "4212288:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4212362:sub_40468a": null, "4212368:cgc_todigit": "int cgc_todigit(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 2 && a0 <= 16 && v2 < a0)\n
    {\n
        if (v2 >= 10)\n
        {\n
            v1 = v2 + 87;\n
            return v1;\n
        }\n
        v1 = v2 + 48;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4212464:cgc_fromdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fromdigit(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = \"(\";\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        v4 = cgc_tolower(v4);\n
        if (cgc_isdigit(v4))\n
            v2 = v4 - 48;\n
        else\n
            v2 = v4 + -87;\n
        if (v2 >= 0 && v2 < a0)\n
        {\n
            v0 = v2;\n
            goto LABEL_4047a0;\n
        }\n
        v0 = -1;\n
LABEL_4047a0:\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4212655:sub_4047af": null, "4212656:cgc_utostr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_utostr(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = \"(\";\n
    v1 = 1;\n
    if (a0 >= 2 && a0 <= 16 && a3 >= 1)\n
    {\n
        v2 = v5;\n
        while (true)\n
        {\n
            v2 = (0 CONCAT v2) /m a0;\n
            if (!v2)\n
                break;\n
            v1 += 1;\n
        }\n
        if (v1 >= a3)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < v1; v3 += 1)\n
        {\n
            *(-1 + a2 + v1 - v3) = cgc_todigit((0 CONCAT v5) /m a0 >> 32, a0);\n
            v5 = (0 CONCAT v5) /m a0;\n
            if (a1)\n
                *(-1 + a2 + v1 - v3) = cgc_toupper(*(-1 + a2 + v1 - v3));\n
        }\n
        *((a2 + v1)) = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4212982:sub_4048f6": null, "4212992:cgc_itostr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itostr(unsigned int v3, unsigned int a0, unsigned int a1, char *a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v5;  // eax\n
\n
    v1 = \"(\";\n
    if (a3 < (v3 < 0 ? 1 : 2))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (v3 < 0)\n
    {\n
        v5 = a2;\n
        a2 = v5 + 1;\n
        *(v5) = 45;\n
        a3 -= 1;\n
    }\n
    if (v3 < 0)\n
        v0 = -(v3);\n
    else\n
        v0 = v3;\n
    v2 = cgc_utostr(v0, a0, a1, a2, a3);\n
    return v2;\n
}\n
", "4213191:sub_4049c7": null, "4213200:cgc_dtostr": null, "4213968:cgc_strtou": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtou(char *v8, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char *v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // ecx\n
    unsigned int v22;  // eax\n
\n
    v2 = \"(\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (*(v8))\n
            {\n
                v9 = v8;\n
                v8 = v9 + 1;\n
                v3 = cgc_fromdigit(*(v9), a0);\n
                v1 = v3 != -1;\n
            }\n
            if (!(v1 & 1))\n
            {\n
                *(a1) = v4;\n
                v7 = v6;\n
                return v7;\n
            }\n
            v10 = a0;\n
            v11 = v4;\n
            v0 = v10 * v5;\n
            v12 = v11 * v10 >> 32;\n
            v14 = v0;\n
            v4 = v11 * v10;\n
            v5 = v12 + v14;\n
            if (v12 + v14)\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
            v15 = v3;\n
            v16 = v15 / 0x80000000;\n
            v17 = ~(v15);\n
            v18 = v4;\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, eax<4>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>))))\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
            v19 = v3;\n
            v20 = v4;\n
            tmp_12 = v20;\n
            v22 = v5 + (v19 >> 31) + (tmp_12 + v19 < tmp_12);\n
            v4 = v20 + v19;\n
            v5 = v22;\n
            v6 += 1;\n
        }\n
    }\n
    v7 = -1;\n
    return v7;\n
}\n
", "4214298:sub_404e1a": null, "4214304:cgc_strtoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoi(char *v6, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = \"(\";\n
    v2 = 0;\n
    if (*(v6) == 45)\n
        v2 = 1;\n
    v4 = cgc_strtou(&v6[v2], a0, &v3);\n
    if (v4 == -1)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (v3 <= v2 + 2147483647)\n
    {\n
        if (v2)\n
            v0 = -(v3);\n
        else\n
            v0 = v3;\n
        *(a1) = v0;\n
        v5 = v4 + v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4214506:sub_404eea": null, "4214512:cgc_strtod": null, "4214900:sub_405074": null, "4214912:cgc_sign": null, "4214933:sub_405095": null, "4214944:cgc_exponent": null, "4214965:sub_4050b5": null, "4214976:cgc_mantissa": null, "4214998:sub_4050d6": null, "4215008:cgc_isnan": null, "4215110:sub_405146": null, "4215120:cgc_isinf": null, "4215260:sub_4051dc": null, "4215264:cgc_abs": null, "4215300:sub_405204": null, "4215312:cgc_clamp": null, "4215417:sub_405279": null, "4215424:cgc_pool_init": "int cgc_pool_init(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= 4076)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v1[0] = a0;\n
    v1[1] = 0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215492:sub_4052c4": null, "4215504:cgc_pool_destroy": "int cgc_pool_destroy(unsigned int *v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    cgc_pool_free_all(v1, *(&v0));\n
    *(v1) = 0;\n
    return v1;\n
}\n
", "4215550:sub_4052fe": null, "4215552:cgc_pool_free_all": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_free_all(struct_1 *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"(\";\n
    for (v3 = &v4->field_4->field_0; v3; v3 = v2)\n
    {\n
        v2 = *(v3);\n
        v0 = 0x1000;\n
        cgc_deallocate(v3);\n
    }\n
    v4->field_4 = 0;\n
    return v4;\n
}\n
", "4215653:sub_405365": null, "4215664:cgc_pool_alloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_alloc(struct_1 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax\n
\n
    v0 = \"(\";\n
    if (!v5->field_4 && cgc_pool_grow())\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!v5->field_4->field_8)\n
    {\n
        v2 = v5->field_4;\n
        for (v3 = v2->field_0; v3; v3 = v3->field_0)\n
        {\n
            if (v3->field_8)\n
                break;\n
            v2 = v3;\n
        }\n
        if (v3)\n
        {\n
            *(v2) = *(v3);\n
            *(v3) = v5->field_4;\n
            v5->field_4 = v3;\n
        }\n
        else if (cgc_pool_grow())\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v1 = cgc_bitset_find_first(v5->field_4 + 1, 0);\n
    if (v1 == -1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_bitset_set_bit(v5->field_4 + 1, v1) != -1)\n
    {\n
        v6 = v5->field_4;\n
        v6->field_8 = v6->field_8 - 1;\n
        v4 = v5->field_4->field_c + v1 * v5->field_0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4216061:sub_4054fd": null, "4216064:cgc_pool_grow": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_grow(unsigned int v5[2])\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax\n
\n
    v4 = v6;\n
    v1 = \"(\";\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    *(v2) = v5[1];\n
    v2[1] = v5[0];\n
    for (v2[2] = (0 CONCAT 4076) /m v5[0]; (v2[2] + 7 & -8) >> 3 > 4076 - v2[2] * v5[0]; v7->field_8 = v7->field_8 - 1)\n
    {\n
        v7 = v2;\n
    }\n
    cgc_bitset_init(v2 + 4, v2[2]);\n
    v2[3] = 5 + v2 + ((v2[2] + 7 & -8) >> 3);\n
    v5[1] = v2;\n
    v3 = 0;\n
    return v3;\n
}\n
", "4216321:sub_405601": null, "4216336:cgc_pool_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_free(unsigned int v3, unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_32;  // tmp #32\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[4];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
    unsigned int v5[4];  // ecx\n
    unsigned int v6;  // eax\n
\n
    v0 = \"(\";\n
    v2[0] = a0 & 4095;\n
    v4 = a0 - v2[3];\n
    v5 = v2;\n
    tmp_32 = (0 CONCAT v4) /m v5[1];\n
    v6 = (0 CONCAT v4) /m v5[1];\n
    if (!(tmp_32 >> 32))\n
    {\n
        v1 = (0 CONCAT a0 - v2[3]) /m v2[1];\n
        v6 = cgc_bitset_clear_bit(v2 + 1, v1);\n
    }\n
    return v6;\n
}\n
", "4216460:sub_40568c": null, "4216464:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"(\";\n
    v3 = 0;\n
    if (a1 > 2147483647)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!a1)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_receive(v5, a0 + v3, a1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        a1 -= *(&v2);\n
        v3 = *(&v2) + v3;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4216653:sub_40574d": null, "4216656:cgc_read_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(unsigned int v5, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"(\";\n
    v3 = 0;\n
    if (a2 >= 1 && a2 <= 2147483647)\n
    {\n
        while (true)\n
        {\n
            if (v3 >= a2 - 1)\n
            {\n
LABEL_405821:\n
                *((a0 + v3)) = 0;\n
                v4 = v3;\n
                return v4;\n
            }\n
            v0 = &v2;\n
            if (cgc_receive(v5, a0 + v3, 1))\n
            {\n
LABEL_4057ec:\n
                v4 = -1;\n
                return v4;\n
            }\n
            if (!*(&v2))\n
                goto LABEL_4057ec;\n
            if (*((a0 + v3)) == a1)\n
                goto LABEL_405821;\n
            v3 = *(&v2) + v3;\n
        }\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4216890:sub_40583a": null, "4216896:cgc_write_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"(\";\n
    v3 = 0;\n
    if (a1 > 2147483647)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!a1)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(v5, a0 + v3, a1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        a1 -= *(&v2);\n
        v3 = *(&v2) + v3;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4217085:sub_4058fd": null, "4217088:cgc_fdopen": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int file_pool;\n
\n
int cgc_fdopen(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[5];  // [bp-0x10]\n
    unsigned int v2[5];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"(\";\n
    if (!file_pool && cgc_pool_init(v0 + 4332, 20))\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = cgc_pool_alloc(v0 + 4332);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = a0;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4217278:sub_4059be": null, "4217280:cgc_fclose": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = \"(\";\n
    if (v1->field_8)\n
        cgc_deallocate(v1->field_8);\n
    return cgc_pool_free(v0 + 4332, v1);\n
}\n
", "4217373:sub_405a1d": null, "4217376:cgc_fflush": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fflush(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = \"(\";\n
    if (v3 && ((v3[1] ^ 255) & 1) != 1)\n
    {\n
        if (v3[2] && v3[3])\n
        {\n
            v1 = cgc_write_all(v3[0], v3[2] + v3[4], v3[3]);\n
            if (v1 < 0)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
            v3[3] = 0;\n
            v3[4] = 0;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4217589:sub_405af5": null, "4217600:cgc_fread": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v12, unsigned int a0, unsigned int a1[5])\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    void* v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v13[5];  // eax\n
    unsigned int v14[5];  // eax\n
    unsigned int v15[5];  // eax\n
\n
    v5 = \"(\";\n
    v10 = 0;\n
    v6 = v12;\n
    if (a0 <= 2147483647 && !a1[1])\n
    {\n
        if (a0)\n
        {\n
            if (a1[3] > 0)\n
            {\n
                if (a0 < a1[3])\n
                    v4 = a0;\n
                else\n
                    v4 = a1[3];\n
                v8 = v4;\n
                cgc_memcpy(v6, a1[2] + a1[4]);\n
                v13 = a1;\n
                v13[3] = v13[3] - v8;\n
                if (!a1[3])\n
                    v3 = 0;\n
                else\n
                    v3 = a1[4] + v8;\n
                a1[4] = v3;\n
                a0 -= v8;\n
                v6 = v8 + v6;\n
                v10 = v8 + v10;\n
                if (!a0)\n
                {\n
                    v11 = v10;\n
                    return v11;\n
                }\n
                a1[3] = 0;\n
                a1[4] = 0;\n
            }\n
            if (a0 >= 0x1000)\n
            {\n
                v7 = a0 & -0x1000;\n
                v9 = cgc_read_all(a1[0], v6, v7);\n
                if (v9 != v7)\n
                {\n
                    v11 = -1;\n
                    return v11;\n
                }\n
                a0 &= 4095;\n
                v6 = v7 + v6;\n
                v10 = v7 + v10;\n
                if (!a0)\n
                {\n
                    v11 = v10;\n
                    return v11;\n
                }\n
            }\n
            if (!a1[2] && cgc_allocate_buffer())\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            while (true)\n
            {\n
                if (a1[3] >= a0 && a1[3] >= a0)\n
                {\n
                    if (a0 >= a1[3])\n
                        v2 = a1[3];\n
                    else\n
                        v2 = a0;\n
                    v8 = v2;\n
                    cgc_memcpy(v6, a1[2] + a1[4]);\n
                    v15 = a1;\n
                    v15[3] = v15[3] - v8;\n
                    if (a1[3])\n
                        v1 = a1[4] + v8;\n
                    else\n
                        v1 = 0;\n
                    a1[4] = v1;\n
                    v10 = v8 + v10;\n
                    break;\n
                }\n
                v0 = &v9;\n
                if (cgc_receive(a1[0], a1[2] + a1[4] + a1[3], 0x1000 - a1[3]))\n
                {\n
LABEL_405d62:\n
                    v11 = -1;\n
                    return v11;\n
                }\n
                if (!v9)\n
                    goto LABEL_405d62;\n
                v14 = a1;\n
                v14[3] = v9 + v14[3];\n
            }\n
            v11 = v10;\n
            return v11;\n
        }\n
        else\n
        {\n
            v11 = v10;\n
            return v11;\n
        }\n
    }\n
    v11 = -1;\n
    return v11;\n
}\n
", "4218420:sub_405e34": null, "4218432:cgc_allocate_buffer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_buffer(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = \"(\";\n
    if (v3[2])\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v0 = &v3[2];\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v3[3] = 0;\n
    v3[4] = 0;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218574:sub_405ece": null, "4218576:cgc_fread_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread_until(char *v10, char a0, unsigned int a1, unsigned int a2[5])\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    char *v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v11[5];  // eax\n
    unsigned int v12[5];  // eax\n
    char *v13;  // eax\n
\n
    v3 = \"(\";\n
    v8 = 0;\n
    v4 = v10;\n
    if (a1 >= 1 && a1 <= 2147483647 && !a2[1])\n
    {\n
        if (!a2[2] && cgc_allocate_buffer(a2))\n
        {\n
            v9 = -1;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (v8 >= a1 - 1)\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (a2[2] && a2[3] > 0)\n
            {\n
                v5 = cgc_memchr(a2[2] + a2[4], a0);\n
                if (!v5)\n
                    v7 = a2[3];\n
                else\n
                    v7 = v5 - (a2[2] + a2[4]) + 1;\n
                if (a1 - 1 >= v7)\n
                    v2 = v7;\n
                else\n
                    v2 = a1 - 1;\n
                v7 = v2;\n
                cgc_memcpy(v4, a2[2] + a2[4]);\n
                v11 = a2;\n
                v11[3] = v11[3] - v7;\n
                if (!a2[3])\n
                    v1 = 0;\n
                else\n
                    v1 = a2[4] + v7;\n
                a2[4] = v1;\n
                a1 -= v7;\n
                v4 = &v4[v7];\n
                v8 = v7 + v8;\n
                if (a1 != 1 && !v5)\n
                    goto LABEL_4060c6;\n
                v13 = v4;\n
                v4 = v13 + 1;\n
                *(v13) = 0;\n
                v9 = v8;\n
                return v9;\n
            }\n
LABEL_4060c6:\n
            v0 = &v6;\n
            if (cgc_receive(a2[0], a2[2] + a2[4] + a2[3], 0x1000 - a2[3]))\n
            {\n
LABEL_406117:\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (!*(&v6))\n
                goto LABEL_406117;\n
            v12 = a2;\n
            v12[3] = *(&v6) + v12[3];\n
        }\n
    }\n
    v9 = -1;\n
    return v9;\n
}\n
", "4219205:sub_406145": null, "4219216:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v9, unsigned int a0, unsigned int a1[5])\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[5];  // eax\n
\n
    v2 = \"(\";\n
    v7 = 0;\n
    v3 = v9;\n
    if (a0 <= 2147483647 && a1[1] == 1)\n
    {\n
        if (a0)\n
        {\n
            if (a1[2])\n
            {\n
                if (a0 < 0x1000 - a1[4] - a1[3])\n
                    v1 = a0;\n
                else\n
                    v1 = 0x1000 - a1[4] - a1[3];\n
                v5 = v1;\n
                cgc_memcpy(a1[2] + a1[4] + a1[3], v3);\n
                v10 = a1;\n
                v10[3] = v5 + v10[3];\n
                a0 -= v5;\n
                v3 = v5 + v3;\n
                v7 = v5 + v7;\n
                if (!a0)\n
                {\n
                    v8 = v7;\n
                    return v8;\n
                }\n
                v0 = a1[3];\n
                if (v0 != cgc_write_all(a1[0], a1[2] + a1[4], a1[3]))\n
                {\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                a1[3] = 0;\n
                a1[4] = 0;\n
            }\n
            if (a0 >= 0x1000)\n
            {\n
                v4 = a0 & -0x1000;\n
                v6 = cgc_write_all(a1[0], v3, v4);\n
                if (v6 != v4)\n
                {\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                a0 &= 4095;\n
                v3 = v4 + v3;\n
                v7 = v4 + v7;\n
                if (!a0)\n
                {\n
                    v8 = v7;\n
                    return v8;\n
                }\n
            }\n
            if (!a1[2] && cgc_allocate_buffer(a1))\n
            {\n
                v8 = -1;\n
                return v8;\n
            }\n
            cgc_memcpy(a1[2], v3);\n
            a1[3] = a0;\n
            v7 = a0 + v7;\n
            v8 = v7;\n
            return v8;\n
        }\n
        else\n
        {\n
            v8 = v7;\n
            return v8;\n
        }\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4219845:sub_4063c5": null, "4219856:cgc_fgetc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgetc(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = \"(\";\n
    if (!v4[3])\n
        v2 = cgc_read_all(v4[0], &v3, 1);\n
    else\n
        v2 = cgc_fread(&v3, 1, v4);\n
    if (v2 < 0)\n
    {\n
        v0 = v2;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4220002:sub_406462": null, "4220016:cgc_fputc": "int cgc_fputc(unsigned int v0, unsigned int a0[5])\n
{\n
    return cgc_fwrite(&v0, 1, a0);\n
}\n
", "4220073:sub_4064a9": null, "4220080:cgc_vfprintf": "int cgc_vfprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
\n
    return cgc_printf_core(a0, cgc_file_printer, v1, a1, v2, *(&v0));\n
}\n
", "4220151:sub_4064f7": null, "4220160:cgc_printf_core": null, "4221144:sub_4068d8": null, "4221152:cgc_file_printer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_file_printer(char v2, unsigned int a0[5])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = \"(\";\n
    cgc_fputc(v2, a0);\n
    v4 = v2;\n
    if (v4 == 10)\n
    {\n
        v4 = cgc_fflush(a0);\n
        return v4;\n
    }\n
    return v2;\n
}\n
", "4221232:cgc_vprintf": "extern unsigned int stdout;\n
\n
int cgc_vprintf(unsigned int v0, unsigned int a0)\n
{\n
    return cgc_vfprintf(stdout, v0, a0);\n
}\n
", "4221291:sub_40696b": null, "4221296:cgc_vsnprintf": "int cgc_vsnprintf(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
\n
    v2 = v4;\n
    v0 = v3;\n
    v1 = a0;\n
    return cgc_printf_core(a1, cgc_string_printer, &v0, a2);\n
}\n
", "4221382:sub_4069c6": null, "4221392:cgc_string_printer": "int cgc_string_printer(char v1, struct struct_0 *a0[2])\n
{\n
    struct struct_0 *v0[2];  // [bp-0xc]\n
    struct struct_0 *v2[2];  // eax\n
    struct struct_0 *v3[2];  // ecx\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    struct struct_0 *v5[2];  // edx\n
\n
    v0[0] = &v2[0];\n
    v0[0] = &a0[0];\n
    v3 = v0;\n
    v4 = v3[1];\n
    v3[1] = &v4[1];\n
    if (v4)\n
    {\n
        v5 = v0;\n
        v4 = v5[0];\n
        v5[0] = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v4;\n
}\n
", "4221455:sub_406a0f": null, "4221456:cgc_vsprintf": "int cgc_vsprintf(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return cgc_vsnprintf(v0, -1, a0, a1);\n
}\n
", "4221523:sub_406a53": null, "4221536:cgc_fprintf": "int cgc_fprintf(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v0 = &v4;\n
    v1 = cgc_vfprintf(v3, a0, v0);\n
    return v1;\n
}\n
", "4221605:sub_406aa5": null, "4221616:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v0 = &v3;\n
    v1 = cgc_vprintf(v2, v0);\n
    return v1;\n
}\n
", "4221674:sub_406aea": null, "4221680:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vsnprintf(v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4221760:cgc_sprintf": "int cgc_sprintf(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v0 = &v4;\n
    v1 = cgc_vsprintf(v3, a0, v0);\n
    return v1;\n
}\n
", "4221829:sub_406b85": null, "4221840:cgc_srand": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* g_40f1c4;\n
extern unsigned int rand_seed;\n
\n
int cgc_srand(unsigned int v0)\n
{\n
    rand_seed = v0;\n
    g_40f1c4 = 0;\n
    return \"(\";\n
}\n
", "4221879:sub_406bb7": null, "4221888:cgc_rand": "extern unsigned int _GLOBAL_OFFSET_TABLE_[33];\n
extern unsigned int g_40f1c4;\n
extern unsigned int rand_seed;\n
\n
int cgc_rand()\n
{\n
    unsigned int v0[33];  // [bp-0x14]\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3[33];  // eax\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v0[0] = \"(\";\n
    v3 = v0;\n
    v1 = rand_seed * 1284865837;\n
    v4 = v1;\n
    tmp_38 = v4;\n
    v6 = (rand_seed * 1284865837 >> 32) + rand_seed * 1481765933 + g_40f1c4 * 1284865837 + 335903614 + (tmp_38 - 144211633 < tmp_38);\n
    v3[31] = v4 - 144211633;\n
    v3[32] = v6;\n
    return v0[32];\n
}\n
", "4221998:sub_406c2e": null, "4222000:cgc_get_flag_byte": "int cgc_get_flag_byte(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0x4347c000;\n
    return v0[4 * (v1 & 1023)];\n
}\n
", "4222039:sub_406c57": null, "4222048:cgc_get_flag_byte_unsafe": "int cgc_get_flag_byte_unsafe(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0x4347c000;\n
    return v0[v1 & 4095];\n
}\n
", "4222084:sub_406c84": null, "4222096:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4222182:sub_406ce6": null, "4222192:cgc_memmove": "int cgc_memmove(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 + 1;\n
        if (!v3)\n
            break;\n
        if (v2 >= a0)\n
        {\n
            *((v1 + a1)) = *((v0 + a1));\n
        }\n
        else\n
        {\n
            v4 = v0;\n
            v0 = v4 + 1;\n
            tmp_19 = *(v4);\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            *(v5) = tmp_19;\n
        }\n
    }\n
    return v2;\n
}\n
", "4222313:sub_406d69": null, "4222320:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v1;\n
}\n
", "4222390:sub_406db6": null, "4222400:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4222456:sub_406df8": null, "4222464:cgc_strnlen": "int cgc_strnlen(char *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
    char *v4;  // eax\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v3 = a0;\n
        a0 = v3 - 1;\n
        v0 = 0;\n
        if (v3)\n
        {\n
            v4 = v2;\n
            v2 = v4 + 1;\n
            v0 = *(v4);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4222569:sub_406e69": null, "4222576:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4222659:sub_406ec3": null, "4222672:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        v1[v2] = 0;\n
    }\n
    return v2;\n
}\n
", "4222827:sub_406f6b": null, "4222832:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"(\";\n
    v1 = v3;\n
    cgc_strcpy(v1 + cgc_strlen(v3), a0);\n
    v5 = v2;\n
    return v3;\n
}\n
", "4222909:sub_406fbd": null, "4222912:cgc_strncat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncat(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"(\";\n
    v2 = &v2[cgc_strlen(v2)];\n
    cgc_strncpy(v2, a0, a1);\n
    v2[a1] = 0;\n
    v4 = v1;\n
    return v2;\n
}\n
", "4223007:sub_40701f": null, "4223008:cgc_memcmp": "int cgc_memcmp(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v4 = a1;\n
        a1 = v4 - 1;\n
        if (!v4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*(v1) == *(v0))\n
        {\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v2 = *(v1) - *(v0);\n
            return v2;\n
        }\n
    }\n
}\n
", "4223135:sub_40709f": null, "4223136:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4223269:sub_407125": null, "4223280:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        v1 = 0;\n
        if (a1)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
            {\n
                v1 = 0;\n
                if (*(a0))\n
                    v1 = *(v2) == *(a0);\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4223439:sub_4071cf": null, "4223440:cgc_memchr": "int cgc_memchr(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4223541:sub_407235": null, "4223552:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4223634:sub_407292": null, "4223648:cgc_strpbrk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strpbrk(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"(\";\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (!cgc_strchr(a0, *(v3)))\n
        {\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v2 = v3;\n
            return v2;\n
        }\n
    }\n
}\n
", "4223769:sub_407319": null, "4223776:cgc_strrchr": "int cgc_strrchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &v1[1 + cgc_strlen(v1)];\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 -= 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4223894:sub_407396": null, "4223904:cgc_strstr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strstr(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"(\";\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (!*(v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strncmp(v4, a0, v1))\n
        {\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v2 = v4;\n
            return v2;\n
        }\n
    }\n
}\n
", "4224036:sub_407424": null, "4224048:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"(\";\n
    v1 = cgc_strpbrk(v4, a0);\n
    if (v1)\n
    {\n
        v2 = v1 - v4;\n
        return v2;\n
    }\n
    v2 = cgc_strlen(v4);\n
    return v2;\n
}\n
", "4224148:sub_407494": null, "4224160:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(char *v3, char *a0)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"(\";\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v3))\n
            v0 = cgc_strchr(a0, *(v3));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4224287:sub_40751f": null, "4224288:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[4340];\n
    struct struct_1 *field_10f4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v3, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ebx\n
    unsigned int v6;  // eax\n
    struct_0 *v7;  // ecx\n
    char *v8;  // eax\n
\n
    v0 = &\"(\";\n
    if (v3)\n
    {\n
LABEL_40757c:\n
        if (v0->field_10f4 && !(!cgc_strlen(v0->field_10f4)))\n
            goto LABEL_4075b2;\n
        v0->field_10f4 = v3;\n
LABEL_4075b2:\n
        for (; cgc_strchr(a0, v0->field_10f4->field_0); v4->field_10f4 = v4->field_10f4 + 1)\n
        {\n
            v4 = v0;\n
        }\n
        v5 = v0;\n
        v1 = &v5->field_10f4->field_0;\n
        v6 = cgc_strpbrk(v5->field_10f4, a0);\n
        v0->field_10f4 = v6;\n
        if (v6)\n
        {\n
            v7 = v0;\n
            v8 = v7->field_10f4;\n
            v7->field_10f4 = &v8[1];\n
            *(v8) = 0;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        if (v0->field_10f4 && !(!cgc_strlen(v0->field_10f4)))\n
            goto LABEL_40757c;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4224587:sub_40764b": null, "4224592:cgc_do_chance_of_survival": "typedef struct struct_0 {\n
    char padding_0[69872];\n
    unsigned int field_110f0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void g_40f008;\n
\n
int cgc_do_chance_of_survival()\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    char v5;  // [bp-0x4]\n
    unsigned int v7;  // ebx\n
\n
    v4 = v7;\n
    v0 = &\"(\";\n
    memcpy(&v2, &g_40f008, 32);\n
    if (!cgc_check_cookie(v0->field_110f0, &g_40f008))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    for (v1 = 0; v1 < 6; v1 += 1)\n
    {\n
        if (*((&v0->padding_0[4344] + v1 + 65538)) < 8)\n
            *(&(&v5)[40 + 4 * *((&v0->padding_0[4344] + v1 + 65538))])();\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4224798:sub_40771e": null, "4224800:cgc_empty": "int cgc_empty()\n
{\n
    return cgc_printf(\"Is this thing on?\\n
\");\n
}\n
", "4224837:sub_407745": null, "4224848:cgc_option_0": "int cgc_option_0()\n
{\n
    return cgc_printf(\"*CLICK*\\n
\");\n
}\n
", "4224885:sub_407775": null, "4224896:cgc_option_1": "int cgc_option_1()\n
{\n
    return cgc_printf(\"*CLICK*\\n
\");\n
}\n
", "4224933:sub_4077a5": null, "4224944:cgc_option_2": "int cgc_option_2()\n
{\n
    return cgc_printf(\"*CLICK*\\n
\");\n
}\n
", "4224981:sub_4077d5": null, "4224992:cgc_option_3": "int cgc_option_3()\n
{\n
    return cgc_printf(\"*NERVOUS LOOK*\\n
\");\n
}\n
", "4225029:sub_407805": null, "4225040:cgc_option_4": "int cgc_option_4()\n
{\n
    return cgc_printf(\"*CRAZY EYES*\\n
\");\n
}\n
", "4225077:sub_407835": null, "4225088:cgc_option_5": "int cgc_option_5()\n
{\n
    return cgc_printf(\"WHEW!\\n
\");\n
}\n
", "4225125:sub_407865": null, "4225136:cgc_doit": "typedef struct struct_2 {\n
    char padding_0[112];\n
    unsigned int field_70[5];\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_doit()\n
{\n
    struct_2 *v0;  // [bp-0x40]\n
    struct struct_1 **v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    char v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
\n
    v5 = v7;\n
    v0 = &\"(\";\n
    memset(&v4, 0, 40);\n
    cgc_printf(&v0[143].padding_0[35]);\n
    v8 = cgc_fread_until(&v4, 10, 40, v0->field_70);\n
    if (v8 == -1)\n
        return v8;\n
    v8 = cgc_strlen(&v4);\n
    if (!v8)\n
        return v8;\n
    v8 = cgc_strtou(&v4, 16, &v3);\n
    if (v8 != -1)\n
    {\n
        v8 = cgc_fread_until(&v4, 10, 40, v0->field_70);\n
        if (v8 == -1)\n
            return v8;\n
        v8 = cgc_strlen(&v4);\n
        if (!v8)\n
            return v8;\n
        v8 = cgc_strtou(&v4, 16, &v2);\n
        if (v8 != -1)\n
        {\n
            v1 = v3 | -0x10000000;\n
            v8 = v1();\n
            return v8;\n
        }\n
    }\n
}\n
", "4225488:cgc_do_chess": "extern char _GLOBAL_OFFSET_TABLE_[69876];\n
\n
int cgc_do_chess()\n
{\n
    unsigned int v0;  // [bp-0x78]\n
    unsigned int v1;  // [bp-0x74]\n
    unsigned int v2;  // [bp-0x70]\n
    unsigned int v3;  // [bp-0x6c]\n
    char v4[69876];  // [bp-0x60]\n
    void* v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    char v9[69876];  // ebx\n
\n
    v6 = v8;\n
    *(&v4[0]) = \"(\";\n
    cgc_printf(\"Welcome to chessmaster 0x8000, enter your board:\\n
\");\n
    if (cgc_read_board())\n
    {\n
        cgc_printf(&v4[16494]);\n
    }\n
    else\n
    {\n
        cgc_find_move();\n
        v9 = v4;\n
        v0 = v9[69872];\n
        v1 = v9[69873];\n
        v2 = v9[69874];\n
        v3 = v9[69875];\n
        cgc_printf(&v9[16479]);\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4225695:sub_407a9f": null, "4225696:cgc_read_board": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stdin[5];\n
\n
int cgc_read_board(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"(\";\n
    if (cgc_fread(v4, 72, cgc_stdin) != 72)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 72)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if ((v1 + 1 >> 31 CONCAT v1 + 1) /m 9 >> 32)\n
        {\n
            if (!cgc_strchr(v0 - 16449, v4[v1]))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
        }\n
        else\n
        {\n
            if (v4[v1] != 10)\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4225947:sub_407b9b": null, "4225952:cgc_find_move": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_move()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x8]\n
    char *v9;  // [bp+0x4]\n
    unsigned int v15;  // ebx\n
\n
    v7 = v15;\n
    v2 = \"(\";\n
    v5 = cgc_strpbrk(v9, \"prnbqk\");\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return;\n
    }\n
    v0 = &v3;\n
    cgc_get_coords(v9, v5, &v4);\n
    v1 = *(v5) - 98;\n
    if (v1 > 16)\n
    {\n
        v6 = -1;\n
        return;\n
    }\n
    goto *(((stack_base)[32] + (stack_base)[36] * 4 - 16612)) + (stack_base)[32];\n
}\n
", "4226321:sub_407d11": null, "4226336:cgc_get_coords": "int cgc_get_coords(unsigned int v0, unsigned int a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v1;  // eax\n
\n
    *(a1) = (a0 - v0 >> 31 CONCAT a0 - v0) /m 9 >> 32;\n
    v1 = a0 - v0;\n
    *(a2) = (v1 >> 31 CONCAT v1) /m 9;\n
    return a2;\n
}\n
", "4226397:sub_407d5d": null, "4226400:cgc_move_pawn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_move_pawn(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = \"(\";\n
    if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
    {\n
        v0 = a1;\n
        v5 = cgc_set_move(a0, a1, a0 - 1);\n
        return v5;\n
    }\n
    if (cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
    {\n
        v0 = a1;\n
        v5 = cgc_set_move(a0, a1, a0 + 1);\n
    }\n
    else if (cgc_get_piece(v3, a0) == 32)\n
    {\n
        v0 = a1 + 2;\n
        v5 = cgc_set_move(a0, a1, a0);\n
    }\n
    else\n
    {\n
        v5 = cgc_get_piece(v3, a0);\n
        if (v5 == 32)\n
        {\n
            v0 = a1 + 1;\n
            v5 = cgc_set_move(a0, a1, a0);\n
        }\n
    }\n
    return v5;\n
}\n
", "4226812:sub_407efc": null, "4226816:cgc_move_rook": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_move_rook(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = \"(\";\n
    if (!cgc_isupper(cgc_get_piece(v3, a0)) && cgc_get_piece(v3, a0) != 32)\n
    {\n
        if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
        {\n
LABEL_40800a:\n
            v0 = a1;\n
            v5 = cgc_set_move(a0, a1, a0 - 1);\n
        }\n
        else\n
        {\n
            if (cgc_get_piece(v3, a0 - 1) == 32)\n
                goto LABEL_40800a;\n
            if (cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
            {\n
LABEL_408096:\n
                v0 = a1;\n
                v5 = cgc_set_move(a0, a1, a0 + 1);\n
            }\n
            else\n
            {\n
                if (cgc_get_piece(v3, a0 + 1) == 32)\n
                    goto LABEL_408096;\n
                if (!cgc_isupper(cgc_get_piece(v3, a0)))\n
                {\n
                    v5 = cgc_get_piece(v3, a0);\n
                    if (!(v5 == 32))\n
                        goto LABEL_408148;\n
                }\n
                v0 = a1 - 1;\n
                v5 = cgc_set_move(a0, a1, a0);\n
LABEL_408148:\n
            }\n
        }\n
        return v5;\n
    }\n
    v0 = a1 + 1;\n
    v5 = cgc_set_move(a0, a1, a0);\n
    return v5;\n
}\n
", "4227422:sub_40815e": null, "4227424:cgc_move_knight": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_move_knight(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = \"(\";\n
    if (!cgc_isupper(cgc_get_piece(v3, a0 + 1)) && cgc_get_piece(v3, a0 + 1) != 32)\n
    {\n
        if (cgc_isupper(cgc_get_piece(v3, a0 + 2)))\n
        {\n
LABEL_408279:\n
            v0 = a1 + 1;\n
            v5 = cgc_set_move(a0, a1, a0 + 2);\n
        }\n
        else\n
        {\n
            if (cgc_get_piece(v3, a0 + 2) == 32)\n
                goto LABEL_408279;\n
            if (cgc_isupper(cgc_get_piece(v3, a0 + 2)))\n
            {\n
LABEL_40830e:\n
                v0 = a1 - 1;\n
                v5 = cgc_set_move(a0, a1, a0 + 2);\n
            }\n
            else\n
            {\n
                if (cgc_get_piece(v3, a0 + 2) == 32)\n
                    goto LABEL_40830e;\n
                if (cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
                {\n
LABEL_4083a3:\n
                    v0 = a1 - 2;\n
                    v5 = cgc_set_move(a0, a1, a0 + 1);\n
                }\n
                else\n
                {\n
                    if (cgc_get_piece(v3, a0 + 1) == 32)\n
                        goto LABEL_4083a3;\n
                    if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
                    {\n
LABEL_408438:\n
                        v0 = a1 + 2;\n
                        v5 = cgc_set_move(a0, a1, a0 - 1);\n
                    }\n
                    else\n
                    {\n
                        if (cgc_get_piece(v3, a0 - 1) == 32)\n
                            goto LABEL_408438;\n
                        if (cgc_isupper(cgc_get_piece(v3, a0 - 2)))\n
                        {\n
LABEL_4084cd:\n
                            v0 = a1 + 1;\n
                            v5 = cgc_set_move(a0, a1, a0 - 2);\n
                        }\n
                        else\n
                        {\n
                            if (cgc_get_piece(v3, a0 - 2) == 32)\n
                                goto LABEL_4084cd;\n
                            if (cgc_isupper(cgc_get_piece(v3, a0 - 2)))\n
                            {\n
LABEL_408562:\n
                                v0 = a1 - 1;\n
                                v5 = cgc_set_move(a0, a1, a0 - 2);\n
                            }\n
                            else\n
                            {\n
                                if (cgc_get_piece(v3, a0 - 2) == 32)\n
                                    goto LABEL_408562;\n
                                if (!cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
                                {\n
                                    v5 = cgc_get_piece(v3, a0 - 1);\n
                                    if (!(v5 == 32))\n
                                        goto LABEL_408620;\n
                                }\n
                                v0 = a1 - 2;\n
                                v5 = cgc_set_move(a0, a1, a0 - 1);\n
LABEL_408620:\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        return v5;\n
    }\n
    v0 = a1 + 2;\n
    v5 = cgc_set_move(a0, a1, a0 + 1);\n
    return v5;\n
}\n
", "4228682:sub_40864a": null, "4228688:cgc_move_bishop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_move_bishop(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = \"(\";\n
    if (!cgc_isupper(cgc_get_piece(v3, a0 - 1)) && cgc_get_piece(v3, a0 - 1) != 32)\n
    {\n
        if (cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
        {\n
LABEL_408769:\n
            v0 = a1 + 1;\n
            v5 = cgc_set_move(a0, a1, a0 + 1);\n
        }\n
        else\n
        {\n
            if (cgc_get_piece(v3, a0 + 1) == 32)\n
                goto LABEL_408769;\n
            if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
            {\n
LABEL_4087fe:\n
                v0 = a1 - 1;\n
                v5 = cgc_set_move(a0, a1, a0 - 1);\n
            }\n
            else\n
            {\n
                if (cgc_get_piece(v3, a0 - 1) == 32)\n
                    goto LABEL_4087fe;\n
                if (!cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
                {\n
                    v5 = cgc_get_piece(v3, a0 + 1);\n
                    if (!(v5 == 32))\n
                        goto LABEL_4088bc;\n
                }\n
                v0 = a1 - 1;\n
                v5 = cgc_set_move(a0, a1, a0 + 1);\n
LABEL_4088bc:\n
            }\n
        }\n
        return v5;\n
    }\n
    v0 = a1 + 1;\n
    v5 = cgc_set_move(a0, a1, a0 - 1);\n
    return v5;\n
}\n
", "4229330:sub_4088d2": null, "4229344:cgc_move_queen": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_move_queen(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = \"(\";\n
    if (!cgc_isupper(cgc_get_piece(v3, a0)) && cgc_get_piece(v3, a0) != 32)\n
    {\n
        if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
        {\n
LABEL_4089ea:\n
            v0 = a1;\n
            v5 = cgc_set_move(a0, a1, a0 - 1);\n
        }\n
        else\n
        {\n
            if (cgc_get_piece(v3, a0 - 1) == 32)\n
                goto LABEL_4089ea;\n
            if (cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
            {\n
LABEL_408a76:\n
                v0 = a1;\n
                v5 = cgc_set_move(a0, a1, a0 + 1);\n
            }\n
            else\n
            {\n
                if (cgc_get_piece(v3, a0 + 1) == 32)\n
                    goto LABEL_408a76;\n
                if (cgc_isupper(cgc_get_piece(v3, a0)))\n
                {\n
LABEL_408b02:\n
                    v0 = a1 - 1;\n
                    v5 = cgc_set_move(a0, a1, a0);\n
                }\n
                else\n
                {\n
                    if (cgc_get_piece(v3, a0) == 32)\n
                        goto LABEL_408b02;\n
                    if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
                    {\n
LABEL_408b94:\n
                        v0 = a1 + 1;\n
                        v5 = cgc_set_move(a0, a1, a0 - 1);\n
                    }\n
                    else\n
                    {\n
                        if (cgc_get_piece(v3, a0 - 1) == 32)\n
                            goto LABEL_408b94;\n
                        if (cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
                        {\n
LABEL_408c29:\n
                            v0 = a1 + 1;\n
                            v5 = cgc_set_move(a0, a1, a0 + 1);\n
                        }\n
                        else\n
                        {\n
                            if (cgc_get_piece(v3, a0 + 1) == 32)\n
                                goto LABEL_408c29;\n
                            if (cgc_isupper(cgc_get_piece(v3, a0 - 1)))\n
                            {\n
LABEL_408cbe:\n
                                v0 = a1 - 1;\n
                                v5 = cgc_set_move(a0, a1, a0 - 1);\n
                            }\n
                            else\n
                            {\n
                                if (cgc_get_piece(v3, a0 - 1) == 32)\n
                                    goto LABEL_408cbe;\n
                                if (!cgc_isupper(cgc_get_piece(v3, a0 + 1)))\n
                                {\n
                                    v5 = cgc_get_piece(v3, a0 + 1);\n
                                    if (!(v5 == 32))\n
                                        goto LABEL_408d7c;\n
                                }\n
                                v0 = a1 - 1;\n
                                v5 = cgc_set_move(a0, a1, a0 + 1);\n
LABEL_408d7c:\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        return v5;\n
    }\n
    v0 = a1 + 1;\n
    v5 = cgc_set_move(a0, a1, a0);\n
    return v5;\n
}\n
", "4230566:sub_408da6": null, "4230576:cgc_move_king": "int cgc_move_king(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return cgc_move_queen(v0, a0, a1);\n
}\n
", "4230635:sub_408deb": null, "4230640:cgc_get_piece": "int cgc_get_piece(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 0 && a1 >= 0 && a0 < 8 && a1 < 8)\n
    {\n
        v1 = v2[9 * a1 + a0];\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4230727:sub_408e47": null, "4230736:cgc_set_move": "extern char cgc_game_state;\n
extern char g_420234;\n
extern char g_420235;\n
extern char g_420236;\n
extern char g_420237;\n
\n
int cgc_set_move(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    g_420234 = v0 + 97;\n
    g_420235 = a0 + 49;\n
    g_420236 = a1 + 97;\n
    g_420237 = a2 + 49;\n
    return &cgc_game_state;\n
}\n
", "4230843:sub_408ebb": null, "4230848:cgc_do_gallon_challenge": "typedef struct struct_1 {\n
    char padding_0[112];\n
    unsigned int field_70[5];\n
    char padding_74[69764];\n
    unsigned short field_110f8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_gallon_challenge()\n
{\n
    struct_1 *v0;  // [bp-0x40]\n
    unsigned int *v1;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &\"(\";\n
    memset(&v3, 0, 40);\n
    if (!v0->field_110f8)\n
        v0->field_110f8 = 100;\n
    cgc_printf(&v0->padding_74[16318]);\n
    if (cgc_fread_until(&v3, 10, 40, v0->field_70) == -1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (cgc_strlen(&v3) && cgc_strtou(&v3, 16, &v2) != -1)\n
    {\n
        for (v1 = 0; v1 < v0->field_110f8; v1 += 1)\n
        {\n
            if (v1 < 100)\n
                cgc_printf(&v0->padding_74[16296]);\n
            *(&v0->padding_74[4228 + (v1 & -0x4)]) = v2;\n
        }\n
        cgc_printf(&v0->padding_74[6295]);\n
        if (cgc_check_cookie())\n
            cgc_printf(&v0->padding_74[16274]);\n
        else\n
            cgc_printf(&v0->padding_74[16289]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4231307:sub_40908b": null, "4231312:cgc_init_cookie": "typedef struct struct_0 {\n
    char padding_0[69872];\n
    unsigned int field_110f0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_cookie()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
\n
    v1 = &\"(\";\n
    v3 = 0;\n
    for (v2 = 0; v2 < 4; v2 += 1)\n
    {\n
        v4 = cgc_get_flag_byte(v2 + 1021);\n
        if (cgc_memchr(&v1->padding_0[16383], v4, 2))\n
            v0 = 1;\n
        else\n
            v0 = v4;\n
        v3 = v0 << ((3 - v2) * 8 & 31) | v3;\n
    }\n
    v1->field_110f0 = v3;\n
    return v1;\n
}\n
", "4231501:sub_40914d": null, "4231504:cgc_check_cookie": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_cookie(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
\n
    v1 = \"(\";\n
    v3 = 0;\n
    for (v2 = 0; v2 < 4; v2 += 1)\n
    {\n
        v4 = cgc_get_flag_byte(v2 + 1021);\n
        if (!cgc_memchr(v1 - 16383, v4, 2))\n
            v0 = v4;\n
        else\n
            v0 = 1;\n
        v3 = v0 << ((3 - v2) * 8 & 31) | v3;\n
    }\n
    return v5 == v3;\n
}\n
", "4231698:sub_409212": null, "4231712:cgc_do_hugman": "typedef struct struct_2 {\n
    unsigned int field_-3ffc;\n
    unsigned short field_-3ff8;\n
    char field_-3ff6;\n
    char padding_-3ff5[16485];\n
    unsigned int field_70[4];\n
    char padding_74[4112];\n
    unsigned int field_1084;\n
    char padding_1088[65640];\n
    unsigned int field_110f0;\n
    unsigned int field_110f4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_-3ffc;\n
    unsigned short field_-3ff8;\n
    char field_-3ff6;\n
    char padding_-3ff5[16485];\n
    unsigned int field_70;\n
    char padding_74[4112];\n
    char *field_1084;\n
    char padding_1088[65640];\n
    unsigned int field_110f0;\n
    unsigned int field_110f4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-3ffc;\n
    unsigned short field_-3ff8;\n
    char field_-3ff6;\n
    char padding_-3ff5[16485];\n
    unsigned int field_70;\n
    char padding_74[4112];\n
    unsigned int field_1084;\n
    char padding_1088[65640];\n
    unsigned int field_110f0;\n
    unsigned int field_110f4;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_420238;\n
\n
int cgc_do_hugman()\n
{\n
    unsigned int v0;  // [bp-0x244]\n
    struct_2 *v1;  // [bp-0x240]\n
    char v2;  // [bp-0x23c]\n
    char v3;  // [bp-0x238]\n
    char v4;  // [bp-0x1fc]\n
    char v5;  // [bp-0x1f8]\n
    unsigned int v6;  // [bp-0x1be]\n
    unsigned short v7;  // [bp-0x1ba]\n
    char v8;  // [bp-0x1b8]\n
    char v9;  // [bp-0x1b7]\n
    char v10;  // [bp-0x182]\n
    char v11;  // [bp-0x2d]\n
    void* v12;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x24]\n
    struct_0 *v15;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x1c]\n
    struct_0 *v17;  // [bp-0x18]\n
    unsigned int v18;  // [bp-0x14]\n
    unsigned int v19;  // [bp-0x10]\n
    unsigned int v20;  // [bp-0xc]\n
    unsigned int v21;  // [bp-0x8]\n
    unsigned int v23;  // ebx\n
    struct_3 *v24;  // ebx\n
    struct_1 *v25;  // ebx\n
    struct_1 *v26;  // eax\n
    struct_1 *v27;  // eax\n
\n
    v21 = v23;\n
    v1 = &\"(\";\n
    v19 = g_420238 & 3;\n
    v0 = v19 * 0x100;\n
    v24 = v1;\n
    v18 = v0 + cgc_get_flag_byte(g_420238);\n
    v17 = *(&v24->padding_-3ff5[125 + 4 * v18]);\n
    cgc_memcpy(&v10, *(&v24->padding_-3ff5[4221]), 341);\n
    memset(&v9, 0, 53);\n
    v25 = v1;\n
    v6 = *(&v25->padding_-3ff5[16373]);\n
    v7 = *(&v25->padding_-3ff5[16369]);\n
    v8 = v25->padding_-3ff5[16367];\n
    memcpy(&v4, &v25->padding_-3ff5[16365], 56);\n
    memcpy(&v2, &v1->padding_-3ff5[16309], 64);\n
    if (!cgc_check_cookie(*(&v1->padding_1088[49260])))\n
    {\n
        v20 = -1;\n
        return v20;\n
    }\n
    v16 = 0;\n
    while (v16 < 7)\n
    {\n
        v13 = 0;\n
        v12 = 1;\n
        for (v15 = 0; v15 < 11; v15 += 1)\n
        {\n
            cgc_printf(&v1->padding_-3ff5[15903]);\n
        }\n
        cgc_printf(&v1->padding_-3ff5[15900]);\n
        do\n
        {\n
            v14 = cgc_fgetc(*(&v1->padding_-3ff5[105]));\n
            if (v14 < 0)\n
            {\n
                v20 = -1;\n
                return v20;\n
            }\n
            v11 = v14;\n
        } while (v11 == 10);\n
        for (v15 = 0; v15 < 8; v15 += 1)\n
        {\n
            if (v17[v15].field_0 == v11)\n
            {\n
                (&v10)[31 * *(&(&v2)[8 * v15]) + *(&(&v3)[8 * v15])] = v11;\n
                v13 = 1;\n
            }\n
            if ((&v10)[31 * *(&(&v2)[8 * v15]) + *(&(&v3)[8 * v15])] == 95)\n
                v12 = 0;\n
        }\n
        if (v12)\n
            break;\n
        if (!v13)\n
        {\n
            (&v10)[31 * *(&(&v4)[8 * v16]) + *(&(&v5)[8 * v16])] = *(&v6 + v16);\n
            v16 += 1;\n
            if (!cgc_strchr(&v9, v11))\n
                cgc_strncat(&v9, &v11, 1);\n
        }\n
    }\n
    for (v15 = 0; v15 < 11; v15 += 1)\n
    {\n
        cgc_printf(&v1->padding_-3ff5[15903]);\n
    }\n
    v26 = v1;\n
    *(&v26->padding_1088[49264]) = *(&v26->padding_1088[49264]) + 1;\n
    if (*(&v26->padding_1088[49264]) != 6 && !(*(&v1->padding_1088[49264]) == -1))\n
        goto LABEL_409641;\n
    v27 = v1;\n
    *(&v27->padding_1088[49264]) = *(&v27->padding_1088[49264]) + 1;\n
LABEL_409641:\n
    if (!v12)\n
        cgc_printf(&v1->padding_-3ff5[15867]);\n
    else\n
        cgc_printf(&v1->padding_-3ff5[15885]);\n
    v20 = 0;\n
    return v20;\n
}\n
", "4232850:sub_409692": null, "4232864:cgc_do_lesson_in_futility": "typedef struct struct_0 {\n
    char padding_0[69868];\n
    unsigned int field_110ec;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_420234;\n
\n
int cgc_do_lesson_in_futility()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &\"(\";\n
    if (!cgc_check_cookie(g_420234))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v0->field_110ec)\n
        v0->field_110ec = 1;\n
    if (v0->field_110ec == 1)\n
    {\n
        cgc_defcon_1();\n
    }\n
    else if (v0->field_110ec == 2)\n
    {\n
        cgc_defcon_2();\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4233077:sub_409775": null, "4233088:cgc_defcon_1": "int cgc_defcon_1()\n
{\n
    return cgc_printf(\"A strange game. The only winning move is not to play.\\n
\");\n
}\n
", "4233125:sub_4097a5": null, "4233136:cgc_defcon_2": "typedef struct struct_1 {\n
    char padding_0[112];\n
    unsigned int field_70[5];\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_defcon_2()\n
{\n
    struct_1 *v0;  // [bp-0x40]\n
    struct struct_0 **v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    char v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
\n
    v5 = v7;\n
    v0 = &\"(\";\n
    memset(&v4, 0, 40);\n
    cgc_printf(&v0[56].padding_0[82]);\n
    v8 = cgc_fread_until(&v4, 10, 40, v0->field_70);\n
    if (v8 == -1)\n
        return v8;\n
    v8 = cgc_strlen(&v4);\n
    if (!v8)\n
        return v8;\n
    v8 = cgc_strtou(&v4, 16, &v3);\n
    if (v8 != -1)\n
    {\n
        cgc_printf(&v0[56].padding_0[58]);\n
        v8 = cgc_fread_until(&v4, 10, 40, v0->field_70);\n
        if (v8 == -1)\n
            return v8;\n
        v8 = cgc_strlen(&v4);\n
        if (!v8)\n
            return v8;\n
        v8 = cgc_strtou(&v4, 16, &v2);\n
        if (v8 != -1)\n
        {\n
            v1 = v3 | -0x10000000;\n
            v8 = v1();\n
            return v8;\n
        }\n
    }\n
}\n
", "4233505:sub_409921": null, "4233520:cgc_do_safari_zone": "typedef struct struct_2 {\n
    char padding_0[112];\n
    unsigned int field_70[5];\n
    char padding_74[69756];\n
    unsigned int field_110f0;\n
    unsigned int field_110f4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
    char field_5;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[17470];\n
\n
int cgc_do_safari_zone()\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x58]\n
    struct_2 *v2;  // [bp-0x54]\n
    char v3;  // [bp-0x4e]\n
    char v4;  // [bp-0x4d]\n
    struct_1 *v5;  // [bp-0x4c]\n
    unsigned int v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x44]\n
    unsigned int v8;  // [bp-0x40]\n
    void* v9;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x38]\n
    char v11;  // [bp-0x34]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16[17470];  // ebx\n
    unsigned int v17[17470];  // ebx\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // eax\n
\n
    v13 = v15;\n
    v2 = &\"(\";\n
    memset(&v11, 0, 40);\n
    v16 = v2;\n
    v7 = 8;\n
    v6 = v16[17469] + 1;\n
    cgc_printf(&v16[1632] + 1);\n
    if (!cgc_check_cookie(v2->field_110f0))\n
    {\n
        v12 = -1;\n
        return v12;\n
    }\n
    else if (v6 <= v7 - 1)\n
    {\n
        v5 = &v2->padding_74[4116 + 12 * v6];\n
        v17 = v2;\n
        v17[17469] = (0 CONCAT cgc_get_flag_byte(v6)) /m (v7 - 2) >> 32;\n
        v4 = v5->field_4;\n
        v3 = v5->field_5;\n
        v9 = 0;\n
        cgc_printf(&v17[1619] + 3);\n
        while (true)\n
        {\n
            cgc_printf(&v2->padding_74[6338]);\n
            if (cgc_fread_until(&v11, 10, 40, v2->field_70) == -1)\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            if (!cgc_strlen(&v11))\n
            {\n
LABEL_409aef:\n
                v12 = -1;\n
                return v12;\n
            }\n
            if (cgc_strtou(&v11, 16, &v10) == -1)\n
                goto LABEL_409aef;\n
            if (v9 > 10)\n
            {\n
LABEL_409b34:\n
                cgc_printf(&v2->padding_74[6293]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (v9 <= 0)\n
            {\n
LABEL_409b5a:\n
                v9 += 1;\n
                if (v10 == 1)\n
                {\n
                    v0 = v4;\n
                    v18 = v9;\n
                    v9 = v18 + 1;\n
                    if (v0 < cgc_get_flag_byte(v18))\n
                    {\n
                        cgc_printf(&v2->padding_74[6277]);\n
                    }\n
                    else\n
                    {\n
                        cgc_printf(&v2->padding_74[6237]);\n
                        do\n
                        {\n
                            if (cgc_fread_until(&v11, 10, 40, v2->field_70) != -1 && cgc_strlen(&v11) && cgc_strtou(&v11, 16, &v8) != -1)\n
                                break;\n
                        } while (true);\n
                        v5->field_8(v6);\n
                        v12 = 0;\n
                        return v12;\n
                    }\n
                }\n
                else if (v10 == 2)\n
                {\n
                    v4 *= 2;\n
                    v3 *= 2;\n
                }\n
                else if (v10 == 3)\n
                {\n
                    v19 = v4;\n
                    v4 = (v19 >> 31 CONCAT v19) /m 2;\n
                    v20 = v3;\n
                    v3 = (v20 >> 31 CONCAT v20) /m 2;\n
                }\n
                else if (v10 == 4)\n
                {\n
                    cgc_printf(&v2->padding_74[6255]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                v1 = v3;\n
                if (v1 < cgc_get_flag_byte(v9))\n
                    goto LABEL_409b5a;\n
                goto LABEL_409b34;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(&v2->padding_74[6384]);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4234518:sub_409d16": null, "4234528:cgc_set_nickname": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_nickname(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = \"(\";\n
    memset(&v2, 0, 5);\n
    if (v4 > 6)\n
    {\n
        v6 = cgc_printf(v0 - 6208);\n
        return v6;\n
    }\n
    cgc_memcpy(&v2, &a0, 4);\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 6)\n
        {\n
            v6 = cgc_printf(v0 - 6172);\n
            return v6;\n
        }\n
        else if (*(69882 + v0 + v1))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            cgc_printf(v0 - 6198);\n
            v6 = v0 + 4344;\n
            *((v6 + v1 + 65538)) = v4;\n
            return v0 + 4344;\n
        }\n
    }\n
}\n
", "4234794:sub_409e2a": null, "4234800:main": "typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned int field_70[5];\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    char v2;  // [bp-0x34]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &\"(\";\n
    v3 = 0;\n
    memset(&v2, 0, 40);\n
    cgc_init_cookie();\n
    while (true)\n
    {\n
        cgc_printf(&v0[52].padding_0[100]);\n
        if (cgc_fread_until(&v2, 10, 40, v0->field_70) == -1)\n
            return 0;\n
        if (!cgc_strlen(&v2))\n
        {\n
LABEL_409f04:\n
        }\n
        else\n
        {\n
            if (cgc_strtou(&v2, 10, &v1) == -1)\n
                goto LABEL_409f04;\n
            if (v1 != 1)\n
            {\n
                if (v1 != 2)\n
                {\n
                    if (v1 != 3)\n
                    {\n
                        if (v1 != 4)\n
                        {\n
                            if (v1 != 5)\n
                            {\n
                                if (v1 != 6)\n
                                {\n
                                    if (v1 == 7)\n
                                    {\n
                                        cgc_printf(&v0[51].padding_0[75]);\n
                                        if (cgc_do_lesson_in_futility())\n
                                            return 0;\n
                                    }\n
                                    else if (v1 == 8)\n
                                    {\n
                                        return 0;\n
                                    }\n
                                }\n
                                else\n
                                {\n
                                    if (cgc_do_chance_of_survival())\n
                                        return 0;\n
                                }\n
                            }\n
                            else\n
                            {\n
                                if (cgc_do_safari_zone())\n
                                    return 0;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            if (cgc_do_gallon_challenge())\n
                                return 0;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        if (cgc_do_sudoku())\n
                            return 0;\n
                    }\n
                }\n
                else\n
                {\n
                    if (cgc_do_chess())\n
                        return 0;\n
                }\n
            }\n
            else\n
            {\n
                if (cgc_do_hugman())\n
                    return 0;\n
            }\n
        }\n
    }\n
}\n
", "4235356:sub_40a05c": null, "4235360:cgc_do_sudoku": "typedef struct struct_0 {\n
    char padding_0[69880];\n
    unsigned int field_110f8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_sudoku()\n
{\n
    struct_1 *v0;  // [bp-0x78]\n
    struct_0 *v1;  // [bp-0x6c]\n
    char v2;  // [bp-0x66]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &\"(\";\n
    cgc_printf(\"Let me help you cheat at sudoku, enter your board n00b:\\n
\");\n
    if (read_board())\n
    {\n
        cgc_printf(&v1->padding_0[16494]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1->field_110f8 = cgc_validate_board();\n
    v0 = &v2;\n
    if (!cgc_solve_board(&v2))\n
    {\n
        v0 = &v2;\n
        cgc_printf(&v1->padding_0[5891]);\n
    }\n
    else\n
    {\n
        cgc_printf(&v1->padding_0[6208]);\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4235568:read_board": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stdin[5];\n
\n
int read_board(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"(\";\n
    if (cgc_fread(v4, 90, cgc_stdin) != 90)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < 90)\n
        {\n
            if ((v1 + 1 >> 31 CONCAT v1 + 1) /m 10 >> 32)\n
            {\n
                if (!cgc_strchr(v0 - 5879, v4[v1]))\n
                {\n
                    v2 = -1;\n
                    return v2;\n
                }\n
            }\n
            else\n
            {\n
                if (v4[v1] != 10)\n
                {\n
                    v2 = -1;\n
                    return v2;\n
                }\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4235819:sub_40a22b": null, "4235824:cgc_validate_board": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_validate_board(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    struct_0 *v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v2 = \"(\";\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= 9)\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                if (v4 >= 9)\n
                {\n
                    for (v4 = 0; v4 < 9; v4 += 3)\n
                    {\n
                        for (v3 = 0; v3 < 9; v3 += 3)\n
                        {\n
                            v0 = v4;\n
                            v1 = v3;\n
                            cgc_get_super_square(v8, &v5, v0);\n
                            v6 = cgc_count_duplicates(&v5, &v5, v0);\n
                            if (v6)\n
                            {\n
                                v7 = -(v6);\n
                                return v7;\n
                            }\n
                        }\n
                    }\n
                    v7 = 0;\n
                    return v7;\n
                }\n
                for (v3 = 0; v3 < 9; v3 += 1)\n
                {\n
                    (&v5)[v3] = cgc_get_square(v8, v4);\n
                }\n
                v6 = cgc_count_duplicates();\n
                if (v6)\n
                {\n
                    v7 = -(v6);\n
                    return v7;\n
                }\n
                v4 += 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v3 = 0; v3 < 9; v3 += 1)\n
            {\n
                (&v5)[v3] = cgc_get_square(v8, v3);\n
            }\n
            v6 = cgc_count_duplicates();\n
            if (v6)\n
            {\n
                v7 = -(v6) + 1;\n
                return v7;\n
            }\n
            v4 += 1;\n
        }\n
    }\n
}\n
", "4236302:sub_40a40e": null, "4236304:cgc_solve_board": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_solve_board(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"(\";\n
    v1 = cgc_strchr(a0, 32);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 49;\n
    while (true)\n
    {\n
        if (v2 > 57)\n
        {\n
            *(v1) = 32;\n
            v3 = -1;\n
            return v3;\n
        }\n
        *(v1) = v2;\n
        if (!cgc_validate_board(v5) && !cgc_solve_board(v5, v1 + 1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4236513:sub_40a4e1": null, "4236528:cgc_get_square": "int cgc_get_square(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 0 && a1 >= 0 && a0 < 9 && a1 < 9)\n
    {\n
        v1 = v2[10 * a1 + a0];\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4236615:sub_40a547": null, "4236624:cgc_count_duplicates": "int cgc_count_duplicates(unsigned int v4)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    for (v2 = 49; v2 <= 57; v2 += 1)\n
    {\n
        v0 = 0;\n
        for (v1 = 0; v1 < 9; v1 += 1)\n
        {\n
            if (*((v4 + v1)) == v2)\n
                v0 += 1;\n
        }\n
        if (v0 > 1)\n
            v3 = v0 + v3;\n
    }\n
    return v3;\n
}\n
", "4236774:sub_40a5e6": null, "4236784:cgc_get_super_square": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_super_square(char *v3, char *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v0 = \"(\";\n
    v4 = v3;\n
    for (v2 = 0; v2 < 3; v2 = v4)\n
    {\n
        for (v1 = 0; v1 < 3; v1 += 1)\n
        {\n
            *((a0 + v1 * 3 + v2)) = cgc_get_square(v3, a1 + v2, a2 + v1);\n
        }\n
        v4 = v2 + 1;\n
    }\n
    return v4;\n
}\n
", "4236940:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:memset": null, "5242904:cgc_deallocate": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}