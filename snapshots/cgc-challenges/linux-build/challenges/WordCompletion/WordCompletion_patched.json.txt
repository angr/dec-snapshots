{"4198400:_init": "extern struct_0 *g_403a60;\n
\n
int _init()\n
{\n
    if (g_403a60)\n
    {\n
        g_403a60();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198528:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 10615;\n
    v6 = v5 + 79;\n
    v7 = v5 + 79;\n
    if (v7 == v6)\n
        return v5 + 79;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 10551;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 79;\n
    v9 = (v6 + 79 - (v6 + 79) >> 31) + (79 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_403a5c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_403a5c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v2[v0]; v0 += 1);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4198977:sub_401241": null, "4198992:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"P9\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    do\n
    {\n
        v0 = &v4;\n
        v2 = cgc_transmit(1, v6, a0 - v3);\n
        if (!v2 && !(!v4))\n
            continue;\n
        cgc__terminate();\n
        v3 = v4 + v3;\n
    } while (v3 < a0);\n
    v5 = a0;\n
    return v5;\n
}\n
", "4199181:sub_40130d": null, "4199184:cgc_transmit_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_str(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"P9\";\n
    v1 = cgc_strlen(v3);\n
    v5 = v2;\n
    return cgc_transmit_all(v3, v1);\n
}\n
", "4199250:sub_401352": null, "4199264:cgc_receive_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_all(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"P9\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    do\n
    {\n
        v0 = &v4;\n
        v2 = cgc_receive(0, v6, a0 - v3);\n
        if (!v2 && !(!v4))\n
            continue;\n
        cgc__terminate();\n
        v3 = v4 + v3;\n
    } while (v3 < a0);\n
    v5 = a0;\n
    return v5;\n
}\n
", "4199455:sub_40141f": null, "4199456:cgc_readline": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readline(char *v8, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = \"P9\";\n
    if (!v8)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    do\n
    {\n
        v0 = &v3;\n
        v5 = cgc_receive(0, &v4, 1);\n
        if (!v5 && !(!v3))\n
            continue;\n
        cgc__terminate();\n
        v8[v6] = v4;\n
        v6 += 1;\n
        v1 = 0;\n
        if (v4 != 10)\n
            v1 = v6 < a0;\n
    } while ((v1 & 1));\n
    v7 = v6;\n
    return v7;\n
}\n
", "4199685:sub_401505": null, "4199696:cgc_rotN": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rotN(char v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0 = \"P9\";\n
    v1 = 0;\n
    a0 = (0 CONCAT a0) /m 62 >> 32;\n
    if (v3 >= 97 && v3 <= 122)\n
    {\n
        v1 = v3 - 97;\n
        goto LABEL_4015cd;\n
    }\n
    if (v3 >= 65 && v3 <= 90)\n
    {\n
        v1 = v3 + -39;\n
        goto LABEL_4015cd;\n
    }\n
    if (v3 >= 48 && v3 <= 57)\n
    {\n
        v1 = v3 + 4;\n
LABEL_4015cd:\n
        v1 = a0 + v1;\n
        v1 = (0 CONCAT v1) /m 62 >> 32;\n
        v2 = *((v0 + v1 + 248));\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4199944:sub_401608": null, "4199952:cgc_strrotcpy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strrotcpy(unsigned int v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"P9\";\n
    if (a0 && v3)\n
    {\n
        v1 = 0;\n
        for (v1 = 0; a0[v1]; v1 += 1)\n
        {\n
            *((v3 + v1)) = cgc_rotN(a0[v1], a1);\n
        }\n
        *((v3 + v1)) = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4200128:cgc_init": "extern unsigned int _GLOBAL_OFFSET_TABLE_[82];\n
\n
int cgc_init(unsigned int v9)\n
{\n
    unsigned int v0[82];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11[82];  // ebx\n
\n
    v8 = v10;\n
    v0[0] = \"P9\";\n
    v6 = 0;\n
    v5 = 51;\n
    v6 = cgc_allocate(204, 0);\n
    if (v6)\n
    {\n
        v7 = v6;\n
        return v7;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    for (v3 = 0; v3 < v5; v3 += 1)\n
    {\n
        v4 = cgc_strlen(v0[11 + v3]) + v4;\n
        v4 += 1;\n
    }\n
    v6 = cgc_allocate(v4, 0);\n
    if (v6)\n
    {\n
        v7 = v6;\n
        return v7;\n
    }\n
    v2 = 0;\n
    v1 = v0[81];\n
    for (v3 = 0; v3 < v5; v3 += 1)\n
    {\n
        v11 = v0;\n
        *((v11[80] + v3 * 4)) = v1;\n
        v1 = cgc_strrotcpy(v1, *((44 + &v11[0] + 0x4 * v3)), v9) + v1;\n
        v1 += 1;\n
    }\n
    for (; v3 < 0x400; v3 += 1)\n
    {\n
        *((v0[80] + v3 * 4)) = 0;\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4200548:sub_401864": null, "4200560:cgc_toInt": "int cgc_toInt(char v2, char a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (v2 >= 48 && v2 <= 57)\n
    {\n
        v0 = v2 - 48;\n
        if (a0 >= 48 && a0 <= 57)\n
        {\n
            v0 *= 10;\n
            v0 = a0 - 48 + v0;\n
            v1 = v0;\n
            return v1;\n
        }\n
        if (!a0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4200723:sub_401913": null, "4200736:cgc_RANDOM": "extern unsigned int gRandRegister;\n
\n
int cgc_RANDOM()\n
{\n
    gRandRegister = ((gRandRegister >> 31 ^ gRandRegister >> 6 ^ gRandRegister >> 4 ^ gRandRegister >> 2 ^ gRandRegister >> 1 ^ gRandRegister) & 1) * 0x80000000 | gRandRegister >> 1;\n
    return gRandRegister;\n
}\n
", "4200841:sub_401989": null, "4200848:cgc_strcmp": "int cgc_strcmp(char *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2)\n
    {\n
        if (a0)\n
        {\n
            for (v0 = 0; v2[v0]; v0 += 1)\n
            {\n
                if (!*((a0 + v0)))\n
                {\n
                    v1 = 1;\n
                    return v1;\n
                }\n
                if (v2[v0] < *((a0 + v0)))\n
                {\n
                    v1 = -1;\n
                    return v1;\n
                }\n
                else if (v2[v0] > *((a0 + v0)))\n
                {\n
                    v1 = 1;\n
                    return v1;\n
                }\n
            }\n
            if (!*((a0 + v0)))\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
            v1 = -1;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
    else\n
    {\n
        if (a0)\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4201128:sub_401aa8": null, "4201136:cgc_my_srand": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int gRandRegister;\n
\n
int cgc_my_srand(unsigned int v0)\n
{\n
    gRandRegister = v0;\n
    return \"P9\";\n
}\n
", "4201165:sub_401acd": null, "4201168:cgc_scramble": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_scramble(char *v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = \"P9\";\n
    if (!(v4 && a0))\n
        return v4;\n
    v3 = 0;\n
    v2 = ((0 CONCAT cgc_RANDOM()) /m 3 >> 32) + 2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((a0 + v3)))\n
            v0 = v3 < a1;\n
        if (!(v0 & 1))\n
            break;\n
        if (*((a0 + v3)) >= 97 && *((a0 + v3)) <= 122)\n
            goto LABEL_401bcc;\n
        if (*((a0 + v3)) >= 65 && *((a0 + v3)) <= 90)\n
            goto LABEL_401bcc;\n
        if (*((a0 + v3)) < 48)\n
        {\n
LABEL_401c03:\n
            v4[v3] = *((a0 + v3));\n
LABEL_401c15:\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            if (!(*((a0 + v3)) <= 57))\n
                goto LABEL_401c03;\n
LABEL_401bcc:\n
            if (!(0 CONCAT v3) /m v2 >> 32)\n
                v4[v3] = 95;\n
            else\n
                v4[v3] = *((a0 + v3));\n
            goto LABEL_401c15;\n
        }\n
    }\n
    v4[v3] = 0;\n
    return v4;\n
}\n
", "4201523:sub_401c33": null, "4201536:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    char v1;  // [bp-0x5d]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    char v6;  // [bp-0x4c]\n
    char v7;  // [bp-0x4b]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = \"P9\";\n
    v8 = 0;\n
    memset(&v6, 0, 64);\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 10;\n
    cgc_transmit_str(v0 - 5224);\n
    v2 = cgc_readline(&v6, 64);\n
    if (!v2)\n
        cgc__terminate();\n
    v5 = cgc_toInt(v6, v7);\n
    if (cgc_init(v5 + 1))\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_my_srand(*(&v6));\n
    for (v5 = 0; v5 < 10; v5 += 1)\n
    {\n
        if (v5)\n
            cgc_transmit_str(v0 - 5193);\n
        else\n
            cgc_transmit_str(v0 - 5188);\n
        v3 = (0 CONCAT cgc_RANDOM()) /m 51 >> 32;\n
        cgc_scramble(&v6, *((*((v0 + 320)) + v3 * 4)), 64);\n
        cgc_transmit_str(&v6);\n
        cgc_transmit_all(&v1, 1);\n
        v2 = cgc_readline(&v6, 64);\n
        if (!v2)\n
            cgc__terminate();\n
        *(&v5 + v2) = 0;\n
        if (cgc_strcmp(&v6, *((*((v0 + 320)) + (v3 << 2)))))\n
        {\n
            cgc_transmit_str(v0 - 5181);\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    cgc_transmit_str(v0 - 5171);\n
    v2 = cgc_readline(&v6, 64);\n
    if (!v2)\n
        cgc__terminate();\n
    v5 = cgc_toInt(v6, (&v6)[1]);\n
    v5 = (0 CONCAT v5) /m 51 >> 32;\n
    cgc_scramble(&v6, *((*((v0 + 320)) + v5 * 4)), 64);\n
    cgc_transmit_str(&v6);\n
    cgc_transmit_all(&v1, 1);\n
    v2 = cgc_readline(&v6, 64);\n
    if (!v2)\n
        cgc__terminate();\n
    *(&v5 + v2) = 0;\n
    if (!cgc_strcmp(&v6, *((*((v0 + 320)) + (v5 << 2)))))\n
        cgc_transmit_str(v0 - 5128);\n
    else\n
        cgc_transmit_str(v0 - 5181);\n
    v8 = 0;\n
    return v8;\n
}\n
", "4202448:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}