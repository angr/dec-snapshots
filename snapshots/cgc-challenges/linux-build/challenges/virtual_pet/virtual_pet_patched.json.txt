{"4202496:_init": "extern struct_0 *g_408420;\n
\n
int _init()\n
{\n
    if (g_408420)\n
    {\n
        g_408420();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4202576:__cxa_atexit": "// attributes: PLT stub\n
int __cxa_atexit()\n
{\n
    ::libc.so.0::__cxa_atexit();\n
    return;\n
}\n
", "4202592:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202656:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202704:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4202726:sub_4020e6": null, "4202736:__cxx_global_var_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxx_global_var_init()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    petlist::__base_ctor__();\n
    v5 = v1;\n
    v0 = v5 + 56;\n
    v7 = v2;\n
    return __cxa_atexit(v5 - 17432, v5 + 224);\n
}\n
", "4202815:sub_40213f": null, "4202816:_GLOBAL__sub_I_main.cc": "int _GLOBAL__sub_I_main.cc()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    return __cxx_global_var_init();\n
}\n
", "4202844:sub_40215c": null, "4202848:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202891:sub_40218b": null, "4202892:sub_40218c": "int sub_40218c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202896:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202900:sub_402194": null, "4202912:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 25219;\n
    v6 = v5 + 21;\n
    v7 = v5 + 21;\n
    if (v7 == v6)\n
        return v5 + 21;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4202963:sub_4021d3": "int sub_4021d3()\n
{\n
}\n
", "4202969:sub_4021d9": "int sub_4021d9()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202976:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 25155;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 21;\n
    v9 = (v6 + 21 - (v6 + 21) >> 31) + (21 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4203047:sub_402227": "int sub_402227()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4203056:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408414;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__TMC_END__)\n
        return;\n
    if (g_408414)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    __TMC_END__ = 1;\n
    return;\n
}\n
", "4203131:sub_40227b": "int sub_40227b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203136:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203145:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203149:sub_40228d": null, "4203152:cgc_memset": "int cgc_memset(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1)\n
    {\n
        v0 = v2;\n
        while (true)\n
        {\n
            v3 = a1;\n
            a1 = v3 - 1;\n
            if (!v3)\n
                break;\n
            v4 = v0;\n
            v0 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v1 = v2;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = v2;\n
        return v1;\n
    }\n
}\n
", "4203273:sub_402309": null, "4203280:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4203413:sub_402395": null, "4203424:cgc_strncmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strncmp(struct_0 *v1, struct_0 *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ecx\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v3 = a1;\n
            a1 = v3 - 1;\n
            if (!v3)\n
            {\n
                v0 = 0;\n
                return v0;\n
            }\n
            v4 = v1;\n
            v1 = &v4->field_0;\n
            v5 = v4->field_-1;\n
            v6 = a0;\n
            a0 = &v6->field_0;\n
            if (v5 != v6->field_-1)\n
            {\n
                v0 = *((v1 - 1)) - *((a0 - 1));\n
                return v0;\n
            }\n
        }\n
    }\n
}\n
", "4203608:sub_402458": null, "4203616:cgc_strlcpy": "int cgc_strlcpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1)\n
    {\n
        for (v0 = 0; v0 < a1 - 1; v0 += 1)\n
        {\n
            if (!v0[a0])\n
                break;\n
            v0[v2] = v0[a0];\n
        }\n
        v0[v2] = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4203806:sub_40251e": null, "4203808:cgc_strlcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strlcat(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1)\n
    {\n
        v2 = cgc_strlen();\n
        v0 = v2;\n
        v3 = v0 + cgc_strlcpy(v4 + v2, a0, a1 - v2);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4203981:sub_4025cd": null, "4203984:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    char *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = v2; *(v2); v2 += 1);\n
    v1 = v2 - v0;\n
    return v1;\n
}\n
", "4204066:sub_402622": null, "4204080:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0 < 0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0 > 255)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            if (*(v1) != a0)\n
            {\n
                v3 = v1;\n
                v1 = v3 + 1;\n
                if (!*(v3))\n
                {\n
                    v0 = 0;\n
                    return v0;\n
                }\n
            }\n
            else\n
            {\n
                v0 = v1;\n
                return v0;\n
            }\n
        }\n
    }\n
}\n
", "4204235:sub_4026cb": null, "4204240:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v4))\n
            {\n
                v5 = v4;\n
                v4 = v5 + 1;\n
                v0 = cgc_strchr(a0, *(v5));\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4204430:sub_40278e": null, "4204432:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (!cgc_strchr(a0, *(v3)))\n
        {\n
            v3 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4204610:sub_402842": null, "4204624:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[88];\n
    struct struct_1 *field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v4)\n
        v2->field_58 = v4;\n
    if (!v2->field_58)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v5 = v2;\n
        v0 = &v5->field_58->field_0;\n
        v4 = &v0[cgc_strspn(v5->field_58, a0)];\n
        v1 = v4;\n
        v6 = v2;\n
        v6->field_58 = v1 + cgc_strcspn(v4, a0);\n
        if (v6->field_58 == v4)\n
        {\n
            v2->field_58 = 0;\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!v2->field_58->field_0)\n
        {\n
            v2->field_58 = 0;\n
        }\n
        else\n
        {\n
            v7 = v2;\n
            v7->field_58->field_0 = 0;\n
            v7->field_58 = v7->field_58 + 1;\n
        }\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4204928:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_strlen(v5) + 1;\n
    v2 = cgc_malloc();\n
    if (v2)\n
    {\n
        v0 = v3;\n
        cgc_memcpy(v2, v5);\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4205079:sub_402a17": null, "4205088:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4205174:sub_402a76": null, "4205184:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    for (v2 = 0; v3 < a1; v3 = v2 + v3)\n
    {\n
        v0 = &v2;\n
        v4 = cgc_transmit(v5, a0 + v3, a1 - v3);\n
        if (v4 > 0)\n
            cgc_err(3);\n
    }\n
    return 1;\n
}\n
", "4205347:sub_402b23": null, "4205360:cgc_err": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_err()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v6 = &v3;\n
    v2 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = *(&v5);\n
    cgc_transmit_str(2);\n
    v8 = v1;\n
    cgc__terminate(v4);\n
    cgc_transmit_str();\n
    return;\n
}\n
", "4205424:cgc_transmit_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_str(unsigned int v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    v2 = a0;\n
    v6 = v3;\n
    return cgc_transmit_all(v1, v2, cgc_strlen(a0));\n
}\n
", "4205506:sub_402bc2": null, "4205520:cgc_ffs_u": "int cgc_ffs_u(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (v0 < 32)\n
    {\n
        v3 = 1 << (v0 & 31);\n
        if ((v0 & 32))\n
            v3 = 0;\n
        if ((v2 & v3))\n
        {\n
            if (!(!1))\n
                goto LABEL_402c53;\n
            goto LABEL_402c4e;\n
        }\n
        else if (false)\n
        {\n
LABEL_402c53:\n
            v0 += 1;\n
        }\n
        else\n
        {\n
LABEL_402c4e:\n
            break;\n
        }\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4205685:sub_402c75": null, "4205696:cgc_malloc": "typedef struct struct_3 {\n
    char padding_0[96];\n
    unsigned short field_60;\n
    char padding_62[120];\n
    char field_da;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x21]\n
    struct_3 *v2;  // [bp-0x20]\n
    struct_2 *v3;  // [bp-0x1c]\n
    struct_4 *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0xc]\n
    struct_3 *v9;  // ebx\n
    struct_3 *v10;  // ebx\n
    struct_2 *v11;  // eax\n
    unsigned int v12;  // edx\n
    struct_2 *v13;  // eax\n
    struct_3 *v14;  // ebx\n
    struct_3 *v15;  // ebx\n
    struct_3 *v16;  // ebx\n
    struct_3 *v17;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v8 <= 0)\n
    {\n
        v9 = v2;\n
        v0 = 160;\n
        cgc_printf(&v9[42].padding_0[26], &v9[41].field_da);\n
    }\n
    if (!v2->field_da)\n
        cgc_malloc_init();\n
    if (v8 > v2->field_60)\n
    {\n
        v7 = cgc_malloc_large();\n
        return v7;\n
    }\n
    for (v6 = 0; v6 < 10; v6 += 1)\n
    {\n
        if (v8 <= *((106 + &v2->padding_0[0] + 0xc * v6)))\n
            break;\n
    }\n
    v4 = &v2->padding_62[12 * v6];\n
    if (!v4->field_0)\n
    {\n
        v3 = cgc_malloc_request_chunk();\n
        v3->field_10 = v4;\n
        v3->field_4 = v4->field_8;\n
        v3->field_a = v4->field_a;\n
        if (!v3)\n
        {\n
            v10 = v2;\n
            v0 = 182;\n
            cgc_printf(&v10[41].padding_62[54], &v10[41].field_da);\n
        }\n
        v3->field_18 = 0;\n
        v3->field_14 = &v4->field_0->padding_0;\n
        if (v4->field_0)\n
            v4->field_0->field_18 = &v3->padding_0;\n
        v4->field_0 = v3;\n
    }\n
    v3 = v4->field_0;\n
    v6 = cgc_ffs_u(v3->field_c);\n
    v11 = v3;\n
    v11->field_8 = v11->field_8 + 1;\n
    v1 = v6;\n
    v12 = 1 << (v6 & 31);\n
    if ((v1 & 32))\n
        v12 = 0;\n
    v13 = v3;\n
    v13->field_c = v13->field_c | v12;\n
    if (v3->field_8 == v3->field_a)\n
    {\n
        if (!v4->field_0)\n
        {\n
            v14 = v2;\n
            v0 = 193;\n
            cgc_printf(&v14[41].padding_62[20], &v14[41].field_da);\n
        }\n
        if (!v3)\n
        {\n
            v15 = v2;\n
            v0 = 193;\n
            cgc_printf(&v15[41].padding_62[54], &v15[41].field_da);\n
        }\n
        if (v3 == v4->field_0)\n
        {\n
            v4->field_0 = &v3->field_14->padding_0;\n
        }\n
        else\n
        {\n
            if (v3->field_18)\n
                v3->field_18->field_14 = v3->field_14;\n
            if (v3->field_14)\n
                v3->field_14->field_18 = v3->field_18;\n
        }\n
        if (!v3)\n
        {\n
            v16 = v2;\n
            v0 = 194;\n
            cgc_printf(&v16[41].padding_62[54], &v16[41].field_da);\n
        }\n
        v3->field_18 = 0;\n
        v3->field_14 = v4->field_4;\n
        if (v4->field_4)\n
            v4->field_4->field_18 = v3;\n
        v4->field_4 = &v3->padding_0;\n
        if (!v4->field_4)\n
        {\n
            v17 = v2;\n
            v0 = 195;\n
            cgc_printf(&v17[41].padding_0[71], &v17[41].field_da);\n
        }\n
    }\n
    v5 = &v3->padding_0[1 + v6 * v4->field_8];\n
    v7 = v5;\n
    return v7;\n
}\n
", "4206644:sub_403034": null, "4206656:cgc_malloc_init": "typedef struct struct_0 {\n
    char padding_0[96];\n
    unsigned short field_60;\n
    char padding_62[120];\n
    char field_da;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* state;\n
\n
int cgc_malloc_init()\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned short v1;  // [bp-0x20]\n
    unsigned short v2;  // [bp-0x1e]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned short v5;  // [bp-0x12]\n
    unsigned short v6;  // [bp-0x10]\n
    unsigned short v7;  // [bp-0xe]\n
    unsigned short v8[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // ebx\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct_0 *v22;  // ebx\n
    struct_0 *v23;  // ebx\n
    struct_0 *v24;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    *(&v8[0]) = 0;\n
    v7 = 128;\n
    state = 0;\n
    cgc_memset(&state, 0, 127);\n
    v6 = 4068;\n
    for (v5 = 0; v5 < 10; v5 += 1)\n
    {\n
        v8 = &v0->padding_62[12 * v5];\n
        *((v8 + 8)) = v7;\n
        v12 = v6;\n
        *((v8 + 10)) = (v12 >> 31 CONCAT v12) /m v7;\n
        if (*((v8 + 10)) <= 1)\n
        {\n
            v13 = v0;\n
            cgc_printf(&v13[40].padding_0[32], &v13[41].field_da);\n
        }\n
        if (*((v8 + 10)) > 32)\n
        {\n
            v14 = v0;\n
            cgc_printf(&v14[39].padding_62[105], &v14[41].field_da);\n
        }\n
        v4 = v7;\n
        v16 = ftop<4> - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v17 = v16 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v17 = v16 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v18 = v17 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v19 = v18 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v19 = v18 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t20,1] = t21\n
        [D] PutI(136:I8x8)[t20,1] = 0x01\n
        [D] PutI(136:I8x8)[t20,0] = 0x00\n
        v20 = v19 + 1;\n
        v2 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-30, size=2, endness=Iend_LE)))));\n
        v1 = v2 | 0xc00;\n
        v3 = ([D] GetI(136:I8x8)[t66,0] ? [D] GetI(72:F64x8)[t66,0] : nan);\n
        [D] PutI(136:I8x8)[t66,0] = 0x00\n
        v21 = v20 + 1;\n
        v7 = v3;\n
    }\n
    if (!v8)\n
    {\n
        v22 = v0;\n
        cgc_printf(&v22[39].padding_62[55], &v22[41].field_da);\n
    }\n
    if (v5 != 10)\n
    {\n
        v23 = v0;\n
        cgc_printf(&v23[39].padding_62[22], &v23[41].field_da);\n
    }\n
    v0->field_60 = *((v8 + 8));\n
    if (v0->field_60 <= 0)\n
    {\n
        v24 = v0;\n
        cgc_printf(&v24[39].padding_0[85], &v24[41].field_da);\n
    }\n
    v0->field_da = 1;\n
    return v0;\n
}\n
", "4207206:sub_403266": null, "4207216:cgc_malloc_large": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_malloc_large(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v3 = v4 + 4123 >> 12;\n
    v0 = v3;\n
    v1 = cgc_malloc_request_chunk();\n
    v1->field_4 = v4;\n
    v2 = &v1[3].field_4;\n
    return v2;\n
}\n
", "4207296:cgc_malloc_request_chunk": "typedef struct struct_0 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_request_chunk(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // ebx\n
    struct_0 *v10;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = v5 * 0x1000;\n
    if (v3 <= 0)\n
    {\n
        v6 = v1;\n
        v0 = 120;\n
        cgc_printf(&v6[96].padding_0[8], &v6[95].padding_0[77]);\n
    }\n
    if ((0 CONCAT v3) /m v5 != 0x1000)\n
    {\n
        v7 = v1;\n
        v0 = 121;\n
        cgc_printf(&v7[89].padding_0[39], &v7[95].padding_0[77]);\n
    }\n
    v0 = &v4;\n
    v2 = cgc_allocate(v3, 0);\n
    if (v2)\n
    {\n
        v8 = v1;\n
        v0 = 124;\n
        cgc_printf(&v8[88].padding_0[91], &v8[95].padding_0[77]);\n
    }\n
    if (!v4)\n
    {\n
        v9 = v1;\n
        v0 = 125;\n
        cgc_printf(&v9[88].padding_0[64], &v9[95].padding_0[77]);\n
    }\n
    v10 = v1;\n
    *(v4) = v5;\n
    v10->field_5c = v5 + v10->field_5c;\n
    return v4;\n
}\n
", "4207618:sub_403402": null, "4207632:cgc_free": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
    struct struct_0 *field_14;\n
    struct struct_1 *field_18;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(struct_3 *v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_2 *v4;  // [bp-0x10]\n
    struct_3 *v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edx\n
    struct_3 *v13;  // eax\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // ebx\n
    struct_3 *v17;  // eax\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v7 = v2;\n
        v0 = 206;\n
        cgc_printf(v7 - 9006, v7 - 9197);\n
    }\n
    v5 = v6 & -0x1000;\n
    if (!v5->field_10)\n
    {\n
        v8 = cgc_malloc_release_chunk();\n
        return v8;\n
    }\n
    v4 = v5->field_10;\n
    v3 = (0 CONCAT v6 - v5 - 28) /m v4->field_8;\n
    v9 = 1 << (v3 & 31);\n
    if ((v3 & 32))\n
        v9 = 0;\n
    if ((v5->field_c & v9))\n
    {\n
        if (!(!1))\n
            goto LABEL_403514;\n
    }\n
    else\n
    {\n
        if (!(!0))\n
            goto LABEL_403514;\n
    }\n
    v10 = v2;\n
    v0 = 216;\n
    cgc_printf(v10 - 8976, v10 - 9197);\n
LABEL_403514:\n
    v1 = v3;\n
    v11 = 1 << (v3 & 31);\n
    if ((v1 & 32))\n
        v11 = 0;\n
    v12 = ~(v11);\n
    v13 = v5;\n
    v13->field_c = v13->field_c & v12;\n
    if (v5->field_8 == v5->field_a)\n
    {\n
        if (!v4->field_4)\n
        {\n
            v14 = v2;\n
            v0 = 220;\n
            cgc_printf(v14 - 8926, v14 - 9197);\n
        }\n
        if (!v5)\n
        {\n
            v15 = v2;\n
            v0 = 220;\n
            cgc_printf(v15 - 9131, v15 - 9197);\n
        }\n
        if (v5 == v4->field_4)\n
        {\n
            v4->field_4 = v5->field_14;\n
        }\n
        else\n
        {\n
            if (v5->field_18)\n
                v5->field_18->field_14 = v5->field_14;\n
            if (v5->field_14)\n
                v5->field_14->field_18 = v5->field_18;\n
        }\n
        if (!v5)\n
        {\n
            v16 = v2;\n
            v0 = 221;\n
            cgc_printf(v16 - 9131, v16 - 9197);\n
        }\n
        v5->field_18 = 0;\n
        v5->field_14 = v4->field_0;\n
        if (v4->field_0)\n
            v4->field_0->field_18 = v5;\n
        v4->field_0 = &v5->padding_0;\n
    }\n
    v17 = v5;\n
    v17->field_8 = v17->field_8 - 1;\n
    v8 = v5->field_8;\n
    if (v8)\n
        return v5->field_8;\n
    if (!v4->field_0)\n
    {\n
        v18 = v2;\n
        v0 = 227;\n
        cgc_printf(v18 - 9097, v18 - 9197);\n
    }\n
    if (!v5)\n
    {\n
        v19 = v2;\n
        v0 = 227;\n
        cgc_printf(v19 - 9131, v19 - 9197);\n
    }\n
    if (v5 == v4->field_0)\n
    {\n
        v4->field_0 = v5->field_14;\n
    }\n
    else\n
    {\n
        if (v5->field_18)\n
            v5->field_18->field_14 = v5->field_14;\n
        if (v5->field_14)\n
            v5->field_14->field_18 = v5->field_18;\n
    }\n
    v8 = cgc_malloc_release_chunk();\n
    return v8;\n
}\n
", "4208553:sub_4037a9": null, "4208560:cgc_malloc_release_chunk": "typedef struct struct_0 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_release_chunk(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v3)\n
    {\n
        v4 = v1;\n
        v0 = 107;\n
        cgc_printf(&v4[88].padding_0[31], &v4[95].padding_0[77]);\n
    }\n
    if (*(v3) <= 0)\n
    {\n
        v5 = v1;\n
        v0 = 108;\n
        cgc_printf(&v5[87].field_5c + 3, &v5[95].padding_0[77]);\n
    }\n
    v6 = v1;\n
    v6->field_5c = v6->field_5c - *(v3);\n
    v7 = cgc_deallocate(v3);\n
    v2 = v7;\n
    if (v2)\n
    {\n
        v8 = v1;\n
        v0 = 111;\n
        v7 = cgc_printf(&v8[87].padding_0[60], &v8[95].padding_0[77]);\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4208796:sub_40389c": null, "4208800:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 <= 0)\n
    {\n
        v4 = v1;\n
        cgc_printf(v4 - 8880, v4 - 9197);\n
    }\n
    if (a0 <= 0)\n
    {\n
        v5 = v1;\n
        cgc_printf(v5 - 9224, v5 - 9197);\n
    }\n
    v0 = a0;\n
    if (v0 >= (0 CONCAT -1) /m v3)\n
    {\n
        v6 = v1;\n
        cgc_printf(v6 - 8852, v6 - 9197);\n
    }\n
    a0 *= v3;\n
    v2 = cgc_malloc(a0);\n
    return cgc_memset(v2, 0, a0);\n
}\n
", "4209071:sub_4039af": null, "4209072:cgc_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf(char v5[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v6;  // [bp+0x8]\n
    char v7[2];  // eax\n
    unsigned int *v8;  // eax\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v4 = &v6;\n
    for (v3 = 0; v5[0]; v5 += 1)\n
    {\n
        if (v5[0] != 37)\n
        {\n
            v0 = v5[0];\n
            v3 = cgc_transmit_char() + v3;\n
        }\n
        else\n
        {\n
            v7 = v5;\n
            v5 = &v7[1];\n
            v1 = v7[1];\n
            if (v1 == 99)\n
            {\n
                v8 = v4;\n
                v4 = v8 + 1;\n
                v0 = *(v8);\n
                v3 = cgc_transmit_char() + v3;\n
            }\n
            else if (v1 == 115)\n
            {\n
                v10 = v4;\n
                v4 = v10 + 1;\n
                v0 = *(v10);\n
                v3 = cgc_transmit_string() + v3;\n
            }\n
            else if (v1 == 117)\n
            {\n
                v11 = v4;\n
                v4 = v11 + 1;\n
                v0 = *(v11);\n
                v3 = cgc_transmit_unsigned() + v3;\n
            }\n
            else\n
            {\n
                v0 = *(v5);\n
                v3 = cgc_transmit_char() + v3;\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4209402:sub_403afa": null, "4209408:cgc_transmit_char": "int cgc_transmit_char(char v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &v2;\n
    v1 = cgc_transmit(1, &v4, 1);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4209504:cgc_transmit_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_string(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_strlen(v5);\n
    v1 = cgc_transmit_all(1, v5, v2);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4209612:sub_403bcc": null, "4209616:cgc_transmit_unsigned": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_unsigned(unsigned int v5)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = (0 CONCAT v5) /m 10;\n
    v3 = v5 - v2 * 10 + 48;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = cgc_transmit_unsigned(v2);\n
    v4 = v0;\n
    cgc_transmit_char(v3);\n
    return v4;\n
}\n
", "4209745:sub_403c51": null, "4209760:_Z9terminatei": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int terminate()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc__terminate(v2, v0);\n
    Pet::__base_dtor__(v2, v3);\n
    return;\n
}\n
", "4209792:_ZN3PetD2Ev": "int Pet::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4209800:sub_403c88": null, "4209808:_ZN3PetD0Ev": "int Pet::__deleting_dtor__(unsigned int v0)\n
{\n
}\n
", "4209815:sub_403c97": "int sub_403c97()\n
{\n
    return Pet::Debug();\n
}\n
", "4209824:_ZN3Pet5DebugEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pet::Debug(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v3;\n
    put();\n
    v0 = 32;\n
    put();\n
    v0 = 204;\n
    put();\n
    v0 = v1 - 8794;\n
    v5 = v2;\n
    return put();\n
}\n
", "4209913:sub_403cf9": null, "4209920:_Z3putPv": "int put(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return put(v1, *(&v0));\n
}\n
", "4209957:sub_403d25": null, "4209968:_Z3putc": "int put(char v0)\n
{\n
    return cgc_transmit_all(1, &v0, 1);\n
}\n
", "4210023:sub_403d67": null, "4210032:_Z3puti": "int put(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return put(v1, *(&v0));\n
}\n
", "4210069:sub_403d95": null, "4210080:_Z3putPKc": "int put(char *v0)\n
{\n
    return cgc_transmit_str(1, v0);\n
}\n
", "4210127:sub_403dcf": null, "4210128:_ZN3Cat8RolloverEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cat::Rollover(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8382);\n
}\n
", "4210190:sub_403e0e": null, "4210192:_ZN3Cat5SpeakEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cat::Speak(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8361);\n
}\n
", "4210254:sub_403e4e": null, "4210256:_ZN3Cat5FlushEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cat::Flush(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8353);\n
}\n
", "4210318:sub_403e8e": null, "4210320:_ZN3Dog8RolloverEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dog::Rollover(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8333);\n
}\n
", "4210382:sub_403ece": null, "4210384:_ZN3Dog5SpeakEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dog::Speak(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8320);\n
}\n
", "4210446:sub_403f0e": null, "4210448:_ZN3Dog5FlushEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dog::Flush(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8312);\n
}\n
", "4210510:sub_403f4e": null, "4210512:_ZN6Hotdog8RolloverEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Hotdog::Rollover(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8281);\n
}\n
", "4210574:sub_403f8e": null, "4210576:_ZN6Hotdog5SpeakEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Hotdog::Speak(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8255);\n
}\n
", "4210638:sub_403fce": null, "4210640:_ZN6Hotdog5FlushEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Hotdog::Flush(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    put(v2 + 4);\n
    v4 = v1;\n
    return put(v0 - 8241);\n
}\n
", "4210702:sub_40400e": null, "4210704:_ZN7petlistD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int petlist::__base_dtor__(unsigned int *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct struct_1 **v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (*(v3))\n
    {\n
        v4 = *(v3);\n
        *(v3) = listnode::next();\n
        v1 = listnode::data();\n
        if (v1)\n
            *(v1)->field_4();\n
        v0 = v4;\n
        if (v0)\n
            operator delete(v0);\n
    }\n
    return v3;\n
}\n
", "4210855:sub_4040a7": null, "4210864:_ZN7petlist6appendEP3Pet": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int petlist::append(unsigned int v6[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7[2];  // eax, Other Possible Types: unsigned int\n
    unsigned int v8[2];  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = v6;\n
    if (v3[1] == 100)\n
    {\n
        v7 = put(v2 - 8201);\n
        return v7;\n
    }\n
    v8 = v3;\n
    v8[1] = v8[1] + 1;\n
    v1 = operator new(8);\n
    v0 = a0;\n
    listnode::__base_ctor__(v1);\n
    v5 = v1;\n
    if (!v3[0])\n
    {\n
        v7 = v3;\n
        *(v7) = v5;\n
        return v3;\n
    }\n
    for (v4 = v3[0]; listnode::next(); v4 = listnode::next());\n
    v0 = v5;\n
    v7 = listnode::next(v4);\n
    return v7;\n
}\n
", "4211096:sub_404198": null, "4211104:_ZN7petlist3nthEi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int petlist::nth(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[2];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v4;\n
    v2 = v5[0];\n
    if (!v5[1])\n
    {\n
        put(v0 - 8158);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0 < 0)\n
    {\n
        put(v0 - 8133);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        for (v1 = 0; v1 < a0; v1 += 1)\n
        {\n
            v2 = listnode::next();\n
        }\n
        v3 = listnode::data();\n
        return v3;\n
    }\n
}\n
", "4211299:sub_404263": null, "4211312:_ZN7petlist6removeEi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int petlist::remove(unsigned int v11[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    struct struct_1 **v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    struct struct_1 **v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7[2];  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    void* v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // eax\n
    unsigned int v13[2];  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7[0] = v11;\n
    v10 = 0;\n
    if (!v7[1])\n
    {\n
        v12 = put(v6 - 8158);\n
        return v12;\n
    }\n
    else if (v7[1] < 0)\n
    {\n
        v12 = put(v6 - 8133);\n
        return v12;\n
    }\n
    else if (a0 >= v7[1])\n
    {\n
        v12 = put(v6 - 8106);\n
        return v12;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        for (v9 = v7[0]; v8 < a0; v9 = listnode::next())\n
        {\n
            v10 = v9;\n
            v8 += 1;\n
        }\n
        v13 = v7;\n
        v13[1] = v13[1] - 1;\n
        if (!v10)\n
        {\n
            v9 = v7[0];\n
            v7[0] = listnode::next();\n
            *((*(listnode::data()) + 16))();\n
            v5 = listnode::data();\n
            if (v5)\n
                *(v5)->field_4();\n
            v12 = v9;\n
            v4 = v12;\n
            if (!v12)\n
                return v12;\n
            v12 = operator delete(v4);\n
        }\n
        else\n
        {\n
            *((*(listnode::data()) + 16))();\n
            v3 = listnode::data();\n
            if (v3)\n
                *(v3)->field_4();\n
            v1 = v10;\n
            v0 = listnode::next();\n
            listnode::next(v1);\n
            v12 = v9;\n
            v2 = v12;\n
            if (v12)\n
            {\n
                v12 = operator delete(v2);\n
                return v12;\n
            }\n
            return v9;\n
        }\n
    }\n
}\n
", "4211812:sub_404464": null, "4211824:_Z11do_rolloverPKcS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_rollover(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_1 **v4;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= petlist::len())\n
            break;\n
        *(v4)->field_8(petlist::nth(v1 + 224, v2));\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4211952:_Z8do_speakPKcS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_speak(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_1 **v4;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= petlist::len())\n
            break;\n
        *(v4)->field_c(petlist::nth(v1 + 224, v2));\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4212080:_Z9do_createPKcS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_create(unsigned int v5, char *a0)\n
{\n
    void* v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v6 = put(v3 - 8075);\n
        return v6;\n
    }\n
    if (!cgc_strcmp(a0, v3 - 8059))\n
    {\n
        v2 = operator new(204);\n
        memset(v2, 0, 204);\n
        Hotdog::__base_ctor__(v2, 0);\n
        v4 = v2;\n
    }\n
    else if (!cgc_strcmp(a0, v3 - 8052))\n
    {\n
        v1 = operator new(204);\n
        memset(v1, 0, 204);\n
        Cat::__base_ctor__(v1, 0);\n
        v4 = v1;\n
    }\n
    else if (!cgc_strcmp(a0, v3 - 8056))\n
    {\n
        v0 = operator new(204);\n
        memset(v0, 0, 204);\n
        Dog::__base_ctor__(v0, 0);\n
        v4 = v0;\n
    }\n
    else\n
    {\n
        v6 = put(v3 - 8048);\n
        return v6;\n
    }\n
    v6 = petlist::append(v3 + 224, v4);\n
    return v6;\n
}\n
", "4212517:sub_404725": null, "4212528:_Z7do_namePKcS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_name(unsigned int v6, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    if (!a0)\n
    {\n
        v7 = cgc_printf(v1 - 8075);\n
        return v7;\n
    }\n
    if (*(a0) < 48)\n
    {\n
LABEL_404791:\n
    }\n
    else\n
    {\n
        if (!(*(a0) <= 57))\n
            goto LABEL_404791;\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!a0[v4])\n
            {\n
                v3 = &a0[1 + v4];\n
                if (a0[v4] && cgc_strlen(v3))\n
                {\n
                    v0 = v5;\n
                    if (v0 >= petlist::len())\n
                    {\n
                        v7 = put(v1 - 8106);\n
                        return v7;\n
                    }\n
                    v7 = petlist::nth(v1 + 224, v5);\n
                    v2 = v7;\n
                    if (v2)\n
                    {\n
                        v7 = Pet::Name(v2);\n
                        return v7;\n
                    }\n
                    return v7;\n
                }\n
                v7 = put(v1 - 8023);\n
                return v7;\n
            }\n
            if (a0[v4] < 48)\n
            {\n
LABEL_404804:\n
                if (a0[v4] != 32)\n
                    break;\n
            }\n
            else\n
            {\n
                if (!(a0[v4] <= 57))\n
                    goto LABEL_404804;\n
                v5 = v5 * 10 + a0[v4] - 48;\n
                v4 += 1;\n
            }\n
        }\n
    }\n
    v7 = put(v1 - 8035);\n
    return v7;\n
}\n
", "4212993:sub_404901": null, "4213008:_Z8do_debugPKcS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_debug(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= petlist::len())\n
            break;\n
        Pet::Debug(petlist::nth(v1 + 224, v2));\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4213134:sub_40498e": null, "4213136:_Z9do_deletePKcS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_delete(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v4 = cgc_printf(v0 - 8075);\n
        return v4;\n
    }\n
    if (*(a0) < 48)\n
    {\n
LABEL_4049f1:\n
    }\n
    else\n
    {\n
        if (!(*(a0) <= 57))\n
            goto LABEL_4049f1;\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (!a0[v1])\n
            {\n
                v4 = petlist::remove(v0 + 224, v2);\n
                return v4;\n
            }\n
            if (a0[v1] < 48)\n
                break;\n
            if (a0[v1] > 57)\n
                break;\n
            v2 = v2 * 10 + a0[v1] - 48;\n
            v1 += 1;\n
        }\n
    }\n
    v4 = put(v0 - 8035);\n
    return v4;\n
}\n
", "4213402:sub_404a9a": null, "4213408:_Z10get_numberPKc": "extern unsigned int _GLOBAL_OFFSET_TABLE_[56];\n
\n
int get_number(char *v4)\n
{\n
    unsigned int v0[56];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[56];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    if (*(v4) < 48)\n
    {\n
LABEL_404b04:\n
    }\n
    else\n
    {\n
        if (!(*(v4) <= 57))\n
            goto LABEL_404b04;\n
        v2 = *(v4) - 48;\n
        v4 += 1;\n
        while (true)\n
        {\n
            if (!*(v4))\n
            {\n
                if (v1)\n
                    v2 = -(v2);\n
                if (v0[15])\n
                {\n
                    v5 = v0;\n
                    v5[55] = v2;\n
                    v5[15] = 0;\n
                }\n
                else\n
                {\n
                    if (v2 != v0[55] + 1)\n
                        break;\n
                    v0[55] = v2;\n
                }\n
                v3 = 0;\n
                return v3;\n
            }\n
            if (*(v4) < 48)\n
            {\n
LABEL_404b5f:\n
                break;\n
            }\n
            else\n
            {\n
                if (!(*(v4) <= 57))\n
                    goto LABEL_404b5f;\n
                v2 = v2 * 10 + *(v4) - 48;\n
                v4 += 1;\n
            }\n
        }\n
    }\n
    put(&v0[35 + 42] + 1);\n
    v3 = -1;\n
    return v3;\n
}\n
", "4213769:sub_404c09": null, "4213776:_Z7do_linePc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int do_line(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // eax\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = cgc_strlen(v9);\n
    v7 = v9;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        if (!v4 && !v3)\n
            goto LABEL_404c9f;\n
        if (!v9[v1])\n
            goto LABEL_404d5b;\n
LABEL_404c9f:\n
        if (v4)\n
        {\n
            if (v9[v1] == 32)\n
                goto LABEL_404d5b;\n
            v6 = &v9[v1];\n
            v4 = 0;\n
        }\n
        if (v3 && v9[v1] != 32)\n
        {\n
            v5 = &v9[v1];\n
            v3 = 0;\n
            break;\n
        }\n
        if (v9[v1] == 32)\n
        {\n
            if (!v6)\n
            {\n
                v9[v1] = 0;\n
                v4 = 1;\n
            }\n
            else if (!v5)\n
            {\n
                v9[v1] = 0;\n
                v3 = 1;\n
            }\n
        }\n
LABEL_404d5b:\n
    }\n
    if (!v6)\n
    {\n
        v11 = cgc_printf(v0 - 7995);\n
        return v11;\n
    }\n
    v11 = get_number(v7);\n
    if (v11)\n
    {\n
        return v11;\n
    }\n
    else if (cgc_strcmp(v6, v0 - 7982))\n
    {\n
        if (!cgc_strcmp(v6, v0 - 7975))\n
        {\n
            v11 = do_delete(v6, v5);\n
        }\n
        else if (!cgc_strcmp(v6, v0 - 7968))\n
        {\n
            v11 = do_speak(v6, v5);\n
        }\n
        else if (!cgc_strcmp(v6, v0 - 7962))\n
        {\n
            v11 = do_rollover(v6, v5);\n
        }\n
        else if (!cgc_strcmp(v6, v0 - 7953))\n
        {\n
            v11 = do_debug(v6, v5);\n
        }\n
        else if (cgc_strcmp(v6, v0 - 7947))\n
        {\n
            v11 = put(v0 - 7942);\n
        }\n
        else\n
        {\n
            v11 = do_name(v6, v5);\n
        }\n
        return v11;\n
    }\n
    else\n
    {\n
        v11 = do_create(v6, v5);\n
        return v11;\n
    }\n
}\n
", "4214588:sub_404f3c": null, "4214592:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x420]\n
    unsigned int v1;  // [bp-0x41c]\n
    char v2;  // [bp-0x418]\n
    struct_0 *v3;  // [bp-0x414], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x40d]\n
    char v5;  // [bp-0x40c]\n
    void* v6;  // [bp-0xc]\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, &v4, 1))\n
            break;\n
        if (*(&v2) != 1)\n
            break;\n
        if (v4 == 10)\n
        {\n
            *((&v5 + v3)) = 0;\n
            do_line(&v5);\n
            cgc_memset(&v5, 0, 0x400);\n
            v3 = 0;\n
        }\n
        else\n
        {\n
            v8 = v3;\n
            v3 = v8 + 1;\n
            (&v5)[v8] = v4;\n
        }\n
        if (v3 == 0x400)\n
        {\n
            put(v1 - 7929);\n
            break;\n
        }\n
    }\n
    terminate();\n
    return v6;\n
}\n
", "4214934:sub_405096": null, "4214944:_Z3putl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int put(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    for (v1 = 28; v1 >= 0; v1 = v3)\n
    {\n
        put(*((v0 + (v2 >> (v1 & 31) & 15) + 64)));\n
        v3 = v1 - 4;\n
    }\n
    return v3;\n
}\n
", "4215036:sub_4050fc": null, "4215040:_ZN7petlistC2Ev": "int petlist::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return put(\"list init...\\n
\");\n
}\n
", "4215096:sub_405138": null, "4215104:_ZN8listnodeIP3PetE4nextEv": "int listnode::next(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4215117:sub_40514d": null, "4215120:_ZN8listnodeIP3PetE4dataEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int listnode::data(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4215134:sub_40515e": null, "4215136:_ZN8listnodeIP3PetEC2ES1_": "int listnode::__base_ctor__(unsigned int v0[2], unsigned int a0)\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[1] = a0;\n
    v1[0] = 0;\n
    return v0;\n
}\n
", "4215162:sub_40517a": null, "4215168:_ZN8listnodeIP3PetE4nextEPS2_": "int listnode::next(unsigned int *v0, unsigned int a0)\n
{\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4215187:sub_405193": null, "4215200:_ZN7petlist3lenEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int petlist::len(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4215214:sub_4051ae": null, "4215216:_ZN6HotdogC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Hotdog::__base_ctor__(unsigned int *v4)\n
{\n
    unsigned int *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2;\n
    Dog::__base_ctor__();\n
    *(v2) = v1 + -356;\n
    v6 = v3;\n
    return v2;\n
}\n
", "4215278:sub_4051ee": null, "4215280:_ZN3CatC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cat::__base_ctor__(unsigned int *v4)\n
{\n
    unsigned int *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2;\n
    Pet::__base_ctor__();\n
    *(v2) = v1 + -412;\n
    v6 = v3;\n
    return v2;\n
}\n
", "4215342:sub_40522e": null, "4215344:_ZN3DogC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dog::__base_ctor__(unsigned int *v4)\n
{\n
    unsigned int *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2;\n
    Pet::__base_ctor__();\n
    *(v2) = v1 + -384;\n
    v6 = v3;\n
    return v2;\n
}\n
", "4215406:sub_40526e": null, "4215408:_ZN3Pet4NameEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pet::Name(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v5 = cgc_strlen(a0);\n
    if (v5 < 200)\n
    {\n
        v5 = cgc_strlcat(v1 + 4, a0, 200);\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4215502:sub_4052ce": null, "4215504:_ZN3CatD2Ev": "int Cat::__base_dtor__(unsigned int v0)\n
{\n
    return Pet::__base_dtor__(v0);\n
}\n
", "4215541:sub_4052f5": null, "4215552:_ZN3CatD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cat::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Cat::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4215611:sub_40533b": null, "4215616:_ZN3DogD2Ev": "int Dog::__base_dtor__(unsigned int v0)\n
{\n
    return Pet::__base_dtor__(v0);\n
}\n
", "4215653:sub_405365": null, "4215664:_ZN3DogD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dog::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Dog::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4215723:sub_4053ab": null, "4215728:_ZN6HotdogD2Ev": "int Hotdog::__base_dtor__(unsigned int v0)\n
{\n
    return Dog::__base_dtor__(v0);\n
}\n
", "4215765:sub_4053d5": null, "4215776:_ZN6HotdogD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Hotdog::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Hotdog::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4215835:sub_40541b": null, "4215840:_ZN3PetC2Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
extern char g_4082e0;\n
\n
int Pet::__base_ctor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = &g_4082e0;\n
    v1->field_4 = 0;\n
    return cgc_transmit_all(1, \"init..\\n
\", 7);\n
}\n
", "4215916:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242884:_Znwj": null, "5242888:__cxa_atexit": null, "5242892:__libc_start_main": null, "5242896:cgc_receive": null, "5242900:cgc_allocate": null, "5242904:cgc__terminate": null, "5242908:_ZdlPv": null, "5242912:cgc_deallocate": null, "5242916:cgc_transmit": null, "5242920:memset": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}