{"4202496:_init": "extern struct_0 *g_407e4c;\n
\n
int _init()\n
{\n
    if (g_407e4c)\n
    {\n
        g_407e4c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 23907;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 23843;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_407e48;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_407e48)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_is_non_printable": "int cgc_is_non_printable(char v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = v2;\n
    if (!cgc_is_printable())\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203046:sub_402226": null, "4203056:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"<}\";\n
    v0 = v4;\n
    if (is_digit() != 1)\n
    {\n
        v0 = v4;\n
        if (is_letter() != 1)\n
        {\n
            v0 = v4;\n
            if (is_symbol() != 1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203194:sub_4022ba": null, "4203200:is_digit": "int is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203263:sub_4022ff": null, "4203264:is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"<}\";\n
    v0 = v4;\n
    if (is_upper() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_lower() != 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203371:sub_40236b": null, "4203376:is_symbol": "int is_symbol(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (33 <= v2 && v2 <= 47)\n
        goto LABEL_4023ef;\n
    if (58 <= v2 && v2 <= 64)\n
        goto LABEL_4023ef;\n
    if (91 <= v2 && v2 <= 96)\n
        goto LABEL_4023ef;\n
    if (123 > v2)\n
    {\n
LABEL_4023f8:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(v2 <= 126))\n
    {\n
        goto LABEL_4023f8;\n
    }\n
LABEL_4023ef:\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203525:sub_402405": null, "4203536:is_hexdigit": "int is_hexdigit(char v1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (is_digit(v1) != 1)\n
    {\n
        if (97 <= v1 && !(102 < v1))\n
            goto LABEL_402486;\n
        if (65 > v1)\n
        {\n
LABEL_40248f:\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (70 < v1)\n
        {\n
            goto LABEL_40248f;\n
        }\n
    }\n
LABEL_402486:\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203677:sub_40249d": null, "4203680:is_upper": "int is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 90 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203743:sub_4024df": null, "4203744:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (97 <= v2 && 122 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203807:sub_40251f": null, "4203808:toupper": "int toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_is_lower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203888:tolower": "int tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!is_upper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203968:todigit": "int todigit(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 2 && a0 <= 16 && v2 < a0)\n
    {\n
        if (v2 >= 10)\n
        {\n
            v1 = v2 + 87;\n
            return v1;\n
        }\n
        v1 = v2 + 48;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4204064:fromdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int fromdigit(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = \"<}\";\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        v4 = tolower(v4);\n
        if (is_digit(v4))\n
            v2 = v4 - 48;\n
        else\n
            v2 = v4 + -87;\n
        if (v2 >= 0 && v2 < a0)\n
        {\n
            v0 = v2;\n
            goto LABEL_4026cf;\n
        }\n
        v0 = -15;\n
LABEL_4026cf:\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -15;\n
    return v3;\n
}\n
", "4204254:sub_4026de": null, "4204256:cgc_itohex": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itohex(char v3[9], unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    *(&v1[0]) = &a0;\n
    v3[0] = todigit(v1[3] >> 4 & 15, 16);\n
    v3[1] = todigit(v1[3] & 15, 16);\n
    v3[2] = todigit(v1[2] >> 4 & 15, 16);\n
    v3[3] = todigit(v1[2] & 15, 16);\n
    v3[4] = todigit(v1[1] >> 4 & 15, 16);\n
    v3[5] = todigit(v1[1] & 15, 16);\n
    v3[6] = todigit(v1[0] >> 4 & 15, 16);\n
    v3[7] = todigit(v1[0] & 15, 16);\n
    v3[8] = a1;\n
    v5 = v2;\n
    return v3;\n
}\n
", "4204613:sub_402845": null, "4204624:utostr": "int utostr(char *v4, unsigned int a0, unsigned int a1, char a2)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
\n
    v2 = 0;\n
    v1 = a1;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (a0 >= 2)\n
    {\n
        do\n
        {\n
            v1 = (0 CONCAT v1) /m 10;\n
            v2 += 1;\n
        } while (v1);\n
        if (v2 >= a0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v5 = v2;\n
        v2 = v5 - 1;\n
        v4[v5] = a2;\n
        do\n
        {\n
            v0 = (0 CONCAT a1) /m 10 >> 32;\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            v4[v6] = v0 + 48;\n
            a1 = (0 CONCAT a1) /m 10;\n
        } while (a1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4204872:sub_402948": null, "4204880:itostr": "int itostr(char *v6, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (a0 >= 2)\n
    {\n
        if (a1 < 0)\n
        {\n
            if (a0 >= 3)\n
            {\n
                v7 = v4;\n
                v4 = v7 + 1;\n
                v6[v7] = 45;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        if (a1 < 0)\n
            v0 = -(a1);\n
        else\n
            v0 = a1;\n
        v2 = v0;\n
        v3 = v2;\n
        do\n
        {\n
            v3 = (0 CONCAT v3) /m 10;\n
            v4 += 1;\n
        } while (v3);\n
        if (v4 >= a0)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v8 = v4;\n
        v4 = v8 - 1;\n
        v6[v8] = a2;\n
        do\n
        {\n
            v1 = (0 CONCAT v2) /m 10 >> 32;\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            v6[v9] = v1 + 48;\n
            v2 = (0 CONCAT v2) /m 10;\n
        } while (v2);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4205222:sub_402aa6": null, "4205232:cgc_strtou": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtou(char *v8, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char *v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // ecx\n
    unsigned int v22;  // eax\n
\n
    v2 = \"<}\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (*(v8))\n
            {\n
                v9 = v8;\n
                v8 = v9 + 1;\n
                v3 = fromdigit(*(v9), a0);\n
                v1 = v3 != -15;\n
            }\n
            if (!(v1 & 1))\n
            {\n
                *(a1) = v4;\n
                v7 = v6;\n
                return v7;\n
            }\n
            v10 = a0;\n
            v11 = v4;\n
            v0 = v10 * v5;\n
            v12 = v11 * v10 >> 32;\n
            v14 = v0;\n
            v4 = v11 * v10;\n
            v5 = v12 + v14;\n
            if (v12 + v14)\n
            {\n
                v7 = -15;\n
                return v7;\n
            }\n
            v15 = v3;\n
            v16 = v15 / 0x80000000;\n
            v17 = ~(v15);\n
            v18 = v4;\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, eax<4>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>))))\n
            {\n
                v7 = -15;\n
                return v7;\n
            }\n
            v19 = v3;\n
            v20 = v4;\n
            tmp_12 = v20;\n
            v22 = v5 + (v19 >> 31) + (tmp_12 + v19 < tmp_12);\n
            v4 = v20 + v19;\n
            v5 = v22;\n
            v6 += 1;\n
        }\n
    }\n
    v7 = -15;\n
    return v7;\n
}\n
", "4205562:sub_402bfa": null, "4205568:cgc_strtoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoi(char *v6, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = \"<}\";\n
    v2 = 0;\n
    if (*(v6) == 45)\n
        v2 = 1;\n
    v4 = cgc_strtou(&v6[v2], a0, &v3);\n
    if (v4 == -15)\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
    else if (v3 <= v2 + 2147483647)\n
    {\n
        if (v2)\n
            v0 = -(v3);\n
        else\n
            v0 = v3;\n
        *(a1) = v0;\n
        v5 = v4 + v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
}\n
", "4205770:sub_402cca": null, "4205776:list_create_node": "int list_create_node(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 12;\n
    v1[0] = malloc();\n
    if (!v1)\n
    {\n
        v2[0] = v1;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4205878:sub_402d36": null, "4205888:list_destroy_node": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_destroy_node(struct_2 *v2, struct struct_0 **a0)\n
{\n
    unsigned int v0[3];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = \"<}\";\n
    if (v2->field_10)\n
    {\n
        v0 = *(a0)->field_0;\n
        v2->field_10();\n
    }\n
    *(a0)->field_0 = 0;\n
    *(a0)->field_4 = 0;\n
    *(a0)->field_8 = 0;\n
    v0[0] = *(a0);\n
    free();\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4206017:sub_402dc1": null, "4206032:list_init": "int list_init(unsigned int v0[5], unsigned int a0)\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v0[2] = &v0[1];\n
    v0[3] = &v0[1];\n
    v0[4] = a0;\n
    return v0;\n
}\n
", "4206095:sub_402e0f": null, "4206096:list_destroy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_destroy(unsigned int v2[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = \"<}\";\n
    while (list_head_node())\n
    {\n
        v1[0] = list_pop();\n
        list_destroy_node(v2, v1);\n
    }\n
    v2[0] = 0;\n
    v2[2] = 0;\n
    v2[3] = 0;\n
    v2[4] = 0;\n
    return v2;\n
}\n
", "4206235:sub_402e9b": null, "4206240:list_head_node": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int list_head_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_8;\n
    return v0;\n
}\n
", "4206294:sub_402ed6": null, "4206304:list_pop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_pop(void* v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"<}\";\n
    v2 = list_head_node(v5);\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = v2;\n
    list_remove_node(v5);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4206401:sub_402f41": null, "4206416:list_insert_before_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int list_insert_before_node(struct_1 *v0, struct_2 *a0)\n
{\n
    struct_1 *v1;  // eax\n
\n
    a0->field_4 = v0;\n
    a0->field_8 = v0->field_8;\n
    a0->field_8->field_4 = a0;\n
    v1 = a0->field_4;\n
    v1->field_8 = a0;\n
    return v1;\n
}\n
", "4206472:sub_402f88": null, "4206480:list_insert_after_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
int list_insert_after_node(struct_0 *v0, void* a0)\n
{\n
    return list_insert_before_node(v0->field_4, a0);\n
}\n
", "4206532:sub_402fc4": null, "4206544:list_insert_node_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_insert_node_at_end(unsigned int *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = list_end_marker();\n
    list_insert_before_node(v1, a0);\n
    v5 = v3;\n
    *(v5) = *(v5) + 1;\n
    v6 = v2;\n
    return v3;\n
}\n
", "4206623:sub_40301f": null, "4206624:list_end_marker": "int list_end_marker(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4206638:sub_40302e": null, "4206640:list_insert_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_insert_at_end(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = list_create_node(a0);\n
    v5 = v2;\n
    return list_insert_node_at_end(v3, v1);\n
}\n
", "4206709:sub_403075": null, "4206720:list_insert_node_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_insert_node_at_start(unsigned int *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = list_start_marker();\n
    list_insert_after_node(v1, a0);\n
    v5 = v3;\n
    *(v5) = *(v5) + 1;\n
    v6 = v2;\n
    return v3;\n
}\n
", "4206799:sub_4030cf": null, "4206800:list_start_marker": "int list_start_marker(unsigned int v0)\n
{\n
    return list_end_marker(v0);\n
}\n
", "4206837:sub_4030f5": null, "4206848:list_insert_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_insert_at_start(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = list_create_node(a0);\n
    v5 = v2;\n
    return list_insert_node_at_start(v3, v1);\n
}\n
", "4206917:sub_403145": null, "4206928:cgc_list_insert_node_sorted": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_sorted(unsigned int *v5, unsigned int *a0, struct struct_0 **a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = \"<}\";\n
    v4 = 0;\n
    if (!*(v5))\n
    {\n
        v6 = list_insert_node_at_start(v5, a0);\n
        return v6;\n
    }\n
    v4 = list_head_node(v5);\n
    while (true)\n
    {\n
        v1 = v4;\n
        v2 = 0;\n
        if (v1 != list_end_marker(v5))\n
        {\n
            v0 = a2;\n
            v2 = v0 != a1(*(a0));\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        v4 = list_next_node();\n
    }\n
    list_insert_before_node(v4, a0);\n
    v6 = v5;\n
    *(v6) = *(v6) + 1;\n
    return v5;\n
}\n
", "4207186:sub_403252": null, "4207200:list_next_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int list_next_node(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4207214:sub_40326e": null, "4207216:list_insert_sorted": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int list_insert_sorted(unsigned int *v3, unsigned int a0, void* **a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_sorted(v3, v1, a1, a2);\n
}\n
", "4207306:sub_4032ca": null, "4207312:list_remove_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int list_remove_node(unsigned int *v2, struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8]\n
    unsigned int *v3;  // eax\n
\n
    v1 = a0->field_8;\n
    v0 = a0->field_4;\n
    v1->field_4 = v0;\n
    v0->field_8 = v1;\n
    a0->field_8 = 0;\n
    a0->field_4 = 0;\n
    v3 = v2;\n
    *(v3) = *(v3) - 1;\n
    return v2;\n
}\n
", "4207395:sub_403323": null, "4207408:cgc_list_tail_node": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_list_tail_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_c)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_c;\n
    return v0;\n
}\n
", "4207462:sub_403366": null, "4207472:cgc_list_length": "int cgc_list_length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4207485:sub_40337d": null, "4207488:cgc_list_find_node_with_data": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find_node_with_data(void* v7, struct struct_1 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = \"<}\";\n
    v4 = list_head_node(v7);\n
    v3 = list_end_marker(v7);\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = v4 != v3;\n
        if (!(v1 & 1))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a1;\n
        if (a0(*(v4)) == 1)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v4 = *((v4 + 4));\n
    }\n
}\n
", "4207674:sub_40343a": null, "4207680:malloc": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    void* field_44;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[18];\n
\n
int malloc(unsigned int v3)\n
{\n
    unsigned int v0[18];  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[18];  // ebx\n
    unsigned int v5[18];  // eax\n
    struct_0 *v6;  // ebx\n
    unsigned int v7[18];  // eax\n
\n
    v0[0] = \"<}\";\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v3 += 12;\n
    v1 = 0;\n
    init_heap();\n
    v4 = v0;\n
    v1 = cgc_list_find_node_with_data(&v4[1 + 10], &v4[0x100 + 10], v3);\n
    if (v1)\n
    {\n
        list_remove_node(&v0[1 + 10], v1);\n
    }\n
    else\n
    {\n
        if (v3 <= v0[16])\n
        {\n
            v5 = v0;\n
            v1 = v5[17];\n
            v5[16] = v5[16] - v3;\n
        }\n
        else\n
        {\n
            if (v0[16] > 12)\n
            {\n
                set_block_size(v0[17]);\n
                v6 = v0;\n
                list_insert_node_at_end(&v6[1].padding_0[40], v6->field_44);\n
                v7 = v0;\n
                v7[17] = 0;\n
                v7[16] = 0;\n
            }\n
            if (cgc_allocate(v3, 0))\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (!(v3 & 4095))\n
            {\n
                v0[16] = 0;\n
            }\n
            else\n
            {\n
                v0[16] = 0x1000 - (v3 & 4095);\n
            }\n
        }\n
        set_block_size(v1);\n
        v0[17] = v1 + v3;\n
    }\n
    list_insert_node_at_end(&v0[1 + 5], v1);\n
    v2 = v1 + 12;\n
    return v2;\n
}\n
", "4208174:sub_40362e": null, "4208176:is_enough_room": "int is_enough_room(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 >= a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4208220:sub_40365c": null, "4208224:set_block_size": "int set_block_size(unsigned int *v0, unsigned int a0)\n
{\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4208243:sub_403673": null, "4208256:free": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int allocated_list;\n
\n
int free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"<}\";\n
    v2 -= 12;\n
    list_remove_node(&allocated_list, v2);\n
    v4 = v1;\n
    return list_insert_node_at_end(v0 + 112, v2);\n
}\n
", "4208341:sub_4036d5": null, "4208352:init_heap": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char init_heap_done;\n
\n
int init_heap()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = &\"<}\";\n
    if (!init_heap_done)\n
    {\n
        list_init(&v0[1].padding_0[31], 0);\n
        list_init(&v0[1].padding_0[51], 0);\n
        v0->field_3c = 1;\n
        return v0;\n
    }\n
    return 0;\n
}\n
", "4208461:sub_40374d": null, "4208464:memcmp": "int memcmp(char *v5, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = v5;\n
    v2 = a0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v3[v1] == *((v2 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (v1 == a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3[v1] <= *((v2 + v1)))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4208675:sub_403823": null, "4208688:cgc_memcpy": "int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4208803:sub_4038a3": null, "4208816:cgc_memset": "int cgc_memset(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v3;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v1[v0] = a0;\n
    }\n
    v2 = a1;\n
    return v2;\n
}\n
", "4208919:sub_403917": null, "4208928:recv_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int recv_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \"<}\";\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v4 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_receive(v6, v2, a1 - v3))\n
            {\n
                v5 = -11;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4209143:sub_4039f7": null, "4209152:send_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int send_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \"<}\";\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v3 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(v6, v2, a1 - v3))\n
            {\n
                v5 = -9;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -9;\n
    return v5;\n
}\n
", "4209367:sub_403ad7": null, "4209376:streq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int streq(char *v4, char *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char *v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
\n
    v3 = v5;\n
    v0 = \"<}\";\n
    v1 = cgc_strlen(v4, a1);\n
    if (v1 != cgc_strlen(a0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (*(v4) == a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v6 = v4;\n
        v4 = v6 + 1;\n
        v7 = *(v6);\n
        v8 = a0;\n
        a0 = v8 + 1;\n
        if (v7 != *(v8))\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4209568:cgc_strlen": "int cgc_strlen(char *v2, char a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; a0 != *(v2); v0 += 1)\n
    {\n
        v2 += 1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4209665:sub_403c01": null, "4209680:strcmp": "int strcmp(char *v2, char *a0, char a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2) != a1)\n
        {\n
            v0 = 0;\n
            if (*(a0) != a1)\n
                v0 = *(v2) == *(a0);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    if (*(v2) == a1 && *(a0) == a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (*(v2) < *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4209895:sub_403ce7": null, "4209904:vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int vsnprintf()\n
{\n
    unsigned int v1;  // [bp-0x50]\n
    struct_0 *v8;  // [bp-0x14]\n
    char *v9;  // [bp-0x10]\n
    char v14;  // [bp+0x10]\n
    char v15;  // [bp+0x14]\n
\n
    v1 = \"<}\";\n
    v9 = 0;\n
    v8 = *(&v15);\n
    if (!v8)\n
        v8 = &v14;\n
}\n
", "4210908:sub_4040dc": null, "4210912:vfdprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int vfdprintf()\n
{\n
    unsigned int v1;  // [bp-0x4c]\n
    char *v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    char v14;  // [bp+0x10]\n
\n
    v1 = \"<}\";\n
    v8 = 0;\n
    v7 = *(&v14);\n
    if (!(!v7))\n
        goto LABEL_0x40412c;\n
    v9 = v8;\n
    return;\n
}\n
", "4211697:sub_4043f1": null, "4211712:snprintf": "int snprintf(unsigned int v7, unsigned int a0, char a1, char a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    char v8;  // [bp+0x18]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
\n
    v6 = v9;\n
    v5 = v10;\n
    v3 = &v8;\n
    v2 = v7;\n
    v1 = a3;\n
    v0 = v3;\n
    v4 = vsnprintf(v2, a0, a1, a2, v1);\n
    return v4;\n
}\n
", "4211824:fdprintf": "int fdprintf(unsigned int v6, char a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    char v7;  // [bp+0x14]\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
\n
    v5 = v8;\n
    v4 = v9;\n
    v2 = &v7;\n
    v1 = v6;\n
    v0 = v2;\n
    v3 = vfdprintf(v1, a0, a1, a2);\n
    return v3;\n
}\n
", "4211921:sub_4044d1": null, "4211936:fprintf": "int fprintf(char v4, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = vfdprintf(1, v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4212025:sub_404539": null, "4212032:create_card_having_value": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int create_card_having_value(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = malloc(1);\n
    if (!v1)\n
        cgc__terminate();\n
    *(v1) = v3;\n
    return 0;\n
}\n
", "4212114:sub_404592": null, "4212128:destroy_card": "int destroy_card(unsigned int v0)\n
{\n
    return free(v0);\n
}\n
", "4212165:sub_4045c5": null, "4212176:is_valid_value": "int is_valid_value(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (2 <= v2 && 10 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4212239:sub_40460f": null, "4212240:do_wager_ai": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
    char padding_38[28];\n
    unsigned int field_54;\n
    char field_58;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char deal;\n
\n
int do_wager_ai()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    struct_0 *v4;  // ecx\n
\n
    v0 = &\"<}\";\n
    v1 = 0;\n
    if (deal != 2 && v0->field_58 != 3)\n
    {\n
        v4 = v0;\n
        v1 = *((v4->field_34 + v4->field_54));\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4212358:sub_404686": null, "4212368:update_fp_idx": "typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int fp_idx;\n
\n
int update_fp_idx(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &\"<}\";\n
    v1 = 0;\n
    v1 = fp_idx + v2;\n
    if (0x1000 <= v1)\n
    {\n
        v3 = v0;\n
        v3->field_54 = v1 - 0x1000;\n
        return v0;\n
    }\n
    if (0 <= v1)\n
    {\n
        v3 = v0;\n
        v3->field_54 = v1;\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        v3->field_54 = v1 + 0x1000;\n
    }\n
    return v3;\n
}\n
", "4212519:sub_404727": null, "4212528:cgc_start_round": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
    char padding_50[8];\n
    char field_58;\n
    char field_59;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int bogus;\n
extern unsigned int players;\n
\n
int cgc_start_round()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &\"<}\";\n
    v1 = bogus;\n
    if (0 > recv_bytes(12, &players, 1))\n
        cgc__terminate();\n
    v5 = v0;\n
    v5->field_58 = 0;\n
    v5->field_59 = 0;\n
    v5->field_4c = 1;\n
    if (send_bytes(3, &v1, 1) != 1)\n
        return cgc__terminate();\n
    return 1;\n
}\n
", "4212716:sub_4047ec": null, "4212720:get_card": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int get_card()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"<}\";\n
    if (0 > recv_bytes(12, &v2, 1))\n
        cgc__terminate();\n
    if (0 > recv_bytes(12, &v1, 1))\n
        cgc__terminate();\n
    *((v0 + v1 - 1 + 88)) = v2;\n
    return v0;\n
}\n
", "4212884:sub_404894": null, "4212896:view_dealt_cards": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    char padding_34[20];\n
    char field_48;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int view_dealt_cards()\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v0 = &\"<}\";\n
    memset(&v2, 0, 10);\n
    if (0 > recv_bytes(12, &v2, v0->field_48 + 1))\n
        cgc__terminate();\n
    for (v1 = 1; v1 <= v0->field_48; v1 += 1)\n
    {\n
        if (!(&v2)[v1])\n
        {\n
            v6 = v0;\n
            v6->field_30 = v6->field_30 + 1;\n
        }\n
    }\n
    v7 = v3;\n
    return v1;\n
}\n
", "4213107:sub_404973": null, "4213120:give_wager": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int give_wager()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &\"<}\";\n
    v4 = v0;\n
    v4->field_50 = do_wager_ai();\n
    if (send_bytes(3, &v4->field_50, 4) != 4)\n
        return cgc__terminate();\n
    return 4;\n
}\n
", "4213232:view_wagers": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    char padding_34[20];\n
    char field_48;\n
    char padding_49[7];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int view_wagers()\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &\"<}\";\n
    memset(&v2, 0, 40);\n
    if (0 > recv_bytes(12, &v2, v0->field_48 + 1 << 2))\n
        cgc__terminate();\n
    for (v1 = 1; v1 <= v0->field_48; v1 += 1)\n
    {\n
        if (!*(&(&v2)[4 * v1]))\n
        {\n
            v6 = v0;\n
            v6->field_30 = v6->field_30 + 1;\n
        }\n
        if (v1 == 4 && v0->field_50 != *(&(&v2)[4 * v1]))\n
        {\n
            v7 = v0;\n
            v7->field_30 = v7->field_30 + 1;\n
        }\n
    }\n
    v8 = v3;\n
    return v1;\n
}\n
", "4213504:view_results": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    char padding_34[20];\n
    char field_48;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int view_results()\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v0 = &\"<}\";\n
    memset(&v2, 0, 40);\n
    if (0 > recv_bytes(12, &v2, v0->field_48 + 1 << 2))\n
        cgc__terminate();\n
    for (v1 = 1; v1 <= v0->field_48; v1 += 1)\n
    {\n
        if (!*(&(&v2)[4 * v1]))\n
        {\n
            v6 = v0;\n
            v6->field_30 = v6->field_30 + 1;\n
        }\n
        if (v1 == 4)\n
        {\n
            if (*(&(&v2)[4 * v1]) == 1)\n
                update_fp_idx(126);\n
            else\n
                update_fp_idx(-77);\n
        }\n
    }\n
    v7 = v3;\n
    return v1;\n
}\n
", "4213799:sub_404c27": null, "4213808:cgc_exchange_money": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exchange_money()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &\"<}\";\n
    v1 = 0;\n
    if (0 > recv_bytes(12, &v1, 4))\n
        cgc__terminate();\n
    v5 = v0;\n
    v5->field_2c = v1 + v5->field_2c;\n
    return v0;\n
}\n
", "4213920:cgc_end_round": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int bogus;\n
extern char players;\n
extern void* round_active;\n
\n
int cgc_end_round()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = bogus;\n
    round_active = 0;\n
    players = 0;\n
    if (send_bytes(3, &v1, 1) != 1)\n
        return cgc__terminate();\n
    return 1;\n
}\n
", "4214041:sub_404d19": null, "4214048:i_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int bogus;\n
\n
int i_quit()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"<}\";\n
    v1 = bogus;\n
    if (send_bytes(3, &v1, 1) != 1)\n
        return cgc__terminate();\n
    return 1;\n
}\n
", "4214152:sub_404d88": null, "4214160:process": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int process()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x13]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"<}\";\n
    v2 = 0;\n
    memset(&v1, 0, 7);\n
    if (0 > recv_bytes(12, &v1, 6))\n
        cgc__terminate();\n
    if (!memcmp(v0 - 7648, &v1, 6))\n
    {\n
        cgc_start_round();\n
        return v2;\n
    }\n
    if (!memcmp(v0 - 7642, &v1, 6))\n
    {\n
        cgc_end_round();\n
    }\n
    else if (!memcmp(v0 - 7636, &v1, 6))\n
    {\n
        get_card();\n
    }\n
    else if (!memcmp(v0 - 7630, &v1, 6))\n
    {\n
        view_dealt_cards();\n
    }\n
    else if (!memcmp(v0 - 7624, &v1, 6))\n
    {\n
        give_wager();\n
    }\n
    else if (!memcmp(v0 - 7618, &v1, 6))\n
    {\n
        view_wagers();\n
    }\n
    else if (!memcmp(v0 - 7612, &v1, 6))\n
    {\n
        view_results();\n
    }\n
    else if (!memcmp(v0 - 7606, &v1, 6))\n
    {\n
        cgc_exchange_money();\n
    }\n
    else if (!memcmp(v0 - 7600, &v1, 6))\n
    {\n
        i_quit();\n
        v2 = -2;\n
    }\n
    return v2;\n
}\n
", "4214849:sub_405041": null, "4214864:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc]\n
\n
    v0 = \"<}\";\n
    v2 = 0;\n
    v1 = 0;\n
    do\n
    {\n
        v1 = process();\n
    } while (!v1);\n
    return 0;\n
}\n
", "4214984:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}