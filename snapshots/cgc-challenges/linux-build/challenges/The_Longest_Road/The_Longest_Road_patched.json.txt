{"4202496:_init": "extern struct_0 *g_40919c;\n
\n
int _init()\n
{\n
    if (g_40919c)\n
    {\n
        g_40919c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 28787;\n
    v6 = v5 + 19;\n
    v7 = v5 + 19;\n
    if (v7 == v6)\n
        return v5 + 19;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 28723;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 19;\n
    v9 = (v6 + 19 - (v6 + 19) >> 31) + (19 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern unsigned int __dso_handle;\n
extern char completed.0;\n
extern unsigned int g_409198;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (completed.0)\n
        return;\n
    if (g_409198)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    completed.0 = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_floor": null, "4203204:sub_4022c4": null, "4203216:cgc_round_away_from_zero": null, "4203370:sub_40236a": null, "4203376:cgc_round": null, "4203520:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203612:sub_40245c": null, "4203616:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4203825:sub_402531": null, "4203840:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v3 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4204033:sub_402601": null, "4204048:cgc_float_to_str": null, "4204906:sub_40296a": null, "4204912:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v14, struct struct_1 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_0 *v6;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x60]\n
    struct_0 *v8;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0x58]\n
    char v10;  // [bp-0x51]\n
    char v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    struct struct_1 **v15;  // eax\n
    struct struct_1 **v16;  // eax\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct struct_1 **v22;  // eax\n
    struct struct_1 **v23;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    if (!v14)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v13 = v12;\n
            return v13;\n
        }\n
        else if (*(v14) != 64)\n
        {\n
            cgc_putc(*(v14));\n
            v14 += 1;\n
            v12 += 1;\n
        }\n
        else\n
        {\n
            v14 += 1;\n
            v1 = *(v14);\n
            if (!v1)\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 99)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v10 = *(v15);\n
                cgc_putc(v10);\n
                v12 += 1;\n
            }\n
            else if (v1 == 100)\n
            {\n
                v16 = a0;\n
                a0 = v16 + 1;\n
                v9 = &*(v16)->field_0;\n
                cgc_int_to_str(v9, &v11);\n
                for (v8 = &v11; *(v8); v8 += 1)\n
                {\n
                    cgc_putc(*(v8));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v19 = ftop<4> - 1 + 1;\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v11;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v21 = v20 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v11; v4->field_0; v4 += 1)\n
                {\n
                    cgc_putc(v4->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v22 = a0;\n
                a0 = v22 + 1;\n
                for (v3 = &*(v22)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 120)\n
            {\n
                v23 = a0;\n
                a0 = v23 + 1;\n
                v7 = *(v23);\n
                cgc_int_to_hex(v7, &v11);\n
                for (v6 = &v11; v6->field_0; v6 += 1)\n
                {\n
                    cgc_putc(v6->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            v14 += 1;\n
        }\n
    }\n
}\n
", "4205671:sub_402c67": null, "4205680:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4205738:sub_402caa": null, "4205744:cgc_sprng": "typedef struct struct_0 {\n
    char padding_0[240];\n
    unsigned int field_f0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprng(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // edi\n
    struct_0 *v16;  // eax\n
    unsigned int v17;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = a0;\n
    v2 = v4;\n
    for (v1 = 0; v1 < 16; v1 += 1)\n
    {\n
        v5 = v2;\n
        v6 = v3;\n
        v3 = v6 ^ v6 / 0x1000;\n
        v2 = v5 ^ ((v6 CONCAT v5) * 0x100000 >> 32);\n
        v8 = v2;\n
        v9 = v3;\n
        v3 = v9 ^ ((v9 CONCAT v8) * 0x2000000 >> 32);\n
        v2 = v8 ^ v8 * 0x2000000;\n
        v12 = v2;\n
        v13 = v3;\n
        v3 = v13 ^ v13 / 0x8000000;\n
        v2 = v12 ^ ((v13 CONCAT v12) * 32 >> 32);\n
        v15 = v2;\n
        v16 = v0;\n
        v17 = v1;\n
        *(&v16->padding_0[112 + 8 * v17]) = v15 * 3625897269;\n
        *(&v16->padding_0[116 + 8 * v17]) = (v15 * 3625897269 >> 32) + v15 * 419896726 + v3 * 3625897269;\n
    }\n
    v0->field_f0 = 0;\n
    return v0;\n
}\n
", "4205970:sub_402d92": null, "4205984:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int position;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[116 + 8 * position]);\n
    v2 = *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]);\n
    v9 = position + 1;\n
    if (v9 < 0)\n
        v9 = position + 16;\n
    position = position + -(v9 & -0x10) + 1;\n
    v1 = *(&(&_GLOBAL_OFFSET_TABLE_)[116 + 8 * position]);\n
    v0 = *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]);\n
    v10 = v0;\n
    v11 = v1;\n
    v1 = v11 ^ ((v11 CONCAT v10) * 0x8000000 >> 32);\n
    v0 = v10 ^ v10 * 0x8000000;\n
    v14 = v0;\n
    v15 = v1;\n
    v1 = v15 ^ v15 / 0x2000;\n
    v0 = v14 ^ ((v15 CONCAT v14) * 0x80000 >> 32);\n
    v2 ^= v3 >> 14;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[116 + 8 * position]) = v3 ^ v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]) = v2 ^ v0;\n
    return *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]) * 3479400805;\n
}\n
", "4206248:sub_402ea8": null, "4206256:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 <= v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = a0 - v5 + 1;\n
    v2 = (0 CONCAT -1) /m v3;\n
    do\n
    {\n
        v1 = cgc_prng();\n
    } while (v1 >= v3 * v2);\n
    v4 = (0 CONCAT v1) /m v2 + v5;\n
    return v4;\n
}\n
", "4206385:sub_402f31": null, "4206400:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4206472:sub_402f88": null, "4206480:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206534:sub_402fc6": null, "4206544:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206598:sub_403006": null, "4206608:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4206674:sub_403052": null, "4206688:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4206754:sub_4030a2": null, "4206768:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206822:sub_4030e6": null, "4206832:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4206926:sub_40314e": null, "4206928:cgc_isnan": null, "4206951:sub_403167": null, "4206960:cgc_isinf": null, "4207007:sub_40319f": null, "4207008:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned long v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_4033d2:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_4033ab;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_4033ab;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_4033ab;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_4033d2;\n
                if (!v4)\n
                {\n
LABEL_403327:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_4033ab;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_403327;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_4033ab:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4207596:sub_4033ec": null, "4207600:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4208004:sub_403584": null, "4208016:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4208107:sub_4035eb": null, "4208112:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        v1[v2] = 0;\n
    }\n
    return v2;\n
}\n
", "4208267:sub_40368b": null, "4208272:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4208380:sub_4036fc": null, "4208384:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4208462:sub_40374e": null, "4208464:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4208572:sub_4037bc": null, "4208576:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4208771:sub_403883": null, "4208784:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4208861:sub_4038dd": null, "4208864:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        *((v5 + v4)) = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            *((v5 + v4)) = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4209056:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4209215:sub_403a3f": null, "4209216:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4209415:sub_403b07": null, "4209424:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 8321, 1);\n
}\n
", "4209547:sub_403b8b": null, "4209552:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4209658:sub_403bfa": null, "4209664:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
    unsigned int field_58;\n
    unsigned int field_5c;\n
    struct struct_1 *field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_58)\n
        {\n
            cgc_deallocate(v4->field_58);\n
            v12 = v4;\n
            v12->field_58 = 0;\n
            v12->field_5c = 0;\n
            v12->field_60 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_58)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_60 >= v11->field_58 + v11->field_5c)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_58)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_5c = cgc_strlen(v10);\n
        v0 = &v13->field_58;\n
        if (cgc_allocate(v13->field_5c, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_58, v10);\n
        v14 = v4;\n
        v14->field_60 = v14->field_58;\n
    }\n
    v10 = &v4->field_60->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_58 + v15->field_5c;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_58 + v16->field_5c)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_54 = v8;\n
    *(v7) = 0;\n
    v17->field_60 = v7 + 1;\n
    v9 = v17->field_54;\n
    return v9;\n
}\n
", "4210411:sub_403eeb": null, "4210416:cgc_write": "int cgc_write(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    cgc_transmit(1, v3, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4210513:sub_403f51": null, "4210528:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4210720:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc();\n
    cgc_memset(v1, 0, v3 * a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4210810:sub_40407a": null, "4210816:cgc_malloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_heap_manager;\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_heap_manager)\n
    {\n
        cgc_allocate(0x1000, 0);\n
        v7 = v1;\n
        *((v7 + 100)) = *(&v3);\n
        *(*((v7 + 100))) = 0x1000;\n
        *((*((v7 + 100)) + 8)) = 4;\n
        *((*((v7 + 100)) + 4)) = 0x1000 - *((*((v7 + 100)) + 8));\n
        cgc_allocate(0x1000, 0);\n
        cgc_memset(*((*((v1 + 100)) + 12)), 0, 0x1000);\n
        v4 = *((*((v1 + 100)) + 12));\n
        *(v4) = 4084;\n
        *((v4 + 4)) = 0;\n
    }\n
    v4 = *((*((v1 + 100)) + 12));\n
    if (v6 > *(v4))\n
    {\n
        cgc_allocate(0x1000, 0);\n
        if (!*((v4 + 4)))\n
        {\n
            cgc_puts(v1 - 8544);\n
            cgc__terminate();\n
        }\n
        v4 = *((v4 + 4));\n
        *(v4) = 4084;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v8 = v4;\n
        *(v8) = *(v8) - v6;\n
        v2 = v4 + 8;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if ((*((v2 + 4)) & 1))\n
                v0 = *(v2) < v6 + 8;\n
            if (!(v0 & 1))\n
                break;\n
            v2 = v2 + 8 + *(v2);\n
        }\n
        *(v2) = v6;\n
        *((v2 + 4)) = 1;\n
        v5 = v2 + 8;\n
        return v5;\n
    }\n
}\n
", "4211329:sub_404281": null, "4211344:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    struct_1 *v3;  // eax\n
\n
    v1 = v2 - 8;\n
    v1->field_4 = 2;\n
    v0 = &v2 & -0x1000;\n
    v3 = v0;\n
    *(&v3) = v1->field_0 + *(&v3);\n
    return v0;\n
}\n
", "4211397:sub_4042c5": null, "4211408:cgc_getNextPieceNum": "typedef struct struct_0 {\n
    char padding_0[1396];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40971c;\n
\n
int cgc_getNextPieceNum()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40971c == -1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v1 = v3->padding_0[244 + 9 * v3->field_574] + 1;\n
    return v1;\n
}\n
", "4211489:sub_404321": null, "4211504:cgc_create_random_piece": "typedef struct struct_0 {\n
    char padding_0[104];\n
    char field_68;\n
    char padding_69[1291];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40971c;\n
\n
int cgc_create_random_piece(char *v7)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_0 *v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40971c >= 128)\n
    {\n
        v6 = 33;\n
        return v6;\n
    }\n
    if (!cgc_isTopPiecePlaced() && v0->field_574 > 0)\n
    {\n
        v6 = 22;\n
        return v6;\n
    }\n
    *(v7) = cgc_getNextPieceNum();\n
    if (v0->field_574 != -1)\n
    {\n
        v3 = cgc_random_in_range(0, 3);\n
        for (v2 = v3; v2 == v3; v2 = cgc_random_in_range(0, 3));\n
        v1 = 0;\n
        while (v1 < 4)\n
        {\n
            if (v1 == v3)\n
            {\n
LABEL_404495:\n
                v7[1 + 2 * v1] = 253;\n
                goto LABEL_4044b0;\n
            }\n
            else\n
            {\n
                if (v1 == v2)\n
                    goto LABEL_404495;\n
                v7[1 + 2 * v1] = 252;\n
LABEL_4044b0:\n
                v1 += 1;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v5 = cgc_random_in_range(1, 3);\n
        for (v4 = 0; v4 < 4; v4 += 1)\n
        {\n
            if (v4 != v5)\n
                *(1 + v7 + 0x2 * v4) = 252;\n
            else\n
                *(1 + v7 + 0x2 * v4) = 253;\n
        }\n
    }\n
    if (v0->field_574 < 0)\n
    {\n
        v8 = v0;\n
        v8->field_68 = v8->field_68 + 1;\n
    }\n
    cgc_push_piece();\n
    v6 = 1;\n
    return v6;\n
}\n
", "4211976:sub_404508": null, "4211984:cgc_push_piece": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
    char padding_9[1387];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40971c;\n
\n
int cgc_push_piece(char v1[9])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v4;  // edx\n
\n
    v0 = v2;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40971c >= 128)\n
        return v3;\n
    v4 = v0;\n
    v4->field_574 = v4->field_574 + 1;\n
    v4->padding_9[235 + 9 * v4->field_574] = v1[0];\n
    v4->padding_9[236 + 9 * v4->field_574] = v1[1];\n
    v4->padding_9[237 + 9 * v4->field_574] = v1[2];\n
    v4->padding_9[238 + 9 * v4->field_574] = v1[3];\n
    v4->padding_9[239 + 9 * v4->field_574] = v1[4];\n
    v4->padding_9[240 + 9 * v4->field_574] = v1[5];\n
    v4->padding_9[241 + 9 * v4->field_574] = v1[6];\n
    v4->padding_9[242 + 9 * v4->field_574] = v1[7];\n
    v3 = &v4->padding_9[235 + 9 * v4->field_574];\n
    *((v3 + 8)) = v1[8];\n
}\n
", "4212266:sub_40462a": null, "4212272:cgc_discard_piece": "typedef struct struct_0 {\n
    char padding_0[1396];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40971c;\n
\n
int cgc_discard_piece()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40971c < 0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_isTopPiecePlaced() != 1)\n
    {\n
        v3 = v0;\n
        v3->field_574 = v3->field_574 - 1;\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4212382:sub_40469e": null, "4212384:cgc_connect_pieces": "typedef struct struct_0 {\n
    char padding_0[104];\n
    char field_68;\n
    char padding_69[1291];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_connect_pieces(char *v6, char a0, char *a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_0 *v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1a]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v6[1 + 2 * a0] == 253 && a1[1 + 2 * a2] == 253)\n
    {\n
        v7 = v2;\n
        v6[1 + 2 * a0] = *(a1);\n
        v6[2 + 2 * a0] = a2;\n
        a1[1 + 2 * a2] = *(v6);\n
        a1[2 + 2 * a2] = a0;\n
        v7->field_68 = v7->field_68 + 1;\n
        v5 = 1;\n
        return v5;\n
    }\n
    v0 = v6[1 + 2 * a0];\n
    v1 = a1[1 + 2 * a2];\n
    cgc_printf(&v2[6].padding_0[84]);\n
    for (v4 = 0; v4 < v2->field_574; v4 += 1)\n
    {\n
        v0 = &v3;\n
        cgc_piece_to_pkt(&v2->padding_69[139 + 9 * v4]);\n
        v0 = v4;\n
        v1 = &v3;\n
        cgc_printf(&v2[6].padding_0[68]);\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4212715:sub_4047eb": null, "4212720:cgc_piece_to_pkt": "int cgc_piece_to_pkt(char v0[8], char a0[9])\n
{\n
    char v1[9];  // eax, Other Possible Types: unsigned int\n
\n
    a0[0] = v0[0] + 48;\n
    if (v0[1] == 253)\n
    {\n
        a0[1] = 48;\n
        a0[2] = 121;\n
    }\n
    else\n
    {\n
        a0[1] = 48;\n
        a0[2] = 110;\n
    }\n
    if (v0[3] == 253)\n
    {\n
        a0[3] = 49;\n
        a0[4] = 121;\n
    }\n
    else\n
    {\n
        a0[3] = 49;\n
        a0[4] = 110;\n
    }\n
    if (v0[5] == 253)\n
    {\n
        a0[5] = 50;\n
        a0[6] = 121;\n
    }\n
    else\n
    {\n
        a0[5] = 50;\n
        a0[6] = 110;\n
    }\n
    if (v0[7] == 253)\n
    {\n
        a0[7] = 51;\n
        v1 = a0;\n
        v1[8] = 121;\n
        return a0;\n
    }\n
    a0[7] = 51;\n
    v1 = a0;\n
    *((v1 + 8)) = 110;\n
    return a0;\n
}\n
", "4212943:sub_4048cf": null, "4212944:cgc_get_max_road_len": "extern char cgc_current_max_road_len;\n
\n
int cgc_get_max_road_len()\n
{\n
    return cgc_current_max_road_len;\n
}\n
", "4212968:sub_4048e8": null, "4212976:cgc_isTopPiecePlaced": "typedef struct struct_0 {\n
    char padding_0[1396];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40971c;\n
\n
int cgc_isTopPiecePlaced()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    struct_0 *v4;  // ecx\n
    struct_0 *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40971c < 0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v4 = v0;\n
        if (*(245 + &v4->padding_0[9 * v4->field_574] + 0x2 * v1) != 252)\n
        {\n
            v5 = v0;\n
            if (*(245 + &v5->padding_0[9 * v5->field_574] + 0x2 * v1) != 253)\n
            {\n
                v2 = 1;\n
                return v2;\n
            }\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4213155:sub_4049a3": null, "4213168:cgc_get_piece": "typedef struct struct_0 {\n
    char padding_0[1396];\n
    unsigned int field_574;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_piece(char v3)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 > v0->field_574)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        else if (*(244 + &v0->padding_0[0] + 0x9 * v1) != v3)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4213292:sub_404a2c": null, "4213296:cgc_seed_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_seed_prng()\n
{\n
    unsigned int v0;  // [bp-0x12c]\n
    unsigned int v1;  // [bp-0x128]\n
    unsigned int v2;  // [bp-0x124]\n
    unsigned int v3;  // [bp-0x120]\n
    unsigned int v4;  // [bp-0x114]\n
    char v5;  // [bp-0x110]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // eax\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v5, 0x100);\n
    cgc_printf(v0 - 8455);\n
    v4 = cgc_receive_until(&v5, 10, 255);\n
    if (v4 < 2)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v3 = -1;\n
    v2 = -1;\n
    for (v1 = 0; v1 < v4; v1 += 1)\n
    {\n
        v10 = v2;\n
        v11 = v3;\n
        v14 = (&v5)[v1];\n
        v15 = ((v11 CONCAT v10) * 16 >> 32) ^ v14 >> 31;\n
        v2 = ((v10 CONCAT v11) * 16 >> 32) ^ v14;\n
        v3 = v15;\n
    }\n
    cgc_sprng(v2, v3);\n
    v6 = v4;\n
    return v6;\n
}\n
", "4213611:sub_404b6b": null, "4213616:cgc_populate_packet": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_populate_packet(struct_0 *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a1 != 16)\n
    {\n
        cgc_printf(v0 - 8436);\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memcpy(v3, a0, a1);\n
    v1 = v3->field_4 - 48;\n
    if (v1 <= 10 && v1 >= 0)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    cgc_printf(v0 - 8388);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4213807:sub_404c2f": null, "4213808:cgc_validate_packet": "typedef struct struct_0 {\n
    char padding_0[1428];\n
    unsigned int field_594;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_validate_packet(char v6[16])\n
{\n
    char v0[16];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x24]\n
    struct_0 *v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v7;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = 1;\n
    if (v6[0] < 97 && v6[0] > 99)\n
    {\n
        v0 = v6[0];\n
        cgc_printf(&v2[5].padding_0[1186]);\n
        v5 = 0;\n
    }\n
    if (v6[0] != 99)\n
    {\n
        if (v6[1] <= 113 && !(v6[1] < 100))\n
            goto LABEL_404ce2;\n
        v0 = v6[1];\n
        cgc_printf(&v2[5].padding_0[1189]);\n
        v5 = 0;\n
LABEL_404ce2:\n
    }\n
    else\n
    {\n
        if (v6[1] <= 122 && !(v6[1] < 118))\n
            goto LABEL_404d2a;\n
        v0 = v6[1];\n
        cgc_printf(&v2[5].padding_0[1194]);\n
        v5 = 0;\n
LABEL_404d2a:\n
    }\n
    v4 = v6[4] - 48;\n
    if (v4 <= 10 && !(v4 < 0))\n
        goto LABEL_404d73;\n
    v0 = v6[4];\n
    cgc_printf(&v2[5].padding_0[1159]);\n
    v5 = 0;\n
LABEL_404d73:\n
    if (v6[1] != 100 && v6[3] - 48 != v2->field_594)\n
    {\n
        v7 = v2;\n
        v0 = v6[3];\n
        v1 = v7->field_594 + 48;\n
        cgc_printf(&v7[5].padding_0[1130]);\n
        v5 = 0;\n
    }\n
    v3 = cgc_get_checksum();\n
    if (v6[15] != v3)\n
    {\n
        v0 = v3;\n
        v1 = v6[15];\n
        cgc_printf(&v2[5].padding_0[1091]);\n
        *(&v0[0]) = v6;\n
        cgc_printf(&v2[5].padding_0[592]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4214337:sub_404e41": null, "4214352:cgc_get_checksum": "int cgc_get_checksum(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = 15;\n
    return cgc_calculateCS(v1);\n
}\n
", "4214402:sub_404e82": null, "4214416:cgc_packet_handler": "typedef struct struct_0 {\n
    char padding_0[104];\n
    char field_68;\n
    char padding_69[1291];\n
    unsigned int field_574;\n
    char padding_578[36];\n
    unsigned int field_59c;\n
    char padding_5a0[4];\n
    unsigned int field_5a4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_packet_handler(char v27[10])\n
{\n
    struct_1 *v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    struct_0 *v2;  // [bp-0x90]\n
    char v3;  // [bp-0x8c]\n
    char v4;  // [bp-0x8b]\n
    char v5;  // [bp-0x87]\n
    unsigned int v6;  // [bp-0x7c]\n
    unsigned int v7;  // [bp-0x78]\n
    unsigned int v8;  // [bp-0x74]\n
    char v9;  // [bp-0x6e]\n
    char v10;  // [bp-0x6d]\n
    unsigned int v11;  // [bp-0x6c]\n
    char v12[9];  // [bp-0x65]\n
    char v13;  // [bp-0x5c]\n
    char v14;  // [bp-0x5b]\n
    char v15;  // [bp-0x57]\n
    char v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x4b]\n
    char v18;  // [bp-0x47]\n
    unsigned int v19;  // [bp-0x3c]\n
    unsigned int v20;  // [bp-0x38]\n
    char v21;  // [bp-0x34]\n
    char v22;  // [bp-0x24]\n
    char v23;  // [bp-0x23]\n
    char v24;  // [bp-0x1f]\n
    char v25;  // [bp-0x16]\n
    unsigned int v26;  // [bp-0x10]\n
    struct_0 *v28;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v27[0] != 98)\n
    {\n
        if (v27[0] == 99)\n
        {\n
            if (v27[2] - 48 != v2->field_5a4 + 1)\n
            {\n
                cgc_printf(&v2[5].padding_69[799]);\n
                cgc_send_nack(v27[2]);\n
                v26 = 0;\n
                return v26;\n
            }\n
            cgc_send_ack();\n
            if (v27[1] == 120)\n
            {\n
                v20 = cgc_create_random_piece(&v21);\n
                if (v20 == 1)\n
                {\n
                    cgc_piece_to_pkt(&v21, v12);\n
                    v22 = 99;\n
                    v23 = 120;\n
                    cgc_memcpy(&v24, v12, 9);\n
                    v25 = 48;\n
                    cgc_encrypt_data(&v24, 10);\n
                    cgc_send_packet_new(&v22);\n
                    v26 = 1;\n
                    return v26;\n
                }\n
                if (v20 == 33)\n
                {\n
                    v19 = &v2[5].padding_69[764];\n
                    v22 = 99;\n
                    v23 = 120;\n
                    v0 = &v24;\n
                    v1 = v19;\n
                    cgc_strncpy(v0, v1, cgc_strlen(v19));\n
                    cgc_strlen(v19);\n
                    cgc_send_packet_new(&v22);\n
                    v26 = 1;\n
                    return v26;\n
                }\n
                if (v20 != 22)\n
                {\n
                    v13 = 99;\n
                    v14 = 120;\n
                    cgc_strncpy(&v15, &v2[5].padding_69[750], 9);\n
                    cgc_send_packet_new(&v13);\n
                    v26 = 1;\n
                    return v26;\n
                }\n
                v16 = 99;\n
                v17 = 120;\n
                cgc_strncpy(&v18, &v2[5].padding_69[758], 7);\n
                cgc_send_packet_new(&v16);\n
                v26 = 1;\n
                return v26;\n
            }\n
            else if (v27[1] == 122)\n
            {\n
                if (v2->field_59c == 1)\n
                {\n
                    cgc_decrypt_packet(&v27[5], v27[4] - 48);\n
                }\n
                else\n
                {\n
                    if (v2->field_59c == 2)\n
                    {\n
                        cgc_decrypt_packet(&v27[5], v27[4] - 48);\n
                    }\n
                    else\n
                    {\n
                        v26 = 0;\n
                        return v26;\n
                    }\n
                }\n
                if (v27[4] != 53)\n
                {\n
                    v26 = 0;\n
                    return v26;\n
                }\n
                if (v2->field_574 >= 1)\n
                {\n
                    v10 = v27[6];\n
                    v9 = v27[9];\n
                    v8 = cgc_get_piece(v27[5] - 48);\n
                    if (v8 == -1)\n
                    {\n
                        cgc_printf(&v2[5].padding_69[733]);\n
                        v26 = 0;\n
                        return v26;\n
                    }\n
                    v7 = cgc_get_piece(v27[8] - 48);\n
                    if (v7 == -1)\n
                    {\n
                        cgc_printf(&v2[5].padding_69[687]);\n
                        v26 = 0;\n
                        return v26;\n
                    }\n
                    v28 = v2;\n
                    if (!cgc_connect_pieces(&v28->padding_69[139 + 9 * v8], v10 - 48, &v28->padding_69[139 + 9 * v7], v9 - 48))\n
                    {\n
                        v6 = &v2[5].padding_69[641];\n
                        v3 = 99;\n
                        v4 = 122;\n
                        cgc_memcpy(&v5, v6, 8);\n
                        cgc_send_packet_new(&v3);\n
                        v26 = 1;\n
                        return v26;\n
                    }\n
                    v22 = 99;\n
                    v23 = 122;\n
                    v24 = v2->field_68 + 48;\n
                    cgc_encrypt_data(&v24, 10);\n
                    cgc_send_packet_new(&v22);\n
                    v26 = 1;\n
                    return v26;\n
                }\n
                else\n
                {\n
                    v11 = &v2[5].padding_69[740];\n
                    v22 = 99;\n
                    v23 = 122;\n
                    cgc_memcpy(&v24, v11, 6);\n
                    cgc_send_packet_new(&v22);\n
                    v26 = 1;\n
                    return v26;\n
                }\n
            }\n
            else if (v27[1] == 119)\n
            {\n
                v22 = 99;\n
                v23 = 119;\n
                v24 = v2->field_68 + 48;\n
                cgc_encrypt_data(&v24, 10);\n
                cgc_send_packet_new(&v22);\n
                v26 = 1;\n
                return v26;\n
            }\n
            else if (v27[1] == 118)\n
            {\n
                if (cgc_discard_piece() != 1)\n
                {\n
                    v22 = 99;\n
                    v23 = 118;\n
                    cgc_strncpy(&v24, &v2[5].padding_69[632], 7);\n
                    cgc_send_packet_new(&v22);\n
                    v26 = 1;\n
                    return v26;\n
                }\n
                v22 = 99;\n
                v23 = 118;\n
                v24 = 121;\n
                cgc_send_packet_new(&v22);\n
                v26 = 1;\n
                return v26;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        if (v27[1] == 100)\n
        {\n
            cgc_send_assoc_response();\n
            v26 = 1;\n
            return v26;\n
        }\n
        else if (v27[1] == 101)\n
        {\n
            v26 = 0;\n
            return v26;\n
        }\n
        else if (v27[1] == 102)\n
        {\n
            cgc_send_auth_response();\n
            v26 = 1;\n
            return v26;\n
        }\n
        else if (v27[1] == 105)\n
        {\n
            v26 = 0;\n
            return v26;\n
        }\n
        else if (v27[1] == 104)\n
        {\n
            cgc_handle_auth_challenge_resp();\n
            v26 = 1;\n
            return v26;\n
        }\n
        else if (v27[1] == 106)\n
        {\n
            if (!cgc_handle_disass_req())\n
            {\n
                cgc_printf(&v2[5].padding_69[873]);\n
                v26 = 2;\n
                return v26;\n
            }\n
            v26 = 1;\n
            return v26;\n
        }\n
        else\n
        {\n
            if (v27[1] == 107)\n
            {\n
                cgc_printf(&v2[5].padding_69[858]);\n
                v26 = 0;\n
                return v26;\n
            }\n
            else if (v27[1] == 108)\n
            {\n
                if (!cgc_handle_deauth_req())\n
                {\n
                    cgc_printf(&v2[5].padding_69[824]);\n
                    v26 = 2;\n
                    return v26;\n
                }\n
                v26 = 1;\n
                return v26;\n
            }\n
            else\n
            {\n
                if (v27[1] == 109)\n
                {\n
                    cgc_printf(&v2[5].padding_69[858]);\n
                    v26 = 0;\n
                    return v26;\n
                }\n
            }\n
        }\n
    }\n
    v26 = 1;\n
    return v26;\n
}\n
", "4216791:sub_4057d7": null, "4216800:cgc_send_assoc_response": "extern unsigned int _GLOBAL_OFFSET_TABLE_[362];\n
extern unsigned int last_connection_number;\n
\n
int cgc_send_assoc_response(char v8)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1[362];  // [bp-0x30]\n
    char v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x2b]\n
    char v4;  // [bp-0x27]\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x1b]\n
    char v7;  // [bp-0x17]\n
    unsigned int v9[362];  // ebx\n
    unsigned int v10;  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (v8 != last_connection_number + 1)\n
    {\n
        v2 = 98;\n
        v3 = 101;\n
        v4 = 48;\n
        v0 = 1;\n
        v10 = cgc_send_packet_new(&v2);\n
        return v10;\n
    }\n
    v9 = v1;\n
    v9[360] = v9[360] + 1;\n
    v9[361] = -1;\n
    v9[357] = v8;\n
    v5 = 98;\n
    v6 = 101;\n
    v7 = 49;\n
    v0 = 1;\n
    cgc_send_packet_new(&v5);\n
    v10 = cgc_printf(&v1[5 + 182] + 1);\n
    return v10;\n
}\n
", "4216977:sub_405891": null, "4216992:cgc_send_auth_response": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_auth_response(char *v2)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*(v2) == 97)\n
    {\n
        v3 = cgc_send_auth_challenge();\n
        return v3;\n
    }\n
    if (*(v2) == 120)\n
    {\n
        v3 = cgc_send_auth_challenge();\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 7945);\n
        v0 = v2;\n
        v3 = cgc_printf(v1 - 7923);\n
    }\n
    return v3;\n
}\n
", "4217139:sub_405933": null, "4217152:cgc_handle_auth_challenge_resp": "extern unsigned int _GLOBAL_OFFSET_TABLE_[360];\n
extern unsigned int g_40972d;\n
\n
int cgc_handle_auth_challenge_resp(unsigned int v20)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    unsigned int v1[360];  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x60]\n
    char v3;  // [bp-0x5c]\n
    char v4;  // [bp-0x5b]\n
    char v5;  // [bp-0x57]\n
    char v6;  // [bp-0x4c]\n
    char v7;  // [bp-0x4b]\n
    char v8;  // [bp-0x47]\n
    char *v9;  // [bp-0x3c], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x35]\n
    char v11;  // [bp-0x34]\n
    char v12;  // [bp-0x33]\n
    char v13;  // [bp-0x2f]\n
    char v14;  // [bp-0x24]\n
    char v15;  // [bp-0x23]\n
    char v16;  // [bp-0x1f]\n
    unsigned int v17;  // [bp-0x14]\n
    char v18;  // [bp-0xd]\n
    unsigned int v19;  // [bp-0xc]\n
    unsigned int v21[360];  // ebx\n
    unsigned int v22[360];  // ebx\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v2 = g_40972d;\n
    if (g_40972d == 1)\n
    {\n
        v10 = 1;\n
        for (v9 = 0; v9 < 5; v9 += 1)\n
        {\n
            if (*((v20 + v9)) != *(1408 + &v1[0] + v9))\n
                v10 = 0;\n
        }\n
        if (v10)\n
        {\n
            v1[351] = 0;\n
            v6 = 98;\n
            v7 = 105;\n
            v8 = 49;\n
            v0 = 1;\n
            cgc_send_packet_new(&v6);\n
            v1[359] = 1;\n
            v19 = 1;\n
            return v19;\n
        }\n
        v21 = v1;\n
        v0 = &v21[352];\n
        cgc_printf(&v21[5 + 174] + 2);\n
        v3 = 98;\n
        v4 = 105;\n
        v5 = 48;\n
        v0 = 1;\n
        cgc_send_packet_new(&v3);\n
    }\n
    else\n
    {\n
        if (v2 != 2)\n
        {\n
            v19 = 0;\n
            return v19;\n
        }\n
        v18 = 1;\n
        for (v17 = 0; v17 < 5; v17 += 1)\n
        {\n
            if (*((v20 + v17)) != *(1408 + &v1[0] + v17))\n
                v18 = 0;\n
        }\n
        if (v18)\n
        {\n
            v1[351] = 0;\n
            v14 = 98;\n
            v15 = 105;\n
            v16 = 49;\n
            v0 = 1;\n
            cgc_send_packet_new(&v14);\n
            v1[359] = 2;\n
            v19 = 1;\n
            return v19;\n
        }\n
        v22 = v1;\n
        v0 = &v22[352];\n
        cgc_printf(&v22[5 + 174] + 2);\n
        v11 = 98;\n
        v12 = 105;\n
        v13 = 48;\n
        v0 = 1;\n
        cgc_send_packet_new(&v11);\n
    }\n
    v19 = 0;\n
    return v19;\n
}\n
", "4217693:sub_405b5d": null, "4217696:cgc_handle_disass_req": "extern unsigned int _GLOBAL_OFFSET_TABLE_[362];\n
extern unsigned int current_encryption;\n
\n
int cgc_handle_disass_req(char v9)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1[362];  // [bp-0x30]\n
    char v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x2b]\n
    char v4;  // [bp-0x27]\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x1b]\n
    char v7;  // [bp-0x17]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[362];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (current_encryption == -1 && !v1[355])\n
    {\n
        if (v9 != 51)\n
        {\n
            v5 = 98;\n
            v6 = 107;\n
            v7 = 48;\n
            v0 = 1;\n
            cgc_send_packet_new(&v5);\n
            v8 = 0;\n
            return v8;\n
        }\n
        v2 = 98;\n
        v3 = 107;\n
        v4 = 49;\n
        v0 = 1;\n
        cgc_send_packet_new(&v2);\n
        v10 = v1;\n
        v10[361] = -1;\n
        v10[350] = -1;\n
        v10[360] = v10[357];\n
        v10[357] = -1;\n
        v8 = 1;\n
        return v8;\n
    }\n
    cgc_printf(&v1[5 + 159] + 1);\n
    v8 = 0;\n
    return v8;\n
}\n
", "4217933:sub_405c4d": null, "4217936:cgc_handle_deauth_req": "extern unsigned int _GLOBAL_OFFSET_TABLE_[360];\n
\n
int cgc_handle_deauth_req(char v9)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1[360];  // [bp-0x30]\n
    char v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x2b]\n
    char v4;  // [bp-0x27]\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x1b]\n
    char v7;  // [bp-0x17]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[360];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (v9 == 55)\n
    {\n
        v2 = 98;\n
        v3 = 109;\n
        v4 = 49;\n
        v0 = 1;\n
        cgc_send_packet_new(&v2);\n
        v10 = v1;\n
        v10[359] = -1;\n
        v10[355] = 0;\n
        v8 = 1;\n
        return v8;\n
    }\n
    v5 = 98;\n
    v6 = 109;\n
    v7 = 48;\n
    v0 = 1;\n
    cgc_send_packet_new(&v5);\n
    v8 = 0;\n
    return v8;\n
}\n
", "4218093:sub_405ced": null, "4218096:cgc_send_nack": "extern unsigned int current_packet_count_recvd;\n
\n
int cgc_send_nack(char v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x1b]\n
    char v3;  // [bp-0x17]\n
    char v4;  // [bp-0x16]\n
\n
    v1 = 97;\n
    v2 = 113;\n
    v3 = v5;\n
    v4 = a0 + 48;\n
    current_packet_count_recvd = current_packet_count_recvd + 1;\n
    v0 = 2;\n
    return cgc_send_packet_new(&v1);\n
}\n
", "4218184:sub_405d48": null, "4218192:cgc_send_ack": "extern unsigned int current_packet_count_recvd;\n
\n
int cgc_send_ack(char v4)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x1b]\n
    char v3;  // [bp-0x17]\n
\n
    v1 = 97;\n
    v2 = 112;\n
    v3 = v4;\n
    current_packet_count_recvd = current_packet_count_recvd + 1;\n
    v0 = 1;\n
    return cgc_send_packet_new(&v1);\n
}\n
", "4218268:sub_405d9c": null, "4218272:cgc_send_packet_new": "extern unsigned int _GLOBAL_OFFSET_TABLE_[358];\n
\n
int cgc_send_packet_new(char v2[5], unsigned int a0)\n
{\n
    unsigned int v0[358];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3[358];  // ecx\n
    unsigned int v4;  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (v2[0] != 99)\n
    {\n
        v2[2] = 48;\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        v4 = v3[350] + 1;\n
        v3[350] = v4;\n
        v2[2] = v4 + 48;\n
    }\n
    v2[3] = v0[357] + 48;\n
    for (v1 = a0; v1 < 10; v1 += 1)\n
    {\n
        v2[1 + v1] = 48;\n
    }\n
    v2[4] = a0 + 48;\n
    cgc_set_checksum();\n
    cgc_write(v2, 16);\n
    return cgc_printf(&v0[5 + 290] + 1);\n
}\n
", "4218490:sub_405e7a": null, "4218496:cgc_encrypt_data": "extern unsigned int _GLOBAL_OFFSET_TABLE_[18];\n
\n
int cgc_encrypt_data(unsigned int v15, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3[18];  // [bp-0x30]\n
    char v4;  // [bp-0x2a]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    void* v8;  // [bp-0x20]\n
    char v9;  // [bp-0x1a]\n
    char v10;  // [bp-0x19]\n
    unsigned int v11;  // [bp-0x18]\n
    char *v12;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v16[18];  // ecx\n
    unsigned int v17[18];  // ecx\n
\n
    v3[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (a1 == 2)\n
    {\n
        v13 = 0;\n
        for (v12 = 0; v12 < a0; v12 += 1)\n
        {\n
            v0 = *((v15 + v12));\n
            v11 = cgc_locate_char();\n
            if (v11 == -1)\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
            else if (!(v12 >> 31 CONCAT v12) /m 2 >> 32)\n
            {\n
                v2 = v3[16];\n
                v10 = *((v2 + ((v11 + v3[15] >> 31 CONCAT v11 + v3[15]) /m v3[17] >> 32)));\n
                *((v15 + v12)) = v10;\n
            }\n
            else\n
            {\n
                v9 = v11 - v3[15];\n
                if (v9 < 0)\n
                {\n
                    v16 = v3;\n
                    v9 = v16[17] - (v16[15] - v11);\n
                }\n
                *((v15 + v12)) = *((v3[16] + v9));\n
            }\n
        }\n
    }\n
    if (a1 == 1)\n
    {\n
        v8 = 0;\n
        for (v7 = 0; v7 < a0; v7 += 1)\n
        {\n
            v0 = *((v15 + v7));\n
            v6 = cgc_locate_char();\n
            if (v6 == -1)\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
            else if ((v7 >> 31 CONCAT v7) /m 2 >> 32)\n
            {\n
                v1 = v3[16];\n
                v4 = *((v1 + ((v6 + v3[15] >> 31 CONCAT v6 + v3[15]) /m v3[17] >> 32)));\n
                *((v15 + v7)) = v4;\n
            }\n
            else\n
            {\n
                v5 = v6 - v3[15];\n
                if (v5 < 0)\n
                {\n
                    v17 = v3;\n
                    v5 = v17[17] - (v17[15] - v6);\n
                }\n
                *((v15 + v7)) = *((v3[16] + v5));\n
            }\n
        }\n
    }\n
    v14 = 1;\n
    return v14;\n
}\n
", "4219055:sub_4060af": null, "4219056:cgc_decrypt_packet": "extern unsigned int _GLOBAL_OFFSET_TABLE_[18];\n
\n
int cgc_decrypt_packet(unsigned int v15, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3[18];  // [bp-0x30]\n
    char v4;  // [bp-0x2a]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    void* v8;  // [bp-0x20]\n
    char v9;  // [bp-0x1a]\n
    char v10;  // [bp-0x19]\n
    unsigned int v11;  // [bp-0x18]\n
    char *v12;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v16[18];  // ecx\n
    unsigned int v17[18];  // ecx\n
\n
    v3[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (a1 == 2)\n
    {\n
        v13 = 0;\n
        for (v12 = 0; v12 < a0; v12 += 1)\n
        {\n
            v0 = *((v15 + v12));\n
            v11 = cgc_locate_char();\n
            if (v11 == -1)\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
            else if ((v12 >> 31 CONCAT v12) /m 2 >> 32)\n
            {\n
                v2 = v3[16];\n
                v9 = *((v2 + ((v11 + v3[15] >> 31 CONCAT v11 + v3[15]) /m v3[17] >> 32)));\n
                *((v15 + v12)) = v9;\n
            }\n
            else\n
            {\n
                v10 = v11 - v3[15];\n
                if (v10 < 0)\n
                {\n
                    v16 = v3;\n
                    v10 = v16[17] - (v16[15] - v11);\n
                }\n
                *((v15 + v12)) = *((v3[16] + v10));\n
            }\n
        }\n
    }\n
    if (a1 == 1)\n
    {\n
        v8 = 0;\n
        for (v7 = 0; v7 < a0; v7 += 1)\n
        {\n
            v0 = *((v15 + v7));\n
            v6 = cgc_locate_char();\n
            if (v6 == -1)\n
            {\n
                v14 = 0;\n
                return v14;\n
            }\n
            else if (!(v7 >> 31 CONCAT v7) /m 2 >> 32)\n
            {\n
                v1 = v3[16];\n
                v5 = *((v1 + ((v6 + v3[15] >> 31 CONCAT v6 + v3[15]) /m v3[17] >> 32)));\n
                *((v15 + v7)) = v5;\n
            }\n
            else\n
            {\n
                v4 = v6 - v3[15];\n
                if (v4 < 0)\n
                {\n
                    v17 = v3;\n
                    v4 = v17[17] - (v17[15] - v6);\n
                }\n
                *((v15 + v7)) = *((v3[16] + v4));\n
            }\n
        }\n
    }\n
    v14 = 1;\n
    return v14;\n
}\n
", "4219615:sub_4062df": null, "4219616:cgc_send_auth_challenge": "typedef struct struct_1 {\n
    char padding_0[1413];\n
    unsigned int field_585;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int enc_chal;\n
\n
int cgc_send_auth_challenge(unsigned int v6)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x24]\n
    char v2;  // [bp-0x23]\n
    char v3;  // [bp-0x1f]\n
    struct_0 *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v5;  // [bp-0xd]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    enc_chal = 1;\n
    for (v4 = 0; v4 < 5; v4 += 1)\n
    {\n
        *((&v5 + v4)) = cgc_random_in_range(97, 112);\n
    }\n
    *(&(&v0->padding_0)[1]) = v6;\n
    v1 = 98;\n
    v2 = 103;\n
    cgc_memcpy(&v3, &v5, 5);\n
    cgc_send_packet_new(&v1, 5);\n
    cgc_encrypt_data(&v5, 5, v6);\n
    return cgc_memcpy(&v0->padding_0[1408], &v5, 5);\n
}\n
", "4219855:sub_4063cf": null, "4219856:cgc_send_packet": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_packet(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_write(v2, 16);\n
    v4 = v1;\n
    return cgc_printf(v0 - 8321);\n
}\n
", "4219923:sub_406413": null, "4219936:cgc_set_checksum": "typedef struct struct_0 {\n
    char padding_0[15];\n
    char field_f;\n
} struct_0;\n
\n
int cgc_set_checksum(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = 15;\n
    v1->field_f = cgc_calculateCS(v1);\n
    return v1;\n
}\n
", "4219991:sub_406457": null, "4220000:cgc_calculateCS": "int cgc_calculateCS(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x5]\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v1 ^= v0[v2];\n
    }\n
    return v1;\n
}\n
", "4220077:sub_4064ad": null, "4220080:cgc_locate_char": "extern unsigned int _GLOBAL_OFFSET_TABLE_[18];\n
\n
int cgc_locate_char(char v3)\n
{\n
    unsigned int v0[18];  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v0[17])\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        if (v1[v0[16]] == v3)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4220202:sub_40652a": null, "4220208:cgc_check_win": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_win(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_get_max_road_len() < v5)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_printf(v0 - 7792);\n
    v1 = cgc_receive_until(&v2, 10, 5);\n
    (&v2)[v1] = 0;\n
    cgc_printf(v0 - 7763);\n
    v3 = 1;\n
    return v3;\n
}\n
", "4220357:sub_4065c5": null, "4220368:main": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned int field_48;\n
    char padding_4c[1320];\n
    unsigned int field_574;\n
    unsigned int field_578;\n
    unsigned int field_57c;\n
    unsigned int field_580;\n
    unsigned int field_584;\n
    char field_588;\n
    char padding_589[3];\n
    unsigned int field_58c;\n
    unsigned int field_590;\n
    unsigned int field_594;\n
    char padding_598[4];\n
    unsigned int field_59c;\n
    unsigned int field_5a0;\n
    unsigned int field_5a4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v13, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x140]\n
    unsigned int v1;  // [bp-0x13c]\n
    unsigned int v2;  // [bp-0x138]\n
    unsigned int v3;  // [bp-0x134]\n
    void* v4;  // [bp-0x130], Other Possible Types: unsigned int\n
    char v5[16];  // [bp-0x12c]\n
    void* v6;  // [bp-0x11c]\n
    char v7;  // [bp-0x118]\n
    char v8;  // [bp-0x114]\n
    void* v9;  // [bp-0x113]\n
    char v10;  // [bp-0x10c]\n
    void* v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    cgc_printf(\"go time\\n
\");\n
    v15 = v0;\n
    v15->field_5a4 = -1;\n
    v15->field_578 = -1;\n
    v15->field_5a0 = -1;\n
    v15->field_594 = -1;\n
    v15->field_59c = -1;\n
    v15->field_58c = 0;\n
    v6 = 0;\n
    memset(&v7, 0, 5);\n
    v16 = v0;\n
    v9 = 0;\n
    v16->field_57c = v6;\n
    v16->field_580 = *(&v7);\n
    v16->field_584 = *(&v8);\n
    v16->field_588 = *(&v9 + 3);\n
    v16->field_574 = -1;\n
    v4 = 0;\n
    v3 = cgc_seed_prng();\n
    if (!v3)\n
    {\n
        cgc_printf(&v0[5].padding_4c[423]);\n
        v11 = 1;\n
        return v11;\n
    }\n
    for (v0->field_590 = v3; true; v4 += 1)\n
    {\n
        cgc_printf(&v0[5].padding_4c[390]);\n
        if (cgc_check_win(v0->field_48) == 1)\n
        {\n
            cgc_printf(&v0[5].padding_4c[367]);\n
            v11 = 1;\n
            return v11;\n
        }\n
        else if (v4 >= 3)\n
        {\n
            cgc_printf(&v0[5].padding_4c[351]);\n
            v11 = 0;\n
            return v11;\n
        }\n
        else\n
        {\n
            v2 = cgc_receive_until(&v10, 10, 255);\n
            if (!cgc_strcmp(&v10, &v0[5].padding_4c[356]))\n
            {\n
                cgc_printf(&v0[5].padding_4c[351]);\n
                v11 = 1;\n
                return v11;\n
            }\n
            else if (v2 != 16)\n
            {\n
                cgc_printf(&v0[5].padding_4c[1120]);\n
                cgc_printf(&v0[5].padding_4c[341]);\n
            }\n
            else if (cgc_populate_packet(v5, &v10, v2))\n
            {\n
                v1 = cgc_validate_packet(v5);\n
                if (!v1)\n
                {\n
                    cgc_printf(&v0[5].padding_4c[330]);\n
                }\n
                else\n
                {\n
                    v1 = cgc_packet_handler(v5);\n
                    if (v1)\n
                    {\n
                        if (v1 == 2)\n
                        {\n
                            cgc_printf(&v0[5].padding_4c[278]);\n
                            v11 = 1;\n
                            return v11;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4221312:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:memset": null, "5242908:cgc_deallocate": null, "5242912:cgc_log10": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}