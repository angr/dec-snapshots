{"4206592:_init": "extern struct_0 *g_40e1d0;\n
\n
int _init()\n
{\n
    if (g_40e1d0)\n
    {\n
        g_40e1d0();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206704:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206720:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206736:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206752:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206768:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206784:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206800:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206816:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206832:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206848:sub_403100": "int sub_403100()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206854:sub_403106": null, "4206864:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206907:sub_40313b": null, "4206908:sub_40313c": "int sub_40313c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206912:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206916:sub_403144": null, "4206928:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 45187;\n
    v6 = v5 + 17;\n
    v7 = v5 + 17;\n
    if (v7 == v6)\n
        return v5 + 17;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4206979:sub_403183": "int sub_403183()\n
{\n
}\n
", "4206985:sub_403189": "int sub_403189()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4206992:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 45123;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 17;\n
    v9 = (v6 + 17 - (v6 + 17) >> 31) + (17 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207063:sub_4031d7": "int sub_4031d7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207072:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40e1c4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40e1c4)\n
    {\n
        v0 = __dso_handle;\n
        sub_403100();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207147:sub_40322b": "int sub_40322b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207152:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207161:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207165:sub_40323d": null, "4207168:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207222:sub_403276": null, "4207232:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207286:sub_4032b6": null, "4207296:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207350:sub_4032f6": null, "4207360:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207456:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207552:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207606:sub_4033f6": null, "4207616:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4207690:sub_40344a": null, "4207696:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4207770:sub_40349a": null, "4207776:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207870:sub_4034fe": null, "4207872:_ZN5CUtil6StringC1Ev": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int CUtil::String::__ctor__(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax\n
\n
    v0 = v1;\n
    v2 = v0;\n
    v2->field_0 = operator new[](1);\n
    v2->field_0->field_0 = 0;\n
    v2->field_4 = 0;\n
    return v0;\n
}\n
", "4207937:sub_403541": null, "4207952:_ZN5CUtil6StringC1ERKS0_": "int CUtil::String::__ctor__(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2[2];  // ecx\n
\n
    v2 = v1;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    v0 = a0;\n
    return CUtil::String::SetInternal(v1);\n
}\n
", "4208014:sub_40358e": null, "4208016:_ZN5CUtil6String11SetInternalERKS0_": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::SetInternal(struct_0 *v4, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc]\n
    struct_0 *v5;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // ecx\n
    char *v9;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4;\n
    if (v3->field_0)\n
    {\n
        v1 = v3->field_0;\n
        if (v1)\n
            operator delete[](v1);\n
    }\n
    v5 = v3;\n
    v5->field_4 = a0[1];\n
    v7 = v3;\n
    v7->field_0 = operator new[](v5->field_4 + 1);\n
    v0 = v7->field_4;\n
    cgc_memcpy(v7->field_0, a0[0]);\n
    v8 = v3;\n
    v9 = v8->field_0;\n
    v9[v8->field_4] = 0;\n
    return v9;\n
}\n
", "4208178:sub_403632": null, "4208192:_ZN5CUtil6StringC2EPKc": "int CUtil::String::__base_ctor__(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2[2];  // ecx\n
\n
    v2 = v1;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    v0 = a0;\n
    return CUtil::String::SetInternal(v1);\n
}\n
", "4208254:sub_40367e": null, "4208256:_ZN5CUtil6String11SetInternalEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::SetInternal(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4;\n
    if (*(v3))\n
    {\n
        v1 = *(v3);\n
        if (v1)\n
            operator delete[](v1);\n
    }\n
    if (!a0)\n
    {\n
        v5 = v3;\n
        *(v5) = operator new[](1);\n
        *(*(v5)) = 0;\n
        *((v5 + 4)) = 0;\n
        return v3;\n
    }\n
    v7 = v3;\n
    *((v7 + 4)) = cgc_strlen();\n
    v9 = v3;\n
    *(v9) = operator new[](*((v7 + 4)) + 1);\n
    v0 = *((v9 + 4));\n
    cgc_memcpy(*(v9), a0);\n
    v10 = v3;\n
    v5 = *(v10);\n
    *((v5 + *((v10 + 4)))) = 0;\n
    return *(v10);\n
}\n
", "4208475:sub_40375b": null, "4208480:_ZN5CUtil6StringD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::__dtor__(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v3;\n
    if (v2[0])\n
    {\n
        v0 = v2[0];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4208572:sub_4037bc": null, "4208576:_ZNK5CUtil6StringeqERKS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::operator== const(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    unsigned int v5[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1] != a0[1])\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v5 = v2;\n
    v0 = v5[1];\n
    v3 = !cgc_memcmp(v5[0], a0[0]);\n
    return v3 & 1;\n
}\n
", "4208691:sub_403833": null, "4208704:_ZNK5CUtil6StringneERKS0_": "int CUtil::String::operator!= const(unsigned int v0[2], unsigned int a0[2])\n
{\n
    return (CUtil::String::operator== const(v0, a0) ^ 255) & 1;\n
}\n
", "4208760:sub_403878": null, "4208768:_ZN5CUtil6StringaSERKS0_": "int CUtil::String::operator=(void* v0, unsigned int a0[2])\n
{\n
    return CUtil::String::SetInternal(v0, a0);\n
}\n
", "4208817:sub_4038b1": null, "4208832:_ZN5CUtil6StringaSEPKc": "int CUtil::String::operator=(unsigned int v0, unsigned int a0)\n
{\n
    return CUtil::String::SetInternal(v0, a0);\n
}\n
", "4208881:sub_4038f1": null, "4208896:_ZNK5CUtil6StringplERKS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::operator+ const(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    CUtil::String::__ctor__(v3, v5);\n
    v2 = CUtil::String::operator+=(v3);\n
    CUtil::String::__dtor__(v3);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4208995:sub_403963": null, "4209008:_ZN5CUtil6StringpLERKS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::operator+=(unsigned int v7[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3[2];  // [bp-0x18]\n
    char *v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v10[2];  // eax\n
    unsigned int v11[2];  // eax\n
    unsigned int v12[2];  // eax\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = v7;\n
    v5 = v3[1] + a0[1];\n
    v10 = v3;\n
    v4 = operator new[](v5 + 1);\n
    v0 = v10[1];\n
    cgc_memcpy(v4, v10[0]);\n
    v0 = a0[1];\n
    cgc_memcpy(&v4[v3[1]], a0[0]);\n
    v11 = v3;\n
    v4[a0[1] + v11[1]] = 0;\n
    if (v11[0])\n
    {\n
        v1 = v3[0];\n
        if (v1)\n
            operator delete[](v1);\n
    }\n
    v12 = v3;\n
    v12[0] = v4;\n
    v12[1] = v5;\n
    return v3;\n
}\n
", "4209228:sub_403a4c": null, "4209232:_ZNK5CUtil6String5c_strEv": "int CUtil::String::c_str const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4209245:sub_403a5d": null, "4209248:_ZNK5CUtil6String5UpperEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::Upper const(unsigned int *v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v2 = v1;\n
    v3 = a0;\n
    v5 = 0;\n
    CUtil::String::__ctor__(v1, v3);\n
    for (v4 = 0; v4 < v3->field_4; v4 += 1)\n
    {\n
        if (cgc_islower(v4[*(v1)]))\n
            v4[*(v1)] = cgc_toupper(v4[*(v1)]);\n
    }\n
    v5 = 1;\n
    if (!(v5 & 1))\n
        CUtil::String::__dtor__(v1);\n
    v9 = v6;\n
    return v2;\n
}\n
", "4209456:_ZNK5CUtil6String5LowerEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::Lower const(unsigned int *v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v2 = v1;\n
    v3 = a0;\n
    v5 = 0;\n
    CUtil::String::__ctor__(v1, v3);\n
    for (v4 = 0; v4 < v3->field_4; v4 += 1)\n
    {\n
        if (cgc_isupper(v4[*(v1)]))\n
            v4[*(v1)] = cgc_tolower(v4[*(v1)]);\n
    }\n
    v5 = 1;\n
    if (!(v5 & 1))\n
        CUtil::String::__dtor__(v1);\n
    v9 = v6;\n
    return v2;\n
}\n
", "4209664:_ZNK5CUtil6StringixERKm": "int CUtil::String::operator[] const(unsigned int v3[2], unsigned int *a0)\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1[0] = v3;\n
    v0[0] = v1;\n
    if ((CUtil::String::IsEmpty const() & 1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*(a0) < v1[1])\n
    {\n
        v2 = *((v1[0] + *(a0)));\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4209777:sub_403c71": null, "4209792:_ZNK5CUtil6String7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::String::IsEmpty const(struct_0 *v0)\n
{\n
    return !v0->field_4;\n
}\n
", "4209815:sub_403c97": null, "4209824:_ZNK5CUtil6String4TrimEm": "int CUtil::String::Trim const(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v4;\n
    v0 = a1;\n
    CUtil::String::SubString const(v1, a0, 0);\n
    v7 = v1;\n
    v8 = v2;\n
    return v1;\n
}\n
", "4209905:sub_403cf1": null, "4209920:_ZNK5CUtil6String9SubStringEmm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::SubString const(unsigned int v8, unsigned int a0[2], char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[2];  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[2];  // [bp-0x20]\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v9;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v2 = v1;\n
    v3[0] = a0;\n
    if (a2 > v3[1])\n
        a2 = v3[1];\n
    if (a1 < v3[1] && a1 < a2)\n
    {\n
        v7 = a2 - a1;\n
        v6 = operator new[](v7 + 1);\n
        v5 = 0;\n
        for (v4 = a1; v4 < a2; v4 += 1)\n
        {\n
            v9 = v5;\n
            v5 = v9 + 1;\n
            v6[v9] = v4[v3[0]];\n
        }\n
        v6[v5] = 0;\n
        CUtil::String::__base_ctor__(v1, v6);\n
        return v2;\n
    }\n
    CUtil::String::__base_ctor__(v1, v0 - 12167);\n
    return v2;\n
}\n
", "4210183:sub_403e07": null, "4210192:_ZNK5CUtil6String10TrimSpacesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::TrimSpaces const(unsigned int v6, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3[2];  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    v2 = v1;\n
    v3[0] = a0;\n
    for (v4 = 0; v4 < v3[1]; v4 += 1)\n
    {\n
        if (v4[v3[0]] != 32)\n
            break;\n
    }\n
    CUtil::String::SubString const(v1, v3, v4, -1);\n
    return v2;\n
}\n
", "4210349:sub_403ead": null, "4210352:_ZN5CUtil6String5ToIntERj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::ToInt(unsigned int v4, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if ((CUtil::String::IsEmpty const(v1) & 1))\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    *(a0) = cgc_atoi();\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4210452:sub_403f14": null, "4210464:_ZNK5CUtil6String9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::String::GetLength const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4210478:sub_403f2e": null, "4210480:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 72));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 72)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        if (*(v5) < *(*((v4 + 4))))\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
        v6 = *((v4 + 4));\n
        v4 = v6;\n
    }\n
}\n
", "4210817:sub_404081": null, "4210832:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned int field_48;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[167].padding_0[60]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_48)\n
    {\n
        v7 = v1;\n
        v7->field_48 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4211057:sub_404171": null, "4211072:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4211143:sub_4041c7": null, "4211152:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_48);\n
    v3[0] = v1->field_48;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4211369:sub_4042a9": null, "4211376:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: struct_2 *, unsigned int\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4211460:sub_404304": null, "4211472:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[72];\n
    struct struct_0 *field_48;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_48; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4211753:sub_404429": null, "4211760:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4211868:sub_40449c": null, "4211872:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 72)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 72));\n
        *((v6 + v3 * 4 + 72)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4212157:sub_4045bd": null, "4212160:cgc_round": null, "4212306:sub_404652": null, "4212320:cgc_floor": null, "4212476:sub_4046fc": null, "4212480:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[716];\n
    unsigned int field_2cc;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_2cc = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[588 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[588 + 4 * (v2 + 1 & 31)]);\n
        *((588 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4212703:sub_4047df": null, "4212704:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4212751:sub_40480f": null, "4212752:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[588 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4213035:sub_40492b": null, "4213040:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4213228:sub_4049ec": null, "4213232:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4213333:sub_404a55": null, "4213344:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4213378:sub_404a82": null, "4213392:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4213662:sub_404b9e": null, "4213664:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4213756:sub_404bfc": null, "4213760:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4213948:sub_404cbc": null, "4213952:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4214255:sub_404def": null, "4214256:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_405329:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_405329;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 12664)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4215612:sub_40533c": null, "4215616:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4215674:sub_40537a": null, "4215680:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4215749:sub_4053c5": null, "4215760:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4215899:sub_40545b": null, "4215904:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4216176:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4216832:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4219248:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4219914:sub_40640a": null, "4219920:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4220460:sub_40662c": null, "4220464:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4220511:sub_40665f": null, "4220512:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4220549:sub_406685": null, "4220560:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4220797:sub_40677d": null, "4220800:cgc_atof": null, "4221085:sub_40689d": null, "4221088:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4221164:sub_4068ec": null, "4221168:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4221305:sub_406979": null, "4221312:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4221448:sub_406a08": null, "4221456:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(v7[0]); v7 = &v7[1]);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = &v7[1];\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = &v7[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_406b2a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_406b2a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_406b7d;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_406b7d;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_406b7d:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_406b2a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (!cgc_isupper(v1))\n
                v1 -= 87;\n
            else\n
                v1 -= 55;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_406cb5:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_406cba:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            v7 = &v7[1];\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_406cba;\n
            goto LABEL_406cb5;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4222227:sub_406d13": null, "4222240:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4222299:sub_406d5b": null, "4222304:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4222359:sub_406d97": null, "4222368:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4222523:sub_406e3b": null, "4222528:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4222686:sub_406ede": null, "4222688:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[584];\n
    struct struct_1 *field_248;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_248)\n
        {\n
            v6 = v1->field_248;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_248 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_248 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_248 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_248 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4223207:sub_4070e7": null, "4223216:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4223566:sub_40724e": null, "4223568:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4223751:sub_407307": null, "4223760:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v4];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4223913:sub_4073a9": null, "4223920:_ZN4CCLFC1Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
int CCLF::__ctor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_4 = 0;\n
    v1->field_8 = 0;\n
    return v0;\n
}\n
", "4223942:sub_4073c6": null, "4223952:_ZN4CCLFD1Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCLF::__dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v3;\n
    if (v2->field_4)\n
    {\n
        v0 = v2->field_4;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v4 = v2;\n
    v4->field_4 = 0;\n
    v4->field_8 = 0;\n
    return v2;\n
}\n
", "4224050:sub_407432": null, "4224064:_ZN4CCLF8LoadFileEPhj": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[1];\n
    unsigned short field_a;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    unsigned short field_1;\n
    unsigned short field_3;\n
    unsigned int field_5;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCLF::LoadFile(struct_1 *v12, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x34]\n
    struct_1 *v2;  // [bp-0x30]\n
    struct_2 *v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    struct_2 *v5;  // [bp-0x24]\n
    char v6;  // [bp-0x1d]\n
    unsigned short v7;  // [bp-0x1c]\n
    unsigned short v8;  // [bp-0x1a]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    char v11;  // [bp-0xd]\n
    struct_1 *v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    struct_1 *v16;  // eax\n
    struct_1 *v17;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v12;\n
    if (!a0)\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    else if (a1 > 0xfa00)\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    else if (!a1)\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    else if (a1 >= 8)\n
    {\n
        v10 = a0->field_0;\n
        if (v10 != 3277347921)\n
        {\n
            v11 = 0;\n
            return v11 & 1;\n
        }\n
        v9 = a0->field_4;\n
        if (a1 != v9)\n
        {\n
            v11 = 0;\n
            return v11 & 1;\n
        }\n
        else if (a1 >= 12)\n
        {\n
            v8 = a0->field_8;\n
            v7 = a0->field_a;\n
            if (v8 > 10)\n
            {\n
                v11 = 0;\n
                return v11 & 1;\n
            }\n
            else if (a1 - 12 >= v8 * 9)\n
            {\n
                for (v6 = 0; v6 < v8; v6 += 1)\n
                {\n
                    v5 = 12 + &a0->field_0 + 9 * v6;\n
                    if (v5->field_0 && v5->field_0 != 1 && v5->field_0 != 2)\n
                    {\n
                        v11 = 0;\n
                        return v11 & 1;\n
                    }\n
                    if (*(&(&v5->field_0)[1]) + *((&v5->field_3 + 1)) > a1)\n
                    {\n
                        v11 = 0;\n
                        return v11 & 1;\n
                    }\n
                    v4 = *((&v5->field_1 + 1));\n
                    v4 = *(&(&v5->field_0)[1]) + v4;\n
                    if (v4 > 0x10000)\n
                    {\n
                        v11 = 0;\n
                        return v11 & 1;\n
                    }\n
                }\n
                v13 = v2;\n
                v13->field_a = v7;\n
                v13->field_8 = v8;\n
                if (v13->field_4)\n
                {\n
                    v0 = v2->field_4;\n
                    if (v0)\n
                        operator delete[](v0);\n
                }\n
                v14 = v2->field_8;\n
                tmp_5 = v14;\n
                v15 = v14 * 12;\n
                if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t5, 0xc<32>, 0x0<32>))\n
                    v15 = -1;\n
                v2->field_4 = operator new[](v15);\n
                for (v6 = 0; v6 < v8; v6 += 1)\n
                {\n
                    v16 = v2;\n
                    v3 = 12 + &a0->field_0 + 9 * v6;\n
                    *((v16->field_4 + v6 * 12)) = v3->field_0;\n
                    *((v16->field_4 + v6 * 12 + 2)) = *(&(&v3->field_0)[1]);\n
                    *((v16->field_4 + v6 * 12 + 4)) = *((&v3->field_1 + 1));\n
                    v17 = v2;\n
                    *((v17->field_4 + v6 * 12 + 8)) = operator new[](*(&(&v3->field_0)[1]));\n
                    cgc_memcpy(*((v17->field_4 + v6 * 12 + 8)), a0 + *((&v3->field_3 + 1)), *(&(&v3->field_0)[1]));\n
                }\n
                v11 = 1;\n
                return v11 & 1;\n
            }\n
            else\n
            {\n
                v11 = 0;\n
                return v11 & 1;\n
            }\n
        }\n
        else\n
        {\n
            v11 = 0;\n
            return v11 & 1;\n
        }\n
    }\n
    else\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
}\n
", "4224855:sub_407757": null, "4224864:_Z9ReadBytesPhj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int ReadBytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    for (v4 = 0; v4 < a0; v4 = *(&v3) + v4)\n
    {\n
        v2 = a0 - v4;\n
        v0 = &v3;\n
        if (cgc_receive(0, v6 + v4, v2))\n
            cgc__terminate();\n
        if (!*(&v3))\n
            cgc__terminate();\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4225068:sub_40782c": null, "4225072:_ZN4CCPUC2EPv": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
int CCPU::__base_ctor__(struct_0 *v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    CUtil::String::__ctor__(&v0->padding_0[52]);\n
    v0->field_3c = a0;\n
    return v0;\n
}\n
", "4225129:sub_407869": null, "4225136:_ZN4CCPUD1Ev": "int CCPU::__dtor__(unsigned int v0)\n
{\n
    return CUtil::String::__dtor__(v0 + 52);\n
}\n
", "4225176:sub_407898": null, "4225184:_ZN4CCPU4InitEP4CMMUP3CVMP4CDMAt": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[28];\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned int field_2c;\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::Init(struct_0 *v4, unsigned int a0, unsigned int a1, unsigned int a2, unsigned short a3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0xa]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    else if (!a1)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    else if (a2)\n
    {\n
        v5 = v1;\n
        v5->field_0 = a2;\n
        v5->field_4 = a0;\n
        v5->field_8 = a1;\n
        for (v2 = 0; v2 < 16; v2 += 1)\n
        {\n
            *(&v1->padding_c[2 * v2]) = 0;\n
        }\n
        v6 = v1;\n
        v6->field_2a = a3;\n
        v6->field_28 = 65532;\n
        v6->field_2c = 0;\n
        v6->field_30 = 0;\n
        CUtil::String::operator=(&v6[1].field_0 + 3, v0 - 12167);\n
        v3 = 1;\n
        return v3 & 1;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
}\n
", "4225419:sub_40798b": null, "4225424:_ZN4CCPU3RunEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[36];\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::Run(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    if (v2->field_4 && v2->field_8)\n
    {\n
        do\n
        {\n
            v0 = v2;\n
        } while ((CCPU::RunSingleInstruction() & 1));\n
        if ((v2->field_30 & 1))\n
        {\n
            v3 = 0;\n
            return v3 & 1;\n
        }\n
        v3 = 1;\n
        return v3 & 1;\n
    }\n
    v3 = 0;\n
    return v3 & 1;\n
}\n
", "4225564:sub_407a1c": null, "4225568:_ZN4CCPU20RunSingleInstructionEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[40];\n
    unsigned int field_2c;\n
    char field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::RunSingleInstruction()\n
{\n
    struct_2 *v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_0 *v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1c]\n
    unsigned short v5;  // [bp-0x10]\n
    char v6;  // [bp-0xd]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    struct_0 *v10;  // [bp+0x4]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // esi\n
    unsigned short v26;  // cx\n
    struct_0 *v83;  // ecx\n
    unsigned int v84;  // eax\n
\n
    v8 = v21;\n
    v7 = v22;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v10;\n
    v26 = CCPU::FetchNextInstruction();\n
    v5 = v26;\n
    if ((v3->field_30 & 1))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        v83 = v3;\n
        v84 = v83->field_2c;\n
        v83->field_2c = v84 + 1;\n
        if (v84 > 400)\n
        {\n
            CUtil::String::operator=(&v3[1].field_0 + 3, v2 - 12207);\n
            v3->field_30 = 1;\n
            v6 = 0;\n
        }\n
        else\n
        {\n
            v0 = &v4;\n
            CCPU::DumpRegisters(&v4);\n
            CUtil::String::c_str const(v0);\n
            cgc_printf(v2 - 12182);\n
            CUtil::String::__dtor__(v0);\n
            CDMA::ServiceDMA(v3->field_0);\n
            v1 = v5 >> 13;\n
            if (!(v1 <= 7))\n
                goto LABEL_0x40826e;\n
            goto *(((stack_base)[36] + (stack_base)[40] * 4 - 12508)) + (stack_base)[36];\n
        }\n
    }\n
}\n
", "4227735:sub_408297": null, "4227744:_ZN4CCPU13DumpRegistersEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned short field_c;\n
    unsigned short field_e;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    unsigned short field_14;\n
    unsigned short field_16;\n
    unsigned short field_18;\n
    unsigned short field_1a;\n
    unsigned short field_1c;\n
    unsigned short field_1e;\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned int field_2c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::DumpRegisters(unsigned int v38, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x4a4]\n
    unsigned int v1;  // [bp-0x4a0]\n
    unsigned int v2;  // [bp-0x49c]\n
    unsigned int v3;  // [bp-0x498]\n
    unsigned int v4;  // [bp-0x494]\n
    unsigned int v5;  // [bp-0x490]\n
    unsigned int v6;  // [bp-0x48c]\n
    unsigned int v7;  // [bp-0x488]\n
    unsigned int v8;  // [bp-0x484]\n
    unsigned int v9;  // [bp-0x480]\n
    unsigned int v10;  // [bp-0x47c]\n
    unsigned int v11;  // [bp-0x478]\n
    unsigned int v12;  // [bp-0x474]\n
    unsigned int v13;  // [bp-0x470]\n
    unsigned int v14;  // [bp-0x46c]\n
    unsigned int v15;  // [bp-0x468]\n
    unsigned int v16;  // [bp-0x464]\n
    struct_1 *v17;  // [bp-0x454]\n
    unsigned int v18;  // [bp-0x450]\n
    unsigned int v19;  // [bp-0x44c]\n
    unsigned int v20;  // [bp-0x448]\n
    unsigned int v21;  // [bp-0x444]\n
    unsigned int v22;  // [bp-0x440]\n
    unsigned int v23;  // [bp-0x43c]\n
    unsigned int v24;  // [bp-0x438]\n
    unsigned int v25;  // [bp-0x434]\n
    unsigned int v26;  // [bp-0x430]\n
    unsigned int v27;  // [bp-0x42c]\n
    unsigned int v28;  // [bp-0x428]\n
    unsigned int v29;  // [bp-0x424]\n
    unsigned int v30;  // [bp-0x420]\n
    unsigned int v31;  // [bp-0x41c]\n
    unsigned int v32[2];  // [bp-0x418]\n
    unsigned int v33;  // [bp-0x414]\n
    char v34;  // [bp-0x410]\n
    unsigned int v35;  // [bp-0x10]\n
    unsigned int v36;  // [bp-0xc]\n
    unsigned int v37;  // [bp-0x8]\n
    unsigned int v39;  // ebx\n
    unsigned int v40;  // edi\n
    unsigned int v41;  // esi\n
    struct_0 *v42;  // eax\n
    unsigned int v43;  // ebx\n
    unsigned int v44;  // edi\n
    unsigned int v45;  // esi\n
    unsigned int v46;  // edx\n
    unsigned int v47;  // ecx\n
    unsigned int v49;  // esi\n
    unsigned int v50;  // edi\n
    unsigned int v51;  // ebx\n
\n
    v37 = v39;\n
    v36 = v40;\n
    v35 = v41;\n
    v31 = &_GLOBAL_OFFSET_TABLE_;\n
    v32[0] = v38;\n
    v33 = v32;\n
    v42 = a0;\n
    v17 = &v34;\n
    v19 = v42->field_2c;\n
    v20 = v42->field_c;\n
    v21 = v42->field_e;\n
    v22 = v42->field_10;\n
    v23 = v42->field_12;\n
    v24 = v42->field_14;\n
    v25 = v42->field_16;\n
    v26 = v42->field_18;\n
    v27 = v42->field_1a;\n
    v28 = v42->field_1c;\n
    v29 = v42->field_1e;\n
    v43 = v42->field_20;\n
    v44 = v42->field_22;\n
    v45 = v42->field_24;\n
    v46 = v42->field_26;\n
    v47 = v42->field_28;\n
    v30 = v42->field_2a;\n
    v18 = v31 - 12400;\n
    v0 = v19;\n
    v1 = v20;\n
    v2 = v21;\n
    v3 = v22;\n
    v4 = v23;\n
    v5 = v24;\n
    v6 = v25;\n
    v7 = v26;\n
    v8 = v27;\n
    v9 = v28;\n
    v10 = v29;\n
    v11 = v43;\n
    v12 = v44;\n
    v13 = v45;\n
    v14 = v46;\n
    v15 = v47;\n
    v16 = v30;\n
    cgc_sprintf(v17, v18);\n
    CUtil::String::__base_ctor__(v32, &v34);\n
    v49 = v35;\n
    v50 = v36;\n
    v51 = v37;\n
    return v33;\n
}\n
", "4228183:sub_408457": null, "4228192:_ZN4CCPU20FetchNextInstructionEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[34];\n
    unsigned short field_2a;\n
    char padding_2c[4];\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::FetchNextInstruction(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0xc]\n
    unsigned short v5;  // [bp-0xa]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    v0 = v3->field_4;\n
    v1 = &v4;\n
    if ((CMMU::Fetch16(v0, v3->field_2a) & 1))\n
    {\n
        v9 = v3;\n
        v9->field_2a = v9->field_2a + 2;\n
        v5 = *(&v4);\n
        return v5;\n
    }\n
    CUtil::String::operator=(&v3[1].padding_0[3], v2 - 12097);\n
    v10 = v3;\n
    v10->field_30 = 1;\n
    v10->field_2a = v10->field_2a + 2;\n
    v5 = 0;\n
    return v5;\n
}\n
", "4228345:sub_4084f9": null, "4228352:_ZN4CCPU15LoadImmediateHIEhh": "int CCPU::LoadImmediateHI(unsigned int v0, char a0, char a1)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *((v1 + a0 * 2 + 12)) = *((v1 + a0 * 2 + 12)) | a1 * 0x100;\n
    return v0;\n
}\n
", "4228408:sub_408538": null, "4228416:_ZN4CCPU15LoadImmediateLOEhh": "int CCPU::LoadImmediateLO(unsigned int v0, char a0, char a1)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *((v1 + a0 * 2 + 12)) = *((v1 + a0 * 2 + 12)) & 0xff00 | a1;\n
    return v0;\n
}\n
", "4228466:sub_408572": null, "4228480:_ZN4CCPU6AddRegEhhh": "int CCPU::AddReg(unsigned int v0, char a0, char a1, char a2)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *((v1 + a0 * 2 + 12)) = *((v1 + a1 * 2 + 12)) + *((v1 + a2 * 2 + 12));\n
    return v0;\n
}\n
", "4228532:sub_4085b4": null, "4228544:_ZN4CCPU6SubRegEhhh": "int CCPU::SubReg(unsigned int v0, char a0, char a1, char a2)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *((v1 + a0 * 2 + 12)) = *((v1 + a1 * 2 + 12)) - *((v1 + a2 * 2 + 12));\n
    return v0;\n
}\n
", "4228596:sub_4085f4": null, "4228608:_ZN4CCPU6MulRegEhhh": "int CCPU::MulReg(unsigned int v0, char a0, char a1, char a2)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *((v1 + a0 * 2 + 12)) = *((v1 + a2 * 2 + 12)) * *((v1 + a1 * 2 + 12));\n
    return v0;\n
}\n
", "4228661:sub_408635": null, "4228672:_ZN4CCPU6DivRegEhhh": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::DivReg(struct_0 *v2, char a0, char a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned short v6;  // cx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v2;\n
    if (*(&v1->padding_0[12 + 2 * a2]))\n
    {\n
        v3 = v1;\n
        v4 = *(&v3->padding_0[12 + 2 * a1]);\n
        v6 = (v4 >> 31 CONCAT v4) /m *(&v3->padding_0[12 + 2 * a2]);\n
        v7 = v1;\n
        *(&v7->padding_0[12 + 2 * a0]) = v6;\n
        return v1;\n
    }\n
    CUtil::String::operator=(&v1[1].padding_0[3], v0 - 12151);\n
    v7 = v1;\n
    *((v7 + 48)) = 1;\n
    return v1;\n
}\n
", "4228816:_ZN4CCPU6MovRegEhh": "int CCPU::MovReg(unsigned int v0, char a0, char a1)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    *((v1 + a0 * 2 + 12)) = *((v1 + a1 * 2 + 12));\n
    return v0;\n
}\n
", "4228851:sub_4086f3": null, "4228864:_ZN4CCPU7SwapRegEhh": "int CCPU::SwapReg(unsigned int v2, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    v0 = v3;\n
    v4 = v2;\n
    v1 = *((v4 + a0 * 2 + 12));\n
    *((v4 + a0 * 2 + 12)) = *((v4 + a1 * 2 + 12));\n
    *((v4 + a1 * 2 + 12)) = v1;\n
    return v2;\n
}\n
", "4228929:sub_408741": null, "4228944:_ZN4CCPU11JumpRegZeroEhh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpRegZero(struct_0 *v1, char a0, char a1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1;\n
    v3 = *(&v0->padding_0[12 + 2 * a0]);\n
    if (!v3)\n
    {\n
        v3 = v0;\n
        *((v3 + 42)) = *((v3 + 42)) + *((v3 + a1 * 2 + 12));\n
    }\n
    return v3;\n
}\n
", "4229008:_ZN4CCPU14JumpRegNotZeroEhh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpRegNotZero(struct_0 *v1, char a0, char a1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1;\n
    v3 = *(&v0->padding_0[12 + 2 * a0]);\n
    if (v3)\n
    {\n
        v3 = v0;\n
        *((v3 + 42)) = *((v3 + 42)) + *((v3 + a1 * 2 + 12));\n
    }\n
    return v3;\n
}\n
", "4229072:_ZN4CCPU7DMAInitEh": "typedef struct struct_0 {\n
    char padding_0[64];\n
    char field_40;\n
} struct_0;\n
\n
int CCPU::DMAInit(struct_0 *v0, char a0)\n
{\n
    v0->field_40 = a0;\n
    return v0;\n
}\n
", "4229092:sub_4087e4": null, "4229104:_ZN4CCPU7DMAReadEhh": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[60];\n
    char field_40;\n
} struct_0;\n
\n
int CCPU::DMARead(struct_0 *v3, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
\n
    v2 = v4;\n
    v1 = v3;\n
    v5 = a0;\n
    *(&v5) = *(&v1->padding_4[8 + 2 * v5]);\n
    v0 = *(&v1->padding_4[8 + 2 * a1]);\n
    return CDMA::InitReadWorker(v1->field_0, v3->field_40, v5);\n
}\n
", "4229198:sub_40884e": null, "4229200:_ZN4CCPU8DMAWriteEhh": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[60];\n
    char field_40;\n
} struct_0;\n
\n
int CCPU::DMAWrite(struct_0 *v3, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
\n
    v2 = v4;\n
    v1 = v3;\n
    v5 = a0;\n
    *(&v5) = *(&v1->padding_4[8 + 2 * v5]);\n
    v0 = *(&v1->padding_4[8 + 2 * a1]);\n
    return CDMA::InitWriteWorker(v1->field_0, v3->field_40, v5);\n
}\n
", "4229294:sub_4088ae": null, "4229296:_ZN4CCPU10JumpOffsetEht": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpOffset(struct_0 *v1, char a0, unsigned short a1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1;\n
    if (!a0)\n
    {\n
        v3 = v0;\n
        v3->field_2a = v3->field_2a + a1;\n
        return v0;\n
    }\n
    v3 = v0;\n
    *((v3 + 42)) = *((v3 + 42)) - a1;\n
    return v0;\n
}\n
", "4229373:sub_4088fd": null, "4229376:_ZN4CCPU7JumpRegEh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpReg(struct_0 *v0, char a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_2a = *(&v1->padding_0[12 + 2 * a0]);\n
    return v0;\n
}\n
", "4229403:sub_40891b": null, "4229408:_ZN4CCPU19GetInstructionCountEhh": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
int CCPU::GetInstructionCount(struct_0 *v0, char a0, char a1)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1->padding_0[12 + 2 * a0]) = v1->field_2c >> 16;\n
    *(&v1->padding_0[12 + 2 * a1]) = v1->field_2c;\n
    return v0;\n
}\n
", "4229470:sub_40895e": null, "4229472:_ZN4CCPU7GetRandEh": "int CCPU::GetRand(unsigned int v1, char a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    *((v0 + a0 * 2 + 12)) = cgc_prng();\n
    return v0;\n
}\n
", "4229535:sub_40899f": null, "4229536:_ZN4CCPU15GetSeedMaterialEh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::GetSeedMaterial(unsigned int v5, char a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    v2 = cgc_prng();\n
    v0 = v3;\n
    *((v3 + a0 * 2 + 12)) = v2 ^ CCPU::GetMagicPageSeed();\n
    v7 = v4;\n
    return v3;\n
}\n
", "4229632:_ZN4CCPU12LoadRegisterEhh": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[40];\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::LoadRegister(struct_0 *v7, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    char v4;  // [bp-0xe]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // esi\n
    struct_0 *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v6 = v8;\n
    v5 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    v0 = v3->field_4;\n
    v1 = &v4;\n
    if ((CMMU::Read16(v0, *(&v3->padding_8[4 + 2 * a1])) & 1))\n
    {\n
        v10 = v3;\n
        *(&v10->padding_8[4 + 2 * a0]) = *(&v4);\n
    }\n
    else\n
    {\n
        CUtil::String::operator=(&v3[1].padding_0[3], v2 - 12136);\n
        v10 = v3;\n
        *((v10 + 48)) = 1;\n
    }\n
    return v10;\n
}\n
", "4229771:sub_408a8b": null, "4229776:_ZN4CCPU13StoreRegisterEhh": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[40];\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::StoreRegister(struct_0 *v6, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    struct_0 *v9;  // eax\n
    unsigned short v10;  // dx\n
    unsigned int v12;  // edx\n
    struct_0 *v13;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = v6;\n
    v3 = v9;\n
    v10 = *(&v9->padding_8[4 + 2 * a1]);\n
    v0 = v9->field_4;\n
    v1 = *(&v9->padding_8[4 + 2 * a0]);\n
    v13 = CMMU::Write16(v0, v12);\n
    if (!(v13 & 1))\n
    {\n
        CUtil::String::operator=(&v3[1].padding_0[3], v2 - 12117);\n
        v13 = v3;\n
        *((v13 + 48)) = 1;\n
    }\n
    return v13;\n
}\n
", "4229903:sub_408b0f": null, "4229904:_ZN4CCPU6AddImmEhh": "int CCPU::AddImm(unsigned int v0, char a0, char a1)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    *((v1 + v2 * 2 + 12)) = *((v1 + v2 * 2 + 12)) + a1;\n
    return v0;\n
}\n
", "4229943:sub_408b37": null, "4229952:_ZN4CCPU6SubImmEhh": "int CCPU::SubImm(unsigned int v0, char a0, char a1)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    *((v1 + v2 * 2 + 12)) = *((v1 + v2 * 2 + 12)) - a1;\n
    return v0;\n
}\n
", "4229991:sub_408b67": null, "4230000:_ZN4CCPU6MulImmEhh": "int CCPU::MulImm(unsigned int v0, char a0, char a1)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    *((v1 + v2 * 2 + 12)) = a1 * *((v1 + v2 * 2 + 12));\n
    return v0;\n
}\n
", "4230040:sub_408b98": null, "4230048:_ZN4CCPU6DivImmEhh": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CCPU::DivImm(struct_0 *v2, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v2;\n
    if (a1)\n
    {\n
        v3 = a0;\n
        v4 = *(&v1->padding_0[12 + 2 * v3]);\n
        v6 = v1;\n
        *(&v6->padding_0[12 + 2 * v3]) = (v4 >> 31 CONCAT v4) /m a1;\n
        return v1;\n
    }\n
    CUtil::String::operator=(&v1[1].padding_0[3], v0 - 12151);\n
    v6 = v1;\n
    *((v6 + 48)) = 1;\n
    return v1;\n
}\n
", "4230174:sub_408c1e": null, "4230176:_ZN4CCPU9JumpLTRegEhhh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpLTReg(struct_0 *v1, char a0, char a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    v4 = *(&v3->padding_0[12 + 2 * a0]);\n
    if (v4 < *(&v3->padding_0[12 + 2 * a1]))\n
    {\n
        v4 = v0;\n
        *((v4 + 42)) = *((v4 + 42)) + *((v4 + a2 * 2 + 12));\n
    }\n
    return v4;\n
}\n
", "4230251:sub_408c6b": null, "4230256:_ZN4CCPU9JumpGTRegEhhh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpGTReg(struct_0 *v1, char a0, char a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    v4 = *(&v3->padding_0[12 + 2 * a0]);\n
    if (v4 > *(&v3->padding_0[12 + 2 * a1]))\n
    {\n
        v4 = v0;\n
        *((v4 + 42)) = *((v4 + 42)) + *((v4 + a2 * 2 + 12));\n
    }\n
    return v4;\n
}\n
", "4230331:sub_408cbb": null, "4230336:_ZN4CCPU14JumpOffsetZeroEhhh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpOffsetZero(struct_0 *v1, char a0, char a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1;\n
    v3 = *(&v0->padding_0[12 + 2 * a0]);\n
    if (v3)\n
        return *(&v0->padding_0[12 + 2 * a0]);\n
    if (!a1)\n
    {\n
        v3 = v0;\n
        v3->field_2a = v3->field_2a + a2 * 2;\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        v3->field_2a = v3->field_2a - a2 * 2;\n
    }\n
    return v3;\n
}\n
", "4230450:sub_408d32": null, "4230464:_ZN4CCPU17JumpOffsetNotZeroEhhh": "typedef struct struct_0 {\n
    char padding_0[42];\n
    unsigned short field_2a;\n
} struct_0;\n
\n
int CCPU::JumpOffsetNotZero(struct_0 *v1, char a0, char a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1;\n
    v3 = *(&v0->padding_0[12 + 2 * a0]);\n
    if (!v3)\n
        return *(&v0->padding_0[12 + 2 * a0]);\n
    if (!a1)\n
    {\n
        v3 = v0;\n
        v3->field_2a = v3->field_2a + a2 * 2;\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        v3->field_2a = v3->field_2a - a2 * 2;\n
    }\n
    return v3;\n
}\n
", "4230578:sub_408db2": null, "4230592:_ZN4CCPU16GetMagicPageSeedEv": "int CCPU::GetMagicPageSeed(unsigned int v2[16])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v3;  // eax\n
    unsigned int v4[16];  // eax\n
\n
    v0 = v3;\n
    v4 = v2;\n
    v1 = (v4[11] & 255) * 4;\n
    return *((v4[15] + v1));\n
}\n
", "4230634:sub_408dea": null, "4230640:_ZN4CDMAC1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDMA::__ctor__(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v8;\n
    v5 = v4 + 60;\n
    v6 = v4;\n
    do\n
    {\n
        v1 = v6;\n
        v0 = v1;\n
        CDMA::CDMAWorker::__base_ctor__();\n
        v9 = v1 + 12;\n
        v2 = v9;\n
        v6 = v9;\n
    } while (v9 != v5);\n
    for (v7 = 0; v7 < 0x100; v7 = v9)\n
    {\n
        *((v4 + v7 * 4 + 64)) = 0;\n
        v9 = v7 + 1;\n
    }\n
    return v9;\n
}\n
", "4230776:sub_408e78": null, "4230784:_ZN4CDMAD1Ev": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int CDMA::__dtor__(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v3;  // [bp-0x8]\n
\n
    v1 = v4;\n
    v2 = v1 + 60;\n
    do\n
    {\n
        v0 = v2 - 12;\n
        CDMA::CDMAWorker::__base_dtor__(v0, v0, &_GLOBAL_OFFSET_TABLE_, v1, v2, *(&v3));\n
        v2 = v0;\n
    } while (v2 != v1);\n
    return v0;\n
}\n
", "4230864:_ZN4CDMA7InitDMAEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDMA::InitDMA(char v4[62])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2[62];  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v5[62];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v2[0]) = v4;\n
    for (v3 = 0; v3 < 5; v3 += 1)\n
    {\n
        v0 = &v2[12 * v3];\n
        CDMA::CDMAWorker::ClearWorker();\n
    }\n
    v5 = v2;\n
    v5[61] = 0;\n
    v5[60] = 0;\n
    return v2;\n
}\n
", "4230963:sub_408f33": null, "4230976:_ZN4CDMA13AddPeripheralEhP11CPeripheral": "int CDMA::AddPeripheral(unsigned int v2, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (!a1)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    else if (!*((v0 + (a0 << 2) + 64)))\n
    {\n
        *((v0 + a0 * 4 + 64)) = a1;\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
}\n
", "4231074:sub_408fa2": null, "4231088:_ZN4CDMA14InitReadWorkerEhtt": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDMA::InitReadWorker(struct_0 *v5, char a0, unsigned short a1, unsigned short a2)\n
{\n
    int tmp_55;  // tmp #55\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    tmp_55 = v2->field_3c;\n
    v2->field_3c = v2->field_3c + 1;\n
    v3 = tmp_55;\n
    if (v3 > 5)\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    v7 = v3 * 12;\n
    v8 = &v2->padding_0[v7];\n
    *(&v7) = a1;\n
    v0 = a2;\n
    CDMA::CDMAWorker::StartWorker(v8, 1, a0, v7);\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4231241:sub_409049": null, "4231248:_ZN4CDMA15InitWriteWorkerEhtt": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDMA::InitWriteWorker(struct_0 *v5, char a0, unsigned short a1, unsigned short a2)\n
{\n
    int tmp_55;  // tmp #55\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    tmp_55 = v2->field_3c;\n
    v2->field_3c = v2->field_3c + 1;\n
    v3 = tmp_55;\n
    if (v3 > 5)\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    v7 = v3 * 12;\n
    v8 = &v2->padding_0[v7];\n
    *(&v7) = a1;\n
    v0 = a2;\n
    CDMA::CDMAWorker::StartWorker(v8, 2, a0, v7);\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4231401:sub_4090e9": null, "4231408:_ZN4CDMA10ServiceDMAEP4CMMU": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDMA::ServiceDMA(char v14[62], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    int tmp_12;  // tmp #12\n
    unsigned int v1;  // [bp-0x30]\n
    char v2[62];  // [bp-0x2c]\n
    char v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned short v6;  // [bp-0x1c]\n
    unsigned short v7;  // [bp-0x1a]\n
    unsigned short v8;  // [bp-0x18]\n
    char v9;  // [bp-0x15]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v11;  // [bp-0xf]\n
    char v12;  // [bp-0xe]\n
    char v13;  // [bp-0xd]\n
    char v15[62];  // eax, Other Possible Types: unsigned int\n
    char v16[62];  // eax\n
    struct struct_1 **v17;  // esi\n
    unsigned short v18;  // dx\n
    char v19[62];  // eax\n
    unsigned int v20;  // edx\n
    unsigned short v21;  // dx\n
    unsigned int v22;  // edx\n
    struct struct_2 **v23;  // esi\n
    char v24[62];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v14;\n
    *(&v2[0]) = v15;\n
    if (!a0)\n
        return v14;\n
    v13 = 0;\n
    v13 = 0;\n
    while (true)\n
    {\n
        v15 = v13;\n
        if (v15 >= v2[60])\n
            return v13;\n
        v15 = v13;\n
        if (v15 >= 4)\n
            return v13;\n
        v12 = v2[61];\n
        v11 = 0;\n
        v10 = 0;\n
        for (v10 = 0; v10 < 5; v10 += 1)\n
        {\n
            if (v12 >= 5)\n
                v12 = 0;\n
            if (!(CDMA::CDMAWorker::IsWorkerAvailable const() & 1))\n
            {\n
                v12 += 1;\n
            }\n
            else\n
            {\n
                v11 = 1;\n
                break;\n
            }\n
        }\n
        if (!(v11 & 1))\n
        {\n
            v15 = v2;\n
            *((v15 + 61)) = 0;\n
            return v2;\n
        }\n
        v9 = CDMA::CDMAWorker::GetDeviceID const();\n
        v8 = CDMA::CDMAWorker::GetAddress const();\n
        v7 = CDMA::CDMAWorker::GetLength const();\n
        v6 = CDMA::CDMAWorker::GetPosition const();\n
        v5 = CDMA::CDMAWorker::GetType const();\n
        v4 = v7 - v6;\n
        if (v4 > 4)\n
            v4 = 4;\n
        if (!v4)\n
        {\n
            v16 = v2;\n
            v16[60] = v16[60] - 1;\n
            CDMA::CDMAWorker::ClearWorker();\n
        }\n
        else if (!*(&v2[1 + 2 + 4 * v9]))\n
        {\n
            CDMA::CDMAWorker::ClearWorker();\n
            v19 = v2;\n
            v19[60] = v19[60] - 1;\n
        }\n
        else\n
        {\n
            if (v5 != 1)\n
            {\n
                v18 = v8 + v6;\n
                v0 = v4;\n
                if ((CMMU::ReadDMA(a0, v20, &v3) & 1))\n
                    *(v23)->field_10(*(&v2[1 + 2 + 4 * v9]), &v3);\n
            }\n
            else if ((*(v17)->field_c(*(&v2[1 + 2 + 4 * v9]), &v3) & 1))\n
            {\n
                v21 = v8 + v6;\n
                v0 = v4;\n
                CMMU::WriteDMA(a0, v22, &v3);\n
            }\n
            if (v6 + v4 < v7)\n
            {\n
                CDMA::CDMAWorker::AdvancePosition(&v2[12 * v12]);\n
            }\n
            else\n
            {\n
                v24 = v2;\n
                v24[60] = v24[60] - 1;\n
                CDMA::CDMAWorker::ClearWorker();\n
            }\n
        }\n
        tmp_12 = v12;\n
        v12 += 1;\n
        v2[61] = tmp_12;\n
        v13 += 1;\n
    }\n
}\n
", "4232298:sub_40946a": null, "4232304:_ZN4CDMA10CDMAWorkerC2Ev": "int CDMA::CDMAWorker::__base_ctor__(unsigned int *v0)\n
{\n
    *(v0) = 0;\n
    return v0;\n
}\n
", "4232321:sub_409481": null, "4232336:_ZN4CDMA10CDMAWorkerD2Ev": "int CDMA::CDMAWorker::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4232344:sub_409498": null, "4232352:_ZN4CDMA10CDMAWorker11ClearWorkerEv": "int CDMA::CDMAWorker::ClearWorker(unsigned int *v0)\n
{\n
    *(v0) = 0;\n
    return v0;\n
}\n
", "4232369:sub_4094b1": null, "4232384:_ZN4CDMA10CDMAWorker11StartWorkerENS_16eDMAWorkerActionEhtt": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
    char padding_5[1];\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_0;\n
\n
int CDMA::CDMAWorker::StartWorker(struct_0 *v0, unsigned int a0, char a1, unsigned short a2, unsigned short a3)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = a0;\n
    v1->field_8 = a2;\n
    v1->field_4 = a1;\n
    v1->field_a = a3;\n
    v1->field_6 = 0;\n
    return v0;\n
}\n
", "4232442:sub_4094fa": null, "4232448:_ZNK4CDMA10CDMAWorker17IsWorkerAvailableEv": "int CDMA::CDMAWorker::IsWorkerAvailable const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4232470:sub_409516": null, "4232480:_ZNK4CDMA10CDMAWorker11GetDeviceIDEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int CDMA::CDMAWorker::GetDeviceID const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4232495:sub_40952f": null, "4232496:_ZNK4CDMA10CDMAWorker10GetAddressEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
int CDMA::CDMAWorker::GetAddress const(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4232511:sub_40953f": null, "4232512:_ZNK4CDMA10CDMAWorker9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[10];\n
    unsigned short field_a;\n
} struct_0;\n
\n
int CDMA::CDMAWorker::GetLength const(struct_0 *v0)\n
{\n
    return v0->field_a;\n
}\n
", "4232527:sub_40954f": null, "4232528:_ZNK4CDMA10CDMAWorker11GetPositionEv": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
} struct_0;\n
\n
int CDMA::CDMAWorker::GetPosition const(struct_0 *v0)\n
{\n
    return v0->field_6;\n
}\n
", "4232543:sub_40955f": null, "4232544:_ZNK4CDMA10CDMAWorker7GetTypeEv": "int CDMA::CDMAWorker::GetType const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4232557:sub_40956d": null, "4232560:_ZN4CDMA10CDMAWorker15AdvancePositionEt": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
} struct_0;\n
\n
int CDMA::CDMAWorker::AdvancePosition(struct_0 *v0, unsigned short a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_6 = v1->field_6 + a0;\n
    return v0;\n
}\n
", "4232589:sub_40958d": null, "4232592:_ZN4CMMUC1Ev": "int CMMU::__ctor__(unsigned int *v2)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int *v3;  // eax\n
\n
    v0 = v2;\n
    for (v1 = 0; v1 < 128; v1 += 1)\n
    {\n
        v3 = v0;\n
        v3[2 * v1] = 0;\n
        *(&v3[1 + 2 * v1]) = 0;\n
    }\n
    return v1;\n
}\n
", "4232673:sub_4095e1": null, "4232688:_ZN4CMMUD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMMU::__dtor__(unsigned int *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned short v3;  // [bp-0xa]\n
    unsigned int *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    for (v3 = 0; v3 < 128; v3 += 1)\n
    {\n
        if (v2[2 * v3])\n
        {\n
            v0 = v2[2 * v3];\n
            if (v0)\n
                operator delete[](v0);\n
        }\n
        v5 = v2;\n
        v5[2 * v3] = 0;\n
        *(&v5[1 + 2 * v3]) = 0;\n
    }\n
    return v3;\n
}\n
", "4232844:sub_40968c": null, "4232848:_ZN4CMMU16AddMemorySectionEtPhth": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMMU::AddMemorySection(unsigned int *v8, unsigned short a0, unsigned int a1, unsigned short a2, char a3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x18]\n
    unsigned short v3;  // [bp-0x16]\n
    unsigned short v4;  // [bp-0x14]\n
    unsigned short v5;  // [bp-0x12]\n
    unsigned short v6;  // [bp-0x10]\n
    char v7;  // [bp-0xd]\n
    unsigned int v9;  // eax\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
    unsigned int v12;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v8;\n
    a0 &= 65534;\n
    if (!a1)\n
    {\n
        v7 = 0;\n
        return v7 & 1;\n
    }\n
    else if (!(a2 >> 31 CONCAT a2) /m 0x200 >> 32)\n
    {\n
        v6 = a2;\n
        for (v5 = 0; v6 > 0; v6 -= v2)\n
        {\n
            v9 = a0 + v5;\n
            v4 = (v9 >> 31 CONCAT v9) /m 0x200;\n
            v3 = (a0 + v5 >> 31 CONCAT a0 + v5) /m 0x200 >> 32;\n
            v2 = v6;\n
            if (v6 > 0x200 - v3)\n
                v2 = 0x200 - v3;\n
            if (!v1[2 * v4])\n
            {\n
                v10 = v1;\n
                v10[2 * v4] = operator new[](0x200);\n
                cgc_bzero(v10[2 * v4], 0x200);\n
            }\n
            v11 = v1;\n
            v12 = v4;\n
            *(&v11[1 + 2 * v12]) = v11[1 + 2 * v12] | a3;\n
            cgc_memcpy(v11[2 * v4] + v3, a1 + v5, v2);\n
            v5 += v2;\n
        }\n
        v7 = 1;\n
        return v7 & 1;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7 & 1;\n
    }\n
}\n
", "4233265:sub_409831": null, "4233280:_ZN4CMMU7Fetch16EtRt": "int CMMU::Fetch16(unsigned int *v4, unsigned short a0, unsigned short *a1)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xa]\n
    unsigned short v2;  // [bp-0x8]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
\n
    v0 = v4;\n
    a0 &= 65534;\n
    v5 = a0;\n
    v2 = (v5 >> 31 CONCAT v5) /m 0x200;\n
    v1 = (a0 >> 31 CONCAT a0) /m 0x200 >> 32;\n
    if (!(v0[1 + 2 * v2] & 4))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *(a1) = *((v0[2 * v2] + v1));\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4233424:_ZN4CMMU6Read16EtRt": "int CMMU::Read16(unsigned int *v4, unsigned short a0, unsigned short *a1)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xa]\n
    unsigned short v2;  // [bp-0x8]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
\n
    v0 = v4;\n
    a0 &= 65534;\n
    v5 = a0;\n
    v2 = (v5 >> 31 CONCAT v5) /m 0x200;\n
    v1 = (a0 >> 31 CONCAT a0) /m 0x200 >> 32;\n
    if (!(v0[1 + 2 * v2] & 1))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *(a1) = *((v0[2 * v2] + v1));\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4233568:_ZN4CMMU7Write16Ett": "int CMMU::Write16(unsigned int *v4, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int *v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xa]\n
    unsigned short v2;  // [bp-0x8]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
\n
    v0 = v4;\n
    a0 &= 65534;\n
    v5 = a0;\n
    v2 = (v5 >> 31 CONCAT v5) /m 0x200;\n
    v1 = (a0 >> 31 CONCAT a0) /m 0x200 >> 32;\n
    if (!(v0[1 + 2 * v2] & 2))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *((v0[2 * v2] + v1)) = a1;\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4233711:sub_4099ef": null, "4233712:_ZN4CMMU7ReadDMAEtPht": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMMU::ReadDMA(unsigned int *v7, unsigned short a0, unsigned int a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned short v2;  // [bp-0x12]\n
    unsigned short v3;  // [bp-0x10]\n
    unsigned short v4;  // [bp-0xe]\n
    unsigned short v5;  // [bp-0xc]\n
    char v6;  // [bp-0x9]\n
    unsigned int v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (a2 > 0)\n
        {\n
            v8 = a0 + v5;\n
            v4 = (v8 >> 31 CONCAT v8) /m 0x200;\n
            v3 = (a0 + v5 >> 31 CONCAT a0 + v5) /m 0x200 >> 32;\n
            if (!(v1[1 + 2 * v4] & 1))\n
            {\n
                v6 = 0;\n
                return v6 & 1;\n
            }\n
            v2 = a2;\n
            if (v3 + v2 > 0x200)\n
                v2 = 0x200 - (v3 + v2);\n
            cgc_memcpy(a1 + v5, v1[2 * v4] + v3, v2);\n
            v5 += v2;\n
            a2 -= v2;\n
        }\n
        else\n
        {\n
            v6 = 1;\n
            return v6 & 1;\n
        }\n
    }\n
}\n
", "4234002:sub_409b12": null, "4234016:_ZN4CMMU8WriteDMAEtPht": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMMU::WriteDMA(unsigned int *v7, unsigned short a0, unsigned int a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned short v2;  // [bp-0x12]\n
    unsigned short v3;  // [bp-0x10]\n
    unsigned short v4;  // [bp-0xe]\n
    unsigned short v5;  // [bp-0xc]\n
    char v6;  // [bp-0x9]\n
    unsigned int v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (a2 > 0)\n
        {\n
            v8 = a0 + v5;\n
            v4 = (v8 >> 31 CONCAT v8) /m 0x200;\n
            v3 = (a0 + v5 >> 31 CONCAT a0 + v5) /m 0x200 >> 32;\n
            if (!(v1[1 + 2 * v4] & 2))\n
            {\n
                v6 = 0;\n
                return v6 & 1;\n
            }\n
            v2 = a2;\n
            if (v3 + v2 > 0x200)\n
                v2 = 0x200 - (v3 + v2);\n
            cgc_memcpy(v1[2 * v4] + v3, a1 + v5, v2);\n
            v5 += v2;\n
            a2 -= v2;\n
        }\n
        else\n
        {\n
            v6 = 1;\n
            return v6 & 1;\n
        }\n
    }\n
}\n
", "4234306:sub_409c42": null, "4234320:_ZN11CPeripheralC2Eh": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
extern char g_40e058;\n
\n
int CPeripheral::__base_ctor__(struct_0 *v1, char a0)\n
{\n
    char v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
\n
    v2 = v1;\n
    v2->field_0 = &g_40e058;\n
    v2->field_4 = a0;\n
    return CUtil::DoubleLink::__base_ctor__(&v1[1].field_0 + 3, *(&v0));\n
}\n
", "4234380:sub_409c8c": null, "4234384:_ZN11CPeripheralD1Ev": "extern char g_40e058;\n
\n
int CPeripheral::__dtor__(unsigned int *v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    *(v1) = &g_40e058;\n
    return CUtil::DoubleLink::__base_dtor__(v1 + 2, *(&v0));\n
}\n
", "4234435:sub_409cc3": null, "4234448:_ZN11CPeripheralD0Ev": "int CPeripheral::__deleting_dtor__(unsigned int v0)\n
{\n
}\n
", "4234455:sub_409cd7": "int sub_409cd7()\n
{\n
    return CSendDevice::__base_ctor__();\n
}\n
", "4234464:_ZN11CSendDeviceC2Eh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CSendDevice::__base_ctor__(unsigned int *v3, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CPeripheral::__base_ctor__(v1, a0);\n
    *(v1) = v0 + -356;\n
    v5 = v2;\n
    return v1;\n
}\n
", "4234537:sub_409d29": null, "4234544:_ZN11CSendDeviceD1Ev": "int CSendDevice::__dtor__(unsigned int *v0)\n
{\n
    return CPeripheral::__dtor__(v0);\n
}\n
", "4234581:sub_409d55": null, "4234592:_ZN11CSendDeviceD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CSendDevice::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CSendDevice::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4234651:sub_409d9b": null, "4234656:_ZN11CSendDevice4InitEv": "int CSendDevice::Init(unsigned int v0)\n
{\n
    return 1;\n
}\n
", "4234671:sub_409daf": null, "4234672:_ZN11CSendDevice4ReadEPht": "int CSendDevice::Read(unsigned int v0, unsigned int a0, unsigned short a1)\n
{\n
    return 1;\n
}\n
", "4234694:sub_409dc6": null, "4234704:_ZN11CSendDevice5WriteEPht": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CSendDevice::Write(unsigned int v6, unsigned int a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    for (v4 = 0; v4 < a1; v4 = *(&v3) + v4)\n
    {\n
        v2 = a1 - v4;\n
        v0 = &v3;\n
        if (cgc_transmit(1, a0 + v4, v2))\n
            cgc__terminate();\n
        if (!*(&v3))\n
            cgc__terminate();\n
    }\n
    v5 = 1;\n
    return v5 & 1;\n
}\n
", "4234907:sub_409e9b": null, "4234912:_ZN11CReadDeviceC1Eh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CReadDevice::__ctor__(unsigned int *v3, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CPeripheral::__base_ctor__(v1, a0);\n
    *(v1) = v0 + -328;\n
    v5 = v2;\n
    return v1;\n
}\n
", "4234985:sub_409ee9": null, "4234992:_ZN11CReadDeviceD2Ev": "int CReadDevice::__base_dtor__(unsigned int *v0)\n
{\n
    return CPeripheral::__dtor__(v0);\n
}\n
", "4235029:sub_409f15": null, "4235040:_ZN11CReadDeviceD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CReadDevice::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CReadDevice::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4235099:sub_409f5b": null, "4235104:_ZN11CReadDevice4InitEv": "int CReadDevice::Init(unsigned int v0)\n
{\n
    return 1;\n
}\n
", "4235119:sub_409f6f": null, "4235120:_ZN11CReadDevice4ReadEPht": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CReadDevice::Read(unsigned int v6, unsigned int a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    for (v4 = 0; v4 < a1; v4 = *(&v3) + v4)\n
    {\n
        v2 = a1 - v4;\n
        v0 = &v3;\n
        if (cgc_receive(0, a0 + v4, v2))\n
            cgc__terminate();\n
        if (!*(&v3))\n
            cgc__terminate();\n
    }\n
    v5 = 1;\n
    return v5 & 1;\n
}\n
", "4235325:sub_40a03d": null, "4235328:_ZN11CReadDevice5WriteEPht": "int CReadDevice::Write(unsigned int v0, unsigned int a0, unsigned short a1)\n
{\n
    return 1;\n
}\n
", "4235350:sub_40a056": null, "4235360:_ZN5CUtil10DoubleLinkI11CPeripheralEC2Ev": "int CUtil::DoubleLink::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4235384:sub_40a078": null, "4235392:_ZN5CUtil10DoubleLinkI11CPeripheralED2Ev": "int CUtil::DoubleLink::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleLink::Unlink(v1, *(&v0));\n
}\n
", "4235429:sub_40a0a5": null, "4235440:_ZN5CUtil10DoubleLinkI11CPeripheralE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int CUtil::DoubleLink::Unlink(struct_1 *v1)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax\n
    struct_1 *v4;  // eax\n
    struct_1 *v5;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    if (v0->field_4)\n
    {\n
        v3 = v0;\n
        v3->field_4->field_0 = v3->field_0;\n
    }\n
    if (v0->field_0)\n
    {\n
        v4 = v0;\n
        v4->field_0->field_4 = v4->field_4;\n
    }\n
    v5 = v0;\n
    v5->field_0 = 0;\n
    v5->field_4 = 0;\n
    return v0;\n
}\n
", "4235517:sub_40a0fd": null, "4235520:_Z7InitRNGPv": "int InitRNG(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(v0, 0x20);\n
}\n
", "4235567:sub_40a12f": null, "4235568:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8cc]\n
    unsigned int v1;  // [bp-0x8c8]\n
    char v2;  // [bp-0x8c4]\n
    void* v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    char v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x10]\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v10 = 0x4347c000;\n
    v7 = v10;\n
    InitRNG(v7);\n
    CCLF::__ctor__(&v6);\n
    ReadBytes(&v5, 4);\n
    if (*(&v5) <= 0xfa00)\n
    {\n
        v3 = operator new[](*(&v5));\n
        ReadBytes(v3, *(&v5));\n
        if ((CCLF::LoadFile(&v6, v3, *(&v5)) & 1))\n
        {\n
            v0 = v3;\n
            if (v0)\n
                operator delete(v0);\n
            CVM::__ctor__(&v2);\n
            if ((CVM::Init(&v2) & 1))\n
            {\n
                CVM::Run();\n
                v8 = 0;\n
            }\n
            else\n
            {\n
                cgc_printf(v1 - 12077);\n
                v8 = -1;\n
            }\n
            v4 = 1;\n
            CVM::__dtor__();\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 12077);\n
            v8 = -1;\n
            v4 = 1;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 12077);\n
        v8 = -1;\n
        v4 = 1;\n
    }\n
    CCLF::__dtor__(&v6);\n
    return v8;\n
}\n
", "4236071:sub_40a327": null, "4236080:_ZN3CVMC1EPv": "typedef struct struct_0 {\n
    char padding_0[2180];\n
    unsigned int field_884;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CVM::__ctor__(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CMMU::__ctor__(v1);\n
    CCPU::__base_ctor__(&v1->padding_0[0x400], a0);\n
    CDMA::__ctor__(&v1->padding_0[1092]);\n
    v1->field_884 = a0;\n
    v5 = v2;\n
    return CUtil::DoubleListDeclare::__base_ctor__();\n
}\n
", "4236202:sub_40a3aa": null, "4236208:_ZN3CVMD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CVM::__dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CUtil::DoubleListDeclare::__base_dtor__();\n
    CDMA::__dtor__(v1 + 273);\n
    CCPU::__dtor__(v1 + 0x100);\n
    v5 = v2;\n
    return CMMU::__dtor__(v1);\n
}\n
", "4236310:sub_40a416": null, "4236320:_ZN3CVM4InitEP4CCLF": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[1];\n
    unsigned short field_a;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CVM::Init(unsigned int v13, struct_0 *a0)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    unsigned int *v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int *v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6;  // [bp-0x1e]\n
    char v7;  // [bp-0x1d]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned short v9;  // [bp-0x18]\n
    unsigned short v10;  // [bp-0x16]\n
    char *v11;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v12;  // [bp-0xd]\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // edx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v13;\n
    if (!a0)\n
    {\n
        v12 = 0;\n
        return v12 & 1;\n
    }\n
    else if (!a0->field_8)\n
    {\n
        v12 = 0;\n
        return v12 & 1;\n
    }\n
    else if (a0->field_4)\n
    {\n
        v11 = 0;\n
        while (true)\n
        {\n
            if (v11 >= a0->field_8)\n
            {\n
                CDMA::InitDMA(v3 + 273);\n
                v16 = v3;\n
                CCPU::Init(v16 + 0x400, v16, v16, v16 + 1092, a0->field_a);\n
                v0 = operator new(16);\n
                CSendDevice::__base_ctor__(v0, 1);\n
                v5 = v0;\n
                v1 = operator new(16);\n
                CReadDevice::__ctor__(v1, 2);\n
                v4 = v1;\n
                CUtil::DoubleList::AddLast(v3 + 546);\n
                CUtil::DoubleList::AddLast(v3 + 546);\n
                CDMA::AddPeripheral(v3 + 273, 1, v5);\n
                CDMA::AddPeripheral(v3 + 273, 2, v4);\n
                v12 = 1;\n
                return v12 & 1;\n
            }\n
            v10 = *((a0->field_4 + v11 * 12 + 4));\n
            v9 = *((a0->field_4 + v11 * 12 + 2));\n
            v8 = *((a0->field_4 + v11 * 12 + 8));\n
            v7 = *((a0->field_4 + v11 * 12));\n
            v6 = 0;\n
            if (!v7)\n
            {\n
                v14 = v6 | 5;\n
                v6 = v14;\n
            }\n
            else if (v7 == 1)\n
            {\n
                v14 = v6 | 3;\n
                v6 = v14;\n
            }\n
            else\n
            {\n
                v14 = v7;\n
                if (v14 == 2)\n
                    goto LABEL_40a58a;\n
            }\n
            *(&v14) = v9;\n
            v15 = CMMU::AddMemorySection(v3, v10, v8, v14, v6);\n
            if (!(v15 & 1))\n
            {\n
                v12 = 0;\n
                return v12 & 1;\n
            }\n
LABEL_40a58a:\n
            v11 += 1;\n
        }\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        return v12 & 1;\n
    }\n
}\n
", "4236997:sub_40a6c5": null, "4237008:_ZN3CVM3RunEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CVM::Run(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    struct_0 *v6;  // [bp-0x4]\n
    struct_0 *v7;  // [bp+0x0]\n
    void* v9;  // [bp+0x8]\n
    char v10;  // [bp+0x24]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ebx\n
\n
    v5 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v8;\n
    CCPU::Run(v2 + 0x400);\n
    if ((CCPU::HasException() & 1))\n
    {\n
        v0 = v2 + 0x400;\n
        CCPU::GetExceptionText(&v4);\n
        CUtil::String::c_str const(&v4);\n
        cgc_printf(v1 - 12068);\n
        CUtil::String::__dtor__(&v4);\n
    }\n
    v7 = &v3;\n
    v8 = v2 + 0x400;\n
    CCPU::DumpRegisters(v8, v9);\n
    v6 = &v3;\n
    v7 = v1 - 12053;\n
    v8 = CUtil::String::c_str const(&v3);\n
    cgc_printf(v1 - 12053);\n
    v7 = &v3;\n
    CUtil::String::__dtor__(&v3);\n
    v12 = *(&v10);\n
    return 1;\n
}\n
", "4237253:sub_40a7c5": null, "4237264:_ZN5CUtil17DoubleListDeclareI11CPeripheralLj8EEC2Ev": "int CUtil::DoubleListDeclare::__base_ctor__(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = 8;\n
    return CUtil::DoubleList::__base_ctor__(v1);\n
}\n
", "4237311:sub_40a7ff": null, "4237312:_ZN5CUtil17DoubleListDeclareI11CPeripheralLj8EED2Ev": "int CUtil::DoubleListDeclare::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleList::__base_dtor__(v1, *(&v0));\n
}\n
", "4237349:sub_40a825": null, "4237360:_ZN5CUtil10DoubleListI11CPeripheralE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int CUtil::DoubleList::AddLast(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v2;\n
    v0 = v3;\n
    if (a0)\n
    {\n
        v3 = v0;\n
        v1[0] = a0 + *(v3);\n
        v1[0] = v3 + 12;\n
        v1[1] = *((v3 + 16));\n
        *(*((v3 + 16))) = v1;\n
        *((v3 + 16)) = v1;\n
    }\n
    return v3;\n
}\n
", "4237442:sub_40a882": null, "4237456:_ZN4CCPU12HasExceptionEv": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
int CCPU::HasException(struct_0 *v0)\n
{\n
    return v0->field_30 & 1;\n
}\n
", "4237475:sub_40a8a3": null, "4237488:_ZN4CCPU16GetExceptionTextEv": "int CCPU::GetExceptionText(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
\n
    v0[0] = v1;\n
    CUtil::String::__ctor__(v0, a0 + 52);\n
    return v0;\n
}\n
", "4237547:sub_40a8eb": null, "4237552:_ZN5CUtil10DoubleListI11CPeripheralED2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CUtil::DoubleList::DeleteAll();\n
    CUtil::DoubleLink::__base_dtor__(v1 + 12);\n
    v5 = v2;\n
    return CUtil::DoubleLink::__base_dtor__(v1 + 4);\n
}\n
", "4237631:sub_40a93f": null, "4237632:_ZN5CUtil10DoubleListI11CPeripheralE9DeleteAllEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::DeleteAll(struct struct_1 **v4)\n
{\n
    struct struct_1 **v0;  // [bp-0x1c]\n
    struct struct_1 **v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_1 **v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4;\n
    while (true)\n
    {\n
        v0 = v3;\n
        v5 = CUtil::DoubleList::IsEmpty();\n
        *(&v5) = v5 ^ 255;\n
        if (!(*(&v5) & 1))\n
            break;\n
        v0 = v3;\n
        v1 = CUtil::DoubleList::GetFirst();\n
        if (v1)\n
        {\n
            v0 = v1;\n
            *(v0)->field_4();\n
        }\n
    }\n
    return v5;\n
}\n
", "4237743:sub_40a9af": null, "4237744:_ZN5CUtil10DoubleListI11CPeripheralE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::DoubleList::IsEmpty(struct_0 *v0)\n
{\n
    struct_0 *v1;  // ecx\n
\n
    v1 = v0;\n
    return v1->field_4 == &v1[1].field_4;\n
}\n
", "4237771:sub_40a9cb": null, "4237776:_ZN5CUtil10DoubleListI11CPeripheralE8GetFirstEv": "int CUtil::DoubleList::GetFirst(unsigned int v2[2])\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3[2];  // edx\n
\n
    v0[0] = v2;\n
    if (v0[1] == &v0[1 + 1])\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v1 = v3[1] + -(v3[0]);\n
    return v1;\n
}\n
", "4237840:_ZN5CUtil10DoubleListI11CPeripheralEC2Ej": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::__base_ctor__(unsigned int v3[5], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[5];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[5];  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    v1[0] = a0;\n
    CUtil::DoubleLink::__base_ctor__(&v1[1]);\n
    CUtil::DoubleLink::__base_ctor__(&v1[3]);\n
    v5 = v1;\n
    v5[1] = &v5[3];\n
    v5[2] = 0;\n
    v5[4] = &v5[1];\n
    v5[3] = 0;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4237948:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242884:_Znwj": null, "5242888:__libc_start_main": null, "5242892:cgc_receive": null, "5242896:_Znaj": null, "5242900:cgc_allocate": null, "5242904:cgc__terminate": null, "5242908:_ZdlPv": null, "5242912:_ZdaPv": null, "5242916:cgc_rint": null, "5242920:cgc_log10": null, "5242924:cgc_transmit": null, "5242928:cgc_pow": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}