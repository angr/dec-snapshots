{"4206592:_init": "extern struct_0 *g_40ea7c;\n
\n
int _init()\n
{\n
    if (g_40ea7c)\n
    {\n
        g_40ea7c();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4206688:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206704:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libstdc++.so::cgc_fdwait();\n
    return;\n
}\n
", "4206720:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4206736:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206752:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4206768:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4206784:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206800:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206816:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libstdc++.so::cgc_rint();\n
    return;\n
}\n
", "4206832:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libstdc++.so::cgc_log10();\n
    return;\n
}\n
", "4206848:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4206864:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libstdc++.so::cgc_pow();\n
    return;\n
}\n
", "4206880:sub_403120": "int sub_403120()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206886:sub_403126": null, "4206896:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206939:sub_40315b": null, "4206940:sub_40315c": "int sub_40315c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206944:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206948:sub_403164": null, "4206960:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 47375;\n
    v6 = v5 + 19;\n
    v7 = v5 + 19;\n
    if (v7 == v6)\n
        return v5 + 19;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4207011:sub_4031a3": "int sub_4031a3()\n
{\n
}\n
", "4207017:sub_4031a9": "int sub_4031a9()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207024:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 47311;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 19;\n
    v9 = (v6 + 19 - (v6 + 19) >> 31) + (19 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207095:sub_4031f7": "int sub_4031f7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207104:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40ea70;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40ea70)\n
    {\n
        v0 = __dso_handle;\n
        sub_403120();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207179:sub_40324b": "int sub_40324b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207184:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207193:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207197:sub_40325d": null, "4207200:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4207292:sub_4032bc": null, "4207296:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_50->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_50 == v9)\n
        {\n
            v1->field_50 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_50 == v9)\n
    {\n
        v1->field_50 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4207979:sub_40356b": null, "4207984:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_50;\n
    v7->field_50 = v3;\n
    return v3;\n
}\n
", "4208184:sub_403638": null, "4208192:cgc_free": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: unsigned int, struct_0 *, struct struct_1 **, struct struct_1 *[2]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_50 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_50 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_50;\n
    v2[1] = 0;\n
    if (v9->field_50)\n
    {\n
        v12 = v1;\n
        *((&v12->field_50->field_0 + (v12->field_50->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_50 = v7;\n
    return v1;\n
}\n
", "4208656:cgc_floor": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: unsigned int, struct_0 *, struct struct_1 **, struct struct_1 *[2]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_50 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_50 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_50;\n
    v2[1] = 0;\n
    if (v9->field_50)\n
    {\n
        v12 = v1;\n
        *((&v12->field_50->field_0 + (v12->field_50->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_50 = v7;\n
    return v1;\n
}\n
", "4208820:sub_4038b4": null, "4208832:cgc_round_away_from_zero": null, "4208986:sub_40395a": null, "4208992:cgc_round": null, "4209136:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4209228:sub_403a4c": null, "4209232:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209441:sub_403b21": null, "4209456:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209649:sub_403bf1": null, "4209664:cgc_float_to_str": null, "4210527:sub_403f5f": null, "4210528:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v26, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    void* v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp-0xc]\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!v26)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(v26))\n
    {\n
        if (*(v26) != 64)\n
        {\n
            cgc_putc(*(v26));\n
            v26 += 1;\n
            v24 += 1;\n
LABEL_404834:\n
        }\n
        else\n
        {\n
            v26 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(v26) == 64)\n
            {\n
                cgc_putc(64);\n
                v26 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 45)\n
            {\n
                v19 = 1;\n
                v26 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(v26) == 48)\n
                {\n
                    v20 = 1;\n
                    v26 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
                }\n
            }\n
            if (*(v26) == 46)\n
            {\n
                v26 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
            }\n
            if (*(v26) == 99)\n
            {\n
                v27 = a0;\n
                a0 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                cgc_putc(v16);\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 100)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v15 = *(v28);\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; *(v14); v14 += 1)\n
                {\n
                    cgc_putc(*(v14));\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 120)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v13 = &*(v29)->field_0;\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    cgc_putc(v12->field_0);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    cgc_putc(v10->field_0);\n
                    v24 += 1;\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (!(*(v26) == 115))\n
                goto LABEL_404834;\n
            v35 = a0;\n
            a0 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_4046b3;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_4046b3:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (!v20)\n
                        cgc_putc(32);\n
                    else\n
                        cgc_putc(48);\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                cgc_putc(*(v9));\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            v26 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4212811:sub_40484b": null, "4212816:cgc_vsprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v26, char *a0, struct struct_1 **a1)\n
{\n
    struct_0 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_0 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x78]\n
    struct_0 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    char *v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v25;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_1 **v27;  // eax\n
    struct struct_1 **v28;  // eax\n
    struct struct_1 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_1 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!a0)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            *((v26 + v24)) = *(a0);\n
            a0 += 1;\n
            v24 += 1;\n
LABEL_40508b:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(a0) == 64)\n
            {\n
                *((v26 + v24)) = 64;\n
                a0 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v19 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v20 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            *((v26 + v24)) = 48;\n
                        else\n
                            *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                *((v26 + v24)) = v16;\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v15 = &*(v28)->field_0;\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            *((v26 + v24)) = 48;\n
                        else\n
                            *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; v14->field_0; v14 += 1)\n
                {\n
                    *((v26 + v24)) = v14->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v13 = &*(v29)->field_0;\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    *((v26 + v24)) = v12->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 8;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    *((v26 + v24)) = v10->field_0;\n
                    v24 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_40508b;\n
            v35 = a1;\n
            a1 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_404f2e;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_404f2e:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (!v20)\n
                        *((v26 + v24)) = 32;\n
                    else\n
                        *((v26 + v24)) = 48;\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                *((v26 + v24)) = *(v9);\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    *((v26 + v24)) = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4214946:sub_4050a2": null, "4214960:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4215024:cgc_sprintf": "int cgc_sprintf(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    v3[v0] = 0;\n
    return v0;\n
}\n
", "4215103:sub_40513f": null, "4215104:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4215198:sub_40519e": null, "4215200:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215254:sub_4051d6": null, "4215264:cgc_isnan": null, "4215287:sub_4051f7": null, "4215296:cgc_isinf": null, "4215343:sub_40522f": null, "4215344:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = v1 + 32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4215402:sub_40526a": null, "4215408:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = v1 + -32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4215466:sub_4052aa": null, "4215472:cgc_strcmp": "int cgc_strcmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v2 + v0)) && !*((a0 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        if (!*((a0 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) < *((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) <= *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4215710:sub_40539e": null, "4215712:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4215803:sub_4053fb": null, "4215808:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4215914:sub_40546a": null, "4215920:cgc_flush_input": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flush_input(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x4bc]\n
    unsigned int v1;  // [bp-0x4ac]\n
    char v2;  // [bp-0x4a4]\n
    void* v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    char v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    char v7;  // [bp-0x94]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        cgc_memset(&v7, 0);\n
        v10 = v9 >> 5;\n
        *(&(&v7)[4 * v10]) = 1 << (v9 & 31 & 31) | *(&(&v7)[4 * v10]);\n
        v3 = 0;\n
        v4 = 10;\n
        v0 = &v5;\n
        v6 = cgc_fdwait(v9 + 1, &v7, 0, &v3);\n
        if (v6)\n
        {\n
            v8 = v6;\n
            return v8;\n
        }\n
        else if ((*(&(&v7)[4 * (v9 >> 5)]) & 1 << (v9 & 31 & 31)))\n
        {\n
            cgc_receive(v9, &v2, 0x400);\n
        }\n
        else\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
}\n
", "4216252:sub_4055bc": null, "4216256:cgc_memset": "int cgc_memset(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *(&v2[v3]) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        v2[v3] = v1;\n
    }\n
    return v3;\n
}\n
", "4216425:sub_405669": null, "4216432:cgc_getline": "int cgc_getline(char *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v1 = cgc_receive_until(v2, 10);\n
    if (v1 != a0)\n
    {\n
        v2[v1] = 0;\n
        return v1;\n
    }\n
    v2[1 + a0] = 0;\n
    return v1;\n
}\n
", "4216535:sub_4056d7": null, "4216544:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v4 < a1; v4 += 1)\n
    {\n
        *((v5 + v4)) = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (v2 == a0)\n
                break;\n
            *((v5 + v4)) = v2;\n
        }\n
    }\n
    if (v4 == a1)\n
        cgc_flush_input(0);\n
    return v4;\n
}\n
", "4216765:sub_4057bd": null, "4216768:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *(&v0[v1]) = *(&v0[a0]);\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v1;\n
}\n
", "4216912:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4217316:sub_4059e4": null, "4217328:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4217383:sub_405a27": null, "4217392:cgc_abs": "int cgc_abs(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < 0)\n
    {\n
        v0 = -(v1);\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4217436:sub_405a5c": null, "4217440:_ZN6StringC2Ev": "int String::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4217464:sub_405a78": null, "4217472:_ZN6StringC1EPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__ctor__(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v4;\n
    v2 = cgc_strlen(a0) + 1;\n
    v6 = v1;\n
    v6[1] = operator new[](v2);\n
    cgc_memcpy(v6[1], a0, v2 - 1);\n
    v7 = v1;\n
    *((v7[1] + v2 - 1)) = 0;\n
    v7[0] = v2 - 1;\n
    v8 = v3;\n
    return v1;\n
}\n
", "4217606:sub_405b06": null, "4217616:_ZN6StringC2ERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__base_ctor__(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v4;\n
    v2 = a0[0] + 1;\n
    v6 = v1;\n
    v6[1] = operator new[](v2);\n
    cgc_memcpy(v6[1], a0[1], a0[0]);\n
    v7 = v1;\n
    *((v7[1] + v2 - 1)) = 0;\n
    v7[0] = a0[0];\n
    v8 = v3;\n
    return v1;\n
}\n
", "4217742:sub_405b8e": null, "4217744:_ZN6StringD2Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__base_dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    v2 = v4;\n
    if (!v4->field_4)\n
        return v3;\n
    v4 = v2->field_4;\n
    v0 = v4;\n
    if (!v4)\n
        return v4;\n
    v4 = operator delete[](v0);\n
}\n
", "4217828:sub_405be4": null, "4217840:_ZN6StringpLERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator+=(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v9[2];  // eax\n
    unsigned int v10[2];  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v6;\n
    v4 = v2[0] + a0[0] + 1;\n
    v9 = v2;\n
    v3 = operator new[](v4);\n
    cgc_memcpy(v3, v9[1], v9[0]);\n
    cgc_memcpy(v3 + v2[0], a0[1], a0[0]);\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v10 = v2;\n
    v10[1] = v3;\n
    v10[0] = v4 - 1;\n
    return v2;\n
}\n
", "4218044:sub_405cbc": null, "4218048:_ZNK6StringplERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator+ const(unsigned int v6, unsigned int a0[2], unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v3 = v1;\n
    v0[0] = a1;\n
    String::__base_ctor__(&v4, a0);\n
    String::__base_ctor__(v1, String::operator+=(&v4, v0));\n
    String::__base_dtor__(&v4);\n
    v8 = v5;\n
    return v3;\n
}\n
", "4218173:sub_405d3d": null, "4218176:_ZNK6String5c_strEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int String::c_str const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4218190:sub_405d4e": null, "4218192:_ZN6String6lengthEv": "int String::length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4218205:sub_405d5d": null, "4218208:_ZN6String5emptyEv": "int String::empty(unsigned int *v0)\n
{\n
    return !*(v0);\n
}\n
", "4218230:sub_405d76": null, "4218240:_ZNK6String5upperEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::upper const(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v2[0] = v1;\n
    v4 = 0;\n
    String::__base_ctor__(v1, a0);\n
    for (v3 = 0; v3 < v1[0]; v3 += 1)\n
    {\n
        v3[v1[1]] = cgc_toupper(v3[v1[1]]);\n
    }\n
    v4 = 1;\n
    if (!(v4 & 1))\n
        String::__base_dtor__(v1);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4218409:sub_405e29": null, "4218416:_ZNK6String5lowerEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::lower const(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v2[0] = v1;\n
    v4 = 0;\n
    String::__base_ctor__(v1, a0);\n
    for (v3 = 0; v3 < v1[0]; v3 += 1)\n
    {\n
        v3[v1[1]] = cgc_tolower(v3[v1[1]]);\n
    }\n
    v4 = 1;\n
    if (!(v4 & 1))\n
        String::__base_dtor__(v1);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4218585:sub_405ed9": null, "4218592:_ZNK6String11StripSpacesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::StripSpaces const(unsigned int v7, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v7;\n
    v3 = v2;\n
    v4[0] = a0;\n
    for (v5 = 0; v5 < v4[0]; v5 += 1)\n
    {\n
        if (v5[v4[1]] != 32)\n
            break;\n
    }\n
    v0 = -1;\n
    String::SubString const(v2, v4, v5);\n
    return v3;\n
}\n
", "4218749:sub_405f7d": null, "4218752:_ZNK6String9SubStringEmm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::SubString const(unsigned int v8, unsigned int a0[2], char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[2];  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[2];  // [bp-0x20]\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v9;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v2 = v1;\n
    v3[0] = a0;\n
    if (a1 >= v3[0])\n
    {\n
        String::__ctor__(v1, v0 - 9748);\n
        return v2;\n
    }\n
    if (a2 > v3[0])\n
        a2 = v3[0];\n
    if (a1 >= a2)\n
    {\n
        String::__ctor__(v1, v0 - 9748);\n
        return v2;\n
    }\n
    v7 = a2 - a1;\n
    v6 = operator new[](v7 + 1);\n
    v5 = 0;\n
    for (v4 = a1; v4 < a2; v4 += 1)\n
    {\n
        v9 = v5;\n
        v5 = v9 + 1;\n
        v6[v9] = *((v3[1] + v4));\n
    }\n
    v6[v5] = 0;\n
    String::__ctor__(v1, v6);\n
    return v2;\n
}\n
", "4219042:sub_4060a2": null, "4219056:_ZN6String4TrimEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::Trim(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    unsigned int v2[2];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // ebx\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v3 = v1;\n
    v2[0] = a0;\n
    String::SubString const(&v4, v2, NULL, a1);\n
    String::operator=(v2);\n
    String::__base_dtor__(&v4);\n
    String::__base_ctor__(v1, v2);\n
    v11 = *(&v5);\n
    v12 = v6;\n
    return v3;\n
}\n
", "4219203:sub_406143": null, "4219216:_ZN6StringaSERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator=(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[2];  // eax\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v3 = a0[0] + 1;\n
    v5 = v2;\n
    v5[1] = operator new[](v3);\n
    cgc_memcpy(v5[1], a0[1], a0[0]);\n
    v6 = v2;\n
    *((v6[1] + v3 - 1)) = 0;\n
    v6[0] = a0[0];\n
    return v2;\n
}\n
", "4219392:_ZNK6StringeqERKS_": "int String::operator== const(unsigned int v3[2], unsigned int a0[2])\n
{\n
    unsigned int v0[2];  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0[0] = v3;\n
    if (v0[0] != a0[0])\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v0[0])\n
        {\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
        else if (*((v0[1] + v1)) == *((a0[1] + v1)))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
    }\n
}\n
", "4219532:sub_40628c": null, "4219536:_ZNK6StringneERKS_": "int String::operator!= const(unsigned int v0[2], unsigned int a0[2])\n
{\n
    return (String::operator== const(v0, a0) ^ 255) & 1;\n
}\n
", "4219592:sub_4062c8": null, "4219600:_ZN6String9SetStringEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::SetString(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[2];  // eax\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v3 = cgc_strlen(a0) + 1;\n
    v5 = v2;\n
    v5[1] = operator new[](v3);\n
    cgc_memcpy(v5[1], a0, v3 - 1);\n
    v6 = v2;\n
    *((v6[1] + v3 - 1)) = 0;\n
    v6[0] = v3 - 1;\n
    return v2;\n
}\n
", "4219784:sub_406388": null, "4219792:_ZN14CommandHandlerC2Ev": "typedef struct struct_0 {\n
    char padding_0[84];\n
    char field_54;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::__base_ctor__(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2;\n
    DLQueue::__base_ctor__();\n
    v0 = &v2->padding_0[12];\n
    DiverInfo::__base_ctor__();\n
    v2->field_54 = 0;\n
    v6 = v3;\n
    return v2;\n
}\n
", "4219861:sub_4063d5": null, "4219872:_ZN14CommandHandlerD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::__dtor__(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2 + 12;\n
    DiverInfo::__base_dtor__();\n
    v0 = v2;\n
    v6 = v3;\n
    return DLQueue::__base_dtor__();\n
}\n
", "4219934:sub_40641e": null, "4219936:_ZN14CommandHandler18CmdChangeDiverInfoEv": "typedef struct struct_0 {\n
    char padding_0[84];\n
    char field_54;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdChangeDiverInfo(struct_0 *v57)\n
{\n
    char v0;  // [bp-0x185]\n
    char v1;  // [bp-0x184]\n
    char v2;  // [bp-0x183]\n
    char v3;  // [bp-0x182]\n
    char v4;  // [bp-0x181]\n
    char v5;  // [bp-0x180]\n
    char v6;  // [bp-0x17f]\n
    char v7;  // [bp-0x17e]\n
    char v8;  // [bp-0x17d]\n
    unsigned int v9;  // [bp-0x17c]\n
    struct_0 *v10;  // [bp-0x178]\n
    char v11;  // [bp-0x174]\n
    char v12;  // [bp-0x16c]\n
    char v13;  // [bp-0x164]\n
    char v14;  // [bp-0x15c]\n
    char v15;  // [bp-0x154]\n
    char v16;  // [bp-0x14c]\n
    char v17;  // [bp-0x144]\n
    char v18;  // [bp-0x13c]\n
    char v19;  // [bp-0x134]\n
    char v20;  // [bp-0x12c]\n
    char v21;  // [bp-0x124]\n
    char v22;  // [bp-0x11c]\n
    char v23;  // [bp-0x114]\n
    char v24;  // [bp-0x10c]\n
    char v25;  // [bp-0x104]\n
    char v26;  // [bp-0xfc]\n
    char v27;  // [bp-0xf4]\n
    char v28;  // [bp-0xec]\n
    char v29;  // [bp-0xe4]\n
    char v30;  // [bp-0xdc]\n
    char v31;  // [bp-0xd4]\n
    char v32;  // [bp-0xcc]\n
    char v33;  // [bp-0xc4]\n
    char v34;  // [bp-0xbc]\n
    char v35;  // [bp-0xb4]\n
    char v36;  // [bp-0xac]\n
    char v37;  // [bp-0xa4]\n
    char v38;  // [bp-0x9c]\n
    char v39;  // [bp-0x94]\n
    char v40;  // [bp-0x8c]\n
    char v41;  // [bp-0x84]\n
    char v42;  // [bp-0x7c]\n
    char v43;  // [bp-0x74]\n
    char v44;  // [bp-0x6c]\n
    char v45;  // [bp-0x64]\n
    char v46;  // [bp-0x5c]\n
    char v47;  // [bp-0x54]\n
    char v48;  // [bp-0x4c]\n
    char v49;  // [bp-0x44]\n
    char v50;  // [bp-0x3c]\n
    char v51;  // [bp-0x34]\n
    char v52;  // [bp-0x2c]\n
    char v53;  // [bp-0x24]\n
    char v54;  // [bp-0x1c]\n
    char v55;  // [bp-0x14]\n
    unsigned int v56;  // [bp-0x8]\n
    unsigned int v58;  // ebx\n
\n
    v56 = v58;\n
    v9 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = v57;\n
    cgc_printf(\"\\n
\");\n
    if (!(v10->field_54 & 1))\n
    {\n
        String::__base_ctor__(&v28);\n
        String::__base_ctor__(&v27);\n
        String::__base_ctor__(&v26);\n
        String::__base_ctor__(&v25);\n
        String::__base_ctor__(&v24);\n
        String::__base_ctor__(&v23);\n
        String::__base_ctor__(&v22);\n
        String::__base_ctor__(&v21);\n
        String::__base_ctor__(&v20);\n
        cgc_printf(v9 - 10635);\n
        ReadLine();\n
        String::Trim(&v19, &v28, 20);\n
        String::__base_dtor__(&v19);\n
        cgc_printf(v9 - 10622);\n
        ReadLine();\n
        String::Trim(&v18, &v27, 20);\n
        String::__base_dtor__(&v18);\n
        cgc_printf(v9 - 10610);\n
        ReadLine();\n
        String::Trim(&v17, &v26, 29);\n
        String::__base_dtor__(&v17);\n
        cgc_printf(v9 - 10601);\n
        ReadLine();\n
        String::Trim(&v16, &v25, 19);\n
        String::__base_dtor__(&v16);\n
        cgc_printf(v9 - 10594);\n
        ReadLine();\n
        String::Trim(&v15, &v24, 2);\n
        String::__base_dtor__(&v15);\n
        cgc_printf(v9 - 10586);\n
        ReadLine();\n
        String::Trim(&v14, &v23, 10);\n
        String::__base_dtor__(&v14);\n
        cgc_printf(v9 - 10575);\n
        ReadLine();\n
        String::Trim(&v13, &v22, 15);\n
        String::__base_dtor__(&v13);\n
        cgc_printf(v9 - 10560);\n
        ReadLine();\n
        String::Trim(&v12, &v21, 19);\n
        String::__base_dtor__(&v12);\n
        cgc_printf(v9 - 10540);\n
        ReadLine();\n
        String::Trim(&v11, &v20, 10);\n
        String::__base_dtor__(&v11);\n
        DiverInfo::SetFirstName(&v10->padding_0[12]);\n
        DiverInfo::SetLastName(&v10->padding_0[12]);\n
        DiverInfo::SetStreet(&v10->padding_0[12]);\n
        DiverInfo::SetCity(&v10->padding_0[12]);\n
        DiverInfo::SetState(&v10->padding_0[12]);\n
        DiverInfo::SetZipCode(&v10->padding_0[12]);\n
        DiverInfo::SetPhoneNumber(&v10->padding_0[12]);\n
        DiverInfo::SetPadiNumber(&v10->padding_0[12]);\n
        DiverInfo::SetPadiDate(&v10->padding_0[12]);\n
        String::__base_dtor__(&v20);\n
        String::__base_dtor__(&v21);\n
        String::__base_dtor__(&v22);\n
        String::__base_dtor__(&v23);\n
        String::__base_dtor__(&v24);\n
        String::__base_dtor__(&v25);\n
        String::__base_dtor__(&v26);\n
        String::__base_dtor__(&v27);\n
        String::__base_dtor__(&v28);\n
    }\n
    else\n
    {\n
        String::__base_ctor__(&v55);\n
        String::__base_ctor__(&v54);\n
        String::__base_ctor__(&v53);\n
        String::__base_ctor__(&v52);\n
        String::__base_ctor__(&v51);\n
        String::__base_ctor__(&v50);\n
        String::__base_ctor__(&v49);\n
        String::__base_ctor__(&v48);\n
        String::__base_ctor__(&v47);\n
        String::c_str const(DiverInfo::GetFirstName const());\n
        cgc_printf(v9 - 10792);\n
        ReadLine(&v55);\n
        String::Trim(&v46, &v55, 20);\n
        String::__base_dtor__(&v46);\n
        String::c_str const(DiverInfo::GetLastName const());\n
        cgc_printf(v9 - 10774);\n
        ReadLine(&v54);\n
        String::Trim(&v45, &v54, 20);\n
        String::__base_dtor__(&v45);\n
        String::c_str const(DiverInfo::GetStreet const());\n
        cgc_printf(v9 - 10757);\n
        ReadLine(&v53);\n
        String::Trim(&v44, &v53, 29);\n
        String::__base_dtor__(&v44);\n
        String::c_str const(DiverInfo::GetCity const());\n
        cgc_printf(v9 - 10743);\n
        ReadLine(&v52);\n
        String::Trim(&v43, &v52, 19);\n
        String::__base_dtor__(&v43);\n
        String::c_str const(DiverInfo::GetState const());\n
        cgc_printf(v9 - 10731);\n
        ReadLine(&v51);\n
        String::Trim(&v42, &v51, 2);\n
        String::__base_dtor__(&v42);\n
        String::c_str const(DiverInfo::GetZipCode const());\n
        cgc_printf(v9 - 10718);\n
        ReadLine(&v50);\n
        String::Trim(&v41, &v50, 10);\n
        String::__base_dtor__(&v41);\n
        String::c_str const(DiverInfo::GetPhoneNumber const());\n
        cgc_printf(v9 - 10702);\n
        ReadLine(&v49);\n
        String::Trim(&v40, &v49, 15);\n
        String::__base_dtor__(&v40);\n
        String::c_str const(DiverInfo::GetPadiNumber const());\n
        cgc_printf(v9 - 10682);\n
        ReadLine(&v48);\n
        String::Trim(&v39, &v48, 19);\n
        String::__base_dtor__(&v39);\n
        String::c_str const(DiverInfo::GetPadiDate const());\n
        cgc_printf(v9 - 10657);\n
        ReadLine(&v47);\n
        String::Trim(&v38, &v47, 10);\n
        String::__base_dtor__(&v38);\n
        String::__ctor__(&v37, v9 - 9748);\n
        v8 = String::operator!= const(&v55, &v37);\n
        String::__base_dtor__(&v37);\n
        if ((v8 & 1))\n
            DiverInfo::SetFirstName(&v10->padding_0[12]);\n
        String::__ctor__(&v36, v9 - 9748);\n
        v7 = String::operator!= const(&v54, &v36);\n
        String::__base_dtor__(&v36);\n
        if ((v7 & 1))\n
            DiverInfo::SetLastName(&v10->padding_0[12]);\n
        String::__ctor__(&v35, v9 - 9748);\n
        v6 = String::operator!= const(&v53, &v35);\n
        String::__base_dtor__(&v35);\n
        if ((v6 & 1))\n
            DiverInfo::SetStreet(&v10->padding_0[12]);\n
        String::__ctor__(&v34, v9 - 9748);\n
        v5 = String::operator!= const(&v52, &v34);\n
        String::__base_dtor__(&v34);\n
        if ((v5 & 1))\n
            DiverInfo::SetCity(&v10->padding_0[12]);\n
        String::__ctor__(&v33, v9 - 9748);\n
        v4 = String::operator!= const(&v51, &v33);\n
        String::__base_dtor__(&v33);\n
        if ((v4 & 1))\n
            DiverInfo::SetState(&v10->padding_0[12]);\n
        String::__ctor__(&v32, v9 - 9748);\n
        v3 = String::operator!= const(&v50, &v32);\n
        String::__base_dtor__(&v32);\n
        if ((v3 & 1))\n
            DiverInfo::SetZipCode(&v10->padding_0[12]);\n
        String::__ctor__(&v31, v9 - 9748);\n
        v2 = String::operator!= const(&v49, &v31);\n
        String::__base_dtor__(&v31);\n
        if ((v2 & 1))\n
            DiverInfo::SetPhoneNumber(&v10->padding_0[12]);\n
        String::__ctor__(&v30, v9 - 9748);\n
        v1 = String::operator!= const(&v48, &v30);\n
        String::__base_dtor__(&v30);\n
        if ((v1 & 1))\n
            DiverInfo::SetPadiNumber(&v10->padding_0[12]);\n
        String::__ctor__(&v29, v9 - 9748);\n
        v0 = String::operator!= const(&v47, &v29);\n
        String::__base_dtor__(&v29);\n
        if ((v0 & 1))\n
            DiverInfo::SetPadiDate(&v10->padding_0[12]);\n
        String::__base_dtor__(&v47);\n
        String::__base_dtor__(&v48);\n
        String::__base_dtor__(&v49);\n
        String::__base_dtor__(&v50);\n
        String::__base_dtor__(&v51);\n
        String::__base_dtor__(&v52);\n
        String::__base_dtor__(&v53);\n
        String::__base_dtor__(&v54);\n
        String::__base_dtor__(&v55);\n
    }\n
    v10->field_54 = 1;\n
    CommandHandler::PrintDiverInfo();\n
    return 0;\n
}\n
", "4224299:sub_40752b": null, "4224304:_ZN14CommandHandler14PrintDiverInfoEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::PrintDiverInfo(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    cgc_printf(\"\\n
\");\n
    v1 = String::c_str const(DiverInfo::GetFirstName const());\n
    v0 = String::c_str const(DiverInfo::GetLastName const());\n
    cgc_printf(v3 - 9681);\n
    String::c_str const(DiverInfo::GetStreet const(v2 + 12, v1));\n
    cgc_printf(v3 - 9663);\n
    String::c_str const(DiverInfo::GetCity const(v2 + 12));\n
    cgc_printf(v3 - 9648);\n
    String::c_str const(DiverInfo::GetState const(v2 + 12));\n
    cgc_printf(v3 - 9633);\n
    String::c_str const(DiverInfo::GetZipCode const(v2 + 12));\n
    cgc_printf(v3 - 9618);\n
    String::c_str const(DiverInfo::GetPhoneNumber const(v2 + 12));\n
    cgc_printf(v3 - 9603);\n
    String::c_str const(DiverInfo::GetPadiNumber const(v2 + 12));\n
    cgc_printf(v3 - 9588);\n
    String::c_str const(DiverInfo::GetPadiDate const(v2 + 12));\n
    cgc_printf(v3 - 9573);\n
    v7 = v4;\n
    return cgc_printf(v3 - 9749);\n
}\n
", "4224804:sub_407724": null, "4224816:_ZN14CommandHandler13CmdLogNewDiveEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdLogNewDive(unsigned int v28)\n
{\n
    unsigned int v0;  // [bp-0xb0]\n
    unsigned int v1;  // [bp-0xac]\n
    unsigned int v2;  // [bp-0xa8]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char v9;  // [bp-0x8c]\n
    char v10;  // [bp-0x84]\n
    unsigned int v11;  // [bp-0x80]\n
    char v12;  // [bp-0x7c]\n
    char v13;  // [bp-0x74]\n
    char v14;  // [bp-0x6c]\n
    char v15;  // [bp-0x64]\n
    char v16;  // [bp-0x5c]\n
    char v17;  // [bp-0x54]\n
    char v18;  // [bp-0x4c]\n
    char v19;  // [bp-0x44]\n
    char v20;  // [bp-0x3c]\n
    char v21;  // [bp-0x34]\n
    char v22;  // [bp-0x2c]\n
    char v23;  // [bp-0x24]\n
    char v24;  // [bp-0x1c]\n
    char v25;  // [bp-0x18]\n
    char v26;  // [bp-0x14]\n
    unsigned int v27;  // [bp-0x8]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // ebx\n
\n
    v27 = v29;\n
    v8 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v28;\n
    String::__base_ctor__(&v26);\n
    String::__base_ctor__(&v24);\n
    String::__base_ctor__(&v23);\n
    String::__base_ctor__(&v22);\n
    String::__base_ctor__(&v21);\n
    String::__base_ctor__(&v20);\n
    String::__base_ctor__(&v19);\n
    String::__base_ctor__(&v18);\n
    String::__base_ctor__(&v17);\n
    String::__base_ctor__(&v16);\n
    cgc_printf(v8 - 9749);\n
    cgc_printf(v8 - 10523);\n
    ReadLine();\n
    String::Trim(&v15, &v26, 25);\n
    String::__base_dtor__(&v15);\n
    cgc_printf(v8 - 10530);\n
    ReadLine();\n
    String::Trim(&v14, &v24, 10);\n
    String::__base_dtor__(&v14);\n
    cgc_printf(v8 - 10511);\n
    ReadLine();\n
    String::Trim(&v13, &v23, 8);\n
    String::__base_dtor__(&v13);\n
    cgc_printf(v8 - 10504);\n
    ReadLine();\n
    String::Trim(&v12, &v22, 25);\n
    String::__base_dtor__(&v12);\n
    cgc_printf(v8 - 10481);\n
    ReadLine();\n
    cgc_printf(v8 - 10463);\n
    ReadLine();\n
    cgc_printf(v8 - 10445);\n
    ReadLine();\n
    cgc_printf(v8 - 10422);\n
    ReadLine();\n
    cgc_printf(v8 - 10406);\n
    ReadLine();\n
    cgc_printf(v8 - 10386);\n
    ReadLine();\n
    v0 = operator new(1084);\n
    Dive::__base_ctor__();\n
    v11 = v0;\n
    Date::__base_ctor__();\n
    Date::SetDate(&v10);\n
    Time::__base_ctor__(&v9);\n
    Time::SetTime(&v9);\n
    Dive::SetDate(v11);\n
    Dive::SetTime(v11);\n
    Dive::SetDiveSite(v11);\n
    Dive::SetLocation(v11);\n
    v1 = v11;\n
    StringToInt(&v21);\n
    Dive::SetMaxDepth(v1);\n
    v2 = v11;\n
    StringToInt(&v20);\n
    Dive::SetAvgDepth(v2);\n
    v3 = v11;\n
    StringToInt(&v19);\n
    Dive::SetDuration(v3);\n
    v4 = v11;\n
    StringToInt(&v18);\n
    Dive::SetO2Percentage(v4);\n
    v5 = v11;\n
    StringToInt(&v17);\n
    Dive::SetStartPressure(v5);\n
    v6 = v11;\n
    StringToInt(&v16);\n
    Dive::SetEndPressure(v6);\n
    DLQueue::AddLast(v7);\n
    Time::__base_dtor__(&v9);\n
    Date::__base_dtor__();\n
    String::__base_dtor__(&v16);\n
    String::__base_dtor__(&v17);\n
    String::__base_dtor__(&v18);\n
    String::__base_dtor__(&v19);\n
    String::__base_dtor__(&v20);\n
    String::__base_dtor__(&v21);\n
    String::__base_dtor__(&v22);\n
    String::__base_dtor__(&v23);\n
    String::__base_dtor__(&v24);\n
    String::__base_dtor__(&v26);\n
    v30 = *(&v25);\n
    return 0;\n
}\n
", "4226402:sub_407d62": null, "4226416:_ZN14CommandHandler19CmdDownloadDiveDataEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdDownloadDiveData(unsigned int v50)\n
{\n
    unsigned int v0;  // [bp-0x128]\n
    unsigned int v1;  // [bp-0x118]\n
    unsigned int v2;  // [bp-0x114]\n
    unsigned int v3;  // [bp-0x110]\n
    char v4;  // [bp-0x10c]\n
    char v5;  // [bp-0x10b]\n
    char v6;  // [bp-0x10a]\n
    char v7;  // [bp-0x109]\n
    unsigned int v8;  // [bp-0x108]\n
    unsigned int v9;  // [bp-0x104]\n
    char v10;  // [bp-0xfd]\n
    unsigned int v11;  // [bp-0xfc]\n
    unsigned int v12;  // [bp-0xf8]\n
    unsigned int v13;  // [bp-0xf4]\n
    unsigned int v14;  // [bp-0xf0]\n
    char v15;  // [bp-0xec]\n
    char v16;  // [bp-0xe4]\n
    char v17;  // [bp-0xdc]\n
    char v18;  // [bp-0xd4]\n
    char v19;  // [bp-0xcc]\n
    char v20;  // [bp-0xc4]\n
    char v21;  // [bp-0xbc]\n
    char v22;  // [bp-0xb4]\n
    char v23;  // [bp-0xac]\n
    char v24;  // [bp-0xa4]\n
    char v25;  // [bp-0x9c]\n
    char v26;  // [bp-0x94]\n
    char v27;  // [bp-0x8c]\n
    char v28;  // [bp-0x84]\n
    char v29;  // [bp-0x7c]\n
    char v30;  // [bp-0x74]\n
    char v31;  // [bp-0x6c]\n
    char v32;  // [bp-0x64]\n
    char v33;  // [bp-0x5c]\n
    char v34;  // [bp-0x54]\n
    char v35;  // [bp-0x4c]\n
    char v36;  // [bp-0x44]\n
    char v37;  // [bp-0x3c]\n
    unsigned int v38;  // [bp-0x38]\n
    unsigned int v39;  // [bp-0x34]\n
    unsigned int v40;  // [bp-0x30]\n
    unsigned int v41;  // [bp-0x2c]\n
    unsigned int v42;  // [bp-0x28]\n
    void* v43;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v44;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v45;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v46;  // [bp-0x14]\n
    char v47;  // [bp-0xd]\n
    unsigned int v48;  // [bp-0xc]\n
    unsigned int v49;  // [bp-0x8]\n
    unsigned int v51;  // ebx\n
    unsigned int v52;  // eax\n
    unsigned int v53;  // ebx\n
\n
    v49 = v51;\n
    v14 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = v50;\n
    cgc_printf(\"\\n
\");\n
    v13 = operator new(1084);\n
    Dive::__base_ctor__();\n
    v48 = v13;\n
    v47 = 0;\n
    ReadUint32();\n
    ReadUint32();\n
    v0 = *(&v46);\n
    Dive::AddDiveBin(v48, v0);\n
    while (true)\n
    {\n
        ReadUint32(&v46, v0);\n
        if (!*(&v46))\n
            break;\n
        ReadUint32();\n
        v0 = *(&v46);\n
        Dive::AddDiveBin(v48, v0);\n
    }\n
    v44 = 0;\n
    v43 = 0;\n
    v45 = 0;\n
    while (true)\n
    {\n
        v11 = v45;\n
        if (v11 >= Dive::GetBinCount const())\n
            break;\n
        if (DiveBin::GetDepth const(Dive::GetDiveBin const(v48)) > v44)\n
            v44 = DiveBin::GetDepth const(Dive::GetDiveBin const(v48));\n
        v43 = DiveBin::GetDepth const(Dive::GetDiveBin const(v48)) + v43;\n
        v45 += 1;\n
    }\n
    v8 = v43;\n
    v42 = (0 CONCAT v8) /m Dive::GetBinCount const();\n
    v41 = DiveBin::GetTimeVal const(Dive::GetDiveBin const(v48));\n
    v9 = v48;\n
    v52 = Dive::GetBinCount const() - 1;\n
    v40 = DiveBin::GetTimeVal const(Dive::GetDiveBin const(v9));\n
    v39 = v40 - v41;\n
    v38 = (0 CONCAT v39) /m 60;\n
    Date::__base_ctor__();\n
    Time::__base_ctor__();\n
    Date::FromUnixTimeval(&v37);\n
    Time::FromUnixTimeval(&v36);\n
    String::__base_ctor__(&v35);\n
    String::__base_ctor__(&v34);\n
    String::__base_ctor__(&v33);\n
    String::__base_ctor__(&v32);\n
    String::__base_ctor__(&v31);\n
    String::__base_ctor__(&v30);\n
    String::__base_ctor__(&v29);\n
    String::__base_ctor__(&v28);\n
    String::__base_ctor__(&v27);\n
    String::__base_ctor__(&v26);\n
    cgc_printf(v14 - 10523);\n
    ReadLine();\n
    String::Trim(&v25, &v35, 25);\n
    String::__base_dtor__(&v25);\n
    Date::GetString const(&v24);\n
    String::c_str const(&v24);\n
    cgc_printf(v14 - 10647);\n
    String::__base_dtor__(&v24);\n
    ReadLine();\n
    String::Trim(&v23, &v34, 10);\n
    String::__base_dtor__(&v23);\n
    Time::GetString const(&v22);\n
    String::c_str const(&v22);\n
    cgc_printf(v14 - 10365);\n
    String::__base_dtor__(&v22);\n
    ReadLine();\n
    String::Trim(&v21, &v33, 8);\n
    String::__base_dtor__(&v21);\n
    cgc_printf(v14 - 10504);\n
    ReadLine();\n
    String::Trim(&v20, &v32, 25);\n
    String::__base_dtor__(&v20);\n
    cgc_printf(v14 - 10353);\n
    ReadLine(&v31);\n
    cgc_printf(v14 - 10330);\n
    ReadLine(&v30);\n
    cgc_printf(v14 - 10307);\n
    ReadLine(&v29);\n
    cgc_printf(v14 - 10422);\n
    ReadLine();\n
    cgc_printf(v14 - 10406);\n
    ReadLine();\n
    cgc_printf(v14 - 10386);\n
    ReadLine();\n
    String::__ctor__(&v19, v14 - 9748);\n
    v10 = String::operator!= const(&v34, &v19);\n
    String::__base_dtor__(&v19);\n
    if ((v10 & 1))\n
        Date::SetDate(&v37);\n
    String::__ctor__(&v18, v14 - 9748);\n
    v7 = String::operator!= const(&v33, &v18);\n
    String::__base_dtor__(&v18);\n
    if ((v7 & 1))\n
        Time::SetTime(&v36);\n
    String::__ctor__(&v17, v14 - 9748);\n
    v6 = String::operator!= const(&v31, &v17);\n
    String::__base_dtor__(&v17);\n
    if ((v6 & 1))\n
        v44 = StringToInt();\n
    String::__ctor__(&v16, v14 - 9748);\n
    v5 = String::operator!= const(&v30, &v16);\n
    String::__base_dtor__(&v16);\n
    if ((v5 & 1))\n
        v42 = StringToInt();\n
    String::__ctor__(&v15, v14 - 9748);\n
    v4 = String::operator!= const(&v29, &v15);\n
    String::__base_dtor__(&v15);\n
    if ((v4 & 1))\n
        v38 = StringToInt();\n
    Dive::SetDate(v48);\n
    Dive::SetTime(v48);\n
    Dive::SetDiveSite(v48);\n
    Dive::SetLocation(v48);\n
    Dive::SetMaxDepth(v48);\n
    Dive::SetAvgDepth(v48);\n
    Dive::SetDuration(v48);\n
    v1 = v48;\n
    StringToInt(&v28);\n
    Dive::SetO2Percentage(v1);\n
    v2 = v48;\n
    StringToInt(&v27);\n
    Dive::SetStartPressure(v2);\n
    v3 = v48;\n
    StringToInt(&v26);\n
    Dive::SetEndPressure(v3);\n
    DLQueue::AddLast(v12);\n
    String::__base_dtor__(&v26);\n
    String::__base_dtor__(&v27);\n
    String::__base_dtor__(&v28);\n
    String::__base_dtor__(&v29);\n
    String::__base_dtor__(&v30);\n
    String::__base_dtor__(&v31);\n
    String::__base_dtor__(&v32);\n
    String::__base_dtor__(&v33);\n
    String::__base_dtor__(&v34);\n
    String::__base_dtor__(&v35);\n
    Time::__base_dtor__();\n
    Date::__base_dtor__();\n
    v53 = v44;\n
    return 0;\n
}\n
", "4229289:sub_4088a9": null, "4229296:_ZN14CommandHandler12CmdEditDivesEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdEditDives(unsigned int v35)\n
{\n
    unsigned int v0;  // [bp-0xd8]\n
    unsigned int v1;  // [bp-0xd4]\n
    unsigned int v2;  // [bp-0xd0]\n
    unsigned int v3;  // [bp-0xcc]\n
    unsigned int v4;  // [bp-0xc8]\n
    unsigned int v5;  // [bp-0xc4]\n
    unsigned int v6;  // [bp-0xc0]\n
    unsigned int v7;  // [bp-0xbc]\n
    unsigned int v8;  // [bp-0xb8]\n
    char v9;  // [bp-0xb4]\n
    char v10;  // [bp-0xac]\n
    char v11;  // [bp-0xa4]\n
    char v12;  // [bp-0x9c]\n
    char v13;  // [bp-0x94]\n
    char v14;  // [bp-0x8c]\n
    char v15;  // [bp-0x84]\n
    char v16;  // [bp-0x7c]\n
    char v17;  // [bp-0x74]\n
    char v18;  // [bp-0x6c]\n
    char v19;  // [bp-0x64]\n
    char v20;  // [bp-0x5c]\n
    char v21;  // [bp-0x54]\n
    char v22;  // [bp-0x4c]\n
    char v23;  // [bp-0x44]\n
    char v24;  // [bp-0x3c]\n
    char v25;  // [bp-0x34]\n
    char v26;  // [bp-0x2c]\n
    unsigned int v27;  // [bp-0x24]\n
    unsigned int v28;  // [bp-0x20]\n
    unsigned int v29;  // [bp-0x1c]\n
    unsigned int v30;  // [bp-0x18]\n
    char v31;  // [bp-0x14]\n
    char v32;  // [bp-0x9]\n
    unsigned int v33;  // [bp-0x8]\n
    struct_0 *v34;  // [bp+0x0]\n
    unsigned int v37;  // ebx\n
\n
    v33 = v37;\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = v35;\n
    if (!DLQueue::GetCount())\n
    {\n
        cgc_printf(v7 - 10279);\n
        v32 = 0;\n
        return v32 & 1;\n
    }\n
    CommandHandler::PrintDiveList();\n
    cgc_printf(v7 - 10258);\n
    String::__base_ctor__(&v31);\n
    ReadLine();\n
    v30 = StringToInt();\n
    if (!v30)\n
    {\n
LABEL_40899b:\n
        cgc_printf(v7 - 10234);\n
        v32 = 0;\n
        v29 = 1;\n
    }\n
    else\n
    {\n
        v6 = v30;\n
        if (!(v6 <= DLQueue::GetCount()))\n
            goto LABEL_40899b;\n
        v27 = 1;\n
        for (v28 = DLQueue::GetFirst(); v28; v28 = DLItem::GetNext())\n
        {\n
            if (v30 == v27)\n
                break;\n
            v27 += 1;\n
        }\n
        if (!v28)\n
        {\n
            cgc_printf(v7 - 10234);\n
            v32 = 0;\n
            v29 = 1;\n
        }\n
        else\n
        {\n
            String::__base_ctor__(&v26);\n
            String::__base_ctor__(&v25);\n
            String::__base_ctor__(&v24);\n
            String::__base_ctor__(&v23);\n
            String::__base_ctor__(&v22);\n
            String::__base_ctor__(&v21);\n
            String::__base_ctor__(&v20);\n
            String::__base_ctor__(&v19);\n
            String::__base_ctor__(&v18);\n
            String::__base_ctor__(&v17);\n
            cgc_printf(v7 - 10205);\n
            String::c_str const(Dive::GetDiveSite const(v28));\n
            cgc_printf(v7 - 10181);\n
            ReadLine(&v26);\n
            String::Trim(&v16, &v26, 25);\n
            String::__base_dtor__(&v16);\n
            Dive::GetDate const();\n
            Date::GetString const(&v15);\n
            String::c_str const(&v15);\n
            cgc_printf(v7 - 10647);\n
            String::__base_dtor__(&v15);\n
            ReadLine();\n
            String::Trim(&v14, &v25, 10);\n
            String::__base_dtor__(&v14);\n
            Dive::GetTime const();\n
            Time::GetString const(&v13);\n
            String::c_str const(&v13);\n
            cgc_printf(v7 - 10365);\n
            String::__base_dtor__(&v13);\n
            ReadLine();\n
            String::Trim(&v12, &v24, 8);\n
            String::__base_dtor__(&v12);\n
            String::c_str const(Dive::GetLocation const());\n
            cgc_printf(v7 - 10164);\n
            ReadLine(&v23);\n
            String::Trim(&v11, &v23, 25);\n
            String::__base_dtor__(&v11);\n
            Dive::GetMaxDepth const();\n
            cgc_printf(v7 - 10353);\n
            ReadLine(&v22);\n
            Dive::GetAvgDepth const();\n
            cgc_printf(v7 - 10330);\n
            ReadLine(&v21);\n
            Dive::GetDuration const();\n
            cgc_printf(v7 - 10307);\n
            ReadLine(&v20);\n
            Dive::GetO2Percentage const();\n
            cgc_printf(v7 - 10136);\n
            ReadLine(&v19);\n
            Dive::GetStartPressure const();\n
            cgc_printf(v7 - 10115);\n
            ReadLine(&v18);\n
            Dive::GetEndPressure const();\n
            cgc_printf(v7 - 10090);\n
            ReadLine(&v17);\n
            Date::__base_ctor__();\n
            Date::SetDate(&v10);\n
            Time::__base_ctor__(&v9);\n
            Time::SetTime(&v9);\n
            Dive::SetDate(v28);\n
            Dive::SetTime(v28);\n
            Dive::SetDiveSite(v28);\n
            Dive::SetLocation(v28);\n
            v0 = v28;\n
            StringToInt(&v22);\n
            Dive::SetMaxDepth(v0);\n
            v1 = v28;\n
            StringToInt(&v21);\n
            Dive::SetAvgDepth(v1);\n
            v2 = v28;\n
            StringToInt(&v20);\n
            Dive::SetDuration(v2);\n
            v3 = v28;\n
            StringToInt(&v19);\n
            Dive::SetO2Percentage(v3);\n
            v4 = v28;\n
            StringToInt(&v18);\n
            Dive::SetStartPressure(v4);\n
            v5 = v28;\n
            StringToInt(&v17);\n
            Dive::SetEndPressure(v5);\n
            v32 = 0;\n
            v29 = 1;\n
            Time::__base_dtor__(&v9);\n
            Date::__base_dtor__();\n
            String::__base_dtor__(&v17);\n
            String::__base_dtor__(&v18);\n
            String::__base_dtor__(&v19);\n
            String::__base_dtor__(&v20);\n
            String::__base_dtor__(&v21);\n
            String::__base_dtor__(&v22);\n
            String::__base_dtor__(&v23);\n
            String::__base_dtor__(&v24);\n
            String::__base_dtor__(&v25);\n
            String::__base_dtor__(&v26);\n
        }\n
    }\n
    v34 = &v31;\n
    String::__base_dtor__(&v31);\n
    return v32 & 1;\n
}\n
", "4231611:sub_4091bb": null, "4231616:_ZN14CommandHandler13PrintDiveListEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::PrintDiveList(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x18]\n
    struct_0 *v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    struct_0 *v11;  // [bp-0x4]\n
    struct_0 *v12;  // [bp+0x0]\n
    unsigned int v14;  // [bp+0x8]\n
    unsigned int v15;  // [bp+0xc]\n
    unsigned int v16;  // [bp+0x10]\n
    unsigned int v17;  // [bp+0x14]\n
    char v18;  // [bp+0x4c]\n
    char v19;  // [bp+0x50]\n
    char v20;  // [bp+0x54]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    struct_0 *v24;  // eax, Other Possible Types: unsigned int\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // esi\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // ebx\n
\n
    v10 = v21;\n
    v9 = v22;\n
    v8 = v23;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v13;\n
    cgc_printf(\"\\n
\\n
\");\n
    cgc_printf(v2 - 9547);\n
    v6 = 1;\n
    v24 = DLQueue::GetFirst();\n
    while (true)\n
    {\n
        v7 = v24;\n
        if (!v7)\n
            break;\n
        v12 = v7;\n
        v12 = &v5;\n
        v13 = Dive::GetDate const();\n
        Date::GetString const(&v5);\n
        v11 = &v5;\n
        v12 = v7;\n
        v12 = &v4;\n
        v13 = Dive::GetTime const();\n
        Time::GetString const(&v4);\n
        v11 = &v4;\n
        v0 = String::c_str const(&v4);\n
        v12 = v7;\n
        v12 = Dive::GetDiveSite const();\n
        v1 = String::c_str const(v12);\n
        v12 = v7;\n
        v12 = Dive::GetLocation const();\n
        v25 = String::c_str const(v12);\n
        v12 = v2 - 9468;\n
        v13 = v6;\n
        v14 = String::c_str const(&v5);\n
        v15 = v0;\n
        v16 = v1;\n
        v17 = v25;\n
        cgc_printf(v2 - 9468);\n
        v12 = &v4;\n
        String::__base_dtor__(&v4);\n
        v12 = &v5;\n
        String::__base_dtor__(&v5);\n
        v6 += 1;\n
        v12 = v7;\n
        v24 = DLItem::GetNext();\n
    }\n
    v26 = *(&v18);\n
    v27 = *(&v19);\n
    v28 = *(&v20);\n
    return v24;\n
}\n
", "4231986:sub_409332": null, "4232000:_ZN14CommandHandler16CmdPrintDiveLogsEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdPrintDiveLogs(unsigned int v14)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    char v4;  // [bp-0x34]\n
    char v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    char v10;  // [bp-0x14]\n
    char v11;  // [bp-0x9]\n
    unsigned int v12;  // [bp-0x8]\n
    struct_0 *v13;  // [bp+0x0]\n
    unsigned int v16;  // ebx\n
\n
    v12 = v16;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v14;\n
    if (!DLQueue::GetCount())\n
    {\n
        cgc_printf(v2 - 10279);\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    CommandHandler::PrintDiveList(v3);\n
    cgc_printf(v2 - 10064);\n
    String::__base_ctor__(&v10);\n
    ReadLine();\n
    v9 = StringToInt();\n
    if (!v9)\n
    {\n
LABEL_409401:\n
        cgc_printf(v2 - 10234);\n
        v11 = 0;\n
        v8 = 1;\n
    }\n
    else\n
    {\n
        v1 = v9;\n
        if (!(v1 <= DLQueue::GetCount()))\n
            goto LABEL_409401;\n
        v6 = 1;\n
        for (v7 = DLQueue::GetFirst(); v7; v7 = DLItem::GetNext())\n
        {\n
            if (v9 == v6)\n
                break;\n
            v6 += 1;\n
        }\n
        if (!v7)\n
        {\n
            cgc_printf(v2 - 10234);\n
            v11 = 0;\n
            v8 = 1;\n
        }\n
        else\n
        {\n
            cgc_printf(v2 - 9749);\n
            v0 = Dive::GetDate const();\n
            Date::GetString const(&v5);\n
            String::c_str const(&v5);\n
            cgc_printf(v2 - 10037);\n
            String::__base_dtor__(&v5);\n
            Dive::GetTime const();\n
            Time::GetString const(&v4);\n
            String::c_str const(&v4);\n
            cgc_printf(v2 - 10017);\n
            String::__base_dtor__(&v4);\n
            String::c_str const(Dive::GetDiveSite const());\n
            cgc_printf(v2 - 9997);\n
            String::c_str const(Dive::GetLocation const(v7));\n
            cgc_printf(v2 - 9977);\n
            Dive::GetMaxDepth const(v7);\n
            cgc_printf(v2 - 9957);\n
            Dive::GetAvgDepth const(v7);\n
            cgc_printf(v2 - 9937);\n
            Dive::GetDuration const(v7);\n
            cgc_printf(v2 - 9917);\n
            Dive::GetO2Percentage const(v7);\n
            cgc_printf(v2 - 9897);\n
            Dive::GetStartPressure const(v7);\n
            cgc_printf(v2 - 9877);\n
            Dive::GetEndPressure const(v7);\n
            cgc_printf(v2 - 9857);\n
            Dive::GetBinCount const(v7);\n
            cgc_printf(v2 - 9837);\n
            cgc_printf(v2 - 9749);\n
            v11 = 0;\n
            v8 = 1;\n
        }\n
    }\n
    v13 = &v10;\n
    String::__base_dtor__(&v10);\n
    return v11 & 1;\n
}\n
", "4232929:sub_4096e1": null, "4232944:_ZN14CommandHandler14CmdRemoveDivesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdRemoveDives(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    char v2;  // [bp-0x35]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    char v9;  // [bp-0x1c]\n
    char v10;  // [bp-0x14]\n
    char v11;  // [bp-0x9]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
\n
    v12 = v14;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v13;\n
    if (!DLQueue::GetCount())\n
    {\n
        cgc_printf(v3 - 10279);\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    CommandHandler::PrintDiveList(v4);\n
    cgc_printf(v3 - 9817);\n
    String::__base_ctor__(&v10);\n
    ReadLine();\n
    String::__ctor__(&v9, v3 - 9748);\n
    v2 = String::operator== const(&v10, &v9);\n
    String::__base_dtor__(&v9);\n
    if ((v2 & 1))\n
    {\n
        v11 = 0;\n
        v8 = 1;\n
    }\n
    else\n
    {\n
        v7 = StringToInt();\n
        if (!v7)\n
        {\n
LABEL_40980f:\n
            cgc_printf(v3 - 10234);\n
            v11 = 0;\n
            v8 = 1;\n
        }\n
        else\n
        {\n
            v1 = v7;\n
            if (!(v1 <= DLQueue::GetCount()))\n
                goto LABEL_40980f;\n
            v5 = 1;\n
            for (v6 = DLQueue::GetFirst(); v6; v6 = DLItem::GetNext())\n
            {\n
                if (v7 == v5)\n
                    break;\n
                v5 += 1;\n
            }\n
            if (!v6)\n
            {\n
                cgc_printf(v3 - 10234);\n
                v11 = 0;\n
                v8 = 1;\n
            }\n
            else\n
            {\n
                DLQueue::RemoveItem(v4);\n
                v0 = v6;\n
                if (v0)\n
                {\n
                    Dive::__base_dtor__();\n
                    operator delete(v0);\n
                }\n
                v11 = 0;\n
                v8 = 1;\n
            }\n
        }\n
    }\n
    String::__base_dtor__(&v10);\n
    return v11 & 1;\n
}\n
", "4233492:sub_409914": null, "4233504:_ZN14CommandHandler18CmdDiverStatisticsEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::CmdDiverStatistics(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x9]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v10;\n
    if (!DLQueue::GetCount())\n
    {\n
        cgc_printf(v3 - 9773);\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v6 = 0;\n
        for (v5 = DLQueue::GetFirst(); v5; v5 = DLItem::GetNext())\n
        {\n
            v7 = Dive::GetMaxDepth const() + v7;\n
            v6 = Dive::GetDuration const() + v6;\n
        }\n
        cgc_printf(v3 - 9750);\n
        v0 = DLQueue::GetCount();\n
        cgc_printf(v3 - 9747);\n
        v1 = v7;\n
        v0 = (0 CONCAT v1) /m DLQueue::GetCount(v4);\n
        cgc_printf(v3 - 9729);\n
        v2 = v6;\n
        v0 = (0 CONCAT v2) /m DLQueue::GetCount(v4);\n
        cgc_printf(v3 - 9706);\n
    }\n
    v8 = 0;\n
    return v8 & 1;\n
}\n
", "4233851:sub_409a7b": null, "4233856:_ZN14CommandHandler18CmdExitApplicationEv": "int CommandHandler::CmdExitApplication(unsigned int v0)\n
{\n
    return 1;\n
}\n
", "4233871:sub_409a8f": null, "4233872:_ZN14CommandHandler17PrintCommandTableEPNS_16COMMAND_FUNCTIONE": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommandHandler::PrintCommandTable(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // edx\n
    unsigned int v11;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"\\n
\");\n
    v3 = 0;\n
    while (true)\n
    {\n
        v7 = a0;\n
        v8 = v3;\n
        v9 = v8 * 0x100 + v8 * 8;\n
        if (!((*((v7 + v9 + 0x100)) | *((v7 + v9 + 0x100)) & *((v7 + v9 + 260))) & 1))\n
            break;\n
        v0 = a0 + v3 * 264;\n
        v1 = a0 + v3 * 264 + 128;\n
        cgc_printf(v2 - 9558);\n
        v3 += 1;\n
    }\n
    v11 = v4;\n
    return cgc_printf(v2 - 9549);\n
}\n
", "4234075:sub_409b5b": null, "4234080:_ZN14CommandHandler10ParserLoopEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern void g_40e008;\n
\n
int CommandHandler::ParserLoop(struct_0 *v18)\n
{\n
    struct struct_1 **v0;  // [bp-0x99c], Other Possible Types: unsigned int\n
    struct struct_1 **v1;  // [bp-0x998]\n
    unsigned int *v2;  // [bp-0x994]\n
    char v3;  // [bp-0x98d]\n
    unsigned int v4;  // [bp-0x98c]\n
    struct_0 *v5;  // [bp-0x988]\n
    char v6;  // [bp-0x984]\n
    char v7;  // [bp-0x97c]\n
    char v8;  // [bp-0x974]\n
    void* v9;  // [bp-0x968], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x964]\n
    char v11;  // [bp-0x955]\n
    char v12;  // [bp-0x954]\n
    char v13;  // [bp-0x854]\n
    char v14;  // [bp-0x850]\n
    unsigned int v15;  // [bp-0x8]\n
    struct_0 *v16;  // [bp-0x4]\n
    struct_0 *v17;  // [bp+0x0], Other Possible Types: unsigned int *\n
    unsigned int v19[2];  // [bp+0x8]\n
    char v20;  // [bp+0x9a4]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // ecx\n
    struct struct_1 **v24;  // eax\n
    unsigned int v26;  // edx\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebx\n
\n
    v15 = v21;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v18;\n
    v22 = memcpy(&v12, \"C\", 2376);\n
    v11 = 0;\n
    while (true)\n
    {\n
        *(&v22) = v11 ^ 255;\n
        if (!((v11 ^ 255) & 1))\n
            break;\n
        v17 = v5;\n
        v18 = &v12;\n
        CommandHandler::PrintCommandTable(v18, v19);\n
        v17 = &v10;\n
        String::__base_ctor__(&v10);\n
        v17 = &v10;\n
        ReadLine();\n
        v9 = 0;\n
        while (true)\n
        {\n
            v23 = v9;\n
            v24 = v23 * 0x100 + v23 * 8;\n
            if (!((*((&v13 + v24)) | *((&v13 + v24)) & *((&v14 + v24))) & 1))\n
                break;\n
            v17 = &v8;\n
            v18 = &v10;\n
            String::lower const(v18, v19);\n
            v16 = &v6;\n
            v17 = &v12 + 0x108 * v9;\n
            String::__ctor__(v18, v19);\n
            v17 = &v7;\n
            v18 = &v6;\n
            String::lower const(v18, v19);\n
            v16 = &v8;\n
            v17 = &v7;\n
            v3 = String::operator== const(v18, v19);\n
            v17 = &v7;\n
            String::__base_dtor__(&v7);\n
            v17 = &v6;\n
            String::__base_dtor__(&v6);\n
            v17 = &v8;\n
            String::__base_dtor__(&v8);\n
            if (!(v3 & 1))\n
            {\n
                v9 += 1;\n
            }\n
            else\n
            {\n
                v26 = v9;\n
                v27 = v26 * 0x100 + v26 * 8;\n
                v1 = *(&(&v13)[v27]);\n
                v2 = &v5[*(&(&v14)[v27])];\n
                if (!(v1 & 1))\n
                    v0 = v1;\n
                else\n
                    v0 = *((-1 + *(v2) + v1));\n
                v17 = v2;\n
                if ((v0() & 1))\n
                    v11 = 1;\n
                break;\n
            }\n
        }\n
        v17 = &v10;\n
        v22 = String::__base_dtor__(&v10);\n
    }\n
    v28 = *(&v20);\n
    return v22;\n
}\n
", "4234756:sub_409e04": null, "4234768:_ZN9DiverInfoC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int DiverInfo::__base_ctor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    String::__base_ctor__(v1);\n
    String::__base_ctor__(v1 + 1);\n
    String::__base_ctor__(v1 + 2);\n
    String::__base_ctor__(v1 + 3);\n
    String::__base_ctor__(v1 + 4);\n
    String::__base_ctor__(v1 + 5);\n
    String::__base_ctor__(v1 + 6);\n
    String::__base_ctor__(v1 + 7);\n
    v5 = v2;\n
    return String::__base_ctor__(v1 + 8);\n
}\n
", "4234949:sub_409ec5": null, "4234960:_ZN9DiverInfoD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int DiverInfo::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    String::__base_dtor__(v1 + 64);\n
    String::__base_dtor__(v1 + 56);\n
    String::__base_dtor__(v1 + 48);\n
    String::__base_dtor__(v1 + 40);\n
    String::__base_dtor__(v1 + 32);\n
    String::__base_dtor__(v1 + 24);\n
    String::__base_dtor__(v1 + 16);\n
    String::__base_dtor__(v1 + 8);\n
    v5 = v2;\n
    return String::__base_dtor__(v1);\n
}\n
", "4235141:sub_409f85": null, "4235152:_ZNK9DiverInfo12GetFirstNameEv": "int DiverInfo::GetFirstName const(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4235163:sub_409f9b": null, "4235168:_ZNK9DiverInfo11GetLastNameEv": "int DiverInfo::GetLastName const(unsigned int v0)\n
{\n
    return v0 + 8;\n
}\n
", "4235182:sub_409fae": null, "4235184:_ZNK9DiverInfo9GetStreetEv": "int DiverInfo::GetStreet const(unsigned int v0)\n
{\n
    return v0 + 16;\n
}\n
", "4235198:sub_409fbe": null, "4235200:_ZNK9DiverInfo7GetCityEv": "int DiverInfo::GetCity const(unsigned int v0)\n
{\n
    return v0 + 24;\n
}\n
", "4235214:sub_409fce": null, "4235216:_ZNK9DiverInfo8GetStateEv": "int DiverInfo::GetState const(unsigned int v0)\n
{\n
    return v0 + 32;\n
}\n
", "4235230:sub_409fde": null, "4235232:_ZNK9DiverInfo10GetZipCodeEv": "int DiverInfo::GetZipCode const(unsigned int v0)\n
{\n
    return v0 + 40;\n
}\n
", "4235246:sub_409fee": null, "4235248:_ZNK9DiverInfo14GetPhoneNumberEv": "int DiverInfo::GetPhoneNumber const(unsigned int v0)\n
{\n
    return v0 + 48;\n
}\n
", "4235262:sub_409ffe": null, "4235264:_ZNK9DiverInfo13GetPadiNumberEv": "int DiverInfo::GetPadiNumber const(unsigned int v0)\n
{\n
    return v0 + 56;\n
}\n
", "4235278:sub_40a00e": null, "4235280:_ZNK9DiverInfo11GetPadiDateEv": "int DiverInfo::GetPadiDate const(unsigned int v0)\n
{\n
    return v0 + 64;\n
}\n
", "4235294:sub_40a01e": null, "4235296:_ZN9DiverInfo12SetFirstNameERK6String": "int DiverInfo::SetFirstName(unsigned int v0[2], unsigned int a0[2])\n
{\n
    return String::operator=(v0, a0);\n
}\n
", "4235345:sub_40a051": null, "4235360:_ZN9DiverInfo11SetLastNameERK6String": "int DiverInfo::SetLastName(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 8, a0);\n
}\n
", "4235412:sub_40a094": null, "4235424:_ZN9DiverInfo9SetStreetERK6String": "int DiverInfo::SetStreet(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 16, a0);\n
}\n
", "4235476:sub_40a0d4": null, "4235488:_ZN9DiverInfo7SetCityERK6String": "int DiverInfo::SetCity(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 24, a0);\n
}\n
", "4235540:sub_40a114": null, "4235552:_ZN9DiverInfo8SetStateERK6String": "int DiverInfo::SetState(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 32, a0);\n
}\n
", "4235604:sub_40a154": null, "4235616:_ZN9DiverInfo10SetZipCodeERK6String": "int DiverInfo::SetZipCode(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 40, a0);\n
}\n
", "4235668:sub_40a194": null, "4235680:_ZN9DiverInfo14SetPhoneNumberERK6String": "int DiverInfo::SetPhoneNumber(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 48, a0);\n
}\n
", "4235732:sub_40a1d4": null, "4235744:_ZN9DiverInfo13SetPadiNumberERK6String": "int DiverInfo::SetPadiNumber(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 56, a0);\n
}\n
", "4235796:sub_40a214": null, "4235808:_ZN9DiverInfo11SetPadiDateERK6String": "int DiverInfo::SetPadiDate(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 64, a0);\n
}\n
", "4235860:sub_40a254": null, "4235872:_ZN4DiveC2Ev": "typedef struct struct_0 {\n
    char padding_0[1032];\n
    unsigned int field_408;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dive::__base_ctor__(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
    struct_0 *v10;  // eax\n
    unsigned int v11;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    DLItem::__base_ctor__();\n
    v9 = &v3->padding_0[8];\n
    v4 = v9 + 0x400;\n
    v5 = v9;\n
    do\n
    {\n
        v0 = v5;\n
        DiveBin::__base_ctor__();\n
        v1 = v0 + 8;\n
        v5 = v1;\n
    } while (v1 != v4);\n
    v10 = v3;\n
    v10->field_408 = 0;\n
    String::__base_ctor__(v10 + 1);\n
    Date::__base_ctor__();\n
    Time::__base_ctor__();\n
    v11 = v6;\n
    return String::__base_ctor__(&v3[1].padding_0[16]);\n
}\n
", "4236063:sub_40a31f": null, "4236064:_ZN4DateC2Ev": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    unsigned short field_2;\n
} struct_0;\n
\n
int Date::__base_ctor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = 1;\n
    v1->field_1 = 1;\n
    v1->field_2 = 1900;\n
    return v0;\n
}\n
", "4236088:sub_40a338": null, "4236096:_ZN4TimeC2Ev": "int Time::__base_ctor__(char v0[3])\n
{\n
    char v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4236118:sub_40a356": null, "4236128:_ZN4Dive7SetDateERK4Date": "typedef struct struct_0 {\n
    char padding_0[1044];\n
    unsigned int field_414;\n
} struct_0;\n
\n
int Dive::SetDate(struct_0 *v0, unsigned int *a0)\n
{\n
    v0->field_414 = *(a0);\n
    return v0;\n
}\n
", "4236153:sub_40a379": null, "4236160:_ZN4Dive7SetTimeERK4Time": "typedef struct struct_0 {\n
    char padding_0[1048];\n
    unsigned short field_418;\n
    char field_41a;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char field_2;\n
} struct_1;\n
\n
int Dive::SetTime(struct_0 *v0, struct_1 *a0)\n
{\n
    struct_0 *v1;  // eax\n
    struct_1 *v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    v1->field_418 = v2->field_0;\n
    v1->field_41a = v2->field_2;\n
    return v0;\n
}\n
", "4236196:sub_40a3a4": null, "4236208:_ZN4Dive11SetDiveSiteERK6String": "int Dive::SetDiveSite(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 1036, a0);\n
}\n
", "4236263:sub_40a3e7": null, "4236272:_ZN4Dive11SetLocationERK6String": "int Dive::SetLocation(unsigned int v0, unsigned int a0[2])\n
{\n
    return String::operator=(v0 + 1052, a0);\n
}\n
", "4236327:sub_40a427": null, "4236336:_ZN4Dive11SetMaxDepthEj": "typedef struct struct_0 {\n
    char padding_0[1060];\n
    unsigned int field_424;\n
} struct_0;\n
\n
int Dive::SetMaxDepth(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_424 = a0;\n
    return v0;\n
}\n
", "4236359:sub_40a447": null, "4236368:_ZN4Dive11SetAvgDepthEj": "typedef struct struct_0 {\n
    char padding_0[1064];\n
    unsigned int field_428;\n
} struct_0;\n
\n
int Dive::SetAvgDepth(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_428 = a0;\n
    return v0;\n
}\n
", "4236391:sub_40a467": null, "4236400:_ZN4Dive11SetDurationEj": "typedef struct struct_0 {\n
    char padding_0[1068];\n
    unsigned int field_42c;\n
} struct_0;\n
\n
int Dive::SetDuration(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_42c = a0;\n
    return v0;\n
}\n
", "4236423:sub_40a487": null, "4236432:_ZN4Dive15SetO2PercentageEj": "typedef struct struct_0 {\n
    char padding_0[1072];\n
    unsigned int field_430;\n
} struct_0;\n
\n
int Dive::SetO2Percentage(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_430 = a0;\n
    return v0;\n
}\n
", "4236455:sub_40a4a7": null, "4236464:_ZN4Dive16SetStartPressureEj": "typedef struct struct_0 {\n
    char padding_0[1076];\n
    unsigned int field_434;\n
} struct_0;\n
\n
int Dive::SetStartPressure(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_434 = a0;\n
    return v0;\n
}\n
", "4236487:sub_40a4c7": null, "4236496:_ZN4Dive14SetEndPressureEj": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    unsigned int field_438;\n
} struct_0;\n
\n
int Dive::SetEndPressure(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_438 = a0;\n
    return v0;\n
}\n
", "4236519:sub_40a4e7": null, "4236528:_ZN4TimeD2Ev": "int Time::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4236536:sub_40a4f8": null, "4236544:_ZN4DateD2Ev": "int Date::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4236552:sub_40a508": null, "4236560:_ZNK4Dive11GetBinCountEv": "typedef struct struct_0 {\n
    char padding_0[1032];\n
    unsigned int field_408;\n
} struct_0;\n
\n
int Dive::GetBinCount const(struct_0 *v0)\n
{\n
    return v0->field_408;\n
}\n
", "4236577:sub_40a521": null, "4236592:_ZNK4Dive10GetDiveBinEj": "int Dive::GetDiveBin const(unsigned int v0, unsigned int a0)\n
{\n
    return v0 + 8 + a0 * 8;\n
}\n
", "4236617:sub_40a549": null, "4236624:_ZNK7DiveBin8GetDepthEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int DiveBin::GetDepth const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4236638:sub_40a55e": null, "4236640:_ZNK7DiveBin10GetTimeValEv": "int DiveBin::GetTimeVal const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4236653:sub_40a56d": null, "4236656:_ZN7DLQueue8GetCountEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int DLQueue::GetCount(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4236670:sub_40a57e": null, "4236672:_ZN7DLQueue8GetFirstEv": "int DLQueue::GetFirst(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4236685:sub_40a58d": null, "4236688:_ZN6DLItem7GetNextEv": "int DLItem::GetNext(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4236701:sub_40a59d": null, "4236704:_ZNK4Dive11GetDiveSiteEv": "int Dive::GetDiveSite const(unsigned int v0)\n
{\n
    return v0 + 1036;\n
}\n
", "4236720:_ZNK4Dive7GetDateEv": "int Dive::GetDate const(unsigned int v0)\n
{\n
    return v0 + 1044;\n
}\n
", "4236736:_ZNK4Dive7GetTimeEv": "int Dive::GetTime const(unsigned int v0)\n
{\n
    return v0 + 1048;\n
}\n
", "4236752:_ZNK4Dive11GetLocationEv": "int Dive::GetLocation const(unsigned int v0)\n
{\n
    return v0 + 1052;\n
}\n
", "4236768:_ZNK4Dive11GetMaxDepthEv": "typedef struct struct_0 {\n
    char padding_0[1060];\n
    unsigned int field_424;\n
} struct_0;\n
\n
int Dive::GetMaxDepth const(struct_0 *v0)\n
{\n
    return v0->field_424;\n
}\n
", "4236785:sub_40a5f1": null, "4236800:_ZNK4Dive11GetAvgDepthEv": "typedef struct struct_0 {\n
    char padding_0[1064];\n
    unsigned int field_428;\n
} struct_0;\n
\n
int Dive::GetAvgDepth const(struct_0 *v0)\n
{\n
    return v0->field_428;\n
}\n
", "4236817:sub_40a611": null, "4236832:_ZNK4Dive11GetDurationEv": "typedef struct struct_0 {\n
    char padding_0[1068];\n
    unsigned int field_42c;\n
} struct_0;\n
\n
int Dive::GetDuration const(struct_0 *v0)\n
{\n
    return v0->field_42c;\n
}\n
", "4236849:sub_40a631": null, "4236864:_ZNK4Dive15GetO2PercentageEv": "typedef struct struct_0 {\n
    char padding_0[1072];\n
    unsigned int field_430;\n
} struct_0;\n
\n
int Dive::GetO2Percentage const(struct_0 *v0)\n
{\n
    return v0->field_430;\n
}\n
", "4236881:sub_40a651": null, "4236896:_ZNK4Dive16GetStartPressureEv": "typedef struct struct_0 {\n
    char padding_0[1076];\n
    unsigned int field_434;\n
} struct_0;\n
\n
int Dive::GetStartPressure const(struct_0 *v0)\n
{\n
    return v0->field_434;\n
}\n
", "4236913:sub_40a671": null, "4236928:_ZNK4Dive14GetEndPressureEv": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    unsigned int field_438;\n
} struct_0;\n
\n
int Dive::GetEndPressure const(struct_0 *v0)\n
{\n
    return v0->field_438;\n
}\n
", "4236945:sub_40a691": null, "4236960:_ZN4DiveD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dive::__base_dtor__(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    String::__base_dtor__(v2 + 1052);\n
    Time::__base_dtor__(v2 + 1048);\n
    Date::__base_dtor__(v2 + 1044);\n
    String::__base_dtor__(v2 + 1036);\n
    v3 = v2 + 8;\n
    v4 = v3 + 0x400;\n
    do\n
    {\n
        v0 = v4 - 8;\n
        DiveBin::__base_dtor__();\n
        v4 = v0;\n
    } while (v4 != v3);\n
    v8 = v5;\n
    return DLItem::__base_dtor__();\n
}\n
", "4237135:sub_40a74f": null, "4237136:_ZN6DLItemC2Ev": "int DLItem::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4237160:sub_40a768": null, "4237168:_ZN7DiveBinC2Ev": "int DiveBin::__base_ctor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4237176:sub_40a778": null, "4237184:_ZN7DiveBinD2Ev": "int DiveBin::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4237192:sub_40a788": null, "4237200:_ZN6DLItemD2Ev": "int DLItem::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4237208:sub_40a798": null, "4237216:_Z8ReadLineR6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int ReadLine(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x210]\n
    char v1;  // [bp-0x209]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_getline(&v1, 0x200);\n
    v5 = v2;\n
    return String::SetString(v3, &v1);\n
}\n
", "4237305:sub_40a7f9": null, "4237312:_Z10recv_bytesPhm": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int recv_bytes(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a0)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(0, v4 + v3, 1))\n
            return v3;\n
        if (v2 != 1)\n
            return v3;\n
        v3 += 1;\n
    }\n
}\n
", "4237465:sub_40a899": null, "4237472:_Z10ReadUint32Rj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int ReadUint32(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 1;\n
    v5 = recv_bytes(v3, 4);\n
    if (v5 != 4)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4237553:sub_40a8f1": null, "4237568:_Z11StringToIntRK6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int StringToInt(unsigned int v5[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    String::StripSpaces const(&v2, v5);\n
    v1 = cgc_atoi(String::c_str const(&v2));\n
    String::__base_dtor__(&v2);\n
    v7 = *(&v3);\n
    return v1;\n
}\n
", "4237665:sub_40a961": null, "4237680:_ZN4Date7SetDateEPKc": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    unsigned short field_2;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Date::SetDate(struct_0 *v6, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0xe]\n
    char v3;  // [bp-0xb]\n
    char v4;  // [bp-0xa]\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    for (v1 = v6; cgc_isspace(*(a0)); a0 += 1);\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!cgc_isdigit(*(a0)))\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v4 = *(a0) - 48;\n
    a0 += 1;\n
    if (cgc_isdigit(*(a0)))\n
    {\n
        v4 *= 10;\n
        v4 += *(a0) - 48;\n
        a0 += 1;\n
    }\n
    if (*(a0) != 47)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    if (v4 && v4 <= 12)\n
    {\n
        a0 += 1;\n
        if (!cgc_isdigit(*(a0)))\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        v3 = *(a0) - 48;\n
        a0 += 1;\n
        if (cgc_isdigit(*(a0)))\n
        {\n
            v3 *= 10;\n
            v3 += *(a0) - 48;\n
            a0 += 1;\n
        }\n
        if (*(a0) != 47)\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        if (v3 && v3 <= 31)\n
        {\n
            a0 += 1;\n
            if (!cgc_isdigit(*(a0)))\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
            v2 = *(a0) - 48;\n
            a0 += 1;\n
            if (!cgc_isdigit(*(a0)))\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
            v2 *= 10;\n
            v2 += *(a0) - 48;\n
            a0 += 1;\n
            if (!cgc_isdigit(*(a0)))\n
            {\n
                if (v2 < 31)\n
                    v2 += 2000;\n
                else\n
                    v2 += 1900;\n
                v7 = v1;\n
                v7->field_1 = v4;\n
                v7->field_0 = v3;\n
                v7->field_2 = v2;\n
                v5 = 1;\n
                return v5 & 1;\n
            }\n
            else\n
            {\n
                v2 *= 10;\n
                v2 += *(a0) - 48;\n
                a0 += 1;\n
                if (!cgc_isdigit(*(a0)))\n
                {\n
                    v5 = 0;\n
                    return v5 & 1;\n
                }\n
                v8 = v1;\n
                v2 *= 10;\n
                v2 += *(a0) - 48;\n
                v8->field_1 = v4;\n
                v8->field_0 = v3;\n
                v8->field_2 = v2;\n
                v5 = 1;\n
                return v5 & 1;\n
            }\n
        }\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v5 = 0;\n
    return v5 & 1;\n
}\n
", "4238567:sub_40ace7": null, "4238576:_ZN4Date7SetDateERK6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Date::SetDate(unsigned int v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v6 = v2;\n
    return Date::SetDate(v1, String::c_str const(a0)) & 1;\n
}\n
", "4238650:sub_40ad3a": null, "4238656:_ZNK4Date9GetStringEv": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    unsigned short field_2;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Date::GetString const(unsigned int v9, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x234]\n
    unsigned int v1;  // [bp-0x230]\n
    unsigned int v2;  // [bp-0x22c]\n
    unsigned int v3;  // [bp-0x21c]\n
    unsigned int v4[2];  // [bp-0x218]\n
    unsigned int v5;  // [bp-0x214]\n
    char v6;  // [bp-0x210]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    struct_0 *v12;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // eax\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = v9;\n
    v5 = v4;\n
    v12 = a0;\n
    v14 = v12->field_0;\n
    v15 = v12->field_2;\n
    v0 = v12->field_1;\n
    v1 = v14;\n
    v2 = v15;\n
    cgc_sprintf(&v6, \"@d/@d/@d\");\n
    String::__ctor__(v4, &v6);\n
    return v5;\n
}\n
", "4238803:sub_40add3": null, "4238816:_ZN4Date15FromUnixTimevalEj": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    unsigned short field_2;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Date::FromUnixTimeval(struct_0 *v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    struct_0 *v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
    struct_0 *v13;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v12;\n
    v11 = (0 CONCAT a0) /m 86400;\n
    v10 = 1970;\n
    v9 = 0;\n
    v8 = 1970;\n
    for (v7 = 0; v7 <= v11; v8 += 1)\n
    {\n
        v10 = v8;\n
        v9 = v7;\n
        v7 += 365;\n
        if ((IsLeapYear() & 1))\n
            v7 += 1;\n
    }\n
    v2->field_2 = v10;\n
    v6 = v11 - v9;\n
    v5 = 1;\n
    v4 = 0;\n
    v3 = 1;\n
    for (v7 = 0; v7 <= v6; v3 += 1)\n
    {\n
        v5 = v3;\n
        v4 = v7;\n
        v0 = v2->field_2;\n
        v7 = DaysInMonth(v3) + v7;\n
    }\n
    v13 = v2;\n
    v13->field_1 = v5;\n
    v13->field_0 = (v6 - v4) + 1;\n
    return v2;\n
}\n
", "4239134:sub_40af1e": null, "4239136:_ZN4Time7SetTimeEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Time::SetTime(char v6[3], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1[3];  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    char v3;  // [bp-0xb]\n
    char v4;  // [bp-0xa]\n
    char v5;  // [bp-0x9]\n
    char v7[3];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v1) = v6;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    for (v2 = 0; cgc_isspace(*(a0)); a0 += 1);\n
    if (!cgc_isdigit(*(a0)))\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v4 = *(a0) - 48;\n
    a0 += 1;\n
    if (cgc_isdigit(*(a0)))\n
    {\n
        v4 *= 10;\n
        v4 += *(a0) - 48;\n
        a0 += 1;\n
    }\n
    if (*(a0) != 58)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    a0 += 1;\n
    if (v4 >= 24)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    else if (cgc_isdigit(*(a0)))\n
    {\n
        v3 = *(a0) - 48;\n
        a0 += 1;\n
        if (cgc_isdigit(*(a0)))\n
        {\n
            v3 *= 10;\n
            v3 += *(a0) - 48;\n
            a0 += 1;\n
        }\n
        if (*(a0) != 58)\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        a0 += 1;\n
        if (v3 >= 60)\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        else if (cgc_isdigit(*(a0)))\n
        {\n
            v2 = *(a0) - 48;\n
            a0 += 1;\n
            if (cgc_isdigit(*(a0)))\n
            {\n
                v2 *= 10;\n
                v2 += *(a0) - 48;\n
                a0 += 1;\n
            }\n
            if (v2 >= 60)\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
            v7 = v1;\n
            v7[0] = v4;\n
            v7[1] = v3;\n
            v7[2] = v2;\n
            v5 = 1;\n
            return v5 & 1;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
}\n
", "4239788:sub_40b1ac": null, "4239792:_ZN4Time7SetTimeERK6String": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Time::SetTime(unsigned int v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1[3];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v1) = v3;\n
    v6 = v2;\n
    return Time::SetTime(v1, String::c_str const(a0)) & 1;\n
}\n
", "4239866:sub_40b1fa": null, "4239872:_ZNK4Time9GetStringEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Time::GetString const(unsigned int v9, char a0[3])\n
{\n
    unsigned int v0;  // [bp-0x234]\n
    unsigned int v1;  // [bp-0x230]\n
    unsigned int v2;  // [bp-0x22c]\n
    unsigned int v3;  // [bp-0x21c]\n
    unsigned int v4[2];  // [bp-0x218]\n
    unsigned int v5;  // [bp-0x214]\n
    char v6;  // [bp-0x210]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // esi\n
    char v12[3];  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // eax\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = v9;\n
    v5 = v4;\n
    v12 = a0;\n
    v14 = v12[1];\n
    v15 = v12[2];\n
    v0 = v12[0];\n
    v1 = v14;\n
    v2 = v15;\n
    cgc_sprintf(&v6, \"@02d:@02d:@02d\");\n
    String::__ctor__(v4, &v6);\n
    return v5;\n
}\n
", "4240019:sub_40b293": null, "4240032:_ZN4Time15FromUnixTimevalEj": "int Time::FromUnixTimeval(char v5[3], unsigned int a0)\n
{\n
    char v0[3];  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    char v6[3];  // eax\n
\n
    *(&v0) = v5;\n
    v4 = (0 CONCAT a0) /m 86400 >> 32;\n
    v3 = (0 CONCAT v4) /m 3600;\n
    v2 = (0 CONCAT v4) /m 60 >> 32;\n
    v6 = v0;\n
    v1 = (0 CONCAT (0 CONCAT v4) /m 60) /m 60 >> 32;\n
    v6[0] = v3;\n
    v6[1] = v1;\n
    v6[2] = v2;\n
    return v0;\n
}\n
", "4240144:_Z10IsLeapYeart": "int IsLeapYear(unsigned short v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if ((v2 >> 31 CONCAT v2) /m 400 >> 32 && !(v2 >> 31 CONCAT v2) /m 100 >> 32)\n
        goto LABEL_40b360;\n
    if (!(v2 >> 31 CONCAT v2) /m 4 >> 32)\n
    {\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
LABEL_40b360:\n
    v1 = 0;\n
    return v1 & 1;\n
}\n
", "4240241:sub_40b371": null, "4240256:_Z11DaysInMonthht": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int DaysInMonth(char v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 != 2)\n
    {\n
        if (v2 != 1 && v2 != 3 && v2 != 5 && v2 != 7 && v2 != 8 && v2 != 10 && v2 != 12)\n
        {\n
            if (v2 != 4 && v2 != 6 && v2 != 9 && v2 != 11)\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
            v1 = 30;\n
            return v1;\n
        }\n
        v1 = 31;\n
        return v1;\n
    }\n
    else if (!(IsLeapYear(a0) & 1))\n
    {\n
        v1 = 28;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 29;\n
        return v1;\n
    }\n
}\n
", "4240519:sub_40b487": null, "4240528:_ZN4Dive10AddDiveBinEjj": "typedef struct struct_0 {\n
    char padding_0[1032];\n
    unsigned int field_408;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int Dive::AddDiveBin(struct_0 *v3, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v0 = v3;\n
    v1 = v0->field_408;\n
    DiveBin::SetTimeVal(&v0->padding_0[8 + 8 * v1], a0, &_GLOBAL_OFFSET_TABLE_, v0, v1, v4);\n
    DiveBin::SetDepth(&v0->padding_0[8 + 8 * v1]);\n
    v5 = v0;\n
    v5->field_408 = v5->field_408 + 1;\n
    v7 = v2;\n
    return v5->field_408;\n
}\n
", "4240662:sub_40b516": null, "4240672:_ZN7DiveBin10SetTimeValEj": "int DiveBin::SetTimeVal(unsigned int *v0, unsigned int a0)\n
{\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4240691:sub_40b533": null, "4240704:_ZN7DiveBin8SetDepthEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int DiveBin::SetDepth(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_4 = a0;\n
    return v0;\n
}\n
", "4240724:sub_40b554": null, "4240736:_ZN7DLQueueC2Ev": "int DLQueue::__base_ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4240767:sub_40b57f": null, "4240768:_ZN7DLQueueD2Ev": "int DLQueue::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return DLQueue::DeleteAll(v1, *(&v0));\n
}\n
", "4240805:sub_40b5a5": null, "4240816:_ZN7DLQueue9DeleteAllEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int DLQueue::DeleteAll(struct_1 *v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_1 *v2;  // [bp-0x14]\n
    struct struct_0 **v3;  // [bp-0x10]\n
    struct struct_0 **v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    v4 = &v2->field_0->field_0;\n
    for (v3 = 0; v4; v4 = v3)\n
    {\n
        v3 = *(v4);\n
        v0 = v4;\n
        if (v0)\n
        {\n
            DLItem::__base_dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    v6 = v2;\n
    v6->field_8 = 0;\n
    v6->field_4 = 0;\n
    v6->field_0 = 0;\n
    return v2;\n
}\n
", "4240965:sub_40b645": null, "4240976:_ZN7DLQueue8AddFirstEP6DLItem": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int DLQueue::AddFirst(struct_1 *v1, unsigned int a0[2])\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v4;  // eax\n
    struct_1 *v5;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    if (!a0)\n
        return v1;\n
    if (!v0->field_0)\n
    {\n
        v4 = v0;\n
        a0[0] = 0;\n
        a0[1] = 0;\n
        v4->field_0 = &a0[0];\n
        v4->field_4 = a0;\n
    }\n
    else\n
    {\n
        v5 = v0;\n
        a0[0] = v5->field_0;\n
        a0[1] = 0;\n
        v5->field_0->field_4 = a0;\n
        v5->field_0 = &a0[0];\n
    }\n
    v3 = v0;\n
    *((v3 + 8)) = *((v3 + 8)) + 1;\n
    return v0;\n
}\n
", "4241107:sub_40b6d3": null, "4241120:_ZN7DLQueue7AddLastEP6DLItem": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int DLQueue::AddLast(struct_0 *v1, unsigned int a0[2])\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    if (!a0)\n
        return v1;\n
    if (!v0->field_4)\n
    {\n
        v4 = v0;\n
        a0[0] = 0;\n
        a0[1] = 0;\n
        v4->field_0 = a0;\n
    }\n
    else\n
    {\n
        v4 = v0;\n
        a0[0] = 0;\n
        a0[1] = *((v4 + 4));\n
        *(*((v4 + 4))) = a0;\n
    }\n
    *((v4 + 4)) = a0;\n
    v3 = v0;\n
    *((v3 + 8)) = *((v3 + 8)) + 1;\n
    return v0;\n
}\n
", "4241254:sub_40b766": null, "4241264:_ZN7DLQueue8AddAfterEP6DLItemS1_": "int DLQueue::AddAfter(unsigned int v1[3], struct struct_0 **a0, unsigned int a1[2])\n
{\n
    unsigned int v0[3];  // [bp-0x8]\n
    unsigned int v2[3];  // eax\n
    unsigned int v3[3];  // eax, Other Possible Types: unsigned int\n
\n
    v0[0] = v2;\n
    v3 = v1;\n
    v0[0] = v3;\n
    if (a0 && a1)\n
    {\n
        a1[0] = *(a0);\n
        a1[1] = a0;\n
        if (*(a0))\n
            *(a0)->field_4 = a1;\n
        *(a0) = &a1[0];\n
        if (v0[1] == a0)\n
            v0[1] = a1;\n
        v3 = v0;\n
        *((v3 + 8)) = *((v3 + 8)) + 1;\n
        return v0;\n
    }\n
    return v1;\n
}\n
", "4241399:sub_40b7f7": null, "4241408:_ZN7DLQueue6UnlinkEP6DLItem": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int DLQueue::Unlink(unsigned int v1[3], struct_1 *a0)\n
{\n
    unsigned int v0[3];  // [bp-0x8]\n
    unsigned int v2[3];  // eax\n
    unsigned int v3[3];  // eax\n
\n
    v0[0] = v2;\n
    v0[0] = v1;\n
    if (a0->field_0)\n
        a0->field_0->field_4 = a0->field_4;\n
    if (a0->field_4)\n
        a0->field_4->field_0 = a0->field_0;\n
    if (v0[0] == a0)\n
        v0[0] = a0->field_0;\n
    if (v0[1] == a0)\n
        v0[1] = a0->field_4;\n
    v3 = v0;\n
    v3[2] = v3[2] - 1;\n
    return v0;\n
}\n
", "4241544:sub_40b888": null, "4241552:_ZN7DLQueue10DeleteItemEP6DLItem": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int DLQueue::DeleteItem(unsigned int v3[3], void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    DLQueue::Unlink(v3, a0);\n
    v5 = a0;\n
    v1 = v5;\n
    if (v5)\n
    {\n
        DLItem::__base_dtor__(v1);\n
        v5 = operator delete(v1);\n
        return v5;\n
    }\n
    return a0;\n
}\n
", "4241647:sub_40b8ef": null, "4241648:_ZN7DLQueue10RemoveItemEP6DLItem": "int DLQueue::RemoveItem(unsigned int v0[3], void* a0)\n
{\n
    return DLQueue::Unlink(v0, a0);\n
}\n
", "4241697:sub_40b921": null, "4241712:_ZN7DLQueue11RemoveFirstEv": "int DLQueue::RemoveFirst(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int *v2;  // ecx\n
\n
    v2 = v1;\n
    v0 = *(v2);\n
    DLQueue::Unlink(v2, v0);\n
    return v0;\n
}\n
", "4241766:sub_40b966": null, "4241776:_ZN7DLQueue10RemoveLastEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int DLQueue::RemoveLast(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0xc]\n
    struct_0 *v2;  // ecx\n
\n
    v2 = v1;\n
    v0 = v2->field_4;\n
    DLQueue::Unlink(v2, v0);\n
    return v0;\n
}\n
", "4241831:sub_40b9a7": null, "4241840:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    char v1;  // [bp-0x64]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    CommandHandler::__base_ctor__(&v1);\n
    CommandHandler::ParserLoop(&v1);\n
    v2 = 0;\n
    CommandHandler::__dtor__(&v1);\n
    v6 = v3;\n
    return v2;\n
}\n
", "4241932:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:memcpy": null, "5242888:__libc_start_main": null, "5242892:cgc_fdwait": null, "5242896:cgc_receive": null, "5242900:_Znaj": null, "5242904:cgc_allocate": null, "5242908:cgc__terminate": null, "5242912:_ZdlPv": null, "5242916:_ZdaPv": null, "5242920:cgc_rint": null, "5242924:cgc_log10": null, "5242928:cgc_transmit": null, "5242932:cgc_pow": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}