{"4202496:_init": "extern struct_0 *g_40925c;\n
\n
int _init()\n
{\n
    if (g_40925c)\n
    {\n
        g_40925c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29043;\n
    v6 = v5 + 34;\n
    v7 = v5 + 34;\n
    if (v7 == v6)\n
        return v5 + 34;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 28979;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 34;\n
    v9 = (v6 + 34 - (v6 + 34) >> 31) + (34 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_409258;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_409258)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_pos_ceil": null, "4203091:sub_402253": null, "4203104:cgc_buf_is_numeric": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_buf_is_numeric(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(v3, v0, &_GLOBAL_OFFSET_TABLE_))\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (*((v3 + v1)) >= 48 && *((v3 + v1)) <= 57)\n
            goto LABEL_4022e6;\n
        if (*((v3 + v1)) != 45)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
LABEL_4022e6:\n
        v1 += 1;\n
    }\n
}\n
", "4203273:sub_402309": null, "4203280:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8]\n
\n
    v1 = 0;\n
    for (v0 = v2; *(v0); v0 += 1);\n
    return v0 - v2;\n
}\n
", "4203346:sub_402352": null, "4203360:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(unsigned int v6)\n
{\n
    char *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 1;\n
    v4 = 0;\n
    if (v4[v6] == 45)\n
        v5 = -1;\n
    v3 = 0;\n
    v2 = v4;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v6))\n
            break;\n
        v3 = v3 * 10 + *((v6 + v2)) - 48;\n
        v2 += 1;\n
    }\n
    v3 *= v5;\n
    return v3;\n
}\n
", "4203526:sub_402406": null, "4203536:cgc_read_ascii_line": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_ascii_line(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18]\n
    char v5[4096];  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    *(&v5[0]) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v5 < a1)\n
            v1 = v5 < 4095;\n
        if (!(v1 & 1))\n
        {\n
LABEL_402512:\n
            *((a0 + 4095)) = 0;\n
            v7 = v6;\n
            break;\n
        }\n
        v4 = 0;\n
        v0 = &v4;\n
        v3 = cgc_receive(v8, &v5[a0], 1);\n
        if (v3)\n
        {\n
LABEL_4024f3:\n
            v7 = 0;\n
            return v7;\n
        }\n
        if (!(v4 == 1))\n
            goto LABEL_4024f3;\n
        v6 += 1;\n
        if (v5[a0] == 10)\n
        {\n
LABEL_4024df:\n
            *((a0 + v5)) = 0;\n
            goto LABEL_402512;\n
        }\n
        else\n
        {\n
            if (!v5[a0])\n
                goto LABEL_4024df;\n
            v5 = &v5[1];\n
        }\n
    }\n
    return v7;\n
}\n
", "4203819:sub_40252b": null, "4203824:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[44];\n
    struct struct_1 *field_2c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v4, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        v4 = v0->field_2c;\n
    }\n
    else\n
    {\n
        v5 = v0;\n
        v5->field_2c = &v5[176].padding_0[0];\n
    }\n
    v2 = cgc_strlen(v4);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v2)\n
        {\n
            v3 = v4;\n
            return v3;\n
        }\n
        else if (*((v4 + v1)) != a0)\n
        {\n
            if (!*((v4 + v1)) && v1)\n
            {\n
                v3 = v4;\n
                return v3;\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            *((v4 + v1)) = 0;\n
            v0->field_2c = v4 + v1 + 1;\n
            v3 = v4;\n
            return v3;\n
        }\n
    }\n
}\n
", "4204094:sub_40263e": null, "4204096:cgc_calloc": "int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = a0 * v5;\n
    v0 = v3;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v1 = 0; v1 < v3; v1 += 1)\n
    {\n
        v2[v1] = 0;\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4204225:sub_4026c1": null, "4204240:cgc_recv_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_recv_until(unsigned int v6, char *a0, unsigned int a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // esi\n
\n
    v5 = v7;\n
    v3 = 0;\n
    v0 = &v3;\n
    v2 = cgc_receive(v6, a0, a1);\n
    if (v2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v3)\n
        {\n
            v4 = -2;\n
            return v4;\n
        }\n
        else if (a2 != a0[v1])\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v4 = v1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204424:sub_402788": null, "4204432:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4204614:sub_402846": null, "4204624:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v6, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_strlen(v6);\n
    v2 = &v6[v4];\n
    v3 = a0;\n
    v0 = cgc_strlen(a0);\n
    cgc_memcpy(v2, v3);\n
    v8 = v5;\n
    return v6;\n
}\n
", "4204729:sub_4028b9": null, "4204736:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v0;\n
}\n
", "4204819:sub_402913": null, "4204832:cgc_memcmp": "int cgc_memcmp(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = v4;\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2[v0] == *((v1 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4204952:sub_402998": null, "4204960:cgc_itoaB10": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoaB10(unsigned int v13)\n
{\n
    char v0;  // [bp-0x35]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    char *v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    char *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v12 = v14;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 12;\n
    v9 = cgc_malloc();\n
    if (!v9)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v8 = v13;\n
    if (!v13)\n
    {\n
        cgc_memcpy(v9, v1 - 8800, 2);\n
        v11 = v9;\n
        return v11;\n
    }\n
    v7 = 0;\n
    if (v13 < 0)\n
    {\n
        v7 = 1;\n
        v8 = -(v8);\n
    }\n
    v6 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v6 < v10)\n
            v0 = v8;\n
        if (!(v0 & 1))\n
            break;\n
        v5 = (v8 >> 31 CONCAT v8) /m 10 >> 32;\n
        if (v5 <= 9)\n
            v9[v6] = v5 + 48;\n
        else\n
            v9[v6] = v5 + 87;\n
        v15 = v8;\n
        v8 = (v15 >> 31 CONCAT v15) /m 10;\n
        v6 += 1;\n
    }\n
    if (v7 == 1)\n
        v9[1 + v6] = 45;\n
    v4 = cgc_malloc();\n
    v3 = cgc_strlen(v9);\n
    for (v2 = 0; v2 < v3; v2 += 1)\n
    {\n
        v4[v2] = v9[1 + v3 + -1 * v2];\n
    }\n
    cgc_free();\n
    v11 = v4;\n
    return v11;\n
}\n
", "4205404:sub_402b5c": null, "4205408:cgc_head_check": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_head_check(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    else if (v1->field_4)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 2;\n
        return v0;\n
    }\n
}\n
", "4205477:sub_402ba5": null, "4205488:cgc_check_next_node_for": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_check_next_node_for(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2)\n
        v1 = v2->field_4;\n
    return v1 & 1;\n
}\n
", "4205536:cgc_init_ll": "int cgc_init_ll()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &v2;\n
    v1 = cgc_allocate(8, 0);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0;\n
    v2[1] = 0;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205643:sub_402c4b": null, "4205648:cgc_get_head": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_get_head(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_4;\n
    return v0;\n
}\n
", "4205694:sub_402c7e": null, "4205696:cgc_dec_nodes": "int cgc_dec_nodes(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (v0)\n
    {\n
        v1 = v0;\n
        if (*(v1) > 0)\n
        {\n
            v1 = v0;\n
            *(v1) = *(v1) - 1;\n
        }\n
    }\n
    return v1;\n
}\n
", "4205736:sub_402ca8": null, "4205744:cgc_get_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_get_node(void* v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = cgc_get_head(v2);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0 != a0)\n
        {\n
            v0 = *((v0 + 4));\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4205846:sub_402d16": null, "4205856:cgc_remove_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_node(struct_1 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v3 = 4;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = cgc_get_head(v4);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v3 = 3;\n
            return v3;\n
        }\n
        if (v1 == a0)\n
            break;\n
        v2 = v1;\n
        v1 = *((v1 + 4));\n
    }\n
    if (v2)\n
        *((v2 + 4)) = *((v1 + 4));\n
    else\n
        v4->field_4 = *((v1 + 4));\n
    cgc_dec_nodes(v4);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4206053:sub_402de5": null, "4206064:cgc_add_node_tail": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_node_tail(unsigned int v5[2], struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7[2];  // eax\n
    unsigned int v8[2];  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_head_check(v5);\n
    if (v2 == 2)\n
    {\n
        v7 = v5;\n
        v7[0] = v7[0] + 1;\n
        v5[1] = a0;\n
        a0->field_4 = 0;\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = cgc_get_head(v5);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v3 = 5;\n
            return v3;\n
        }\n
        else if (*((v1 + 4)))\n
        {\n
            v1 = *((v1 + 4));\n
        }\n
        else\n
        {\n
            *((v1 + 4)) = a0;\n
            v8 = v5;\n
            v8[0] = v8[0] + 1;\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206258:sub_402eb2": null, "4206272:cgc_add_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_node(unsigned int v4[2], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_head_check(v4);\n
    if (v1 == 2)\n
    {\n
        v6 = v4;\n
        v6[0] = v6[0] + 1;\n
        v4[1] = a0;\n
        a0->field_4 = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (v1 <= 0)\n
    {\n
        a0->field_4 = cgc_get_head(v4);\n
        v4[1] = a0;\n
        v7 = v4;\n
        v7[0] = v7[0] + 1;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
}\n
", "4206443:sub_402f6b": null, "4206448:cgc_count_entries": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_count_entries(struct_1 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = cgc_head_check(v4);\n
    if (v2 > 0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v1 = 0;\n
    for (v0 = v4->field_4; v0->field_4; v0 = v0->field_4)\n
    {\n
        v1 += 1;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4206572:sub_402fec": null, "4206576:cgc_alloc_backing": "int cgc_alloc_backing(unsigned int v5[5])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v5[3] = v5[0] + 12;\n
    v2 = v5[2] * v5[3];\n
    v5[4] = v2;\n
    v0 = &v3;\n
    v1 = cgc_allocate(v2, 0);\n
    if (v1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4206705:sub_403071": null, "4206720:cgc_add_backing_for_chunks": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[12];\n
    unsigned int field_14[2];\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_backing_for_chunks(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7[6];  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_alloc_backing(v5);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = cgc_add_node(v5->field_14, v2);\n
    if (v1)\n
        cgc__terminate();\n
    v7 = v5;\n
    v7[1] = v7[1] + 1;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4206865:sub_403111": null, "4206880:cgc_add_backing_chunks_to_freelist": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[12];\n
    unsigned int field_1c[2];\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_backing_chunks_to_freelist(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
        cgc__terminate();\n
    for (v3 = 0; v3 < v4->field_8; v3 += 1)\n
    {\n
        v2 = v3 * v4->field_c;\n
        v1 = a0 + v2;\n
        cgc_add_node(v4->field_1c, v1);\n
    }\n
    return v3;\n
}\n
", "4207026:sub_4031b2": null, "4207040:cgc_init_backing": "typedef struct struct_0 {\n
    char padding_0[20];\n
    void* field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_backing(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5->field_1c = cgc_init_ll();\n
    v5->field_18 = cgc_init_ll();\n
    v5->field_14 = cgc_init_ll();\n
    v2 = cgc_add_backing_for_chunks(v5);\n
    if (!v2)\n
    {\n
        v3 = 4;\n
        return v3;\n
    }\n
    v1 = cgc_get_head(v5->field_14);\n
    cgc_add_backing_chunks_to_freelist(v5, v1);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4207206:sub_403266": null, "4207216:cgc_get_chunk_head_for_sz": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_chunk_head_for_sz(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[6];  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5[6];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= 6)\n
        {\n
            v5[0] = 0;\n
            return v5;\n
        }\n
        v3[0] = v0 + 144 + v4 * 32;\n
        v2 = v3[0];\n
        if (v6 < v2)\n
            break;\n
        v4 += 1;\n
    }\n
    if (v3[5])\n
    {\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_init_backing(v3);\n
    if (v1)\n
        cgc__terminate();\n
    if (!v3[5])\n
        cgc__terminate();\n
    v5 = v3;\n
    return v5;\n
}\n
", "4207447:sub_403357": null, "4207456:cgc_max_backing_addr": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_max_backing_addr(unsigned int v0, struct_0 *a0)\n
{\n
    return v0 + a0->field_10;\n
}\n
", "4207476:sub_403374": null, "4207488:cgc_get_backing_with_ptr": "typedef struct struct_1 {\n
    char padding_0[20];\n
    void* field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_backing_with_ptr(unsigned int v5, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_get_head(a0->field_14);\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            if (v2 <= v5)\n
            {\n
                v0 = v5;\n
                if (v0 <= cgc_max_backing_addr(v5, a0))\n
                {\n
                    v3 = v2;\n
                    return v3;\n
                }\n
            }\n
            v2 = *((v2 + 4));\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4207638:sub_403416": null, "4207648:cgc_mod_refcount_on_backing": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_mod_refcount_on_backing(struct_0 *v3, void* a0, char a1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    while (true)\n
    {\n
        v2 = v4;\n
        if (!v2)\n
            return v4;\n
        if (v3 <= v2)\n
        {\n
            v0 = v2;\n
            if (v0 <= cgc_max_backing_addr(v3, a0))\n
                break;\n
        }\n
        v4 = v2->field_4;\n
    }\n
    if (a1 == 255 && !v3->field_0)\n
        cgc__terminate();\n
    v4 = v3;\n
    *(v4) = a1 + *(v4);\n
    return v3;\n
}\n
", "4207840:cgc_add_alloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_alloc(void* v5[8], void* a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_remove_node(v5[7], a0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!cgc_add_node(v5[6], a0))\n
    {\n
        v3 = a0;\n
        v2 = v3 + 12;\n
        v0 = v2 - 12;\n
        if (v0 != cgc_get_head(v5[6]))\n
            cgc__terminate();\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4208069:sub_4035c5": null, "4208080:cgc_get_next_free_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_next_free_chunk(void* v8[8])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_head(v8[7]);\n
    if (v5)\n
    {\n
        v4 = cgc_add_alloc(v8, v5);\n
        v0 = v4 - 12;\n
        if (v0 != cgc_get_head(v8[6]))\n
            cgc__terminate();\n
        v6 = v4;\n
        return v6;\n
    }\n
    else\n
    {\n
        v3 = cgc_add_backing_for_chunks(v8);\n
        if (!v3)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        cgc_add_backing_chunks_to_freelist(v8, v3);\n
        v5 = cgc_get_head(v8[7]);\n
        v4 = cgc_add_alloc(v8, v5);\n
        if (!v4)\n
            cgc__terminate();\n
        v1 = v4 - 12;\n
        if (v1 != cgc_get_head(v8[6]))\n
            cgc__terminate();\n
        v6 = v4;\n
        return v6;\n
    }\n
}\n
", "4208439:sub_403737": null, "4208448:cgc_malloc_init": null, "4208684:sub_40382c": null, "4208688:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[140];\n
    unsigned int field_8c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc_get_chunk_head_for_sz(v5);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (v0->field_8c + v5 > 0x1e848000)\n
        cgc__terminate();\n
    v1 = cgc_get_next_free_chunk(v2);\n
    if (v1)\n
    {\n
        v7 = v0;\n
        v7->field_8c = *(v2) + v7->field_8c;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4208849:sub_4038d1": null, "4208864:cgc_free": "typedef struct struct_0 {\n
    char padding_0[140];\n
    unsigned int field_8c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    void* field_14;\n
    void* field_18;\n
    unsigned int field_1c[2];\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    struct_0 *v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20]\n
    struct_2 *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
    struct_1 *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = v8 - 12;\n
    for (v5 = 0; v5 <= 6; v5 += 1)\n
    {\n
        v7 = 144 + &v0->padding_0[0] + 0x20 * v5;\n
        v4 = cgc_get_head(v7->field_14);\n
        for (v3 = 0; v4; v4 = *((v4 + 4)))\n
        {\n
            v2 = cgc_get_node(v7->field_18, v6);\n
            if (v2)\n
            {\n
                if (cgc_remove_node(v7->field_18, v2))\n
                    cgc__terminate();\n
                v1 = cgc_add_node(v7->field_1c, v2);\n
                if (!v1)\n
                {\n
                    v9 = v0;\n
                    v9->field_8c = v9->field_8c - v7->field_0;\n
                    return v0;\n
                }\n
                cgc__terminate();\n
            }\n
        }\n
    }\n
    cgc__terminate();\n
    return cgc_transaction_iterator();\n
}\n
", "4209200:cgc_transaction_iterator": "typedef struct struct_1 {\n
    char padding_0[344];\n
    struct struct_2 *field_158;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transaction_iterator(struct_3 *v3)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v3)\n
    {\n
        v1 = cgc_get_head(v3->field_10);\n
        v0->field_158 = &v1->padding_0;\n
        v2 = v1->field_8;\n
        return v2;\n
    }\n
    if (!v3 && v0->field_158)\n
    {\n
        v4 = v0;\n
        v4->field_158 = v4->field_158->field_4;\n
        if (!v4->field_158)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = v0->field_158->field_8;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4209393:sub_403af1": null, "4209408:cgc_lazy_account_init": "extern unsigned int ACCOUNTS;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lazy_account_init()\n
{\n
    unsigned int v0;  // [bp+0x4]\n
    unsigned int v1;  // [bp+0x8]\n
    unsigned int v2;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!ACCOUNTS)\n
        v2 = cgc_init_account_register(v0, v1);\n
    return v2;\n
}\n
", "4209455:sub_403b2f": null, "4209456:cgc_alloc_txn_head": "int cgc_alloc_txn_head()\n
{\n
    return cgc_malloc(12);\n
}\n
", "4209491:sub_403b53": null, "4209504:cgc_vendor_calc": "typedef struct struct_0 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_0;\n
\n
int cgc_vendor_calc(struct_0 *v0)\n
{\n
    return v0->field_5 - 4;\n
}\n
", "4209522:sub_403b72": null, "4209536:cgc_packet_sz_by_op_code": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_packet_sz_by_op_code()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (v1 > 5)\n
    {\n
        v2 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[12] * 4 - 8796)) + (stack_base)[16];\n
}\n
", "4209792:cgc_get_log_data_sz": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_log_data_sz()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v6;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = v6;\n
    if (v1 > 5)\n
    {\n
        v4 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[28] + (stack_base)[24] * 4 - 8772)) + (stack_base)[28];\n
}\n
", "4210056:sub_403d88": null, "4210064:cgc_get_ops_data_sz": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_get_ops_data_sz(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a1;\n
    return cgc_packet_sz_by_op_code(v1->field_8 >> 8);\n
}\n
", "4210128:cgc_get_size_of_data_for_pkt": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_size_of_data_for_pkt()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp+0x4]\n
    unsigned int *v6;  // [bp+0x8]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*(&v5->field_8) >> 16)\n
    {\n
        v2 = v6;\n
        v3 = *(v2) - -4;\n
        return;\n
    }\n
    v0 = v5->field_8;\n
    if (v0 > 3)\n
    {\n
        v3 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[20] + (stack_base)[24] * 4 - 8748)) + (stack_base)[20];\n
}\n
", "4210379:sub_403ecb": null, "4210384:cgc_get_size_of_data_for_pkt_head_only": "int cgc_get_size_of_data_for_pkt_head_only(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_get_size_of_data_for_pkt(v1, v1 + 16);\n
}\n
", "4210443:sub_403f0b": null, "4210448:cgc_get_transaction": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_3 *field_4;\n
    struct struct_2 *field_8;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_transaction(struct_1 *v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_2 *v1;  // [bp-0x14]\n
    struct_3 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_get_head(v4->field_10);\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v0->field_16c = 15;\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = *((v2 + 8));\n
        if (v1->field_4 == a0)\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
        v2 = *((v2 + 4));\n
    }\n
}\n
", "4210608:cgc_finalize_transaction": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[15];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_finalize_transaction(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v1->field_0 = 0;\n
    if (v1->field_0)\n
    {\n
        v0 = 15;\n
        return v0;\n
    }\n
    v1->field_10 = 3;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4210673:sub_403ff1": null, "4210688:cgc_open_txn": "typedef struct struct_4 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    char *field_c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10[2];\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_open_txn(struct_1 *v5, struct_3 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_4 *v2;  // [bp-0x10]\n
    struct_2 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_alloc_txn_head();\n
    v2->field_8 = cgc_malloc(24);\n
    v1 = &v2->field_8->field_0;\n
    v1->field_0 = 1;\n
    v1->field_4 = cgc_register_transaction();\n
    a0->field_c = v1->field_4;\n
    v1->field_c = cgc_malloc(16);\n
    if (!v1->field_c)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_memcpy(v1->field_c, a0, 16);\n
    cgc_add_node(v5->field_10, v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4210909:sub_4040dd": null, "4210912:cgc_remove_transaction_log_entry": "typedef struct struct_1 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_3 *field_4;\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    unsigned int field_14;\n
} struct_4;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_transaction_log_entry(struct_0 *v5, struct_2 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int v1[6];  // [bp-0x14]\n
    struct_3 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc_get_head(v5->field_10);\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v0->field_16c = 15;\n
            v3[0] = 0;\n
            return v3;\n
        }\n
        v1[0] = *((v2 + 8));\n
        if (v1[1] == a0->field_4)\n
            break;\n
        v2 = *((v2 + 4));\n
    }\n
    if (v1[3])\n
        cgc_free(v1[3]);\n
    if (v1[2])\n
        cgc_free(v1[5]);\n
    cgc_free(v1);\n
    cgc_remove_node(v5->field_10, v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4211148:sub_4041cc": null, "4211152:cgc_add_transaction_log_entry": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char *field_c;\n
    char padding_10[4];\n
    char *field_14;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_transaction_log_entry(void* v7, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_2 *v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10]\n
    unsigned int v5[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = a0->field_0;\n
    v3 = a0->field_8;\n
    v2 = cgc_get_transaction(v7, v4->field_c);\n
    if (!v2)\n
    {\n
        v5[0] = 0;\n
        return v5;\n
    }\n
    if (!v2->field_c)\n
        v2->field_c = cgc_malloc(16);\n
    if (!v2->field_c)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    cgc_memcpy(v2->field_c, v4, 16);\n
    v1 = a0->field_4;\n
    v2->field_8 = v1;\n
    if (v1)\n
    {\n
        v2->field_14 = cgc_malloc(v1);\n
        if (!v3)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        cgc_memcpy(v2->field_14, v3, v1);\n
    }\n
    v5 = v2;\n
    return v5;\n
}\n
", "4211454:sub_4042fe": null, "4211456:cgc_init_ll_heap": "int cgc_init_ll_heap()\n
{\n
    unsigned int v0[2];  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0[0] = cgc_malloc(8);\n
    if (!v0)\n
    {\n
        v1[0] = 0;\n
        return v1;\n
    }\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4211546:sub_40435a": null, "4211552:cgc_create_account": "typedef struct struct_2 {\n
    char padding_0[348];\n
    struct struct_3 *field_15c;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0[2];\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_account(unsigned int v7, unsigned int a0, unsigned int *a1)\n
{\n
    struct_2 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct_4 *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = *(a1);\n
    cgc_lazy_account_init();\n
    v3 = cgc_malloc(12);\n
    v2[0] = cgc_malloc(20);\n
    if (v2 && v3)\n
    {\n
        v2[0] = v7;\n
        v2[1] = a0;\n
        v2[2] = v4;\n
        v2[3] = v4;\n
        v2[4] = cgc_init_ll_heap();\n
        if (!v2[4])\n
        {\n
            v5 = 3;\n
            return v5;\n
        }\n
        v3->field_8 = v2;\n
        v1 = cgc_add_node(v0->field_15c->field_0, v3);\n
        if (!v1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = v1;\n
        return v5;\n
    }\n
    v5 = 3;\n
    return v5;\n
}\n
", "4211815:sub_404467": null, "4211824:cgc_get_account": "typedef struct struct_0 {\n
    char padding_0[348];\n
    struct struct_1 *field_15c;\n
    char padding_160[12];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_account(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_2 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* *v3;  // [bp-0x10]\n
    unsigned int v4[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_lazy_account_init();\n
    v3 = &v0->field_15c->field_0;\n
    v2 = cgc_get_head(*(v3));\n
    if (!v2)\n
    {\n
        v4[0] = 0;\n
        return v4;\n
    }\n
    v1[0] = v2->field_8;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
LABEL_40453f:\n
            v0->field_16c = 15;\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v1[0] == v6)\n
            break;\n
        v2 = *((v2 + 4));\n
        if (!v2)\n
            goto LABEL_40453f;\n
        v1 = *((v2 + 8));\n
    }\n
    if (*((v1 + 4)) == a0)\n
    {\n
        v4 = v1;\n
        return v4;\n
    }\n
    v0->field_16c = 12;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4212062:sub_40455e": null, "4212064:cgc_init_account_register": "typedef struct struct_0 {\n
    char padding_0[348];\n
    unsigned int field_15c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_account_register()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = cgc_malloc(8);\n
    *(v1) = cgc_init_ll();\n
    v0->field_15c = v1;\n
    v5 = v2;\n
    return v0;\n
}\n
", "4212134:sub_4045a6": null, "4212144:cgc_check_auth_packet": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_auth_packet(unsigned int v1[3])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1[2] != 1)\n
        cgc__terminate();\n
    return cgc_get_account(v1[0], v1[1]);\n
}\n
", "4212241:sub_404611": null, "4212256:cgc_verify_init": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_verify_init(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 10;\n
        return v0;\n
    }\n
    else if (v1->field_8)\n
    {\n
        v0 = 10;\n
        return v0;\n
    }\n
    else if (!v1->field_8 >> 8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 9;\n
        return v0;\n
    }\n
}\n
", "4212367:sub_40468f": null, "4212368:cgc_alloc_new_pkt": "int cgc_alloc_new_pkt(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = cgc_calloc(1, v1 + 16);\n
    return v0;\n
}\n
", "4212424:sub_4046c8": null, "4212432:cgc_register_card_id": "extern unsigned int NEXT_CARD_ID;\n
\n
int cgc_register_card_id()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = NEXT_CARD_ID;\n
    NEXT_CARD_ID = NEXT_CARD_ID + 1;\n
    return v0;\n
}\n
", "4212480:cgc_register_transaction": "extern unsigned int NEXT_TXN_ID;\n
\n
int cgc_register_transaction()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = NEXT_TXN_ID;\n
    NEXT_TXN_ID = NEXT_TXN_ID + 1;\n
    return v0;\n
}\n
", "4212528:cgc_register_auth_code": "extern unsigned int NEXT_AUTH_CODE;\n
\n
int cgc_register_auth_code()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = NEXT_AUTH_CODE;\n
    NEXT_AUTH_CODE = NEXT_AUTH_CODE + 1;\n
    return v0;\n
}\n
", "4212576:cgc_init_resp_structs": "extern unsigned int _GLOBAL_OFFSET_TABLE_[94];\n
\n
int cgc_init_resp_structs()\n
{\n
    unsigned int v0[94];  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4[94];  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // ebx\n
\n
    v1 = v3;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v0[93] = cgc_malloc(12);\n
    v0[90] = cgc_alloc_new_pkt(0x800);\n
    if (!v0[90])\n
        cgc__terminate();\n
    v4 = v0;\n
    if (!v4[93])\n
        v4 = cgc__terminate();\n
    v5 = v1;\n
    return v4;\n
}\n
", "4212725:sub_4047f5": null, "4212736:cgc_clear_gen_pkt": "typedef struct struct_0 {\n
    char padding_0[360];\n
    unsigned int field_168;\n
} struct_0;\n
\n
extern struct_1 *RESP_PACKET;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_clear_gen_pkt(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = &RESP_PACKET->field_0;\n
    for (v1 = 0; v1 < v3 + 16; v1 += 1)\n
    {\n
        v2[v1] = 0;\n
    }\n
    return v0->field_168;\n
}\n
", "4212831:sub_40485f": null, "4212832:cgc_clear_pad": "extern struct_0 *RESP_PAD;\n
\n
int cgc_clear_pad()\n
{\n
    RESP_PAD->field_0 = 0;\n
    RESP_PAD->field_4 = 0;\n
    RESP_PAD->field_8 = 0;\n
    return RESP_PAD;\n
}\n
", "4212893:sub_40489d": null, "4212896:cgc_create_basic_packet_head": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_basic_packet_head(unsigned int v4, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1[4];  // [bp-0x10]\n
    unsigned int v2[4];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1[0] = cgc_clear_gen_pkt(a2);\n
    if (!v1)\n
    {\n
        v0->field_16c = 3;\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = v4;\n
    v1[1] = a0;\n
    v1[3] = a1;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4213020:sub_40491c": null, "4213024:cgc_create_basic_response": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_basic_response(unsigned int v6, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3[3];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
    struct_0 *v11;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_create_basic_packet_head(v6, a0, a1, a5);\n
    if (!v2)\n
    {\n
        v3[0] = 0;\n
    }\n
    else\n
    {\n
        v1[0] = cgc_clear_pad();\n
        if (!v1)\n
        {\n
            v3 = 0;\n
        }\n
        else\n
        {\n
            v9 = v2;\n
            v9->field_8 = v9->field_8 & -0x100 | a2;\n
            v10 = v2;\n
            v10->field_8 = v10->field_8 & -65281 | a3 * 0x100;\n
            v11 = v2;\n
            v11->field_8 = v11->field_8 & -16711681 | a4 * 0x10000;\n
            if (!a5)\n
                v1[2] = 0;\n
            else\n
                v1[2] = &v2[1].padding_0[4];\n
            v1[0] = v2;\n
            v1[1] = a5;\n
            v3 = v1;\n
        }\n
    }\n
    return v3;\n
}\n
", "4213312:cgc_generate_new_init_and_init_resp": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_generate_new_init_and_init_resp(struct_0 *v9)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int *v6;  // [bp-0x18]\n
    unsigned int v7[4];  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7[0] = v9->field_0;\n
    v6 = v9->field_8;\n
    if (!v6)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v5 = cgc_register_card_id();\n
    v4 = cgc_register_auth_code();\n
    v3 = cgc_create_account(v5, v4, v6);\n
    if (v3)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v2 = cgc_get_account(v5, v4);\n
    if (!v2)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    cgc_open_txn(v2, v7);\n
    v9->field_0->field_0 = v5;\n
    v9->field_0->field_4 = v4;\n
    v1 = cgc_add_transaction_log_entry(v2, v9);\n
    if (!v1)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v8 = cgc_create_basic_response(v5, v4, v7[3], 0, 4, 0, 0);\n
    return v8;\n
}\n
", "4213664:cgc_error_out_and_free_txn": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_error_out_and_free_txn(unsigned int v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (a0)\n
        v0->field_16c = a0;\n
    cgc_free(v1);\n
    return 0;\n
}\n
", "4213736:sub_404be8": null, "4213744:cgc_get_acct_txn_reg": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_acct_txn_reg(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = cgc_get_account(v6, a0);\n
    if (!v3)\n
    {\n
        v0->field_16c = 15;\n
        v4[0] = 0;\n
        return v4;\n
    }\n
    v2 = cgc_get_transaction(v3, a1);\n
    if (!v2)\n
    {\n
        v0->field_16c = 15;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1[0] = cgc_malloc(8);\n
    if (!v1)\n
    {\n
        v0->field_16c = 3;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1[0] = v3;\n
    v1[1] = v2;\n
    v4 = v1;\n
    return v4;\n
}\n
", "4213975:sub_404cd7": null, "4213984:cgc_calc_payload_sz": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_calc_payload_sz(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1->field_8 == 2 && v1->field_8 >> 8 == 2)\n
    {\n
        v0 = 4;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4214066:sub_404d32": null, "4214080:cgc_get_payload": "int cgc_get_payload(unsigned int v0)\n
{\n
    return v0 + 16;\n
}\n
", "4214094:sub_404d4e": null, "4214096:cgc_process_client_history": "typedef struct struct_8 {\n
    struct struct_9 *field_0;\n
    char padding_4[4];\n
    struct struct_3 *field_8;\n
} struct_8;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_6 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_3 *field_c;\n
} struct_7;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_5 *field_c;\n
    unsigned int field_10;\n
    char *field_14;\n
} struct_4;\n
\n
typedef struct struct_9 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_9;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_5;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_history(struct_8 *v25, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    struct_4 *v3;  // [bp-0x64], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x60], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x5c], Other Possible Types: unsigned int\n
    unsigned int v6[3];  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int *v7;  // [bp-0x54]\n
    struct_0 *v8;  // [bp-0x50]\n
    struct_6 *v9;  // [bp-0x4c]\n
    unsigned int v10;  // [bp-0x48]\n
    struct_7 *v11;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x38]\n
    struct struct_2 **v15;  // [bp-0x34]\n
    struct_1 *v16;  // [bp-0x30]\n
    void* v17;  // [bp-0x2c]\n
    unsigned int v18;  // [bp-0x28]\n
    unsigned int v19;  // [bp-0x24]\n
    unsigned int v20;  // [bp-0x20]\n
    unsigned int *v21;  // [bp-0x1c]\n
    unsigned int v22[4];  // [bp-0x18]\n
    struct_6 *v23;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0x8]\n
    unsigned int v26;  // ebx\n
    struct_0 *v27;  // eax\n
    unsigned int v28[3];  // eax\n
    unsigned int v29[3];  // eax\n
    unsigned int v30[3];  // eax\n
\n
    v24 = v26;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v22[0] = v25->field_0;\n
    v21 = &v25->field_8->field_0;\n
    v20 = v22[0];\n
    v19 = v22[1];\n
    v18 = v22[3];\n
    v17 = cgc_get_account(v20, v19);\n
    v16 = cgc_add_transaction_log_entry(v17, v25);\n
    v15 = cgc_get_acct_txn_reg(v20, v19, v18);\n
    if (!v15)\n
    {\n
        v23 = 0;\n
        return v23;\n
    }\n
    v14 = *(v15)->field_10->field_0;\n
    v13 = 0;\n
    v12 = 0;\n
    if (v22[3] == 192017)\n
        v12 = 0;\n
    for (v11 = cgc_transaction_iterator(*(v15)); v11; v11 = cgc_transaction_iterator(NULL))\n
    {\n
        if (!v11)\n
            break;\n
        if (v11->field_c->field_0 == v20)\n
        {\n
            v13 = v11->field_8 + v13;\n
            if (v12 >= *(v21))\n
                break;\n
            v12 += 1;\n
        }\n
    }\n
    if (v25->field_0->field_c == 223352)\n
        v12 = v12;\n
    v10 = v13 + 4 + v12 * 16 - v12 * 4;\n
    v9 = cgc_create_basic_response(v20, v19, v18, 2, 3, 0, v10);\n
    if (!v9)\n
    {\n
        v23 = 0;\n
        return v23;\n
    }\n
    v8 = v9->field_0;\n
    v7 = &v9->field_8->field_0;\n
    v27 = v8;\n
    v27->field_8 = v27->field_8 & -65281 | 0x300;\n
    v6[0] = v7 + 1;\n
    v5 = 0;\n
    v16->field_10 = 2;\n
    v4 = 0;\n
    for (v3 = cgc_transaction_iterator(*(v15)); v3; v3 = cgc_transaction_iterator(NULL))\n
    {\n
        if (!v3)\n
            break;\n
        if (v3->field_c->field_0 == v20)\n
        {\n
            if (v5 >= *(v21))\n
                break;\n
            v28 = v6;\n
            v28[0] = v28[0] & -0x100 | v3->field_c->field_8 >> 8;\n
            v29 = v6;\n
            v29[0] = v29[0] & -65281 | v3->field_10 * 0x100;\n
            v30 = v6;\n
            v30[0] = v30[0] & -16711681 | (v3->field_c->field_8 >> 16) * 0x10000;\n
            v6[1] = v3->field_c->field_0;\n
            v6[2] = v3->field_c->field_c;\n
            v2 = v3->field_8;\n
            if (!v3->field_14)\n
                cgc__terminate();\n
            cgc_memcpy(v6 + 12, v3->field_14, v2);\n
            v5 += 1;\n
            v1 = v2 - -12;\n
            v4 = v1 + v4;\n
            v6[0] = v6 + v1;\n
        }\n
    }\n
    *(a0) = v4 + 4;\n
    v9->field_4 = v4 + 4;\n
    *(v7) = v12;\n
    cgc_finalize_transaction(v16);\n
    v23 = v9;\n
    return v23;\n
}\n
", "4215076:sub_405124": null, "4215088:cgc_process_client_balance": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_balance(struct struct_1 **v12)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int *v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int *v4;  // [bp-0x28]\n
    struct struct_2 **v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9[4];  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9[0] = *(v12);\n
    v8 = v9[0];\n
    v7 = v9[1];\n
    v6 = v9[3];\n
    v5 = cgc_get_acct_txn_reg(v8, v7, v6);\n
    if (!v5)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    v4 = cgc_create_basic_response(v8, v7, v6, 2, 2, 0, 4);\n
    v3 = *(v4);\n
    v2 = cgc_get_payload(v3);\n
    if (!v2)\n
    {\n
        v0->field_16c = 18;\n
        v10 = 0;\n
        return v10;\n
    }\n
    *(v2) = *(v5)->field_c;\n
    v1 = cgc_add_transaction_log_entry(*(v5), v4);\n
    cgc_free(v5);\n
    v10 = v4;\n
    return v10;\n
}\n
", "4215392:cgc_process_client_refund_op": "typedef struct struct_3 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    struct struct_5 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_refund_op(struct_4 *v12)\n
{\n
    struct_3 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2[2];  // [bp-0x30]\n
    struct_0 *v3;  // [bp-0x2c]\n
    struct struct_2 **v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8[2];  // [bp-0x18]\n
    unsigned int v9[4];  // [bp-0x14]\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9[0] = v12->field_0;\n
    v8[0] = v12->field_8;\n
    v7 = v9[0];\n
    v6 = v9[1];\n
    v5 = v9[3];\n
    v4 = cgc_get_acct_txn_reg(v7, v6, v5);\n
    if (!v4)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    v3 = cgc_get_transaction(*(v4), v8[1]);\n
    if (!v3)\n
    {\n
        v0->field_16c = 15;\n
        v10 = 0;\n
        return v10;\n
    }\n
    v2[0] = v3->field_14;\n
    if (!v2)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    else if (v2[0] != v8[0])\n
    {\n
        v0->field_16c = 15;\n
        v10 = 0;\n
        return v10;\n
    }\n
    else\n
    {\n
        v1 = *(v4)->field_c + v2[1];\n
        if (v1 <= -1 && v1 >= *(v4)->field_c)\n
        {\n
            *(v4)->field_c = v1;\n
            cgc_add_transaction_log_entry(*(v4), v12);\n
            cgc_remove_transaction_log_entry(*(v4), v3);\n
            cgc_free(v4);\n
            v10 = cgc_create_basic_response(v7, v6, v5, 2, 5, 0, 0);\n
            return v10;\n
        }\n
        v0->field_16c = 7;\n
        v10 = 0;\n
        return v10;\n
    }\n
}\n
", "4215867:sub_40543b": null, "4215872:cgc_process_client_recharge_op": "typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_recharge_op(struct_2 *v10)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    struct struct_0 **v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6[4];  // [bp-0x18]\n
    struct_1 *v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v10->field_8;\n
    v6[0] = v10->field_0;\n
    v5 = v6[0];\n
    v4 = v6[1];\n
    v3 = v6[3];\n
    v2 = cgc_get_acct_txn_reg(v5, v4, v3);\n
    if (!v2)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (v7->field_8 > 6)\n
    {\n
        v8 = cgc_error_out_and_free_txn(v2, 11);\n
        return v8;\n
    }\n
    else\n
    {\n
        v1 = v7->field_0 + *(v2)->field_c;\n
        if (v1 <= -1 && v1 >= *(v2)->field_c)\n
        {\n
            *(v2)->field_c = v1;\n
            cgc_add_transaction_log_entry(*(v2), v10);\n
            cgc_free(v2);\n
            v8 = cgc_create_basic_response(v5, v4, v3, 2, 1, 0, 0);\n
            return v8;\n
        }\n
        v8 = cgc_error_out_and_free_txn(v2, 6);\n
        return v8;\n
    }\n
}\n
", "4216238:sub_4055ae": null, "4216240:cgc_generate_error": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_ERRNO;\n
\n
int cgc_generate_error(unsigned int v11[4])\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    struct_0 *v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int *v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v10 = v11[0];\n
    v9 = v11[1];\n
    v8 = v11[3];\n
    if (cgc_ERRNO == 3)\n
        cgc__terminate();\n
    v12 = v2;\n
    v7 = cgc_strlen(*(&v12->padding_0[60 + 4 * v12->field_16c]));\n
    v6 = v7 - -4;\n
    v0 = v10;\n
    v1 = v6;\n
    v5 = cgc_create_basic_response(v0, v9, v8, v11[2], v11[2] >> 8, v2->field_16c, v1);\n
    v4 = *(v5);\n
    v13 = v2;\n
    v3 = cgc_get_payload(v4);\n
    *(v3) = v7;\n
    cgc_memcpy(v3 + 1, *(&v13->padding_0[60 + 4 * v13->field_16c]), v7);\n
    return v5;\n
}\n
", "4216545:sub_4056e1": null, "4216560:cgc_process_client_purchase_op": "typedef struct struct_1 {\n
    struct struct_2 *field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    char field_c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_purchase_op(struct_1 *v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct struct_3 **v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x18]\n
    unsigned int v6[4];  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_3 *v11;  // eax\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6[0] = v9->field_0;\n
    v5 = v9->field_8;\n
    v4 = v6[0];\n
    v3 = v6[1];\n
    v2 = v6[3];\n
    v1 = cgc_get_acct_txn_reg(v4, v3, v2);\n
    if (!v1)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (v5->field_c > 6)\n
    {\n
        v7 = cgc_error_out_and_free_txn(v1, 11);\n
        return v7;\n
    }\n
    else if (v5->field_4 > *(v1)->field_c)\n
    {\n
        v7 = cgc_error_out_and_free_txn(v1, 5);\n
        return v7;\n
    }\n
    else\n
    {\n
        v11 = *(v1);\n
        v11->field_c = v11->field_c - v5->field_4;\n
        cgc_add_transaction_log_entry(*(v1), v9);\n
        cgc_free(v1);\n
        v7 = cgc_create_basic_response(v4, v3, v2, 2, 0, 0, 0);\n
        return v7;\n
    }\n
}\n
", "4216911:sub_40584f": null, "4216912:cgc_create_auth_resp": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_auth_resp(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_create_basic_packet_head(v3, a0, a1, 0);\n
    v5 = v1;\n
    v5->field_8 = v5->field_8 & -0x100 | 1;\n
    return cgc_create_basic_response(v3, a0, a1, 1, 0, 0, 0);\n
}\n
", "4217069:sub_4058ed": null, "4217072:cgc_process_client_auth": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_auth(struct struct_2 **v10)\n
{\n
    struct_0 *v0;  // [bp-0x2c]\n
    struct struct_3 **v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7[4];  // [bp-0x10]\n
    struct struct_3 **v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    struct_3 *v12;  // eax\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7[0] = *(v10);\n
    v6 = v7[0];\n
    v5 = v7[1];\n
    v4 = cgc_check_auth_packet(v7);\n
    if (!v4)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v3 = cgc_open_txn(v4, v7);\n
    if (!v3)\n
    {\n
        v0->field_16c = 12;\n
        v8 = 0;\n
        return v8;\n
    }\n
    v2 = v3->field_4;\n
    v7[3] = v2;\n
    v1 = cgc_create_auth_resp(v6, v5, v2);\n
    v12 = *(v1);\n
    v12->field_8 = v12->field_8 & -65281 | (v7[2] >> 8) * 0x100;\n
    v8 = v1;\n
    return v8;\n
}\n
", "4217324:sub_4059ec": null, "4217328:cgc_process_client_fin": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_client_fin(struct struct_1 **v9)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6[4];  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6[0] = *(v9);\n
    v5 = v6[0];\n
    v4 = v6[1];\n
    v3 = v6[3];\n
    v2 = cgc_get_account(v5, v4);\n
    if (!v2)\n
    {\n
        v0->field_16c = 15;\n
        v7 = 0;\n
        return v7;\n
    }\n
    v1 = cgc_get_transaction(v2, v3);\n
    if (!v1)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (!cgc_finalize_transaction(v1))\n
    {\n
        v7 = cgc_create_basic_response(v5, v4, v3, 3, v6[2] >> 8, 0, 0);\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4217612:sub_405b0c": null, "4217616:cgc_init_recv_structs": "typedef struct struct_0 {\n
    char padding_0[376];\n
    struct struct_1 *field_178;\n
    unsigned int field_17c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_recv_structs()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // eax\n
    unsigned int v5[3];  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0->field_178 = cgc_malloc(12);\n
    v4 = v0;\n
    v4->field_17c = cgc_malloc(1056);\n
    v4->field_178->field_0 = v4->field_17c;\n
    v4->field_178->field_8 = v4->field_178->field_0 + 16;\n
    v5 = v4->field_178;\n
    v5[1] = 0;\n
    v6 = v1;\n
    return v5;\n
}\n
", "4217735:sub_405b87": null, "4217744:cgc_recv_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_all(unsigned int v5, unsigned int a0, unsigned int *a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 6;\n
    if (!a1)\n
        cgc__terminate();\n
    v3 = 0;\n
    for (v2 = 0; v3 < a0; v3 = v2 + v3)\n
    {\n
        v0 = &v2;\n
        v4 = cgc_receive(0, v5 + v3, a0 - v3);\n
        if (!v2)\n
            break;\n
        if (v4)\n
            break;\n
    }\n
    *(a1) = v3;\n
    return v4;\n
}\n
", "4217951:sub_405c5f": null, "4217952:cgc_recv_pack_and_data": "typedef struct struct_2 {\n
    char padding_0[376];\n
    struct struct_0 *field_178;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[9];\n
    char field_9;\n
    char padding_a[3];\n
    char field_d;\n
} struct_1;\n
\n
extern struct_4 *PAD;\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_pack_and_data()\n
{\n
    char v0[14];  // [bp-0x54]\n
    char v1[14];  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    struct_2 *v3;  // [bp-0x48]\n
    void* v4;  // [bp-0x44], Other Possible Types: unsigned int\n
    char v5[14];  // [bp-0x40]\n
    char v6[14];  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    void* v8;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x30]\n
    char v10[14];  // [bp-0x2c]\n
    void* v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    void* v14;  // [bp-0x1c]\n
    void* v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x14]\n
    struct_3 *v17;  // [bp-0x10]\n
    unsigned int v18[3];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x8]\n
    unsigned int v21;  // ebx\n
    struct_2 *v22;  // ebx\n
    struct_2 *v23;  // ebx\n
    struct_2 *v24;  // eax\n
\n
    v19 = v21;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v17 = PAD->field_0;\n
    v16 = 16;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = cgc_recv_all(v17, v16, &v15);\n
    if (!v13 && v16 == v15)\n
    {\n
        v22 = v3;\n
        v22->field_178->field_4 = 0;\n
        v22->field_178->field_8 = 0;\n
        v12 = cgc_get_size_of_data_for_pkt_head_only(v17, 1);\n
        v11 = 0;\n
        if (v12 <= 0)\n
        {\n
LABEL_405f18:\n
            v24 = v3;\n
            v24->field_178->field_4 = v11 + v14;\n
            v18 = v24->field_178;\n
            return v18;\n
        }\n
        v23 = v3;\n
        v23->field_178->field_8 = v23->field_178->field_0 + 16;\n
        *(&v10[0]) = v23->field_178->field_8;\n
        v9 = cgc_recv_all(v10, v12, &v11);\n
        if (!v9 && v11 == v12)\n
        {\n
            if (v11 != v12)\n
                cgc__terminate();\n
            v8 = 0;\n
            if (v17->field_8 != 2)\n
            {\n
LABEL_405f13:\n
                goto LABEL_405f18;\n
            }\n
            if (v17->field_8 >> 8 && !(v17->field_8 >> 8 == 1))\n
                goto LABEL_405f13;\n
            v4 = 0;\n
            v2 = *(&v17->field_8 + 1);\n
            if (!v2)\n
            {\n
                *(&v6[0]) = v10;\n
                v8 = v6[13];\n
                *(&v1[0]) = v10;\n
                v7 = &v1[cgc_get_size_of_data_for_pkt_head_only(v17, 1)];\n
                v4 = cgc_recv_all(v7, v8, &v14);\n
                if (!v4 && v8 == v14)\n
                    goto LABEL_405f0e;\n
                v18 = 0;\n
                return v18;\n
            }\n
            if (v2 != 1)\n
            {\n
LABEL_405f0e:\n
                goto LABEL_405f13;\n
            }\n
            else\n
            {\n
                *(&v5[0]) = v10;\n
                v8 = v5[9];\n
                *(&v0[0]) = v10;\n
                v7 = &v0[cgc_get_size_of_data_for_pkt_head_only(v17, 1)];\n
                v4 = cgc_recv_all(v7, v8, &v14);\n
                if (!v4 && v8 == v14)\n
                    goto LABEL_405f0e;\n
                v18 = 0;\n
                return v18;\n
            }\n
        }\n
        v18 = 0;\n
        return v18;\n
    }\n
    v18[0] = 0;\n
    return v18;\n
}\n
", "4218684:sub_405f3c": null, "4218688:cgc_ops_delegate": "typedef struct struct_0 {\n
    char padding_0[364];\n
    unsigned int field_16c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ops_delegate()\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    struct struct_1 **v5;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = *(v5);\n
    v1 = v2->field_9;\n
    if (v1 > 5)\n
    {\n
        v0->field_16c = 9;\n
        v3 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[24] + (stack_base)[20] * 4 - 8212)) + (stack_base)[24];\n
}\n
", "4218920:sub_406028": null, "4218928:cgc_free_pad": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_pad(unsigned int v3[3])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v3[0];\n
    v1 = v3[2];\n
    if (v1 - v2 == 16)\n
    {\n
        v4 = cgc_free(v2);\n
        return v4;\n
    }\n
    v4 = cgc_free(v2);\n
    if (v1)\n
    {\n
        v4 = cgc_free(v1);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4219050:sub_4060aa": null, "4219056:main": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3[3];  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x20]\n
    struct struct_0 **v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18]\n
    void* v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    cgc_malloc_init();\n
    cgc_init_recv_structs();\n
    cgc_init_resp_structs();\n
    v6 = 0;\n
    while (true)\n
    {\n
        v5 = cgc_recv_pack_and_data();\n
        if (!v5)\n
            cgc__terminate();\n
        v4 = *(v5);\n
        v3[0] = 0;\n
        v2 = 0;\n
        if (v5 && !(!v4))\n
            goto LABEL_40614c;\n
        cgc__terminate();\n
LABEL_40614c:\n
        v0 = v4->field_8;\n
        if (v0 <= 3)\n
        {\n
            goto *(((stack_base)[44] + (stack_base)[48] * 4 - 8188)) + (stack_base)[44];\n
        }\n
        else\n
        {\n
            if (!v3)\n
                v3 = cgc_generate_error(v4);\n
            if (!v3)\n
                cgc__terminate();\n
            cgc_transmit_all(1, *(v3), 16);\n
            if (*((v3 + 4)))\n
                cgc_transmit_all(1, *((v3 + 8)), *((v3 + 4)));\n
            v2 = 0;\n
        }\n
    }\n
}\n
", "4219248:sub_406170": "int sub_406170()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: char\n
\n
    v2 = *(&v2) + 1;\n
    v0 = cgc_generate_new_init_and_init_resp(*(&v1));\n
}\n
", "4219279:sub_40618f": "int sub_40618f()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
\n
    v0 = cgc_process_client_auth(*(&v1));\n
}\n
", "4219301:sub_4061a5": "int sub_4061a5()\n
{\n
    char v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v3 = &v0;\n
    v1 = cgc_ops_delegate(*(&v2));\n
}\n
", "4219330:sub_4061c2": "int sub_4061c2()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
\n
    v0 = cgc_process_client_fin(*(&v1));\n
}\n
", "4219508:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}