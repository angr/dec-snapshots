{"4202496:_init": "extern struct_0 *g_407eb8;\n
\n
int _init()\n
{\n
    if (g_407eb8)\n
    {\n
        g_407eb8();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24015;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 23951;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_407eb4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_407eb4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_DATA8": "extern unsigned int cgc_state;\n
\n
int cgc_DATA8(unsigned short v0)\n
{\n
    return *((cgc_state + v0 + 128));\n
}\n
", "4203015:sub_402207": null, "4203024:cgc_DATA16": "extern unsigned int cgc_state;\n
\n
int cgc_DATA16(unsigned short v0)\n
{\n
    return *((cgc_state + v0 + 128));\n
}\n
", "4203063:sub_402237": null, "4203072:cgc_DATA32": "extern unsigned int cgc_state;\n
\n
int cgc_DATA32(unsigned short v0)\n
{\n
    return *((cgc_state + v0 + 128));\n
}\n
", "4203110:sub_402266": null, "4203120:cgc_REG8": "extern unsigned int cgc_state;\n
\n
int cgc_REG8(unsigned short v0)\n
{\n
    return *((cgc_state + v0));\n
}\n
", "4203155:sub_402293": null, "4203168:cgc_REG16": "extern unsigned int cgc_state;\n
\n
int cgc_REG16(unsigned short v0)\n
{\n
    return *((cgc_state + v0));\n
}\n
", "4203203:sub_4022c3": null, "4203216:cgc_REG32": "extern unsigned int cgc_state;\n
\n
int cgc_REG32(unsigned short v0)\n
{\n
    return *((cgc_state + v0));\n
}\n
", "4203250:sub_4022f2": null, "4203264:cgc_MOVIM8": "extern unsigned int cgc_state;\n
\n
int cgc_MOVIM8(unsigned short v0, char a0)\n
{\n
    *((cgc_state + v0)) = a0;\n
    return cgc_state;\n
}\n
", "4203304:sub_402328": null, "4203312:cgc_MOVIM16": "extern unsigned int cgc_state;\n
\n
int cgc_MOVIM16(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = a0;\n
    return cgc_state;\n
}\n
", "4203355:sub_40235b": null, "4203360:cgc_MOVIM32": "extern unsigned int cgc_state;\n
\n
int cgc_MOVIM32(unsigned short v0, unsigned int a0)\n
{\n
    *((cgc_state + v0)) = a0;\n
    return cgc_state;\n
}\n
", "4203400:sub_402388": null, "4203408:cgc_MOV8": "extern unsigned int cgc_state;\n
\n
int cgc_MOV8(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0));\n
    return cgc_state;\n
}\n
", "4203459:sub_4023c3": null, "4203472:cgc_MOV16": "extern unsigned int cgc_state;\n
\n
int cgc_MOV16(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0));\n
    return cgc_state;\n
}\n
", "4203525:sub_402405": null, "4203536:cgc_MOV32": "extern unsigned int cgc_state;\n
\n
int cgc_MOV32(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0));\n
    return cgc_state;\n
}\n
", "4203587:sub_402443": null, "4203600:cgc_AND8": "extern unsigned int cgc_state;\n
\n
int cgc_AND8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) & *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203676:sub_40249c": null, "4203680:cgc_AND16": "extern unsigned int cgc_state;\n
\n
int cgc_AND16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) & *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203758:sub_4024ee": null, "4203760:cgc_AND32": "extern unsigned int cgc_state;\n
\n
int cgc_AND32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) & *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203830:sub_402536": null, "4203840:cgc_OR8": "extern unsigned int cgc_state;\n
\n
int cgc_OR8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) | *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203916:sub_40258c": null, "4203920:cgc_OR16": "extern unsigned int cgc_state;\n
\n
int cgc_OR16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) | *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4203998:sub_4025de": null, "4204000:cgc_OR32": "extern unsigned int cgc_state;\n
\n
int cgc_OR32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) | *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204070:sub_402626": null, "4204080:cgc_NOT8": "extern unsigned int cgc_state;\n
\n
int cgc_NOT8(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) ^ -1;\n
    return cgc_state;\n
}\n
", "4204137:sub_402669": null, "4204144:cgc_NOT16": "extern unsigned int cgc_state;\n
\n
int cgc_NOT16(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) ^ -1;\n
    return cgc_state;\n
}\n
", "4204203:sub_4026ab": null, "4204208:cgc_NOT32": "extern unsigned int cgc_state;\n
\n
int cgc_NOT32(unsigned short v0, unsigned short a0)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) ^ -1;\n
    return cgc_state;\n
}\n
", "4204262:sub_4026e6": null, "4204272:cgc_ADD8": "extern unsigned int cgc_state;\n
\n
int cgc_ADD8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) + *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204348:sub_40273c": null, "4204352:cgc_ADD16": "extern unsigned int cgc_state;\n
\n
int cgc_ADD16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) + *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204430:sub_40278e": null, "4204432:cgc_ADD32": "extern unsigned int cgc_state;\n
\n
int cgc_ADD32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) + *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204502:sub_4027d6": null, "4204512:cgc_SUB8": "extern unsigned int cgc_state;\n
\n
int cgc_SUB8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) - *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204588:sub_40282c": null, "4204592:cgc_SUB16": "extern unsigned int cgc_state;\n
\n
int cgc_SUB16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) - *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204670:sub_40287e": null, "4204672:cgc_SUB32": "extern unsigned int cgc_state;\n
\n
int cgc_SUB32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    *((cgc_state + v0)) = *((cgc_state + a0)) - *((cgc_state + a1));\n
    return cgc_state;\n
}\n
", "4204742:sub_4028c6": null, "4204752:cgc_LAND8": "int cgc_LAND8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_AND8(v0, a0, a1);\n
}\n
", "4204823:sub_402917": null, "4204832:cgc_LAND16": "int cgc_LAND16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_AND16(v0, a0, a1);\n
}\n
", "4204903:sub_402967": null, "4204912:cgc_LAND32": "int cgc_LAND32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_AND32(v0, a0, a1);\n
}\n
", "4204983:sub_4029b7": null, "4204992:cgc_LOR8": "int cgc_LOR8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_OR8(v0, a0, a1);\n
}\n
", "4205063:sub_402a07": null, "4205072:cgc_LOR16": "int cgc_LOR16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_OR16(v0, a0, a1);\n
}\n
", "4205143:sub_402a57": null, "4205152:cgc_LOR32": "int cgc_LOR32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_OR32(v0, a0, a1);\n
}\n
", "4205223:sub_402aa7": null, "4205232:cgc_EQ8": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_state;\n
\n
int cgc_EQ8(unsigned short v1, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*((cgc_state + a0)) != *((cgc_state + a1)))\n
    {\n
        v2 = cgc_MOV8(v1, 276);\n
        return v2;\n
    }\n
    v2 = cgc_MOV8(v1, 264);\n
    return v2;\n
}\n
", "4205359:sub_402b2f": null, "4205360:cgc_EQ16": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_state;\n
\n
int cgc_EQ16(unsigned short v1, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*((cgc_state + a0)) != *((cgc_state + a1)))\n
    {\n
        v2 = cgc_MOV16(v1, 276);\n
        return v2;\n
    }\n
    v2 = cgc_MOV16(v1, 268);\n
    return v2;\n
}\n
", "4205487:sub_402baf": null, "4205488:cgc_EQ32": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_state;\n
\n
int cgc_EQ32(unsigned short v1, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*((cgc_state + a0)) != *((cgc_state + a1)))\n
    {\n
        v2 = cgc_MOV32(v1, 276);\n
        return v2;\n
    }\n
    v2 = cgc_MOV32(v1, 272);\n
    return v2;\n
}\n
", "4205611:sub_402c2b": null, "4205616:cgc_GT8": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_state;\n
\n
int cgc_GT8(unsigned short v1, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*((cgc_state + a0)) <= *((cgc_state + a1)))\n
    {\n
        v2 = cgc_MOV8(v1, 276);\n
        return v2;\n
    }\n
    v2 = cgc_MOV8(v1, 264);\n
    return v2;\n
}\n
", "4205743:sub_402caf": null, "4205744:cgc_GT16": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_state;\n
\n
int cgc_GT16(unsigned short v1, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*((cgc_state + a0)) <= *((cgc_state + a1)))\n
    {\n
        v2 = cgc_MOV16(v1, 276);\n
        return v2;\n
    }\n
    v2 = cgc_MOV16(v1, 268);\n
    return v2;\n
}\n
", "4205871:sub_402d2f": null, "4205872:cgc_GT32": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_state;\n
\n
int cgc_GT32(unsigned short v1, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*((cgc_state + a0)) <= *((cgc_state + a1)))\n
    {\n
        v2 = cgc_MOV32(v1, 276);\n
        return v2;\n
    }\n
    v2 = cgc_MOV32(v1, 272);\n
    return v2;\n
}\n
", "4205995:sub_402dab": null, "4206000:cgc_GTE8": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GTE8(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_EQ8(v2, a0, a1);\n
    cgc_GT8(a2, a0, a1);\n
    v4 = v1;\n
    return cgc_LOR8(v2, v2, a2);\n
}\n
", "4206152:sub_402e48": null, "4206160:cgc_GTE16": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GTE16(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_EQ16(v2, a0, a1);\n
    cgc_GT16(a2, a0, a1);\n
    v4 = v1;\n
    return cgc_LOR16(v2, v2, a2);\n
}\n
", "4206312:sub_402ee8": null, "4206320:cgc_GTE32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GTE32(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_EQ32(v2, a0, a1);\n
    cgc_GT32(a2, a0, a1);\n
    v4 = v1;\n
    return cgc_LOR32(v2, v2, a2);\n
}\n
", "4206472:sub_402f88": null, "4206480:cgc_LT8": "int cgc_LT8(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_GT8(v0, a1, a0);\n
}\n
", "4206551:sub_402fd7": null, "4206560:cgc_LT16": "int cgc_LT16(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_GT16(v0, a1, a0);\n
}\n
", "4206631:sub_403027": null, "4206640:cgc_LT32": "int cgc_LT32(unsigned short v0, unsigned short a0, unsigned short a1)\n
{\n
    return cgc_GT32(v0, a1, a0);\n
}\n
", "4206711:sub_403077": null, "4206720:cgc_LTE8": "int cgc_LTE8(unsigned short v0, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    return cgc_GTE8(v0, a1, a0, a2);\n
}\n
", "4206806:sub_4030d6": null, "4206816:cgc_LTE16": "int cgc_LTE16(unsigned short v0, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    return cgc_GTE16(v0, a1, a0, a2);\n
}\n
", "4206902:sub_403136": null, "4206912:cgc_LTE32": "int cgc_LTE32(unsigned short v0, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    return cgc_GTE32(v0, a1, a0, a2);\n
}\n
", "4206998:sub_403196": null, "4207008:cgc_INC8": "int cgc_INC8(unsigned short v0)\n
{\n
    return cgc_ADD8(v0, v0, 260);\n
}\n
", "4207068:sub_4031dc": null, "4207072:cgc_INC16": "int cgc_INC16(unsigned short v0)\n
{\n
    return cgc_ADD16(v0, v0, 260);\n
}\n
", "4207132:sub_40321c": null, "4207136:cgc_INC32": "int cgc_INC32(unsigned short v0)\n
{\n
    return cgc_ADD32(v0, v0, 260);\n
}\n
", "4207196:sub_40325c": null, "4207200:cgc_DEC8": "int cgc_DEC8(unsigned short v0)\n
{\n
    return cgc_SUB8(v0, v0, 260);\n
}\n
", "4207260:sub_40329c": null, "4207264:cgc_DEC16": "int cgc_DEC16(unsigned short v0)\n
{\n
    return cgc_SUB16(v0, v0, 260);\n
}\n
", "4207324:sub_4032dc": null, "4207328:cgc_DEC32": "int cgc_DEC32(unsigned short v0)\n
{\n
    return cgc_SUB32(v0, v0, 260);\n
}\n
", "4207388:sub_40331c": null, "4207392:cgc_MUL32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_MUL32(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOV32(a2, a0);\n
    cgc_MOV32(a2 + 4, a1);\n
    cgc_MOVIM32(v2, 0);\n
    cgc_GT32(a2 + 8, a0, a1);\n
    v4 = cgc_REG32(a2 + 8);\n
    if (v4)\n
    {\n
        *(&v4) = a2;\n
        cgc_MOV32(v4, a1);\n
        cgc_MOV32(a2 + 4, a0);\n
    }\n
    cgc_GT32(a2 + 8, a2, 0x100);\n
    while (true)\n
    {\n
        v5 = cgc_REG32(a2 + 8);\n
        if (!v5)\n
            break;\n
        cgc_ADD32(v2, v2, a2 + 4);\n
        cgc_DEC32(a2);\n
        cgc_GT32(a2 + 8, a2, 0x100);\n
    }\n
    v6 = v1;\n
    return v5;\n
}\n
", "4207808:cgc_MUL16": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_MUL16(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a2, 0);\n
    cgc_MOV16(a2, v2);\n
    cgc_MOVIM32(a2 + 4, 0);\n
    cgc_MOV16(a2 + 4, a0);\n
    cgc_MOVIM32(a2 + 8, 0);\n
    cgc_MOV16(a2 + 8, a1);\n
    cgc_MUL32(a2, a2 + 4, a2 + 8, a2 + 12);\n
    return cgc_MOV16(v2, a2);\n
}\n
", "4208114:sub_4035f2": null, "4208128:cgc_MUL8": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_MUL8(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a2, 0);\n
    cgc_MOV8(a2, v2);\n
    cgc_MOVIM32(a2 + 4, 0);\n
    cgc_MOV8(a2 + 4, a0);\n
    cgc_MOVIM32(a2 + 8, 0);\n
    cgc_MOV8(a2 + 8, a1);\n
    cgc_MUL32(a2, a2 + 4, a2 + 8, a2 + 12);\n
    return cgc_MOV8(v2, a2);\n
}\n
", "4208434:sub_403732": null, "4208448:cgc_DIV32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DIV32(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOV32(a2, a0);\n
    cgc_MOVIM32(v2, 0);\n
    cgc_EQ32(a2 + 4, a1, 0x100);\n
    v4 = cgc_REG32(a2 + 4);\n
    if (v4)\n
        return v4;\n
    cgc_GTE32(a2 + 4, a2, a1, a2 + 8);\n
    cgc_GT32(a2 + 8, a2, 0x100);\n
    cgc_LAND32(a2 + 12, a2 + 4, a2 + 8);\n
    while (true)\n
    {\n
        v4 = cgc_REG32(a2 + 12);\n
        if (!v4)\n
            break;\n
        cgc_INC32(v2);\n
        cgc_SUB32(a2, a2, a1);\n
        cgc_GTE32(a2 + 4, a2, a1, a2 + 8);\n
        cgc_GT32(a2 + 8, a2, 0x100);\n
        cgc_LAND32(a2 + 12, a2 + 4, a2 + 8);\n
    }\n
    return v4;\n
}\n
", "4209010:sub_403972": null, "4209024:cgc_DIV16": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DIV16(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a2, 0);\n
    cgc_MOV16(a2, v2);\n
    cgc_MOVIM32(a2 + 4, 0);\n
    cgc_MOV16(a2 + 4, a0);\n
    cgc_MOVIM32(a2 + 8, 0);\n
    cgc_MOV16(a2 + 8, a1);\n
    cgc_DIV32(a2, a2 + 4, a2 + 8, a2 + 12);\n
    return cgc_MOV16(v2, a2);\n
}\n
", "4209330:sub_403ab2": null, "4209344:cgc_DIV8": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DIV8(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a2, 0);\n
    cgc_MOV8(a2, v2);\n
    cgc_MOVIM32(a2 + 4, 0);\n
    cgc_MOV8(a2 + 4, a0);\n
    cgc_MOVIM32(a2 + 8, 0);\n
    cgc_MOV8(a2 + 8, a1);\n
    cgc_DIV32(a2, a2 + 4, a2 + 8, a2 + 12);\n
    return cgc_MOV8(v2, a2);\n
}\n
", "4209650:sub_403bf2": null, "4209664:cgc_REM32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_REM32(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOV32(a2, a0);\n
    cgc_MOVIM32(v2, 0);\n
    cgc_EQ32(a2 + 4, a1, 0x100);\n
    v4 = cgc_REG32(a2 + 4);\n
    if (v4)\n
        return v4;\n
    cgc_GTE32(a2 + 4, a2, a1, a2 + 16);\n
    cgc_GT32(a2 + 8, a2, 0x100);\n
    cgc_LAND32(a2 + 12, a2 + 4, a2 + 8);\n
    while (true)\n
    {\n
        v5 = cgc_REG32(a2 + 12);\n
        if (!v5)\n
            break;\n
        *(&v5) = a2;\n
        cgc_SUB32(a2, v5, a1);\n
        cgc_GTE32(a2 + 4, a2, a1, a2 + 16);\n
        cgc_GT32(a2 + 8, a2, 0x100);\n
        cgc_LAND32(a2 + 12, a2 + 4, a2 + 8);\n
    }\n
    *(&v5) = v2;\n
    v4 = cgc_MOV32(v5, a2);\n
    return v4;\n
}\n
", "4210232:sub_403e38": null, "4210240:cgc_REM16": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_REM16(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a2, 0);\n
    cgc_MOV16(a2, v2);\n
    cgc_MOVIM32(a2 + 4, 0);\n
    cgc_MOV16(a2 + 4, a0);\n
    cgc_MOVIM32(a2 + 8, 0);\n
    cgc_MOV16(a2 + 8, a1);\n
    cgc_REM32(a2, a2 + 4, a2 + 8, a2 + 12);\n
    return cgc_MOV16(v2, a2);\n
}\n
", "4210546:sub_403f72": null, "4210560:cgc_REM8": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_REM8(unsigned short v2, unsigned short a0, unsigned short a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a2, 0);\n
    cgc_MOV8(a2, v2);\n
    cgc_MOVIM32(a2 + 4, 0);\n
    cgc_MOV8(a2 + 4, a0);\n
    cgc_MOVIM32(a2 + 8, 0);\n
    cgc_MOV8(a2 + 8, a1);\n
    cgc_REM32(a2, a2 + 4, a2 + 8, a2 + 12);\n
    return cgc_MOV8(v2, a2);\n
}\n
", "4210866:sub_4040b2": null, "4210880:cgc_INIT_MACHINE": "extern unsigned int _GLOBAL_OFFSET_TABLE_[14];\n
extern char cgc_state;\n
\n
int cgc_INIT_MACHINE()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[14];  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7[14];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v0 = &cgc_state;\n
    v2 = cgc_allocate(280, 0);\n
    if (v2)\n
        cgc__terminate();\n
    v7 = v1;\n
    v7[12] = v7[12] - -3816;\n
    v7[13] = v7[12] + 0x100;\n
    for (v3 = 0; v3 < 0x100; v3 += 4)\n
    {\n
        cgc_MOVIM32(v3, 0);\n
    }\n
    cgc_MOVIM32(0x100, 0);\n
    cgc_MOVIM32(260, 1);\n
    cgc_MOVIM32(264, 255);\n
    cgc_MOVIM32(268, 65535);\n
    cgc_MOVIM32(272, -1);\n
    v8 = v4;\n
    return cgc_MOVIM32(276, 0);\n
}\n
", "4211233:sub_404221": null, "4211248:cgc_printChar": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printChar(unsigned short v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_REG8(v5);\n
    v0 = &v2;\n
    v7 = cgc_transmit(1, &v3, 1);\n
    if (!v7 && *(&v2) == 1)\n
        return v7;\n
    v7 = cgc__terminate();\n
    return v7;\n
}\n
", "4211366:sub_4042a6": null, "4211376:cgc_getChar": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getChar(unsigned short v11)\n
{\n
    struct_0 *v0;  // [bp-0xbc]\n
    unsigned int v1;  // [bp-0xb0]\n
    struct_0 *v2;  // [bp-0xac], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xa8]\n
    unsigned int v4;  // [bp-0xa4]\n
    void* v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c], Other Possible Types: char\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v4 = 1;\n
    v5 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < 32; v2 += 1)\n
    {\n
        *(&(&v6)[4 * v2]) = 0;\n
    }\n
    v6 = *(&v6) | 1;\n
    v0 = &v3;\n
    v7 = cgc_fdwait(1, &v6, 0, &v4);\n
    if (!v7 && v3 == 1)\n
    {\n
        v12 = cgc_receive(0, &v9, 1);\n
        v7 = v12;\n
        if (!v7 && *(&v8))\n
        {\n
            *(&v12) = v11;\n
            cgc_MOVIM8(v12, v9);\n
            v10 = 0;\n
            return v10;\n
        }\n
        v10 = -1;\n
        return v10;\n
    }\n
    v10 = -1;\n
    return v10;\n
}\n
", "4211746:sub_404422": null, "4211760:cgc_printString": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printString(unsigned short v4, unsigned short a0, unsigned short a1)\n
{\n
    unsigned short v0;  // [bp-0x12]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a1;\n
    cgc_MOV16(v2, v4);\n
    a1 += 2;\n
    cgc_MOVIM8(a1, 0);\n
    while (true)\n
    {\n
        v0 = a1 + 1;\n
        cgc_MOV8(v0, cgc_REG16(v2));\n
        cgc_EQ8(a1 + 2, 0x100, a1 + 1);\n
        v6 = cgc_REG8(a1 + 2);\n
        if (v6)\n
            break;\n
        cgc_printChar(a1 + 1);\n
        cgc_INC8(a1);\n
        cgc_INC16(v2);\n
    }\n
    *(&v6) = a0;\n
    v7 = cgc_MOV8(v6, a1);\n
    v8 = v3;\n
    return v7;\n
}\n
", "4212080:cgc_printReg32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printReg32(unsigned short v10, unsigned short a0)\n
{\n
    unsigned short v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1e]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned short v3;  // [bp-0x18]\n
    unsigned short v4;  // [bp-0x16]\n
    unsigned short v5;  // [bp-0x14]\n
    unsigned short v6;  // [bp-0x12]\n
    unsigned short v7;  // [bp-0x10]\n
    unsigned short v8;  // [bp-0xe]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
\n
    v9 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOV32(a0, v10);\n
    v8 = a0 + 4;\n
    cgc_MOVIM32(v8, 0x3b9aca00);\n
    cgc_MOVIM32(v8 + 4, 0x5f5e100);\n
    cgc_MOVIM32(v8 + 8, 10000000);\n
    cgc_MOVIM32(v8 + 12, 1000000);\n
    cgc_MOVIM32(v8 + 16, 100000);\n
    cgc_MOVIM32(v8 + 20, 10000);\n
    cgc_MOVIM32(v8 + 24, 1000);\n
    cgc_MOVIM32(v8 + 28, 100);\n
    cgc_MOVIM32(v8 + 32, 10);\n
    cgc_MOVIM32(v8 + 36, 1);\n
    v7 = v8 + 40;\n
    cgc_MOVIM16(v7, 4);\n
    v6 = v7 + 2;\n
    cgc_MOVIM16(v6, v8 + 40);\n
    v5 = v6 + 2;\n
    v4 = v5 + 2;\n
    v3 = v4 + 2;\n
    cgc_MOVIM16(v5, v8);\n
    while (true)\n
    {\n
        cgc_GT16(v4, v6, v5);\n
        v12 = cgc_REG16(v4);\n
        if (!v12)\n
            break;\n
        v0 = a0;\n
        cgc_DIV32(v3, v0, cgc_REG16(v5), v3 + 5);\n
        cgc_MOVIM8(v3 + 4, 48);\n
        cgc_ADD8(v3 + 4, v3 + 4, v3);\n
        cgc_printChar(v3 + 4);\n
        v1 = a0;\n
        cgc_REM32(a0, v1, cgc_REG16(v5), v3 + 5);\n
        cgc_ADD16(v5, v5, v7);\n
    }\n
    return v12;\n
}\n
", "4212961:sub_4048e1": null, "4212976:cgc_printReg16": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printReg16(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a0, 0);\n
    cgc_MOV16(a0, v2);\n
    v4 = v1;\n
    return cgc_printReg32(a0, a0 + 4);\n
}\n
", "4213092:sub_404964": null, "4213104:cgc_printReg8": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printReg8(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM32(a0, 0);\n
    cgc_MOV8(a0, v2);\n
    v4 = v1;\n
    return cgc_printReg32(a0, a0 + 4);\n
}\n
", "4213220:sub_4049e4": null, "4213232:cgc_isSpace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isSpace(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM8(a0, 32);\n
    cgc_MOVIM8(a0 + 1, 9);\n
    cgc_EQ8(a0 + 2, v2, a0);\n
    cgc_EQ8(a0 + 3, v2, a0 + 1);\n
    cgc_LOR8(a0 + 2, a0 + 2, a0 + 3);\n
    v4 = v1;\n
    return cgc_REG8(a0 + 2);\n
}\n
", "4213488:cgc_isNumber": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isNumber(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM8(a0, 48);\n
    cgc_SUB8(a0 + 1, v2, a0);\n
    cgc_MOVIM8(a0 + 2, 10);\n
    cgc_LT8(a0 + 3, a0 + 1, a0 + 2);\n
    v4 = v1;\n
    return cgc_REG8(a0 + 3);\n
}\n
", "4213695:sub_404bbf": null, "4213696:cgc_isUpLetter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isUpLetter(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM8(a0, 65);\n
    cgc_MOVIM8(a0 + 1, 90);\n
    cgc_GTE8(a0 + 2, v2, a0, a0 + 3);\n
    cgc_LTE8(a0 + 3, v2, a0 + 1, a0 + 4);\n
    cgc_LAND8(a0 + 2, a0 + 2, a0 + 3);\n
    return cgc_REG8(a0 + 2);\n
}\n
", "4213988:sub_404ce4": null, "4214000:cgc_isLowLetter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isLowLetter(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM8(a0, 97);\n
    cgc_MOVIM8(a0 + 1, 122);\n
    cgc_GTE8(a0 + 2, v2, a0, a0 + 3);\n
    cgc_LTE8(a0 + 3, v2, a0 + 1, a0 + 4);\n
    cgc_LAND8(a0 + 2, a0 + 2, a0 + 3);\n
    return cgc_REG8(a0 + 2);\n
}\n
", "4214292:sub_404e14": null, "4214304:cgc_isSpecial": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isSpecial(unsigned short v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_MOVIM8(a0, 33);\n
    cgc_MOVIM8(a0 + 1, 47);\n
    cgc_MOVIM8(a0 + 2, 58);\n
    cgc_MOVIM8(a0 + 3, 64);\n
    cgc_MOVIM8(a0 + 4, 91);\n
    cgc_MOVIM8(a0 + 5, 96);\n
    cgc_MOVIM8(a0 + 6, 80);\n
    cgc_MOVIM8(a0 + 7, 126);\n
    cgc_GTE8(a0 + 10, v2, a0, a0 + 12);\n
    cgc_LTE8(a0 + 11, v2, a0 + 1, a0 + 13);\n
    cgc_LAND8(a0 + 9, a0 + 10, a0 + 11);\n
    cgc_MOV8(a0 + 8, a0 + 9);\n
    cgc_GTE8(a0 + 10, v2, a0 + 2, a0 + 12);\n
    cgc_LTE8(a0 + 11, v2, a0 + 3, a0 + 13);\n
    cgc_LAND8(a0 + 9, a0 + 10, a0 + 11);\n
    cgc_LOR8(a0 + 8, a0 + 8, a0 + 9);\n
    cgc_GTE8(a0 + 10, v2, a0 + 4, a0 + 12);\n
    cgc_LTE8(a0 + 11, v2, a0 + 5, a0 + 13);\n
    cgc_LAND8(a0 + 9, a0 + 10, a0 + 11);\n
    cgc_LOR8(a0 + 8, a0 + 8, a0 + 9);\n
    cgc_GTE8(a0 + 10, v2, a0 + 6, a0 + 12);\n
    cgc_LTE8(a0 + 11, v2, a0 + 7, a0 + 13);\n
    cgc_LAND8(a0 + 9, a0 + 10, a0 + 11);\n
    cgc_LOR8(a0 + 8, a0 + 8, a0 + 9);\n
    return cgc_REG8(a0 + 8);\n
}\n
", "4215534:sub_4052ee": null, "4215536:cgc_insertString": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insertString(char *v2, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0;\n
    *(&v3) = v2;\n
    v1 = 0;\n
    if (!a0)\n
        return v3;\n
    *(&v3) = a1;\n
    cgc_MOV16(v3, v2);\n
    while (true)\n
    {\n
        v3 = a0[v1];\n
        if (!v3)\n
            break;\n
        cgc_MOVIM8(cgc_REG16(a1), a0[v1]);\n
        cgc_INC16(a1);\n
        v1 += 1;\n
    }\n
    return a0[v1];\n
}\n
", "4215717:sub_4053a5": null, "4215728:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v18, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned short v1;  // [bp-0x2c]\n
    unsigned short v2;  // [bp-0x2a]\n
    unsigned short v3;  // [bp-0x28]\n
    unsigned short v4;  // [bp-0x26]\n
    unsigned short v5;  // [bp-0x24]\n
    unsigned short v6;  // [bp-0x22]\n
    unsigned short v7;  // [bp-0x20]\n
    unsigned short v8;  // [bp-0x1e]\n
    unsigned short v9;  // [bp-0x1c]\n
    unsigned short v10;  // [bp-0x1a]\n
    unsigned short v11;  // [bp-0x18]\n
    unsigned short v12;  // [bp-0x16]\n
    unsigned short v13;  // [bp-0x14]\n
    unsigned short v14;  // [bp-0x12]\n
    void* v15;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0xc]\n
    unsigned int v17;  // [bp-0x8]\n
    unsigned int v19;  // ebx\n
    unsigned short v20;  // cx\n
    char *v21;  // ecx\n
    unsigned short v22;  // cx\n
    unsigned short v23;  // cx\n
    unsigned short v24;  // cx\n
    unsigned short v25;  // cx\n
    unsigned short v26;  // cx\n
    unsigned short v27;  // cx\n
    unsigned short v28;  // cx\n
    unsigned short v29;  // cx\n
    unsigned short v30;  // cx\n
    unsigned short v31;  // cx\n
    unsigned short v32;  // dx\n
    unsigned short v33;  // cx\n
    unsigned int v34;  // edx\n
    unsigned short v35;  // dx\n
    unsigned short v36;  // cx\n
    unsigned short v37;  // dx\n
    unsigned short v38;  // cx\n
    unsigned short v39;  // dx\n
    unsigned short v40;  // cx\n
    unsigned short v41;  // dx\n
    unsigned short v42;  // cx\n
    unsigned short v43;  // dx\n
    unsigned short v44;  // cx\n
    unsigned short v45;  // dx\n
    unsigned short v46;  // cx\n
    unsigned short v47;  // dx\n
    unsigned short v48;  // cx\n
    unsigned short v49;  // dx\n
    unsigned short v50;  // cx\n
    unsigned short v51;  // dx\n
    unsigned short v52;  // cx\n
    unsigned short v53;  // dx\n
    unsigned short v54;  // cx\n
    unsigned short v55;  // dx\n
    unsigned short v56;  // cx\n
    unsigned int v57;  // ebx\n
\n
    v17 = v19;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v16 = 0;\n
    v15 = 0;\n
    cgc_INIT_MACHINE();\n
    v14 = 1;\n
    v13 = 2;\n
    v12 = 3;\n
    v11 = 4;\n
    v10 = 5;\n
    v9 = 6;\n
    cgc_MOVIM8(v14, 0);\n
    cgc_MOVIM8(v9, 0);\n
    cgc_MOVIM8(v13, 0);\n
    cgc_MOVIM8(v12, 0);\n
    cgc_MOVIM8(v11, 0);\n
    cgc_MOVIM8(v10, 0);\n
    v8 = 7;\n
    v7 = 9;\n
    v6 = 11;\n
    v5 = 13;\n
    v4 = 15;\n
    v3 = 17;\n
    v2 = 19;\n
    cgc_MOVIM16(v8, 128);\n
    cgc_MOVIM16(v5, 144);\n
    cgc_MOVIM16(v7, 160);\n
    cgc_MOVIM16(v6, 176);\n
    cgc_MOVIM16(v4, 192);\n
    cgc_MOVIM16(v3, 208);\n
    cgc_MOVIM16(v2, 224);\n
    v1 = 21;\n
    v20 = v8;\n
    cgc_insertString(v21, v0 - 7868, v1);\n
    v22 = v5;\n
    cgc_insertString(ecx<4>, v0 - 7856, v1);\n
    v23 = v7;\n
    cgc_insertString(ecx<4>, v0 - 7844, v1);\n
    v24 = v6;\n
    cgc_insertString(ecx<4>, v0 - 7832, v1);\n
    v25 = v4;\n
    cgc_insertString(ecx<4>, v0 - 7820, v1);\n
    v26 = v3;\n
    cgc_insertString(ecx<4>, v0 - 7808, v1);\n
    cgc_MOVIM8(cgc_REG16(v2), 10);\n
    cgc_MOVIM32(cgc_REG16(v2) + 1, 0);\n
    while (true)\n
    {\n
        v15 = cgc_getChar(v1);\n
        if (v15 == -1)\n
            break;\n
        v27 = v1;\n
        if (cgc_isUpLetter(ecx<4>, v1 + 1))\n
        {\n
            cgc_INC8(v13);\n
        }\n
        else\n
        {\n
            v28 = v1;\n
            if (cgc_isLowLetter(ecx<4>, v1 + 1))\n
            {\n
                cgc_INC8(v12);\n
            }\n
            else\n
            {\n
                v29 = v1;\n
                if (cgc_isNumber(ecx<4>, v1 + 1))\n
                {\n
                    cgc_INC8(v14);\n
                }\n
                else\n
                {\n
                    v30 = v1;\n
                    if (cgc_isSpace(ecx<4>, v1 + 1))\n
                    {\n
                        cgc_INC8(v9);\n
                    }\n
                    else\n
                    {\n
                        v31 = v1;\n
                        if (!cgc_isSpecial(ecx<4>, v1 + 1))\n
                            cgc_INC8(v10);\n
                        else\n
                            cgc_INC8(v11);\n
                    }\n
                }\n
            }\n
        }\n
        cgc_printChar(v1);\n
    }\n
    v32 = v8;\n
    v33 = v1;\n
    cgc_printString(v34, ecx<4>, v1 + 4);\n
    cgc_printReg8(v14, v1);\n
    v35 = v2;\n
    v36 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    v37 = v7;\n
    v38 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    cgc_printReg8(v13, v1);\n
    v39 = v2;\n
    v40 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    v41 = v6;\n
    v42 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    cgc_printReg8(v12, v1);\n
    v43 = v2;\n
    v44 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    v45 = v5;\n
    v46 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    cgc_printReg8(v9, v1);\n
    v47 = v2;\n
    v48 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    v49 = v4;\n
    v50 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    cgc_printReg8(v11, v1);\n
    v51 = v2;\n
    v52 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    v53 = v3;\n
    v54 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    cgc_printReg8(v10, v1);\n
    v55 = v2;\n
    v56 = v1;\n
    cgc_printString(edx<4>, ecx<4>, v1 + 4);\n
    v57 = v17;\n
    return 0;\n
}\n
", "4217556:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}