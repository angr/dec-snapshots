{"4202496:_init": "extern struct_0 *g_414140;\n
\n
int _init()\n
{\n
    if (g_414140)\n
    {\n
        g_414140();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 73815;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 73751;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_41413c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_41413c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_is_non_printable": "int cgc_is_non_printable(char v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = v2;\n
    if (!cgc_is_printable())\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203046:sub_402226": null, "4203056:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_digit() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_letter() != 1)\n
        {\n
            v0 = v4;\n
            if (cgc_is_symbol() != 1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203194:sub_4022ba": null, "4203200:cgc_is_digit": "int cgc_is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203263:sub_4022ff": null, "4203264:cgc_is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_upper() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_lower() != 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203371:sub_40236b": null, "4203376:cgc_is_symbol": "int cgc_is_symbol(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (33 <= v2 && v2 <= 47)\n
        goto LABEL_4023ef;\n
    if (58 <= v2 && v2 <= 64)\n
        goto LABEL_4023ef;\n
    if (91 <= v2 && v2 <= 96)\n
        goto LABEL_4023ef;\n
    if (123 > v2)\n
    {\n
LABEL_4023f8:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(v2 <= 126))\n
    {\n
        goto LABEL_4023f8;\n
    }\n
LABEL_4023ef:\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203525:sub_402405": null, "4203536:cgc_is_hexdigit": "int cgc_is_hexdigit(char v1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (cgc_is_digit(v1) != 1)\n
    {\n
        if (97 <= v1 && !(102 < v1))\n
            goto LABEL_402486;\n
        if (65 > v1)\n
        {\n
LABEL_40248f:\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (70 < v1)\n
        {\n
            goto LABEL_40248f;\n
        }\n
    }\n
LABEL_402486:\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203677:sub_40249d": null, "4203680:cgc_is_upper": "int cgc_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 90 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203743:sub_4024df": null, "4203744:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (97 <= v2 && 122 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203807:sub_40251f": null, "4203808:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_is_lower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203888:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_is_upper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203968:cgc_todigit": "int cgc_todigit(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 2 && a0 <= 16 && v2 < a0)\n
    {\n
        if (v2 >= 10)\n
        {\n
            v1 = v2 + 87;\n
            return v1;\n
        }\n
        v1 = v2 + 48;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4204064:cgc_fromdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fromdigit(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        v4 = cgc_tolower(v4);\n
        if (cgc_is_digit(v4))\n
            v2 = v4 - 48;\n
        else\n
            v2 = v4 + -87;\n
        if (v2 >= 0 && v2 < a0)\n
        {\n
            v0 = v2;\n
            goto LABEL_4026cf;\n
        }\n
        v0 = -15;\n
LABEL_4026cf:\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -15;\n
    return v3;\n
}\n
", "4204254:sub_4026de": null, "4204256:cgc_itohex": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itohex(char v3[9], unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v1[0]) = &a0;\n
    v3[0] = cgc_todigit(v1[3] >> 4 & 15, 16);\n
    v3[1] = cgc_todigit(v1[3] & 15, 16);\n
    v3[2] = cgc_todigit(v1[2] >> 4 & 15, 16);\n
    v3[3] = cgc_todigit(v1[2] & 15, 16);\n
    v3[4] = cgc_todigit(v1[1] >> 4 & 15, 16);\n
    v3[5] = cgc_todigit(v1[1] & 15, 16);\n
    v3[6] = cgc_todigit(v1[0] >> 4 & 15, 16);\n
    v3[7] = cgc_todigit(v1[0] & 15, 16);\n
    v3[8] = a1;\n
    v5 = v2;\n
    return v3;\n
}\n
", "4204613:sub_402845": null, "4204624:cgc_utostr": "int cgc_utostr(char *v4, unsigned int a0, unsigned int a1, char a2)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
\n
    v2 = 0;\n
    v1 = a1;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (a0 >= 2)\n
    {\n
        do\n
        {\n
            v1 = (0 CONCAT v1) /m 10;\n
            v2 += 1;\n
        } while (v1);\n
        if (v2 >= a0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v5 = v2;\n
        v2 = v5 - 1;\n
        v4[v5] = a2;\n
        do\n
        {\n
            v0 = (0 CONCAT a1) /m 10 >> 32;\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            v4[v6] = v0 + 48;\n
            a1 = (0 CONCAT a1) /m 10;\n
        } while (a1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4204872:sub_402948": null, "4204880:cgc_itostr": "int cgc_itostr(char *v6, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (a0 >= 2)\n
    {\n
        if (a1 < 0)\n
        {\n
            if (a0 >= 3)\n
            {\n
                v7 = v4;\n
                v4 = v7 + 1;\n
                v6[v7] = 45;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        if (a1 < 0)\n
            v0 = -(a1);\n
        else\n
            v0 = a1;\n
        v2 = v0;\n
        v3 = v2;\n
        do\n
        {\n
            v3 = (0 CONCAT v3) /m 10;\n
            v4 += 1;\n
        } while (v3);\n
        if (v4 >= a0)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v8 = v4;\n
        v4 = v8 - 1;\n
        v6[v8] = a2;\n
        do\n
        {\n
            v1 = (0 CONCAT v2) /m 10 >> 32;\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            v6[v9] = v1 + 48;\n
            v2 = (0 CONCAT v2) /m 10;\n
        } while (v2);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4205222:sub_402aa6": null, "4205232:cgc_strtou": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtou(char *v8, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char *v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // ecx\n
    unsigned int v22;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (*(v8))\n
            {\n
                v9 = v8;\n
                v8 = v9 + 1;\n
                v3 = cgc_fromdigit(*(v9), a0);\n
                v1 = v3 != -15;\n
            }\n
            if (!(v1 & 1))\n
            {\n
                *(a1) = v4;\n
                v7 = v6;\n
                return v7;\n
            }\n
            v10 = a0;\n
            v11 = v4;\n
            v0 = v10 * v5;\n
            v12 = v11 * v10 >> 32;\n
            v14 = v0;\n
            v4 = v11 * v10;\n
            v5 = v12 + v14;\n
            if (v12 + v14)\n
            {\n
                v7 = -15;\n
                return v7;\n
            }\n
            v15 = v3;\n
            v16 = v15 / 0x80000000;\n
            v17 = ~(v15);\n
            v18 = v4;\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, eax<4>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>))))\n
            {\n
                v7 = -15;\n
                return v7;\n
            }\n
            v19 = v3;\n
            v20 = v4;\n
            tmp_12 = v20;\n
            v22 = v5 + (v19 >> 31) + (tmp_12 + v19 < tmp_12);\n
            v4 = v20 + v19;\n
            v5 = v22;\n
            v6 += 1;\n
        }\n
    }\n
    v7 = -15;\n
    return v7;\n
}\n
", "4205562:sub_402bfa": null, "4205568:cgc_strtoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoi(char *v6, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (*(v6) == 45)\n
        v2 = 1;\n
    v4 = cgc_strtou(&v6[v2], a0, &v3);\n
    if (v4 == -15)\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
    else if (v3 <= v2 + 2147483647)\n
    {\n
        if (v2)\n
            v0 = -(v3);\n
        else\n
            v0 = v3;\n
        *(a1) = v0;\n
        v5 = v4 + v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
}\n
", "4205770:sub_402cca": null, "4205776:cgc_list_create_node": "int cgc_list_create_node(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 12;\n
    v1[0] = cgc_malloc();\n
    if (!v1)\n
    {\n
        v2[0] = v1;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4205878:sub_402d36": null, "4205888:cgc_list_destroy_node": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy_node(struct_2 *v2, struct struct_0 **a0)\n
{\n
    unsigned int v0[3];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_10)\n
    {\n
        v0 = *(a0)->field_0;\n
        v2->field_10();\n
    }\n
    *(a0)->field_0 = 0;\n
    *(a0)->field_4 = 0;\n
    *(a0)->field_8 = 0;\n
    v0[0] = *(a0);\n
    cgc_free();\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4206017:sub_402dc1": null, "4206032:cgc_list_init": "int cgc_list_init(unsigned int v0[5], unsigned int a0)\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v0[2] = &v0[1];\n
    v0[3] = &v0[1];\n
    v0[4] = a0;\n
    return v0;\n
}\n
", "4206095:sub_402e0f": null, "4206096:cgc_list_destroy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy(unsigned int v2[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    while (cgc_list_head_node())\n
    {\n
        v1[0] = cgc_list_pop();\n
        cgc_list_destroy_node(v2, v1);\n
    }\n
    v2[0] = 0;\n
    v2[2] = 0;\n
    v2[3] = 0;\n
    v2[4] = 0;\n
    return v2;\n
}\n
", "4206235:sub_402e9b": null, "4206240:cgc_list_head_node": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_list_head_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_8;\n
    return v0;\n
}\n
", "4206294:sub_402ed6": null, "4206304:cgc_list_pop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_pop(void* v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_list_head_node(v5);\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = v2;\n
    cgc_list_remove_node(v5);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4206401:sub_402f41": null, "4206416:cgc_list_insert_before_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_list_insert_before_node(struct_0 *v0, struct_2 *a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    a0->field_4 = v0;\n
    a0->field_8 = v0->field_8;\n
    a0->field_8->field_4 = a0;\n
    v1 = a0->field_4;\n
    v1->field_8 = a0;\n
    return v1;\n
}\n
", "4206472:sub_402f88": null, "4206480:cgc_list_insert_after_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
int cgc_list_insert_after_node(struct_0 *v0, void* a0)\n
{\n
    return cgc_list_insert_before_node(v0->field_4, a0);\n
}\n
", "4206532:sub_402fc4": null, "4206544:cgc_list_insert_node_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_end(unsigned int *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_end_marker();\n
    cgc_list_insert_before_node(v1, a0);\n
    v5 = v3;\n
    *(v5) = *(v5) + 1;\n
    v6 = v2;\n
    return v3;\n
}\n
", "4206623:sub_40301f": null, "4206624:cgc_list_end_marker": "int cgc_list_end_marker(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4206638:sub_40302e": null, "4206640:cgc_list_insert_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_end(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_at_end(v3, v1);\n
}\n
", "4206709:sub_403075": null, "4206720:cgc_list_insert_node_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_start(unsigned int *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_start_marker();\n
    cgc_list_insert_after_node(v1, a0);\n
    v5 = v3;\n
    *(v5) = *(v5) + 1;\n
    v6 = v2;\n
    return v3;\n
}\n
", "4206799:sub_4030cf": null, "4206800:cgc_list_start_marker": "int cgc_list_start_marker(unsigned int v0)\n
{\n
    return cgc_list_end_marker(v0);\n
}\n
", "4206837:sub_4030f5": null, "4206848:cgc_list_insert_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_start(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_at_start(v3, v1);\n
}\n
", "4206917:sub_403145": null, "4206928:cgc_list_insert_node_sorted": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_sorted(unsigned int *v5, unsigned int *a0, struct struct_0 **a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!*(v5))\n
    {\n
        v6 = cgc_list_insert_node_at_start(v5, a0);\n
        return v6;\n
    }\n
    v4 = cgc_list_head_node(v5);\n
    while (true)\n
    {\n
        v1 = v4;\n
        v2 = 0;\n
        if (v1 != cgc_list_end_marker(v5))\n
        {\n
            v0 = a2;\n
            v2 = v0 != a1(*(a0));\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        v4 = cgc_list_next_node();\n
    }\n
    cgc_list_insert_before_node(v4, a0);\n
    v6 = v5;\n
    *(v6) = *(v6) + 1;\n
    return v5;\n
}\n
", "4207186:sub_403252": null, "4207200:cgc_list_next_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_next_node(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4207214:sub_40326e": null, "4207216:cgc_list_insert_sorted": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_sorted(unsigned int *v3, unsigned int a0, void* **a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_sorted(v3, v1, a1, a2);\n
}\n
", "4207306:sub_4032ca": null, "4207312:cgc_list_remove_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int cgc_list_remove_node(unsigned int *v2, struct_2 *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int *v3;  // eax\n
\n
    v1 = a0->field_8;\n
    v0 = a0->field_4;\n
    v1->field_4 = v0;\n
    v0->field_8 = v1;\n
    a0->field_8 = 0;\n
    a0->field_4 = 0;\n
    v3 = v2;\n
    *(v3) = *(v3) - 1;\n
    return v2;\n
}\n
", "4207395:sub_403323": null, "4207408:cgc_list_tail_node": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_list_tail_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_c)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_c;\n
    return v0;\n
}\n
", "4207462:sub_403366": null, "4207472:cgc_list_length": "int cgc_list_length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4207485:sub_40337d": null, "4207488:cgc_list_find_node_with_data": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find_node_with_data(void* v7, struct struct_1 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_list_head_node(v7);\n
    v3 = cgc_list_end_marker(v7);\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = v4 != v3;\n
        if (!(v1 & 1))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a1;\n
        if (a0(v4->field_0) == 1)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v4 = v4->field_4;\n
    }\n
}\n
", "4207674:sub_40343a": null, "4207680:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
    void* field_38;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0[15];  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[15];  // ebx\n
    unsigned int v5[15];  // eax\n
    struct_0 *v6;  // ebx\n
    unsigned int v7[15];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v3 += 12;\n
    v1 = 0;\n
    cgc_init_heap();\n
    v4 = v0;\n
    v1 = cgc_list_find_node_with_data(&v4[1 + 5], &v4[1139 + 10], v3);\n
    if (v1)\n
    {\n
        cgc_list_remove_node(&v0[1 + 5], v1);\n
    }\n
    else\n
    {\n
        if (v3 <= v0[13])\n
        {\n
            v5 = v0;\n
            v1 = v5[14];\n
            v5[13] = v5[13] - v3;\n
        }\n
        else\n
        {\n
            if (v0[13] > 12)\n
            {\n
                cgc_set_block_size(v0[14]);\n
                v6 = v0;\n
                cgc_list_insert_node_at_end(&v6[1].padding_0[20], v6->field_38);\n
                v7 = v0;\n
                v7[14] = 0;\n
                v7[13] = 0;\n
            }\n
            if (cgc_allocate(v3, 0))\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (!(v3 & 4095))\n
            {\n
                v0[13] = 0;\n
            }\n
            else\n
            {\n
                v0[13] = 0x1000 - (v3 & 4095);\n
            }\n
        }\n
        cgc_set_block_size(v1);\n
        v0[14] = v1 + v3;\n
    }\n
    cgc_list_insert_node_at_end(v0 + 1, v1);\n
    v2 = v1 + 12;\n
    return v2;\n
}\n
", "4208174:sub_40362e": null, "4208176:cgc_is_enough_room": "int cgc_is_enough_room(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 >= a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4208220:sub_40365c": null, "4208224:cgc_set_block_size": "int cgc_set_block_size(unsigned int *v0, unsigned int a0)\n
{\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4208243:sub_403673": null, "4208256:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int allocated_list;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 -= 12;\n
    cgc_list_remove_node(&allocated_list, v2);\n
    v4 = v1;\n
    return cgc_list_insert_node_at_end(v0 + 80, v2);\n
}\n
", "4208341:sub_4036d5": null, "4208352:cgc_init_heap": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_init_heap_done;\n
\n
int cgc_init_heap()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_init_heap_done)\n
    {\n
        cgc_list_init(&v0[1].padding_0[11], 0);\n
        cgc_list_init(&v0[1].padding_0[31], 0);\n
        v0->field_30 = 1;\n
        return v0;\n
    }\n
    return 0;\n
}\n
", "4208461:sub_40374d": null, "4208464:cgc_memcmp": "int cgc_memcmp(char *v5, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = v5;\n
    v2 = a0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v3[v1] == *((v2 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (v1 == a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3[v1] <= *((v2 + v1)))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4208675:sub_403823": null, "4208688:cgc_memcpy": "int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4208803:sub_4038a3": null, "4208816:cgc_memset": "int cgc_memset(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v3;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v1[v0] = a0;\n
    }\n
    v2 = a1;\n
    return v2;\n
}\n
", "4208919:sub_403917": null, "4208928:cgc_recv_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v4 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_receive(v6, v2, a1 - v3))\n
            {\n
                v5 = -11;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4209143:sub_4039f7": null, "4209152:cgc_recv_until_delim_n": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_until_delim_n(unsigned int v6, char a0, char *a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a1 && a2)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        v2 = 0;\n
        for (v2 = 0; v2 < a2; v2 += 1)\n
        {\n
            v0 = &v4;\n
            if (cgc_receive(v6, &a1[v2], 1))\n
            {\n
                v5 = -11;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 += 1;\n
            if (a0 == a1[v2])\n
                break;\n
        }\n
        if (a0 != a1[1 + v3])\n
        {\n
            v5 = -11;\n
            return v5;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4209446:sub_403b26": null, "4209456:cgc_send_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v3 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(v6, v2, a1 - v3))\n
            {\n
                v5 = -9;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -9;\n
    return v5;\n
}\n
", "4209671:sub_403c07": null, "4209680:cgc_streq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_streq(char *v4, char *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char *v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_strlen(v4, a1);\n
    if (v1 != cgc_strlen(a0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (*(v4) == a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v6 = v4;\n
        v4 = v6 + 1;\n
        v7 = *(v6);\n
        v8 = a0;\n
        a0 = v8 + 1;\n
        if (v7 != *(v8))\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4209872:cgc_strlen": "int cgc_strlen(char *v2, char a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; a0 != *(v2); v0 += 1)\n
    {\n
        v2 += 1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4209969:sub_403d31": null, "4209984:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0, char a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2) != a1)\n
        {\n
            v0 = 0;\n
            if (*(a0) != a1)\n
                v0 = *(v2) == *(a0);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    if (*(v2) == a1 && *(a0) == a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (*(v2) < *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4210199:sub_403e17": null, "4210208:cgc_vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsnprintf()\n
{\n
    unsigned int v1;  // [bp-0x50]\n
    struct_0 *v8;  // [bp-0x14]\n
    char *v9;  // [bp-0x10]\n
    char v14;  // [bp+0x10]\n
    char v15;  // [bp+0x14]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = *(&v15);\n
    if (!v8)\n
        v8 = &v14;\n
}\n
", "4211212:sub_40420c": null, "4211216:cgc_vfdprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vfdprintf()\n
{\n
    unsigned int v1;  // [bp-0x4c]\n
    char *v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    char v14;  // [bp+0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = *(&v14);\n
    if (!(!v7))\n
        goto LABEL_0x40425c;\n
    v9 = v8;\n
    return;\n
}\n
", "4212001:sub_404521": null, "4212016:cgc_snprintf": "int cgc_snprintf(unsigned int v7, unsigned int a0, char a1, char a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    char v8;  // [bp+0x18]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
\n
    v6 = v9;\n
    v5 = v10;\n
    v3 = &v8;\n
    v2 = v7;\n
    v1 = a3;\n
    v0 = v3;\n
    v4 = cgc_vsnprintf(v2, a0, a1, a2, v1);\n
    return v4;\n
}\n
", "4212128:cgc_fdprintf": "int cgc_fdprintf(unsigned int v6, char a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    char v7;  // [bp+0x14]\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
\n
    v5 = v8;\n
    v4 = v9;\n
    v2 = &v7;\n
    v1 = v6;\n
    v0 = v2;\n
    v3 = cgc_vfdprintf(v1, a0, a1, a2);\n
    return v3;\n
}\n
", "4212225:sub_404601": null, "4212240:cgc_fprintf": "int cgc_fprintf(char v4, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vfdprintf(1, v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4212329:sub_404669": null, "4212336:cgc_send_status": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_status(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_send_bytes(3, v2, 2) != 2)\n
        return cgc__terminate();\n
    return 2;\n
}\n
", "4212424:sub_4046c8": null, "4212432:cgc_process_cmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_cmd()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned short v1;  // [bp-0x10]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v2, 0, 5);\n
    v1 = 0;\n
    if (0 > cgc_recv_bytes(20, &v2, 4))\n
        cgc__terminate();\n
    if (!cgc_memcmp(v0 - 12500, &v2, 4))\n
    {\n
        cgc_cmd_seat_customers_at_table();\n
        return v1;\n
    }\n
    if (!cgc_memcmp(v0 - 12496, &v2, 4))\n
    {\n
        cgc_cmd_take_orders();\n
    }\n
    else if (!cgc_memcmp(v0 - 12492, &v2, 4))\n
    {\n
        cgc_cmd_deliver_orders();\n
    }\n
    else if (!cgc_memcmp(v0 - 12488, &v2, 4))\n
    {\n
        cgc_cmd_get_seat_count_at_table();\n
    }\n
    else if (!cgc_memcmp(v0 - 12484, &v2, 4))\n
    {\n
        cgc_cmd_get_table_status();\n
    }\n
    else if (!cgc_memcmp(v0 - 12480, &v2, 4))\n
    {\n
        cgc_cmd_clean_and_set_table();\n
    }\n
    else if (!cgc_memcmp(v0 - 12476, &v2, 4))\n
    {\n
        cgc_cmd_quit();\n
        v1 = 65534;\n
    }\n
    return v1;\n
}\n
", "4213001:sub_404909": null, "4213008:cgc_cmd_seat_customers_at_table": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_seat_customers_at_table()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    char v4;  // [bp-0xd]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (0 > cgc_recv_bytes(20, &v4, 1))\n
        cgc__terminate();\n
    for (v1 = 0; v1 < v4; v1 += 1)\n
    {\n
        v2 = cgc_malloc(156);\n
        if (!v2)\n
            cgc__terminate();\n
        if (0 > cgc_recv_bytes(20, v2, 4))\n
            cgc__terminate();\n
        cgc_append_customer_to_list(&v3);\n
    }\n
    v5 = cgc_seat_customers(v4);\n
    if (v5)\n
    {\n
        v9 = cgc_send_status(v0 - 12470);\n
        return v9;\n
    }\n
    v9 = cgc_send_status(v0 - 12472);\n
    return v9;\n
}\n
", "4213417:sub_404aa9": null, "4213424:cgc_cmd_take_orders": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_take_orders()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3[4];  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3[0] = 0;\n
    v2 = 0;\n
    v2 = cgc_take_customer_orders();\n
    if (cgc_send_bytes(3, &v2, 1) != 1)\n
        cgc__terminate();\n
    while (true)\n
    {\n
        if (0 >= v2)\n
            return 0;\n
        v3[0] = cgc_pop_order_from_list();\n
        if (!v3)\n
            return 0;\n
        if (cgc_send_bytes(3, v3, 4) != 4)\n
            cgc__terminate();\n
        if (cgc_send_bytes(3, &v3[1], 4) != 4)\n
            cgc__terminate();\n
        v0 = v3[2];\n
        if (!v0)\n
        {\n
            if (cgc_send_bytes(3, v3[3], 24) != 24)\n
                cgc__terminate();\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
            {\n
                if (cgc_send_bytes(3, v3[3], 84) != 84)\n
                    cgc__terminate();\n
            }\n
            else\n
            {\n
                if (v0 == 2 && cgc_send_bytes(3, v3[3], 24) != 24)\n
                    cgc__terminate();\n
            }\n
        }\n
        v2 -= 1;\n
    }\n
}\n
", "4214072:sub_404d38": null, "4214080:cgc_cmd_deliver_orders": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_deliver_orders()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1e]\n
    char v3;  // [bp-0x1d]\n
    unsigned int *v4;  // [bp-0x1c]\n
    unsigned int *v5;  // [bp-0x18]\n
    unsigned int *v6;  // [bp-0x14]\n
    unsigned int v7[4];  // [bp-0x10]\n
    void* v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
\n
    v9 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7[0] = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (0 > cgc_recv_bytes(20, &v2, 1))\n
        cgc__terminate();\n
    for (; 0 < v2; v2 -= 1)\n
    {\n
        v7[0] = cgc_malloc(20);\n
        if (!v7)\n
            cgc__terminate();\n
        cgc_memset(v7, 0, 20);\n
        v7[0] = 8;\n
        if (0 > cgc_recv_bytes(20, &v7[1], 4))\n
            cgc__terminate();\n
        if (0 > cgc_recv_bytes(20, &v7[2], 4))\n
            cgc__terminate();\n
        v0 = v7[2];\n
        if (!v0)\n
        {\n
            v6 = cgc_malloc(28);\n
            if (!v6)\n
                cgc__terminate();\n
            cgc_memset(v6, 0, 28);\n
            *(v6) = v7[2];\n
            if (0 > cgc_recv_bytes(20, v6 + 1, 20))\n
                cgc__terminate();\n
            cgc_print_appetizer();\n
            v7[3] = v6;\n
        }\n
        else if (v0 == 1)\n
        {\n
            v5 = cgc_malloc(88);\n
            if (!v5)\n
                cgc__terminate();\n
            cgc_memset(v5, 0, 88);\n
            *(v5) = v7[2];\n
            if (0 > cgc_recv_bytes(20, v5 + 1, 80))\n
                cgc__terminate();\n
            cgc_print_meal();\n
            v7[3] = v5;\n
        }\n
        else if (v0 != 2)\n
        {\n
            cgc_free(v7);\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v4 = cgc_malloc(28);\n
            if (!v4)\n
                cgc__terminate();\n
            cgc_memset(v4, 0, 28);\n
            *(v4) = v7[2];\n
            if (0 > cgc_recv_bytes(20, v4 + 1, 20))\n
                cgc__terminate();\n
            cgc_print_dessert();\n
            v7[3] = v4;\n
        }\n
        cgc_append_order_to_list(&v8);\n
    }\n
    v3 += cgc_deliver_customer_orders();\n
    if (v3)\n
    {\n
        v12 = cgc_send_status(v1 - 12470);\n
        return v12;\n
    }\n
    v12 = cgc_send_status(v1 - 12472);\n
    return v12;\n
}\n
", "4215250:sub_4051d2": null, "4215264:cgc_cmd_get_seat_count_at_table": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_get_seat_count_at_table()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_seats_count();\n
    if (cgc_send_bytes(3, &v1, 1) != 1)\n
        return cgc__terminate();\n
    return 1;\n
}\n
", "4215365:sub_405245": null, "4215376:cgc_cmd_get_table_status": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_get_table_status()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_table_status();\n
    if (cgc_send_bytes(3, &v1, 4) != 4)\n
        return cgc__terminate();\n
    return 4;\n
}\n
", "4215477:sub_4052b5": null, "4215488:cgc_cmd_clean_and_set_table": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_clean_and_set_table()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_table_clean_and_set();\n
    v4 = v1;\n
    return cgc_send_status(v0 - 12472);\n
}\n
", "4215538:sub_4052f2": null, "4215552:cgc_cmd_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_quit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    return cgc_send_status(v0 - 12472);\n
}\n
", "4215607:sub_405337": null, "4215616:cgc_pop_customer_from_list": "typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
int cgc_pop_customer_from_list(struct struct_0 **v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!*(v2))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = *(v2);\n
    *(v2) = v0->field_98;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4215686:sub_405386": null, "4215696:cgc_append_customer_to_list": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[148];\n
    struct struct_1 *field_98;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
int cgc_append_customer_to_list(struct_1 *v1, struct_0 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1->field_0;\n
    if (!v0)\n
    {\n
        v3 = v1;\n
        v3->field_0 = a0;\n
        return v1;\n
    }\n
    for (a0->field_98 = 0; v0->field_98; v0 = v0->field_98);\n
    v3 = v0;\n
    *((v3 + 152)) = a0;\n
    return v0;\n
}\n
", "4215812:sub_405404": null, "4215824:cgc_get_customer_list_size": "typedef struct struct_0 {\n
    char padding_0[152];\n
    struct struct_0 *field_98;\n
} struct_0;\n
\n
int cgc_get_customer_list_size(struct_0 *v2)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v2;\n
    for (v0 = 0; v1; v0 += 1)\n
    {\n
        v1 = *((v1 + 152));\n
    }\n
    return v0;\n
}\n
", "4215888:cgc_get_customer_by_id": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[148];\n
    struct struct_0 *field_98;\n
} struct_0;\n
\n
int cgc_get_customer_by_id(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a0 != *(v0))\n
        {\n
            v0 = *((v0 + 152));\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4215974:sub_4054a6": null, "4215984:cgc_clear_customer_list": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_clear_customer_list(struct struct_0 **v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_pop_customer_from_list(v4);\n
    v1 = 0;\n
    while (v2)\n
    {\n
        v1 = v2;\n
        v2 = cgc_pop_customer_from_list(v4);\n
        cgc_free(v1);\n
    }\n
    v6 = v3;\n
    return 0;\n
}\n
", "4216089:sub_405519": null, "4216096:cgc_select_appetizer": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
int cgc_select_appetizer(struct_0 *v3, struct struct_1 **a0)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = v3;\n
    v1 = *(a0) * *(a0) & 4095;\n
    v1 = v1[0x4347c000];\n
    v1 = (0 CONCAT v1) /m cgc_get_appetizer_count() >> 32;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2)\n
            v0 = 0 < v1;\n
        if (!(v0 & 1))\n
            break;\n
        v2 = v2->field_18;\n
        v1 += 1;\n
    }\n
    return v2;\n
}\n
", "4216252:sub_4055bc": null, "4216256:cgc_select_meal": "typedef struct struct_0 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_0;\n
\n
int cgc_select_meal(struct_0 *v3, struct struct_1 **a0)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = v3;\n
    v1 = *(a0) * *(a0) & 4095;\n
    v1 = v1[0x4347c000];\n
    v1 = (0 CONCAT v1) /m cgc_get_meal_count() >> 32;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2)\n
            v0 = 0 < v1;\n
        if (!(v0 & 1))\n
            break;\n
        v2 = v2->field_54;\n
        v1 += 1;\n
    }\n
    return v2;\n
}\n
", "4216412:sub_40565c": null, "4216416:cgc_select_dessert": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
int cgc_select_dessert(struct_0 *v3, struct struct_1 **a0)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = v3;\n
    v1 = *(a0) * *(a0) & 4095;\n
    v1 = v1[0x4347c000];\n
    v1 = (0 CONCAT v1) /m cgc_get_dessert_count() >> 32;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2)\n
            v0 = 0 < v1;\n
        if (!(v0 & 1))\n
            break;\n
        v2 = v2->field_18;\n
        v1 += 1;\n
    }\n
    return v2;\n
}\n
", "4216572:sub_4056fc": null, "4216576:cgc_inspect_appetizer": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int cgc_inspect_appetizer()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // edx\n
    struct_0 *v4;  // eax\n
\n
    v0 = v3;\n
    if (!v4->field_4)\n
    {\n
        v1 = 255;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4216633:sub_405739": null, "4216640:cgc_inspect_meal": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int cgc_inspect_meal()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // edx\n
    struct_0 *v4;  // eax\n
\n
    v0 = v3;\n
    if (!v4->field_4)\n
    {\n
        v1 = 255;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4216697:sub_405779": null, "4216704:cgc_inspect_dessert": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int cgc_inspect_dessert()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // edx\n
    struct_0 *v4;  // eax\n
\n
    v0 = v3;\n
    if (!v4->field_4)\n
    {\n
        v1 = 255;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4216761:sub_4057b9": null, "4216768:cgc_accept_food": "int cgc_accept_food(char *v0, char *a0, unsigned int a1)\n
{\n
    return cgc_memcpy(a0, v0, a1);\n
}\n
", "4216827:sub_4057fb": null, "4216832:cgc_print_customer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_customer(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v2 + 4;\n
    cgc_print_appetizer();\n
    v0 = v2 + 32;\n
    cgc_print_meal();\n
    v0 = v2 + 120;\n
    return cgc_print_dessert();\n
}\n
", "4216919:sub_405857": null, "4216928:cgc_menu_setup": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char todays_menu;\n
\n
int cgc_menu_setup()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&todays_menu, 0, 12);\n
    v4 = v1;\n
    return cgc_load_menu(v0 + 100, 0);\n
}\n
", "4217005:sub_4058ad": null, "4217008:cgc_get_appetizer_list": "extern unsigned int todays_menu;\n
\n
int cgc_get_appetizer_list()\n
{\n
    return todays_menu;\n
}\n
", "4217031:sub_4058c7": null, "4217040:cgc_get_meal_list": "extern unsigned int g_4141b4;\n
\n
int cgc_get_meal_list()\n
{\n
    return g_4141b4;\n
}\n
", "4217063:sub_4058e7": null, "4217072:cgc_get_dessert_list": "extern unsigned int g_4141b8;\n
\n
int cgc_get_dessert_list()\n
{\n
    return g_4141b8;\n
}\n
", "4217095:sub_405907": null, "4217104:cgc_get_appetizer_count": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
extern struct_0 *todays_menu;\n
\n
int cgc_get_appetizer_count()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = todays_menu;\n
    for (v0 = 0; v1; v0 += 1)\n
    {\n
        v1 = *((v1 + 24));\n
    }\n
    return v0;\n
}\n
", "4217180:sub_40595c": null, "4217184:cgc_get_meal_count": "typedef struct struct_0 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_0;\n
\n
extern struct_0 *g_4141b4;\n
\n
int cgc_get_meal_count()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = g_4141b4;\n
    for (v0 = 0; v1; v0 += 1)\n
    {\n
        v1 = *((v1 + 84));\n
    }\n
    return v0;\n
}\n
", "4217260:sub_4059ac": null, "4217264:cgc_get_dessert_count": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
extern struct_0 *g_4141b8;\n
\n
int cgc_get_dessert_count()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = g_4141b8;\n
    for (v0 = 0; v1; v0 += 1)\n
    {\n
        v1 = *((v1 + 24));\n
    }\n
    return v0;\n
}\n
", "4217340:sub_4059fc": null, "4217344:cgc_print_appetizer": "int cgc_print_appetizer(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4217357:sub_405a0d": null, "4217360:cgc_print_meal": "int cgc_print_meal(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4217373:sub_405a1d": null, "4217376:cgc_print_dessert": "int cgc_print_dessert(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4217389:sub_405a2d": null, "4217392:cgc_pop_order_from_list": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_pop_order_from_list(struct struct_0 **v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!*(v2))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = *(v2);\n
    *(v2) = v0->field_10;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4217459:sub_405a73": null, "4217472:cgc_append_order_to_list": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_append_order_to_list(struct_1 *v1, struct_0 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v0 = v1->field_0;\n
    if (!v0)\n
    {\n
        v3 = v1;\n
        v3->field_0 = &a0->padding_0;\n
        return v1;\n
    }\n
    for (a0->field_10 = 0; v0->field_10; v0 = v0->field_10);\n
    v3 = v0;\n
    *((v3 + 16)) = a0;\n
    return v0;\n
}\n
", "4217576:sub_405ae8": null, "4217584:cgc_get_order_list_size": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int cgc_get_order_list_size(struct_0 *v2)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v2;\n
    for (v0 = 0; v1; v0 += 1)\n
    {\n
        v1 = *((v1 + 16));\n
    }\n
    return v0;\n
}\n
", "4217645:sub_405b2d": null, "4217648:cgc_setup": "int cgc_setup()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v0 = v3;\n
    cgc_menu_setup();\n
    v4 = v0;\n
    return cgc_table_setup(*(&v1), v2);\n
}\n
", "4217687:sub_405b57": null, "4217696:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned short v1;  // [bp-0xe]\n
    void* v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_setup();\n
    do\n
    {\n
        v1 = cgc_process_cmd();\n
    } while (v1 != -2);\n
    return 0;\n
}\n
", "4217797:sub_405bc5": null, "4217808:cgc_table_setup": "typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned int field_70;\n
    unsigned int field_74;\n
    char field_78;\n
    char padding_79[3];\n
    unsigned int field_7c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char table;\n
\n
int cgc_table_setup()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    int tmp_12;  // tmp #12\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_memset(&table, 0, 16);\n
    v4 = v0;\n
    v4->field_70 = 8;\n
    v4->field_74 = 0;\n
    tmp_12 = cgc_calculate_seats_count(&table, 0);\n
    v5 = v0;\n
    v5->field_78 = tmp_12;\n
    v5->field_7c = 0;\n
    v6 = v1;\n
    return v0;\n
}\n
", "4217917:sub_405c3d": null, "4217920:cgc_calculate_seats_count": "extern unsigned int table;\n
\n
int cgc_calculate_seats_count()\n
{\n
    char *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v1 = 1;\n
    v0 = 0x4347c000;\n
    v1 = (v0[table] >> 31 CONCAT v0[table]) /m 10 >> 32;\n
    if (2 > v1)\n
        v1 += 2;\n
    return v1;\n
}\n
", "4218012:sub_405c9c": null, "4218016:cgc_table_clean_and_set": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_4141c8;\n
\n
int cgc_table_clean_and_set()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = g_4141c8;\n
    v2 = 0;\n
    v1 = cgc_get_customer_list_size(v3);\n
    while (true)\n
    {\n
        v2 = cgc_pop_customer_from_list(&v3);\n
        if (!v2)\n
            break;\n
        cgc_free(v2);\n
    }\n
    v7 = v4;\n
    return cgc_table_setup();\n
}\n
", "4218161:sub_405d31": null, "4218176:cgc_get_seats_count": "typedef struct struct_0 {\n
    char padding_0[120];\n
    char field_78;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_seats_count()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    return v0->field_78;\n
}\n
", "4218220:sub_405d6c": null, "4218224:cgc_get_table_status": "extern unsigned int g_4141c0;\n
\n
int cgc_get_table_status()\n
{\n
    return g_4141c0;\n
}\n
", "4218247:sub_405d87": null, "4218256:cgc_seat_customers": "typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_seat_customers(char v6, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (cgc_get_table_status())\n
    {\n
        cgc_clear_customer_list(&a0);\n
        v4 = -1;\n
        return v4;\n
    }\n
    for (v1 = 0; v1 < v6; v1 += 1)\n
    {\n
        v2 = cgc_pop_customer_from_list(&a0);\n
        if (!v2)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v3 = cgc_seat_customer();\n
        if (v3)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
    if (0 < v6)\n
        cgc_set_table_status();\n
    v4 = 0;\n
    return v4;\n
}\n
", "4218553:sub_405eb9": null, "4218560:cgc_seat_customer": "typedef struct struct_2 {\n
    char padding_0[124];\n
    struct struct_1 *field_7c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[152];\n
    struct struct_1 *field_98;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_seat_customer(struct_0 *v3)\n
{\n
    struct_2 *v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = v0->field_7c;\n
    if (!cgc_get_empty_seats_count())\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (!v1)\n
    {\n
        v0->field_7c = &v3->padding_0;\n
    }\n
    else\n
    {\n
        for (v3->field_98 = 0; v1->field_98; v1 = v1->field_98);\n
        *((v1 + 152)) = v3;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218765:sub_405f8d": null, "4218768:cgc_set_table_status": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_4141c0;\n
\n
int cgc_set_table_status(unsigned int v0)\n
{\n
    g_4141c0 = v0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4218797:sub_405fad": null, "4218800:cgc_take_customer_orders": "typedef struct struct_0 {\n
    char padding_0[116];\n
    unsigned int field_74;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[152];\n
    struct struct_1 *field_98;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *g_4141c8;\n
\n
int cgc_take_customer_orders(void* v4)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = g_4141c8;\n
    for (v1 = 0; v2; v2 = v2->field_98)\n
    {\n
        v1 = cgc_take_customer_order();\n
        if (v1)\n
        {\n
            cgc_append_order_to_list(v4, v1);\n
            v3 += 1;\n
        }\n
    }\n
    if (0 < v3)\n
    {\n
        cgc_set_table_status(v0->field_74 + 1);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218999:sub_406077": null, "4219008:cgc_take_customer_order": "extern unsigned int _GLOBAL_OFFSET_TABLE_[30];\n
\n
int cgc_take_customer_order(unsigned int *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[30];  // [bp-0x14]\n
    unsigned int v2[4];  // [bp-0x10]\n
    unsigned int v3[4];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v2[0] = cgc_malloc(20);\n
    if (!v2)\n
        cgc__terminate();\n
    cgc_memset(v2, 0, 20);\n
    v2[0] = v1[28];\n
    v2[1] = *(v5);\n
    v0 = v1[29];\n
    if (v0 == 1)\n
    {\n
        v2[2] = 0;\n
        v2[3] = cgc_select_appetizer(cgc_get_appetizer_list(), v5);\n
    }\n
    else if (v0 == 3)\n
    {\n
        v2[2] = 1;\n
        v2[3] = cgc_select_meal(cgc_get_meal_list(), v5);\n
    }\n
    else if (v0 == 5)\n
    {\n
        v2[2] = 2;\n
        v2[3] = cgc_select_dessert(cgc_get_dessert_list(), v5);\n
    }\n
    else\n
    {\n
        cgc_free(v2);\n
        v3[0] = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4219415:sub_406217": null, "4219424:cgc_deliver_customer_orders": "typedef struct struct_0 {\n
    char padding_0[116];\n
    unsigned int field_74;\n
    char padding_78[4];\n
    void* field_7c;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[32];\n
\n
int cgc_deliver_customer_orders(void* *v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4[4];  // [bp-0x10]\n
    char v5;  // [bp-0xa]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_[0];\n
    v6 = cgc_get_order_list_size(*(v8));\n
    v5 = 0;\n
    v4[0] = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v4[0] = cgc_pop_order_from_list(v8);\n
        if (!v4)\n
            break;\n
        v3 = cgc_get_customer_by_id(v1->field_7c, v4[1]);\n
        if (v3)\n
        {\n
            v0 = v4[3];\n
            if (!cgc_give_food_to_customer(v3, v4[2]))\n
                v5 += 1;\n
        }\n
        cgc_free(v4[3]);\n
        cgc_free(v4);\n
    }\n
    if (0 < v5)\n
    {\n
        cgc_set_table_status(v1->field_74 + 1);\n
        return v6 - v5;\n
    }\n
    return v6 - v5;\n
}\n
", "4219750:sub_406366": null, "4219760:cgc_give_food_to_customer": "typedef struct struct_1 {\n
    char padding_0[148];\n
    struct struct_0 *field_94;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_give_food_to_customer(struct_1 *v8, unsigned int a0, char *a1)\n
{\n
    char v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
    char v7;  // [bp-0x9]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v6 = 28;\n
    }\n
    else if (v4 == 1)\n
    {\n
        v6 = 88;\n
    }\n
    else if (v4 == 2)\n
    {\n
        v6 = 28;\n
    }\n
    else\n
    {\n
        v7 = 255;\n
    }\n
    a0 = cgc_get_delivery_foodtype_from_tablestatus();\n
    v2 = a0;\n
    if (!v2)\n
    {\n
        v5 = &v8->padding_0[4];\n
        v8->field_94 = v3 - 59980;\n
    }\n
    else if (v2 == 1)\n
    {\n
        v5 = &v8->padding_0[32];\n
        v8->field_94 = v3 - 59916;\n
    }\n
    else if (v2 != 2)\n
    {\n
        v7 = 255;\n
    }\n
    else\n
    {\n
        v5 = &v8->padding_0[120];\n
        v8->field_94 = v3 - 59852;\n
    }\n
    if (!v7)\n
    {\n
        cgc_accept_food(a1, v5, v6);\n
        v7 = v8->field_94(*(&v0), *(&v1));\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4220233:sub_406549": null, "4220240:cgc_get_empty_seats_count": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_empty_seats_count()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_seats_count();\n
    v2 = v1 - cgc_get_occupied_seats_count();\n
    v6 = v3;\n
    return v2;\n
}\n
", "4220309:sub_406595": null, "4220320:cgc_get_occupied_seats_count": "typedef struct struct_0 {\n
    char padding_0[152];\n
    struct struct_0 *field_98;\n
} struct_0;\n
\n
extern struct_0 *g_4141c8;\n
\n
int cgc_get_occupied_seats_count()\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x5]\n
\n
    v1 = 0;\n
    for (v0 = g_4141c8; v0; v1 += 1)\n
    {\n
        v0 = v0->field_98;\n
    }\n
    return v1;\n
}\n
", "4220406:sub_4065f6": null, "4220416:cgc_get_delivery_foodtype_from_tablestatus": "extern unsigned int g_4141c0;\n
\n
int cgc_get_delivery_foodtype_from_tablestatus(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v0 = g_4141c0;\n
    if (g_4141c0 == 2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (v0 == 4)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else if (v0 != 6)\n
    {\n
        v1 = 3;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 2;\n
        return v1;\n
    }\n
}\n
", "4220552:sub_406688": null, "4220560:cgc_load_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_load_menu(unsigned int v609)\n
{\n
    char *v0;  // [bp-0x988]\n
    char *v1;  // [bp-0x984]\n
    char *v2;  // [bp-0x980]\n
    char *v3;  // [bp-0x97c]\n
    char *v4;  // [bp-0x978]\n
    char *v5;  // [bp-0x974]\n
    char *v6;  // [bp-0x970]\n
    char *v7;  // [bp-0x96c]\n
    char *v8;  // [bp-0x968]\n
    char *v9;  // [bp-0x964]\n
    char *v10;  // [bp-0x960]\n
    char *v11;  // [bp-0x95c]\n
    char *v12;  // [bp-0x958]\n
    char *v13;  // [bp-0x954]\n
    char *v14;  // [bp-0x950]\n
    char *v15;  // [bp-0x94c]\n
    char *v16;  // [bp-0x948]\n
    char *v17;  // [bp-0x944]\n
    char *v18;  // [bp-0x940]\n
    char *v19;  // [bp-0x93c]\n
    char *v20;  // [bp-0x938]\n
    char *v21;  // [bp-0x934]\n
    char *v22;  // [bp-0x930]\n
    char *v23;  // [bp-0x92c]\n
    char *v24;  // [bp-0x928]\n
    char *v25;  // [bp-0x924]\n
    char *v26;  // [bp-0x920]\n
    char *v27;  // [bp-0x91c]\n
    char *v28;  // [bp-0x918]\n
    char *v29;  // [bp-0x914]\n
    char *v30;  // [bp-0x910]\n
    char *v31;  // [bp-0x90c]\n
    char *v32;  // [bp-0x908]\n
    char *v33;  // [bp-0x904]\n
    char *v34;  // [bp-0x900]\n
    char *v35;  // [bp-0x8fc]\n
    char *v36;  // [bp-0x8f8]\n
    char *v37;  // [bp-0x8f4]\n
    char *v38;  // [bp-0x8f0]\n
    char *v39;  // [bp-0x8ec]\n
    char *v40;  // [bp-0x8e8]\n
    char *v41;  // [bp-0x8e4]\n
    char *v42;  // [bp-0x8e0]\n
    char *v43;  // [bp-0x8dc]\n
    char *v44;  // [bp-0x8d8]\n
    char *v45;  // [bp-0x8d4]\n
    char *v46;  // [bp-0x8d0]\n
    char *v47;  // [bp-0x8cc]\n
    char *v48;  // [bp-0x8c8]\n
    char *v49;  // [bp-0x8c4]\n
    char *v50;  // [bp-0x8c0]\n
    char *v51;  // [bp-0x8bc]\n
    char *v52;  // [bp-0x8b8]\n
    char *v53;  // [bp-0x8b4]\n
    char *v54;  // [bp-0x8b0]\n
    char *v55;  // [bp-0x8ac]\n
    char *v56;  // [bp-0x8a8]\n
    char *v57;  // [bp-0x8a4]\n
    char *v58;  // [bp-0x8a0]\n
    char *v59;  // [bp-0x89c]\n
    char *v60;  // [bp-0x898]\n
    char *v61;  // [bp-0x894]\n
    char *v62;  // [bp-0x890]\n
    char *v63;  // [bp-0x88c]\n
    char *v64;  // [bp-0x888]\n
    char *v65;  // [bp-0x884]\n
    char *v66;  // [bp-0x880]\n
    char *v67;  // [bp-0x87c]\n
    char *v68;  // [bp-0x878]\n
    char *v69;  // [bp-0x874]\n
    char *v70;  // [bp-0x870]\n
    char *v71;  // [bp-0x86c]\n
    char *v72;  // [bp-0x868]\n
    char *v73;  // [bp-0x864]\n
    char *v74;  // [bp-0x860]\n
    char *v75;  // [bp-0x85c]\n
    char *v76;  // [bp-0x858]\n
    char *v77;  // [bp-0x854]\n
    char *v78;  // [bp-0x850]\n
    char *v79;  // [bp-0x84c]\n
    char *v80;  // [bp-0x848]\n
    char *v81;  // [bp-0x844]\n
    char *v82;  // [bp-0x840]\n
    char *v83;  // [bp-0x83c]\n
    char *v84;  // [bp-0x838]\n
    char *v85;  // [bp-0x834]\n
    char *v86;  // [bp-0x830]\n
    char *v87;  // [bp-0x82c]\n
    char *v88;  // [bp-0x828]\n
    char *v89;  // [bp-0x824]\n
    char *v90;  // [bp-0x820]\n
    char *v91;  // [bp-0x81c]\n
    char *v92;  // [bp-0x818]\n
    char *v93;  // [bp-0x814]\n
    char *v94;  // [bp-0x810]\n
    char *v95;  // [bp-0x80c]\n
    char *v96;  // [bp-0x808]\n
    char *v97;  // [bp-0x804]\n
    char *v98;  // [bp-0x800]\n
    char *v99;  // [bp-0x7fc]\n
    char *v100;  // [bp-0x7f8]\n
    char *v101;  // [bp-0x7f4]\n
    char *v102;  // [bp-0x7f0]\n
    char *v103;  // [bp-0x7ec]\n
    char *v104;  // [bp-0x7e8]\n
    char *v105;  // [bp-0x7e4]\n
    char *v106;  // [bp-0x7e0]\n
    char *v107;  // [bp-0x7dc]\n
    char *v108;  // [bp-0x7d8]\n
    char *v109;  // [bp-0x7d4]\n
    char *v110;  // [bp-0x7d0]\n
    char *v111;  // [bp-0x7cc]\n
    char *v112;  // [bp-0x7c8]\n
    char *v113;  // [bp-0x7c4]\n
    char *v114;  // [bp-0x7c0]\n
    char *v115;  // [bp-0x7bc]\n
    char *v116;  // [bp-0x7b8]\n
    char *v117;  // [bp-0x7b4]\n
    char *v118;  // [bp-0x7b0]\n
    char *v119;  // [bp-0x7ac]\n
    char *v120;  // [bp-0x7a8]\n
    char *v121;  // [bp-0x7a4]\n
    char *v122;  // [bp-0x7a0]\n
    char *v123;  // [bp-0x79c]\n
    char *v124;  // [bp-0x798]\n
    char *v125;  // [bp-0x794]\n
    char *v126;  // [bp-0x790]\n
    char *v127;  // [bp-0x78c]\n
    char *v128;  // [bp-0x788]\n
    char *v129;  // [bp-0x784]\n
    char *v130;  // [bp-0x780]\n
    char *v131;  // [bp-0x77c]\n
    char *v132;  // [bp-0x778]\n
    char *v133;  // [bp-0x774]\n
    char *v134;  // [bp-0x770]\n
    char *v135;  // [bp-0x76c]\n
    char *v136;  // [bp-0x768]\n
    char *v137;  // [bp-0x764]\n
    char *v138;  // [bp-0x760]\n
    char *v139;  // [bp-0x75c]\n
    char *v140;  // [bp-0x758]\n
    char *v141;  // [bp-0x754]\n
    char *v142;  // [bp-0x750]\n
    char *v143;  // [bp-0x74c]\n
    char *v144;  // [bp-0x748]\n
    char *v145;  // [bp-0x744]\n
    char *v146;  // [bp-0x740]\n
    char *v147;  // [bp-0x73c]\n
    char *v148;  // [bp-0x738]\n
    char *v149;  // [bp-0x734]\n
    char *v150;  // [bp-0x730]\n
    char *v151;  // [bp-0x72c]\n
    char *v152;  // [bp-0x728]\n
    char *v153;  // [bp-0x724]\n
    char *v154;  // [bp-0x720]\n
    char *v155;  // [bp-0x71c]\n
    char *v156;  // [bp-0x718]\n
    char *v157;  // [bp-0x714]\n
    char *v158;  // [bp-0x710]\n
    char *v159;  // [bp-0x70c]\n
    char *v160;  // [bp-0x708]\n
    char *v161;  // [bp-0x704]\n
    char *v162;  // [bp-0x700]\n
    char *v163;  // [bp-0x6fc]\n
    char *v164;  // [bp-0x6f8]\n
    char *v165;  // [bp-0x6f4]\n
    char *v166;  // [bp-0x6f0]\n
    char *v167;  // [bp-0x6ec]\n
    char *v168;  // [bp-0x6e8]\n
    char *v169;  // [bp-0x6e4]\n
    char *v170;  // [bp-0x6e0]\n
    char *v171;  // [bp-0x6dc]\n
    char *v172;  // [bp-0x6d8]\n
    char *v173;  // [bp-0x6d4]\n
    char *v174;  // [bp-0x6d0]\n
    char *v175;  // [bp-0x6cc]\n
    char *v176;  // [bp-0x6c8]\n
    char *v177;  // [bp-0x6c4]\n
    char *v178;  // [bp-0x6c0]\n
    char *v179;  // [bp-0x6bc]\n
    char *v180;  // [bp-0x6b8]\n
    char *v181;  // [bp-0x6b4]\n
    char *v182;  // [bp-0x6b0]\n
    char *v183;  // [bp-0x6ac]\n
    char *v184;  // [bp-0x6a8]\n
    char *v185;  // [bp-0x6a4]\n
    char *v186;  // [bp-0x6a0]\n
    char *v187;  // [bp-0x69c]\n
    char *v188;  // [bp-0x698]\n
    char *v189;  // [bp-0x694]\n
    char *v190;  // [bp-0x690]\n
    char *v191;  // [bp-0x68c]\n
    char *v192;  // [bp-0x688]\n
    char *v193;  // [bp-0x684]\n
    char *v194;  // [bp-0x680]\n
    char *v195;  // [bp-0x67c]\n
    char *v196;  // [bp-0x678]\n
    char *v197;  // [bp-0x674]\n
    char *v198;  // [bp-0x670]\n
    char *v199;  // [bp-0x66c]\n
    char *v200;  // [bp-0x668]\n
    char *v201;  // [bp-0x664]\n
    char *v202;  // [bp-0x660]\n
    char *v203;  // [bp-0x65c]\n
    char *v204;  // [bp-0x658]\n
    char *v205;  // [bp-0x654]\n
    char *v206;  // [bp-0x650]\n
    char *v207;  // [bp-0x64c]\n
    char *v208;  // [bp-0x648]\n
    char *v209;  // [bp-0x644]\n
    char *v210;  // [bp-0x640]\n
    char *v211;  // [bp-0x63c]\n
    char *v212;  // [bp-0x638]\n
    char *v213;  // [bp-0x634]\n
    char *v214;  // [bp-0x630]\n
    char *v215;  // [bp-0x62c]\n
    char *v216;  // [bp-0x628]\n
    char *v217;  // [bp-0x624]\n
    char *v218;  // [bp-0x620]\n
    char *v219;  // [bp-0x61c]\n
    char *v220;  // [bp-0x618]\n
    char *v221;  // [bp-0x614]\n
    char *v222;  // [bp-0x610]\n
    char *v223;  // [bp-0x60c]\n
    char *v224;  // [bp-0x608]\n
    char *v225;  // [bp-0x604]\n
    char *v226;  // [bp-0x600]\n
    char *v227;  // [bp-0x5fc]\n
    char *v228;  // [bp-0x5f8]\n
    char *v229;  // [bp-0x5f4]\n
    char *v230;  // [bp-0x5f0]\n
    char *v231;  // [bp-0x5ec]\n
    char *v232;  // [bp-0x5e8]\n
    char *v233;  // [bp-0x5e4]\n
    char *v234;  // [bp-0x5e0]\n
    char *v235;  // [bp-0x5dc]\n
    char *v236;  // [bp-0x5d8]\n
    char *v237;  // [bp-0x5d4]\n
    char *v238;  // [bp-0x5d0]\n
    char *v239;  // [bp-0x5cc]\n
    char *v240;  // [bp-0x5c8]\n
    char *v241;  // [bp-0x5c4]\n
    char *v242;  // [bp-0x5c0]\n
    char *v243;  // [bp-0x5bc]\n
    char *v244;  // [bp-0x5b8]\n
    char *v245;  // [bp-0x5b4]\n
    char *v246;  // [bp-0x5b0]\n
    char *v247;  // [bp-0x5ac]\n
    char *v248;  // [bp-0x5a8]\n
    char *v249;  // [bp-0x5a4]\n
    char *v250;  // [bp-0x5a0]\n
    char *v251;  // [bp-0x59c]\n
    char *v252;  // [bp-0x598]\n
    char *v253;  // [bp-0x594]\n
    char *v254;  // [bp-0x590]\n
    char *v255;  // [bp-0x58c]\n
    char *v256;  // [bp-0x588]\n
    char *v257;  // [bp-0x584]\n
    char *v258;  // [bp-0x580]\n
    char *v259;  // [bp-0x57c]\n
    char *v260;  // [bp-0x578]\n
    char *v261;  // [bp-0x574]\n
    char *v262;  // [bp-0x570]\n
    char *v263;  // [bp-0x56c]\n
    char *v264;  // [bp-0x568]\n
    char *v265;  // [bp-0x564]\n
    char *v266;  // [bp-0x560]\n
    char *v267;  // [bp-0x55c]\n
    char *v268;  // [bp-0x558]\n
    char *v269;  // [bp-0x554]\n
    char *v270;  // [bp-0x550]\n
    char *v271;  // [bp-0x54c]\n
    char *v272;  // [bp-0x548]\n
    char *v273;  // [bp-0x544]\n
    char *v274;  // [bp-0x540]\n
    char *v275;  // [bp-0x53c]\n
    char *v276;  // [bp-0x538]\n
    char *v277;  // [bp-0x534]\n
    char *v278;  // [bp-0x530]\n
    char *v279;  // [bp-0x52c]\n
    char *v280;  // [bp-0x528]\n
    char *v281;  // [bp-0x524]\n
    char *v282;  // [bp-0x520]\n
    char *v283;  // [bp-0x51c]\n
    char *v284;  // [bp-0x518]\n
    char *v285;  // [bp-0x514]\n
    char *v286;  // [bp-0x510]\n
    char *v287;  // [bp-0x50c]\n
    char *v288;  // [bp-0x508]\n
    char *v289;  // [bp-0x504]\n
    char *v290;  // [bp-0x500]\n
    char *v291;  // [bp-0x4fc]\n
    char *v292;  // [bp-0x4f8]\n
    char *v293;  // [bp-0x4f4]\n
    char *v294;  // [bp-0x4f0]\n
    char *v295;  // [bp-0x4ec]\n
    char *v296;  // [bp-0x4e8]\n
    char *v297;  // [bp-0x4e4]\n
    char *v298;  // [bp-0x4e0]\n
    char *v299;  // [bp-0x4dc]\n
    char *v300;  // [bp-0x4d8]\n
    char *v301;  // [bp-0x4d4]\n
    char *v302;  // [bp-0x4d0]\n
    char *v303;  // [bp-0x4cc]\n
    char *v304;  // [bp-0x4c8]\n
    char *v305;  // [bp-0x4c4]\n
    char *v306;  // [bp-0x4c0]\n
    char *v307;  // [bp-0x4bc]\n
    char *v308;  // [bp-0x4b8]\n
    char *v309;  // [bp-0x4b4]\n
    char *v310;  // [bp-0x4b0]\n
    char *v311;  // [bp-0x4ac]\n
    char *v312;  // [bp-0x4a8]\n
    char *v313;  // [bp-0x4a4]\n
    char *v314;  // [bp-0x4a0]\n
    char *v315;  // [bp-0x49c]\n
    char *v316;  // [bp-0x498]\n
    char *v317;  // [bp-0x494]\n
    char *v318;  // [bp-0x490]\n
    char *v319;  // [bp-0x48c]\n
    char *v320;  // [bp-0x488]\n
    char *v321;  // [bp-0x484]\n
    char *v322;  // [bp-0x480]\n
    char *v323;  // [bp-0x47c]\n
    char *v324;  // [bp-0x478]\n
    char *v325;  // [bp-0x474]\n
    char *v326;  // [bp-0x470]\n
    char *v327;  // [bp-0x46c]\n
    char *v328;  // [bp-0x468]\n
    char *v329;  // [bp-0x464]\n
    char *v330;  // [bp-0x460]\n
    char *v331;  // [bp-0x45c]\n
    char *v332;  // [bp-0x458]\n
    char *v333;  // [bp-0x454]\n
    char *v334;  // [bp-0x450]\n
    char *v335;  // [bp-0x44c]\n
    char *v336;  // [bp-0x448]\n
    char *v337;  // [bp-0x444]\n
    char *v338;  // [bp-0x440]\n
    char *v339;  // [bp-0x43c]\n
    char *v340;  // [bp-0x438]\n
    char *v341;  // [bp-0x434]\n
    char *v342;  // [bp-0x430]\n
    char *v343;  // [bp-0x42c]\n
    char *v344;  // [bp-0x428]\n
    char *v345;  // [bp-0x424]\n
    char *v346;  // [bp-0x420]\n
    char *v347;  // [bp-0x41c]\n
    char *v348;  // [bp-0x418]\n
    char *v349;  // [bp-0x414]\n
    char *v350;  // [bp-0x410]\n
    char *v351;  // [bp-0x40c]\n
    char *v352;  // [bp-0x408]\n
    char *v353;  // [bp-0x404]\n
    char *v354;  // [bp-0x400]\n
    char *v355;  // [bp-0x3fc]\n
    char *v356;  // [bp-0x3f8]\n
    char *v357;  // [bp-0x3f4]\n
    char *v358;  // [bp-0x3f0]\n
    char *v359;  // [bp-0x3ec]\n
    char *v360;  // [bp-0x3e8]\n
    char *v361;  // [bp-0x3e4]\n
    char *v362;  // [bp-0x3e0]\n
    char *v363;  // [bp-0x3dc]\n
    char *v364;  // [bp-0x3d8]\n
    char *v365;  // [bp-0x3d4]\n
    char *v366;  // [bp-0x3d0]\n
    char *v367;  // [bp-0x3cc]\n
    char *v368;  // [bp-0x3c8]\n
    char *v369;  // [bp-0x3c4]\n
    char *v370;  // [bp-0x3c0]\n
    char *v371;  // [bp-0x3bc]\n
    char *v372;  // [bp-0x3b8]\n
    char *v373;  // [bp-0x3b4]\n
    char *v374;  // [bp-0x3b0]\n
    char *v375;  // [bp-0x3ac]\n
    char *v376;  // [bp-0x3a8]\n
    char *v377;  // [bp-0x3a4]\n
    char *v378;  // [bp-0x3a0]\n
    char *v379;  // [bp-0x39c]\n
    char *v380;  // [bp-0x398]\n
    char *v381;  // [bp-0x394]\n
    char *v382;  // [bp-0x390]\n
    char *v383;  // [bp-0x38c]\n
    char *v384;  // [bp-0x388]\n
    char *v385;  // [bp-0x384]\n
    char *v386;  // [bp-0x380]\n
    char *v387;  // [bp-0x37c]\n
    char *v388;  // [bp-0x378]\n
    char *v389;  // [bp-0x374]\n
    char *v390;  // [bp-0x370]\n
    char *v391;  // [bp-0x36c]\n
    char *v392;  // [bp-0x368]\n
    char *v393;  // [bp-0x364]\n
    char *v394;  // [bp-0x360]\n
    char *v395;  // [bp-0x35c]\n
    char *v396;  // [bp-0x358]\n
    char *v397;  // [bp-0x354]\n
    char *v398;  // [bp-0x350]\n
    char *v399;  // [bp-0x34c]\n
    char *v400;  // [bp-0x348]\n
    char *v401;  // [bp-0x344]\n
    char *v402;  // [bp-0x340]\n
    char *v403;  // [bp-0x33c]\n
    char *v404;  // [bp-0x338]\n
    char *v405;  // [bp-0x334]\n
    char *v406;  // [bp-0x330]\n
    char *v407;  // [bp-0x32c]\n
    char *v408;  // [bp-0x328]\n
    char *v409;  // [bp-0x324]\n
    char *v410;  // [bp-0x320]\n
    char *v411;  // [bp-0x31c]\n
    char *v412;  // [bp-0x318]\n
    char *v413;  // [bp-0x314]\n
    char *v414;  // [bp-0x310]\n
    char *v415;  // [bp-0x30c]\n
    char *v416;  // [bp-0x308]\n
    char *v417;  // [bp-0x304]\n
    char *v418;  // [bp-0x300]\n
    char *v419;  // [bp-0x2fc]\n
    char *v420;  // [bp-0x2f8]\n
    char *v421;  // [bp-0x2f4]\n
    char *v422;  // [bp-0x2f0]\n
    char *v423;  // [bp-0x2ec]\n
    char *v424;  // [bp-0x2e8]\n
    char *v425;  // [bp-0x2e4]\n
    char *v426;  // [bp-0x2e0]\n
    char *v427;  // [bp-0x2dc]\n
    char *v428;  // [bp-0x2d8]\n
    char *v429;  // [bp-0x2d4]\n
    char *v430;  // [bp-0x2d0]\n
    char *v431;  // [bp-0x2cc]\n
    char *v432;  // [bp-0x2c8]\n
    char *v433;  // [bp-0x2c4]\n
    char *v434;  // [bp-0x2c0]\n
    char *v435;  // [bp-0x2bc]\n
    char *v436;  // [bp-0x2b8]\n
    char *v437;  // [bp-0x2b4]\n
    char *v438;  // [bp-0x2b0]\n
    char *v439;  // [bp-0x2ac]\n
    char *v440;  // [bp-0x2a8]\n
    char *v441;  // [bp-0x2a4]\n
    char *v442;  // [bp-0x2a0]\n
    char *v443;  // [bp-0x29c]\n
    char *v444;  // [bp-0x298]\n
    char *v445;  // [bp-0x294]\n
    char *v446;  // [bp-0x290]\n
    char *v447;  // [bp-0x28c]\n
    char *v448;  // [bp-0x288]\n
    char *v449;  // [bp-0x284]\n
    char *v450;  // [bp-0x280]\n
    char *v451;  // [bp-0x27c]\n
    char *v452;  // [bp-0x278]\n
    char *v453;  // [bp-0x274]\n
    char *v454;  // [bp-0x270]\n
    char *v455;  // [bp-0x26c]\n
    char *v456;  // [bp-0x268]\n
    char *v457;  // [bp-0x264]\n
    char *v458;  // [bp-0x260]\n
    char *v459;  // [bp-0x25c]\n
    char *v460;  // [bp-0x258]\n
    char *v461;  // [bp-0x254]\n
    char *v462;  // [bp-0x250]\n
    char *v463;  // [bp-0x24c]\n
    char *v464;  // [bp-0x248]\n
    char *v465;  // [bp-0x244]\n
    char *v466;  // [bp-0x240]\n
    char *v467;  // [bp-0x23c]\n
    char *v468;  // [bp-0x238]\n
    char *v469;  // [bp-0x234]\n
    char *v470;  // [bp-0x230]\n
    char *v471;  // [bp-0x22c]\n
    char *v472;  // [bp-0x228]\n
    char *v473;  // [bp-0x224]\n
    char *v474;  // [bp-0x220]\n
    char *v475;  // [bp-0x21c]\n
    char *v476;  // [bp-0x218]\n
    char *v477;  // [bp-0x214]\n
    char *v478;  // [bp-0x210]\n
    char *v479;  // [bp-0x20c]\n
    char *v480;  // [bp-0x208]\n
    char *v481;  // [bp-0x204]\n
    char *v482;  // [bp-0x200]\n
    char *v483;  // [bp-0x1fc]\n
    char *v484;  // [bp-0x1f8]\n
    char *v485;  // [bp-0x1f4]\n
    char *v486;  // [bp-0x1f0]\n
    char *v487;  // [bp-0x1ec]\n
    char *v488;  // [bp-0x1e8]\n
    char *v489;  // [bp-0x1e4]\n
    char *v490;  // [bp-0x1e0]\n
    char *v491;  // [bp-0x1dc]\n
    char *v492;  // [bp-0x1d8]\n
    char *v493;  // [bp-0x1d4]\n
    char *v494;  // [bp-0x1d0]\n
    char *v495;  // [bp-0x1cc]\n
    char *v496;  // [bp-0x1c8]\n
    char *v497;  // [bp-0x1c4]\n
    char *v498;  // [bp-0x1c0]\n
    char *v499;  // [bp-0x1bc]\n
    char *v500;  // [bp-0x1b8]\n
    char *v501;  // [bp-0x1b4]\n
    char *v502;  // [bp-0x1b0]\n
    char *v503;  // [bp-0x1ac]\n
    char *v504;  // [bp-0x1a8]\n
    char *v505;  // [bp-0x1a4]\n
    char *v506;  // [bp-0x1a0]\n
    char *v507;  // [bp-0x19c]\n
    char *v508;  // [bp-0x198]\n
    char *v509;  // [bp-0x194]\n
    char *v510;  // [bp-0x190]\n
    char *v511;  // [bp-0x18c]\n
    char *v512;  // [bp-0x188]\n
    char *v513;  // [bp-0x184]\n
    char *v514;  // [bp-0x180]\n
    char *v515;  // [bp-0x17c]\n
    char *v516;  // [bp-0x178]\n
    char *v517;  // [bp-0x174]\n
    char *v518;  // [bp-0x170]\n
    char *v519;  // [bp-0x16c]\n
    char *v520;  // [bp-0x168]\n
    char *v521;  // [bp-0x164]\n
    char *v522;  // [bp-0x160]\n
    char *v523;  // [bp-0x15c]\n
    char *v524;  // [bp-0x158]\n
    char *v525;  // [bp-0x154]\n
    char *v526;  // [bp-0x150]\n
    char *v527;  // [bp-0x14c]\n
    char *v528;  // [bp-0x148]\n
    char *v529;  // [bp-0x144]\n
    char *v530;  // [bp-0x140]\n
    char *v531;  // [bp-0x13c]\n
    char *v532;  // [bp-0x138]\n
    char *v533;  // [bp-0x134]\n
    char *v534;  // [bp-0x130]\n
    char *v535;  // [bp-0x12c]\n
    char *v536;  // [bp-0x128]\n
    char *v537;  // [bp-0x124]\n
    char *v538;  // [bp-0x120]\n
    char *v539;  // [bp-0x11c]\n
    char *v540;  // [bp-0x118]\n
    char *v541;  // [bp-0x114]\n
    char *v542;  // [bp-0x110]\n
    char *v543;  // [bp-0x10c]\n
    char *v544;  // [bp-0x108]\n
    char *v545;  // [bp-0x104]\n
    char *v546;  // [bp-0x100]\n
    char *v547;  // [bp-0xfc]\n
    char *v548;  // [bp-0xf8]\n
    char *v549;  // [bp-0xf4]\n
    char *v550;  // [bp-0xf0]\n
    char *v551;  // [bp-0xec]\n
    char *v552;  // [bp-0xe8]\n
    char *v553;  // [bp-0xe4]\n
    char *v554;  // [bp-0xe0]\n
    char *v555;  // [bp-0xdc]\n
    char *v556;  // [bp-0xd8]\n
    char *v557;  // [bp-0xd4]\n
    char *v558;  // [bp-0xd0]\n
    char *v559;  // [bp-0xcc]\n
    char *v560;  // [bp-0xc8]\n
    char *v561;  // [bp-0xc4]\n
    char *v562;  // [bp-0xc0]\n
    char *v563;  // [bp-0xbc]\n
    char *v564;  // [bp-0xb8]\n
    char *v565;  // [bp-0xb4]\n
    char *v566;  // [bp-0xb0]\n
    char *v567;  // [bp-0xac]\n
    char *v568;  // [bp-0xa8]\n
    char *v569;  // [bp-0xa4]\n
    char *v570;  // [bp-0xa0]\n
    char *v571;  // [bp-0x9c]\n
    char *v572;  // [bp-0x98]\n
    char *v573;  // [bp-0x94]\n
    char *v574;  // [bp-0x90]\n
    char *v575;  // [bp-0x8c]\n
    char *v576;  // [bp-0x88]\n
    char *v577;  // [bp-0x84]\n
    char *v578;  // [bp-0x80]\n
    char *v579;  // [bp-0x7c]\n
    char *v580;  // [bp-0x78]\n
    char *v581;  // [bp-0x74]\n
    char *v582;  // [bp-0x70]\n
    char *v583;  // [bp-0x6c]\n
    char *v584;  // [bp-0x68]\n
    char *v585;  // [bp-0x64]\n
    char *v586;  // [bp-0x60]\n
    char *v587;  // [bp-0x5c]\n
    char *v588;  // [bp-0x58]\n
    char *v589;  // [bp-0x54]\n
    char *v590;  // [bp-0x50]\n
    char *v591;  // [bp-0x4c]\n
    char *v592;  // [bp-0x48]\n
    char *v593;  // [bp-0x44]\n
    char *v594;  // [bp-0x40]\n
    char *v595;  // [bp-0x3c]\n
    char *v596;  // [bp-0x38]\n
    char *v597;  // [bp-0x34]\n
    char *v598;  // [bp-0x30]\n
    char *v599;  // [bp-0x2c]\n
    unsigned int v600;  // [bp-0x28]\n
    char *v601;  // [bp-0x24], Other Possible Types: void*\n
    char *v602;  // [bp-0x20], Other Possible Types: void*\n
    char *v603;  // [bp-0x1c], Other Possible Types: void*\n
    char *v604;  // [bp-0x18], Other Possible Types: void*\n
    unsigned int *v605;  // [bp-0x14]\n
    unsigned int *v606;  // [bp-0x10]\n
    unsigned int *v607;  // [bp-0xc]\n
    unsigned int v608;  // [bp-0x8]\n
    unsigned int v610;  // ebx\n
    unsigned int v611;  // ebx\n
\n
    v608 = v610;\n
    v600 = &_GLOBAL_OFFSET_TABLE_;\n
    v607 = 0;\n
    v606 = 0;\n
    v605 = 0;\n
    v604 = 0;\n
    v603 = 0;\n
    v602 = 0;\n
    v601 = 0;\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12468;\n
    v598 = &v607[1];\n
    v599 = v604;\n
    cgc_memcpy(v598, v599, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12459;\n
    v596 = &v607[1];\n
    v597 = v604;\n
    cgc_memcpy(v596, v597, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12451;\n
    v594 = &v607[1];\n
    v595 = v604;\n
    cgc_memcpy(v594, v595, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12433;\n
    v592 = &v607[1];\n
    v593 = v604;\n
    cgc_memcpy(v592, v593, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12426;\n
    v590 = &v607[1];\n
    v591 = v604;\n
    cgc_memcpy(v590, v591, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12415;\n
    v588 = &v607[1];\n
    v589 = v604;\n
    cgc_memcpy(v588, v589, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12402;\n
    v586 = &v607[1];\n
    v587 = v604;\n
    cgc_memcpy(v586, v587, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12393;\n
    v584 = &v607[1];\n
    v585 = v604;\n
    cgc_memcpy(v584, v585, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12384;\n
    v582 = &v607[1];\n
    v583 = v604;\n
    cgc_memcpy(v582, v583, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12364;\n
    v580 = &v607[1];\n
    v581 = v604;\n
    cgc_memcpy(v580, v581, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12345;\n
    v578 = &v607[1];\n
    v579 = v604;\n
    cgc_memcpy(v578, v579, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12336;\n
    v576 = &v607[1];\n
    v577 = v604;\n
    cgc_memcpy(v576, v577, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12323;\n
    v574 = &v607[1];\n
    v575 = v604;\n
    cgc_memcpy(v574, v575, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12314;\n
    v572 = &v607[1];\n
    v573 = v604;\n
    cgc_memcpy(v572, v573, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12306;\n
    v570 = &v607[1];\n
    v571 = v604;\n
    cgc_memcpy(v570, v571, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12301;\n
    v568 = &v607[1];\n
    v569 = v604;\n
    cgc_memcpy(v568, v569, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12287;\n
    v566 = &v607[1];\n
    v567 = v604;\n
    cgc_memcpy(v566, v567, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12281;\n
    v564 = &v607[1];\n
    v565 = v604;\n
    cgc_memcpy(v564, v565, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12271;\n
    v562 = &v607[1];\n
    v563 = v604;\n
    cgc_memcpy(v562, v563, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12264;\n
    v560 = &v607[1];\n
    v561 = v604;\n
    cgc_memcpy(v560, v561, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12256;\n
    v558 = &v607[1];\n
    v559 = v604;\n
    cgc_memcpy(v558, v559, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12237;\n
    v556 = &v607[1];\n
    v557 = v604;\n
    cgc_memcpy(v556, v557, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12222;\n
    v554 = &v607[1];\n
    v555 = v604;\n
    cgc_memcpy(v554, v555, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12208;\n
    v552 = &v607[1];\n
    v553 = v604;\n
    cgc_memcpy(v552, v553, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12204;\n
    v550 = &v607[1];\n
    v551 = v604;\n
    cgc_memcpy(v550, v551, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12200;\n
    v548 = &v607[1];\n
    v549 = v604;\n
    cgc_memcpy(v548, v549, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12195;\n
    v546 = &v607[1];\n
    v547 = v604;\n
    cgc_memcpy(v546, v547, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12178;\n
    v544 = &v607[1];\n
    v545 = v604;\n
    cgc_memcpy(v544, v545, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12175;\n
    v542 = &v607[1];\n
    v543 = v604;\n
    cgc_memcpy(v542, v543, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12158;\n
    v540 = &v607[1];\n
    v541 = v604;\n
    cgc_memcpy(v540, v541, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12151;\n
    v538 = &v607[1];\n
    v539 = v604;\n
    cgc_memcpy(v538, v539, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12133;\n
    v536 = &v607[1];\n
    v537 = v604;\n
    cgc_memcpy(v536, v537, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12122;\n
    v534 = &v607[1];\n
    v535 = v604;\n
    cgc_memcpy(v534, v535, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12108;\n
    v532 = &v607[1];\n
    v533 = v604;\n
    cgc_memcpy(v532, v533, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12105;\n
    v530 = &v607[1];\n
    v531 = v604;\n
    cgc_memcpy(v530, v531, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 9711;\n
    v528 = &v607[1];\n
    v529 = v604;\n
    cgc_memcpy(v528, v529, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12091;\n
    v526 = &v607[1];\n
    v527 = v604;\n
    cgc_memcpy(v526, v527, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12075;\n
    v524 = &v607[1];\n
    v525 = v604;\n
    cgc_memcpy(v524, v525, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12066;\n
    v522 = &v607[1];\n
    v523 = v604;\n
    cgc_memcpy(v522, v523, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12062;\n
    v520 = &v607[1];\n
    v521 = v604;\n
    cgc_memcpy(v520, v521, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12056;\n
    v518 = &v607[1];\n
    v519 = v604;\n
    cgc_memcpy(v518, v519, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12051;\n
    v516 = &v607[1];\n
    v517 = v604;\n
    cgc_memcpy(v516, v517, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12042;\n
    v514 = &v607[1];\n
    v515 = v604;\n
    cgc_memcpy(v514, v515, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12037;\n
    v512 = &v607[1];\n
    v513 = v604;\n
    cgc_memcpy(v512, v513, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12031;\n
    v510 = &v607[1];\n
    v511 = v604;\n
    cgc_memcpy(v510, v511, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12020;\n
    v508 = &v607[1];\n
    v509 = v604;\n
    cgc_memcpy(v508, v509, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 12005;\n
    v506 = &v607[1];\n
    v507 = v604;\n
    cgc_memcpy(v506, v507, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 11994;\n
    v504 = &v607[1];\n
    v505 = v604;\n
    cgc_memcpy(v504, v505, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 11981;\n
    v502 = &v607[1];\n
    v503 = v604;\n
    cgc_memcpy(v502, v503, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v607 = cgc_malloc(28);\n
    if (!v607)\n
        cgc__terminate();\n
    cgc_memset(v607, 0, 28);\n
    *(v607) = 0;\n
    v604 = v600 - 11977;\n
    v500 = &v607[1];\n
    v501 = v604;\n
    cgc_memcpy(v500, v501, cgc_strlen(v604, 0));\n
    cgc_add_appetizer(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11969;\n
    v492 = &v606[1];\n
    v493 = v604;\n
    cgc_memcpy(v492, v493, cgc_strlen(v604, 0));\n
    v603 = v600 - 11966;\n
    v494 = &v606[6];\n
    v495 = v603;\n
    cgc_memcpy(v494, v495, cgc_strlen(v603, 0));\n
    v602 = v600 - 11948;\n
    v496 = &v606[11];\n
    v497 = v602;\n
    cgc_memcpy(v496, v497, cgc_strlen(v602, 0));\n
    v601 = v600 - 11928;\n
    v498 = &v606[16];\n
    v499 = v601;\n
    cgc_memcpy(v498, v499, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11923;\n
    v484 = &v606[1];\n
    v485 = v604;\n
    cgc_memcpy(v484, v485, cgc_strlen(v604, 0));\n
    v603 = v600 - 11916;\n
    v486 = &v606[6];\n
    v487 = v603;\n
    cgc_memcpy(v486, v487, cgc_strlen(v603, 0));\n
    v602 = v600 - 11901;\n
    v488 = &v606[11];\n
    v489 = v602;\n
    cgc_memcpy(v488, v489, cgc_strlen(v602, 0));\n
    v601 = v600 - 11892;\n
    v490 = &v606[16];\n
    v491 = v601;\n
    cgc_memcpy(v490, v491, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11887;\n
    v476 = &v606[1];\n
    v477 = v604;\n
    cgc_memcpy(v476, v477, cgc_strlen(v604, 0));\n
    v603 = v600 - 11878;\n
    v478 = &v606[6];\n
    v479 = v603;\n
    cgc_memcpy(v478, v479, cgc_strlen(v603, 0));\n
    v602 = v600 - 11863;\n
    v480 = &v606[11];\n
    v481 = v602;\n
    cgc_memcpy(v480, v481, cgc_strlen(v602, 0));\n
    v601 = v600 - 11843;\n
    v482 = &v606[16];\n
    v483 = v601;\n
    cgc_memcpy(v482, v483, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11835;\n
    v468 = &v606[1];\n
    v469 = v604;\n
    cgc_memcpy(v468, v469, cgc_strlen(v604, 0));\n
    v603 = v600 - 11799;\n
    v470 = &v606[6];\n
    v471 = v603;\n
    cgc_memcpy(v470, v471, cgc_strlen(v603, 0));\n
    v602 = v600 - 11821;\n
    v472 = &v606[11];\n
    v473 = v602;\n
    cgc_memcpy(v472, v473, cgc_strlen(v602, 0));\n
    v601 = v600 - 10311;\n
    v474 = &v606[16];\n
    v475 = v601;\n
    cgc_memcpy(v474, v475, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11818;\n
    v460 = &v606[1];\n
    v461 = v604;\n
    cgc_memcpy(v460, v461, cgc_strlen(v604, 0));\n
    v603 = v600 - 11815;\n
    v462 = &v606[6];\n
    v463 = v603;\n
    cgc_memcpy(v462, v463, cgc_strlen(v603, 0));\n
    v602 = v600 - 11797;\n
    v464 = &v606[11];\n
    v465 = v602;\n
    cgc_memcpy(v464, v465, cgc_strlen(v602, 0));\n
    v601 = v600 - 11781;\n
    v466 = &v606[16];\n
    v467 = v601;\n
    cgc_memcpy(v466, v467, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11763;\n
    v452 = &v606[1];\n
    v453 = v604;\n
    cgc_memcpy(v452, v453, cgc_strlen(v604, 0));\n
    v603 = v600 - 11756;\n
    v454 = &v606[6];\n
    v455 = v603;\n
    cgc_memcpy(v454, v455, cgc_strlen(v603, 0));\n
    v602 = v600 - 11736;\n
    v456 = &v606[11];\n
    v457 = v602;\n
    cgc_memcpy(v456, v457, cgc_strlen(v602, 0));\n
    v601 = v600 - 11728;\n
    v458 = &v606[16];\n
    v459 = v601;\n
    cgc_memcpy(v458, v459, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11714;\n
    v444 = &v606[1];\n
    v445 = v604;\n
    cgc_memcpy(v444, v445, cgc_strlen(v604, 0));\n
    v603 = v600 - 11707;\n
    v446 = &v606[6];\n
    v447 = v603;\n
    cgc_memcpy(v446, v447, cgc_strlen(v603, 0));\n
    v602 = v600 - 11689;\n
    v448 = &v606[11];\n
    v449 = v602;\n
    cgc_memcpy(v448, v449, cgc_strlen(v602, 0));\n
    v601 = v600 - 11675;\n
    v450 = &v606[16];\n
    v451 = v601;\n
    cgc_memcpy(v450, v451, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11657;\n
    v436 = &v606[1];\n
    v437 = v604;\n
    cgc_memcpy(v436, v437, cgc_strlen(v604, 0));\n
    v603 = v600 - 9545;\n
    v438 = &v606[6];\n
    v439 = v603;\n
    cgc_memcpy(v438, v439, cgc_strlen(v603, 0));\n
    v602 = v600 - 11638;\n
    v440 = &v606[11];\n
    v441 = v602;\n
    cgc_memcpy(v440, v441, cgc_strlen(v602, 0));\n
    v601 = v600 - 11621;\n
    v442 = &v606[16];\n
    v443 = v601;\n
    cgc_memcpy(v442, v443, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11613;\n
    v428 = &v606[1];\n
    v429 = v604;\n
    cgc_memcpy(v428, v429, cgc_strlen(v604, 0));\n
    v603 = v600 - 11609;\n
    v430 = &v606[6];\n
    v431 = v603;\n
    cgc_memcpy(v430, v431, cgc_strlen(v603, 0));\n
    v602 = v600 - 11605;\n
    v432 = &v606[11];\n
    v433 = v602;\n
    cgc_memcpy(v432, v433, cgc_strlen(v602, 0));\n
    v601 = v600 - 10106;\n
    v434 = &v606[16];\n
    v435 = v601;\n
    cgc_memcpy(v434, v435, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11594;\n
    v420 = &v606[1];\n
    v421 = v604;\n
    cgc_memcpy(v420, v421, cgc_strlen(v604, 0));\n
    v603 = v600 - 11587;\n
    v422 = &v606[6];\n
    v423 = v603;\n
    cgc_memcpy(v422, v423, cgc_strlen(v603, 0));\n
    v602 = v600 - 11569;\n
    v424 = &v606[11];\n
    v425 = v602;\n
    cgc_memcpy(v424, v425, cgc_strlen(v602, 0));\n
    v601 = v600 - 11557;\n
    v426 = &v606[16];\n
    v427 = v601;\n
    cgc_memcpy(v426, v427, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11548;\n
    v412 = &v606[1];\n
    v413 = v604;\n
    cgc_memcpy(v412, v413, cgc_strlen(v604, 0));\n
    v603 = v600 - 11545;\n
    v414 = &v606[6];\n
    v415 = v603;\n
    cgc_memcpy(v414, v415, cgc_strlen(v603, 0));\n
    v602 = v600 - 11542;\n
    v416 = &v606[11];\n
    v417 = v602;\n
    cgc_memcpy(v416, v417, cgc_strlen(v602, 0));\n
    v601 = v600 - 11527;\n
    v418 = &v606[16];\n
    v419 = v601;\n
    cgc_memcpy(v418, v419, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11513;\n
    v404 = &v606[1];\n
    v405 = v604;\n
    cgc_memcpy(v404, v405, cgc_strlen(v604, 0));\n
    v603 = v600 - 11508;\n
    v406 = &v606[6];\n
    v407 = v603;\n
    cgc_memcpy(v406, v407, cgc_strlen(v603, 0));\n
    v602 = v600 - 10308;\n
    v408 = &v606[11];\n
    v409 = v602;\n
    cgc_memcpy(v408, v409, cgc_strlen(v602, 0));\n
    v601 = v600 - 11489;\n
    v410 = &v606[16];\n
    v411 = v601;\n
    cgc_memcpy(v410, v411, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11482;\n
    v396 = &v606[1];\n
    v397 = v604;\n
    cgc_memcpy(v396, v397, cgc_strlen(v604, 0));\n
    v603 = v600 - 11765;\n
    v398 = &v606[6];\n
    v399 = v603;\n
    cgc_memcpy(v398, v399, cgc_strlen(v603, 0));\n
    v602 = v600 - 11470;\n
    v400 = &v606[11];\n
    v401 = v602;\n
    cgc_memcpy(v400, v401, cgc_strlen(v602, 0));\n
    v601 = v600 - 11465;\n
    v402 = &v606[16];\n
    v403 = v601;\n
    cgc_memcpy(v402, v403, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11456;\n
    v388 = &v606[1];\n
    v389 = v604;\n
    cgc_memcpy(v388, v389, cgc_strlen(v604, 0));\n
    v603 = v600 - 11446;\n
    v390 = &v606[6];\n
    v391 = v603;\n
    cgc_memcpy(v390, v391, cgc_strlen(v603, 0));\n
    v602 = v600 - 11432;\n
    v392 = &v606[11];\n
    v393 = v602;\n
    cgc_memcpy(v392, v393, cgc_strlen(v602, 0));\n
    v601 = v600 - 11427;\n
    v394 = &v606[16];\n
    v395 = v601;\n
    cgc_memcpy(v394, v395, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11424;\n
    v380 = &v606[1];\n
    v381 = v604;\n
    cgc_memcpy(v380, v381, cgc_strlen(v604, 0));\n
    v603 = v600 - 11412;\n
    v382 = &v606[6];\n
    v383 = v603;\n
    cgc_memcpy(v382, v383, cgc_strlen(v603, 0));\n
    v602 = v600 - 11400;\n
    v384 = &v606[11];\n
    v385 = v602;\n
    cgc_memcpy(v384, v385, cgc_strlen(v602, 0));\n
    v601 = v600 - 11394;\n
    v386 = &v606[16];\n
    v387 = v601;\n
    cgc_memcpy(v386, v387, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11382;\n
    v372 = &v606[1];\n
    v373 = v604;\n
    cgc_memcpy(v372, v373, cgc_strlen(v604, 0));\n
    v603 = v600 - 11365;\n
    v374 = &v606[6];\n
    v375 = v603;\n
    cgc_memcpy(v374, v375, cgc_strlen(v603, 0));\n
    v602 = v600 - 11348;\n
    v376 = &v606[11];\n
    v377 = v602;\n
    cgc_memcpy(v376, v377, cgc_strlen(v602, 0));\n
    v601 = v600 - 11335;\n
    v378 = &v606[16];\n
    v379 = v601;\n
    cgc_memcpy(v378, v379, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11322;\n
    v364 = &v606[1];\n
    v365 = v604;\n
    cgc_memcpy(v364, v365, cgc_strlen(v604, 0));\n
    v603 = v600 - 12404;\n
    v366 = &v606[6];\n
    v367 = v603;\n
    cgc_memcpy(v366, v367, cgc_strlen(v603, 0));\n
    v602 = v600 - 10403;\n
    v368 = &v606[11];\n
    v369 = v602;\n
    cgc_memcpy(v368, v369, cgc_strlen(v602, 0));\n
    v601 = v600 - 11318;\n
    v370 = &v606[16];\n
    v371 = v601;\n
    cgc_memcpy(v370, v371, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11308;\n
    v356 = &v606[1];\n
    v357 = v604;\n
    cgc_memcpy(v356, v357, cgc_strlen(v604, 0));\n
    v603 = v600 - 11194;\n
    v358 = &v606[6];\n
    v359 = v603;\n
    cgc_memcpy(v358, v359, cgc_strlen(v603, 0));\n
    v602 = v600 - 11301;\n
    v360 = &v606[11];\n
    v361 = v602;\n
    cgc_memcpy(v360, v361, cgc_strlen(v602, 0));\n
    v601 = v600 - 11286;\n
    v362 = &v606[16];\n
    v363 = v601;\n
    cgc_memcpy(v362, v363, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11266;\n
    v348 = &v606[1];\n
    v349 = v604;\n
    cgc_memcpy(v348, v349, cgc_strlen(v604, 0));\n
    v603 = v600 - 11246;\n
    v350 = &v606[6];\n
    v351 = v603;\n
    cgc_memcpy(v350, v351, cgc_strlen(v603, 0));\n
    v602 = v600 - 11229;\n
    v352 = &v606[11];\n
    v353 = v602;\n
    cgc_memcpy(v352, v353, cgc_strlen(v602, 0));\n
    v601 = v600 - 11209;\n
    v354 = &v606[16];\n
    v355 = v601;\n
    cgc_memcpy(v354, v355, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10106;\n
    v340 = &v606[1];\n
    v341 = v604;\n
    cgc_memcpy(v340, v341, cgc_strlen(v604, 0));\n
    v603 = v600 - 11192;\n
    v342 = &v606[6];\n
    v343 = v603;\n
    cgc_memcpy(v342, v343, cgc_strlen(v603, 0));\n
    v602 = v600 - 11177;\n
    v344 = &v606[11];\n
    v345 = v602;\n
    cgc_memcpy(v344, v345, cgc_strlen(v602, 0));\n
    v601 = v600 - 11160;\n
    v346 = &v606[16];\n
    v347 = v601;\n
    cgc_memcpy(v346, v347, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11144;\n
    v332 = &v606[1];\n
    v333 = v604;\n
    cgc_memcpy(v332, v333, cgc_strlen(v604, 0));\n
    v603 = v600 - 11131;\n
    v334 = &v606[6];\n
    v335 = v603;\n
    cgc_memcpy(v334, v335, cgc_strlen(v603, 0));\n
    v602 = v600 - 11122;\n
    v336 = &v606[11];\n
    v337 = v602;\n
    cgc_memcpy(v336, v337, cgc_strlen(v602, 0));\n
    v601 = v600 - 11113;\n
    v338 = &v606[16];\n
    v339 = v601;\n
    cgc_memcpy(v338, v339, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11110;\n
    v324 = &v606[1];\n
    v325 = v604;\n
    cgc_memcpy(v324, v325, cgc_strlen(v604, 0));\n
    v603 = v600 - 11106;\n
    v326 = &v606[6];\n
    v327 = v603;\n
    cgc_memcpy(v326, v327, cgc_strlen(v603, 0));\n
    v602 = v600 - 11101;\n
    v328 = &v606[11];\n
    v329 = v602;\n
    cgc_memcpy(v328, v329, cgc_strlen(v602, 0));\n
    v601 = v600 - 11086;\n
    v330 = &v606[16];\n
    v331 = v601;\n
    cgc_memcpy(v330, v331, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11075;\n
    v316 = &v606[1];\n
    v317 = v604;\n
    cgc_memcpy(v316, v317, cgc_strlen(v604, 0));\n
    v603 = v600 - 11069;\n
    v318 = &v606[6];\n
    v319 = v603;\n
    cgc_memcpy(v318, v319, cgc_strlen(v603, 0));\n
    v602 = v600 - 11057;\n
    v320 = &v606[11];\n
    v321 = v602;\n
    cgc_memcpy(v320, v321, cgc_strlen(v602, 0));\n
    v601 = v600 - 11050;\n
    v322 = &v606[16];\n
    v323 = v601;\n
    cgc_memcpy(v322, v323, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11035;\n
    v308 = &v606[1];\n
    v309 = v604;\n
    cgc_memcpy(v308, v309, cgc_strlen(v604, 0));\n
    v603 = v600 - 11028;\n
    v310 = &v606[6];\n
    v311 = v603;\n
    cgc_memcpy(v310, v311, cgc_strlen(v603, 0));\n
    v602 = v600 - 11019;\n
    v312 = &v606[11];\n
    v313 = v602;\n
    cgc_memcpy(v312, v313, cgc_strlen(v602, 0));\n
    v601 = v600 - 11014;\n
    v314 = &v606[16];\n
    v315 = v601;\n
    cgc_memcpy(v314, v315, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11002;\n
    v300 = &v606[1];\n
    v301 = v604;\n
    cgc_memcpy(v300, v301, cgc_strlen(v604, 0));\n
    v603 = v600 - 10987;\n
    v302 = &v606[6];\n
    v303 = v603;\n
    cgc_memcpy(v302, v303, cgc_strlen(v603, 0));\n
    v602 = v600 - 10976;\n
    v304 = &v606[11];\n
    v305 = v602;\n
    cgc_memcpy(v304, v305, cgc_strlen(v602, 0));\n
    v601 = v600 - 10967;\n
    v306 = &v606[16];\n
    v307 = v601;\n
    cgc_memcpy(v306, v307, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10950;\n
    v292 = &v606[1];\n
    v293 = v604;\n
    cgc_memcpy(v292, v293, cgc_strlen(v604, 0));\n
    v603 = v600 - 10935;\n
    v294 = &v606[6];\n
    v295 = v603;\n
    cgc_memcpy(v294, v295, cgc_strlen(v603, 0));\n
    v602 = v600 - 10928;\n
    v296 = &v606[11];\n
    v297 = v602;\n
    cgc_memcpy(v296, v297, cgc_strlen(v602, 0));\n
    v601 = v600 - 10917;\n
    v298 = &v606[16];\n
    v299 = v601;\n
    cgc_memcpy(v298, v299, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10899;\n
    v284 = &v606[1];\n
    v285 = v604;\n
    cgc_memcpy(v284, v285, cgc_strlen(v604, 0));\n
    v603 = v600 - 10894;\n
    v286 = &v606[6];\n
    v287 = v603;\n
    cgc_memcpy(v286, v287, cgc_strlen(v603, 0));\n
    v602 = v600 - 10884;\n
    v288 = &v606[11];\n
    v289 = v602;\n
    cgc_memcpy(v288, v289, cgc_strlen(v602, 0));\n
    v601 = v600 - 10865;\n
    v290 = &v606[16];\n
    v291 = v601;\n
    cgc_memcpy(v290, v291, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10859;\n
    v276 = &v606[1];\n
    v277 = v604;\n
    cgc_memcpy(v276, v277, cgc_strlen(v604, 0));\n
    v603 = v600 - 10839;\n
    v278 = &v606[6];\n
    v279 = v603;\n
    cgc_memcpy(v278, v279, cgc_strlen(v603, 0));\n
    v602 = v600 - 10821;\n
    v280 = &v606[11];\n
    v281 = v602;\n
    cgc_memcpy(v280, v281, cgc_strlen(v602, 0));\n
    v601 = v600 - 10809;\n
    v282 = &v606[16];\n
    v283 = v601;\n
    cgc_memcpy(v282, v283, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10792;\n
    v268 = &v606[1];\n
    v269 = v604;\n
    cgc_memcpy(v268, v269, cgc_strlen(v604, 0));\n
    v603 = v600 - 10776;\n
    v270 = &v606[6];\n
    v271 = v603;\n
    cgc_memcpy(v270, v271, cgc_strlen(v603, 0));\n
    v602 = v600 - 10768;\n
    v272 = &v606[11];\n
    v273 = v602;\n
    cgc_memcpy(v272, v273, cgc_strlen(v602, 0));\n
    v601 = v600 - 10751;\n
    v274 = &v606[16];\n
    v275 = v601;\n
    cgc_memcpy(v274, v275, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10740;\n
    v260 = &v606[1];\n
    v261 = v604;\n
    cgc_memcpy(v260, v261, cgc_strlen(v604, 0));\n
    v603 = v600 - 10724;\n
    v262 = &v606[6];\n
    v263 = v603;\n
    cgc_memcpy(v262, v263, cgc_strlen(v603, 0));\n
    v602 = v600 - 10719;\n
    v264 = &v606[11];\n
    v265 = v602;\n
    cgc_memcpy(v264, v265, cgc_strlen(v602, 0));\n
    v601 = v600 - 10704;\n
    v266 = &v606[16];\n
    v267 = v601;\n
    cgc_memcpy(v266, v267, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10145;\n
    v252 = &v606[1];\n
    v253 = v604;\n
    cgc_memcpy(v252, v253, cgc_strlen(v604, 0));\n
    v603 = v600 - 10697;\n
    v254 = &v606[6];\n
    v255 = v603;\n
    cgc_memcpy(v254, v255, cgc_strlen(v603, 0));\n
    v602 = v600 - 10683;\n
    v256 = &v606[11];\n
    v257 = v602;\n
    cgc_memcpy(v256, v257, cgc_strlen(v602, 0));\n
    v601 = v600 - 10667;\n
    v258 = &v606[16];\n
    v259 = v601;\n
    cgc_memcpy(v258, v259, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10661;\n
    v244 = &v606[1];\n
    v245 = v604;\n
    cgc_memcpy(v244, v245, cgc_strlen(v604, 0));\n
    v603 = v600 - 10644;\n
    v246 = &v606[6];\n
    v247 = v603;\n
    cgc_memcpy(v246, v247, cgc_strlen(v603, 0));\n
    v602 = v600 - 10639;\n
    v248 = &v606[11];\n
    v249 = v602;\n
    cgc_memcpy(v248, v249, cgc_strlen(v602, 0));\n
    v601 = v600 - 10634;\n
    v250 = &v606[16];\n
    v251 = v601;\n
    cgc_memcpy(v250, v251, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10620;\n
    v236 = &v606[1];\n
    v237 = v604;\n
    cgc_memcpy(v236, v237, cgc_strlen(v604, 0));\n
    v603 = v600 - 10600;\n
    v238 = &v606[6];\n
    v239 = v603;\n
    cgc_memcpy(v238, v239, cgc_strlen(v603, 0));\n
    v602 = v600 - 10588;\n
    v240 = &v606[11];\n
    v241 = v602;\n
    cgc_memcpy(v240, v241, cgc_strlen(v602, 0));\n
    v601 = v600 - 10573;\n
    v242 = &v606[16];\n
    v243 = v601;\n
    cgc_memcpy(v242, v243, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10566;\n
    v228 = &v606[1];\n
    v229 = v604;\n
    cgc_memcpy(v228, v229, cgc_strlen(v604, 0));\n
    v603 = v600 - 9767;\n
    v230 = &v606[6];\n
    v231 = v603;\n
    cgc_memcpy(v230, v231, cgc_strlen(v603, 0));\n
    v602 = v600 - 10552;\n
    v232 = &v606[11];\n
    v233 = v602;\n
    cgc_memcpy(v232, v233, cgc_strlen(v602, 0));\n
    v601 = v600 - 10532;\n
    v234 = &v606[16];\n
    v235 = v601;\n
    cgc_memcpy(v234, v235, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10522;\n
    v220 = &v606[1];\n
    v221 = v604;\n
    cgc_memcpy(v220, v221, cgc_strlen(v604, 0));\n
    v603 = v600 - 10517;\n
    v222 = &v606[6];\n
    v223 = v603;\n
    cgc_memcpy(v222, v223, cgc_strlen(v603, 0));\n
    v602 = v600 - 10497;\n
    v224 = &v606[11];\n
    v225 = v602;\n
    cgc_memcpy(v224, v225, cgc_strlen(v602, 0));\n
    v601 = v600 - 10485;\n
    v226 = &v606[16];\n
    v227 = v601;\n
    cgc_memcpy(v226, v227, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10469;\n
    v212 = &v606[1];\n
    v213 = v604;\n
    cgc_memcpy(v212, v213, cgc_strlen(v604, 0));\n
    v603 = v600 - 10450;\n
    v214 = &v606[6];\n
    v215 = v603;\n
    cgc_memcpy(v214, v215, cgc_strlen(v603, 0));\n
    v602 = v600 - 10444;\n
    v216 = &v606[11];\n
    v217 = v602;\n
    cgc_memcpy(v216, v217, cgc_strlen(v602, 0));\n
    v601 = v600 - 10440;\n
    v218 = &v606[16];\n
    v219 = v601;\n
    cgc_memcpy(v218, v219, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10420;\n
    v204 = &v606[1];\n
    v205 = v604;\n
    cgc_memcpy(v204, v205, cgc_strlen(v604, 0));\n
    v603 = v600 - 10401;\n
    v206 = &v606[6];\n
    v207 = v603;\n
    cgc_memcpy(v206, v207, cgc_strlen(v603, 0));\n
    v602 = v600 - 10391;\n
    v208 = &v606[11];\n
    v209 = v602;\n
    cgc_memcpy(v208, v209, cgc_strlen(v602, 0));\n
    v601 = v600 - 10376;\n
    v210 = &v606[16];\n
    v211 = v601;\n
    cgc_memcpy(v210, v211, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10359;\n
    v196 = &v606[1];\n
    v197 = v604;\n
    cgc_memcpy(v196, v197, cgc_strlen(v604, 0));\n
    v603 = v600 - 10348;\n
    v198 = &v606[6];\n
    v199 = v603;\n
    cgc_memcpy(v198, v199, cgc_strlen(v603, 0));\n
    v602 = v600 - 10342;\n
    v200 = &v606[11];\n
    v201 = v602;\n
    cgc_memcpy(v200, v201, cgc_strlen(v602, 0));\n
    v601 = v600 - 10326;\n
    v202 = &v606[16];\n
    v203 = v601;\n
    cgc_memcpy(v202, v203, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10309;\n
    v188 = &v606[1];\n
    v189 = v604;\n
    cgc_memcpy(v188, v189, cgc_strlen(v604, 0));\n
    v603 = v600 - 10306;\n
    v190 = &v606[6];\n
    v191 = v603;\n
    cgc_memcpy(v190, v191, cgc_strlen(v603, 0));\n
    v602 = v600 - 10293;\n
    v192 = &v606[11];\n
    v193 = v602;\n
    cgc_memcpy(v192, v193, cgc_strlen(v602, 0));\n
    v601 = v600 - 10279;\n
    v194 = &v606[16];\n
    v195 = v601;\n
    cgc_memcpy(v194, v195, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10272;\n
    v180 = &v606[1];\n
    v181 = v604;\n
    cgc_memcpy(v180, v181, cgc_strlen(v604, 0));\n
    v603 = v600 - 10269;\n
    v182 = &v606[6];\n
    v183 = v603;\n
    cgc_memcpy(v182, v183, cgc_strlen(v603, 0));\n
    v602 = v600 - 10257;\n
    v184 = &v606[11];\n
    v185 = v602;\n
    cgc_memcpy(v184, v185, cgc_strlen(v602, 0));\n
    v601 = v600 - 10244;\n
    v186 = &v606[16];\n
    v187 = v601;\n
    cgc_memcpy(v186, v187, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10229;\n
    v172 = &v606[1];\n
    v173 = v604;\n
    cgc_memcpy(v172, v173, cgc_strlen(v604, 0));\n
    v603 = v600 - 10219;\n
    v174 = &v606[6];\n
    v175 = v603;\n
    cgc_memcpy(v174, v175, cgc_strlen(v603, 0));\n
    v602 = v600 - 9513;\n
    v176 = &v606[11];\n
    v177 = v602;\n
    cgc_memcpy(v176, v177, cgc_strlen(v602, 0));\n
    v601 = v600 - 10209;\n
    v178 = &v606[16];\n
    v179 = v601;\n
    cgc_memcpy(v178, v179, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10202;\n
    v164 = &v606[1];\n
    v165 = v604;\n
    cgc_memcpy(v164, v165, cgc_strlen(v604, 0));\n
    v603 = v600 - 10198;\n
    v166 = &v606[6];\n
    v167 = v603;\n
    cgc_memcpy(v166, v167, cgc_strlen(v603, 0));\n
    v602 = v600 - 10188;\n
    v168 = &v606[11];\n
    v169 = v602;\n
    cgc_memcpy(v168, v169, cgc_strlen(v602, 0));\n
    v601 = v600 - 10173;\n
    v170 = &v606[16];\n
    v171 = v601;\n
    cgc_memcpy(v170, v171, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 11491;\n
    v156 = &v606[1];\n
    v157 = v604;\n
    cgc_memcpy(v156, v157, cgc_strlen(v604, 0));\n
    v603 = v600 - 10165;\n
    v158 = &v606[6];\n
    v159 = v603;\n
    cgc_memcpy(v158, v159, cgc_strlen(v603, 0));\n
    v602 = v600 - 10159;\n
    v160 = &v606[11];\n
    v161 = v602;\n
    cgc_memcpy(v160, v161, cgc_strlen(v602, 0));\n
    v601 = v600 - 10143;\n
    v162 = &v606[16];\n
    v163 = v601;\n
    cgc_memcpy(v162, v163, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10139;\n
    v148 = &v606[1];\n
    v149 = v604;\n
    cgc_memcpy(v148, v149, cgc_strlen(v604, 0));\n
    v603 = v600 - 10121;\n
    v150 = &v606[6];\n
    v151 = v603;\n
    cgc_memcpy(v150, v151, cgc_strlen(v603, 0));\n
    v602 = v600 - 10104;\n
    v152 = &v606[11];\n
    v153 = v602;\n
    cgc_memcpy(v152, v153, cgc_strlen(v602, 0));\n
    v601 = v600 - 10092;\n
    v154 = &v606[16];\n
    v155 = v601;\n
    cgc_memcpy(v154, v155, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10078;\n
    v140 = &v606[1];\n
    v141 = v604;\n
    cgc_memcpy(v140, v141, cgc_strlen(v604, 0));\n
    v603 = v600 - 10072;\n
    v142 = &v606[6];\n
    v143 = v603;\n
    cgc_memcpy(v142, v143, cgc_strlen(v603, 0));\n
    v602 = v600 - 10060;\n
    v144 = &v606[11];\n
    v145 = v602;\n
    cgc_memcpy(v144, v145, cgc_strlen(v602, 0));\n
    v601 = v600 - 10052;\n
    v146 = &v606[16];\n
    v147 = v601;\n
    cgc_memcpy(v146, v147, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10042;\n
    v132 = &v606[1];\n
    v133 = v604;\n
    cgc_memcpy(v132, v133, cgc_strlen(v604, 0));\n
    v603 = v600 - 10146;\n
    v134 = &v606[6];\n
    v135 = v603;\n
    cgc_memcpy(v134, v135, cgc_strlen(v603, 0));\n
    v602 = v600 - 10035;\n
    v136 = &v606[11];\n
    v137 = v602;\n
    cgc_memcpy(v136, v137, cgc_strlen(v602, 0));\n
    v601 = v600 - 10015;\n
    v138 = &v606[16];\n
    v139 = v601;\n
    cgc_memcpy(v138, v139, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 10007;\n
    v124 = &v606[1];\n
    v125 = v604;\n
    cgc_memcpy(v124, v125, cgc_strlen(v604, 0));\n
    v603 = v600 - 9993;\n
    v126 = &v606[6];\n
    v127 = v603;\n
    cgc_memcpy(v126, v127, cgc_strlen(v603, 0));\n
    v602 = v600 - 9975;\n
    v128 = &v606[11];\n
    v129 = v602;\n
    cgc_memcpy(v128, v129, cgc_strlen(v602, 0));\n
    v601 = v600 - 9960;\n
    v130 = &v606[16];\n
    v131 = v601;\n
    cgc_memcpy(v130, v131, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 9947;\n
    v116 = &v606[1];\n
    v117 = v604;\n
    cgc_memcpy(v116, v117, cgc_strlen(v604, 0));\n
    v603 = v600 - 9933;\n
    v118 = &v606[6];\n
    v119 = v603;\n
    cgc_memcpy(v118, v119, cgc_strlen(v603, 0));\n
    v602 = v600 - 9919;\n
    v120 = &v606[11];\n
    v121 = v602;\n
    cgc_memcpy(v120, v121, cgc_strlen(v602, 0));\n
    v601 = v600 - 9906;\n
    v122 = &v606[16];\n
    v123 = v601;\n
    cgc_memcpy(v122, v123, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 9897;\n
    v108 = &v606[1];\n
    v109 = v604;\n
    cgc_memcpy(v108, v109, cgc_strlen(v604, 0));\n
    v603 = v600 - 9893;\n
    v110 = &v606[6];\n
    v111 = v603;\n
    cgc_memcpy(v110, v111, cgc_strlen(v603, 0));\n
    v602 = v600 - 9466;\n
    v112 = &v606[11];\n
    v113 = v602;\n
    cgc_memcpy(v112, v113, cgc_strlen(v602, 0));\n
    v601 = v600 - 9886;\n
    v114 = &v606[16];\n
    v115 = v601;\n
    cgc_memcpy(v114, v115, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v606 = cgc_malloc(88);\n
    if (!v606)\n
        cgc__terminate();\n
    cgc_memset(v606, 0, 88);\n
    *(v606) = 1;\n
    v604 = v600 - 9874;\n
    v100 = &v606[1];\n
    v101 = v604;\n
    cgc_memcpy(v100, v101, cgc_strlen(v604, 0));\n
    v603 = v600 - 9855;\n
    v102 = &v606[6];\n
    v103 = v603;\n
    cgc_memcpy(v102, v103, cgc_strlen(v603, 0));\n
    v602 = v600 - 9850;\n
    v104 = &v606[11];\n
    v105 = v602;\n
    cgc_memcpy(v104, v105, cgc_strlen(v602, 0));\n
    v601 = v600 - 9836;\n
    v106 = &v606[16];\n
    v107 = v601;\n
    cgc_memcpy(v106, v107, cgc_strlen(v601, 0));\n
    cgc_add_meal(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9830;\n
    v98 = &v605[1];\n
    v99 = v604;\n
    cgc_memcpy(v98, v99, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9810;\n
    v96 = &v605[1];\n
    v97 = v604;\n
    cgc_memcpy(v96, v97, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9797;\n
    v94 = &v605[1];\n
    v95 = v604;\n
    cgc_memcpy(v94, v95, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9782;\n
    v92 = &v605[1];\n
    v93 = v604;\n
    cgc_memcpy(v92, v93, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9779;\n
    v90 = &v605[1];\n
    v91 = v604;\n
    cgc_memcpy(v90, v91, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9764;\n
    v88 = &v605[1];\n
    v89 = v604;\n
    cgc_memcpy(v88, v89, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9753;\n
    v86 = &v605[1];\n
    v87 = v604;\n
    cgc_memcpy(v86, v87, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9745;\n
    v84 = &v605[1];\n
    v85 = v604;\n
    cgc_memcpy(v84, v85, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9730;\n
    v82 = &v605[1];\n
    v83 = v604;\n
    cgc_memcpy(v82, v83, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9721;\n
    v80 = &v605[1];\n
    v81 = v604;\n
    cgc_memcpy(v80, v81, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9709;\n
    v78 = &v605[1];\n
    v79 = v604;\n
    cgc_memcpy(v78, v79, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9698;\n
    v76 = &v605[1];\n
    v77 = v604;\n
    cgc_memcpy(v76, v77, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9678;\n
    v74 = &v605[1];\n
    v75 = v604;\n
    cgc_memcpy(v74, v75, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9666;\n
    v72 = &v605[1];\n
    v73 = v604;\n
    cgc_memcpy(v72, v73, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9650;\n
    v70 = &v605[1];\n
    v71 = v604;\n
    cgc_memcpy(v70, v71, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9639;\n
    v68 = &v605[1];\n
    v69 = v604;\n
    cgc_memcpy(v68, v69, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9624;\n
    v66 = &v605[1];\n
    v67 = v604;\n
    cgc_memcpy(v66, v67, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9617;\n
    v64 = &v605[1];\n
    v65 = v604;\n
    cgc_memcpy(v64, v65, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9607;\n
    v62 = &v605[1];\n
    v63 = v604;\n
    cgc_memcpy(v62, v63, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9595;\n
    v60 = &v605[1];\n
    v61 = v604;\n
    cgc_memcpy(v60, v61, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9575;\n
    v58 = &v605[1];\n
    v59 = v604;\n
    cgc_memcpy(v58, v59, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9557;\n
    v56 = &v605[1];\n
    v57 = v604;\n
    cgc_memcpy(v56, v57, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9550;\n
    v54 = &v605[1];\n
    v55 = v604;\n
    cgc_memcpy(v54, v55, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9543;\n
    v52 = &v605[1];\n
    v53 = v604;\n
    cgc_memcpy(v52, v53, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9531;\n
    v50 = &v605[1];\n
    v51 = v604;\n
    cgc_memcpy(v50, v51, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9511;\n
    v48 = &v605[1];\n
    v49 = v604;\n
    cgc_memcpy(v48, v49, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9491;\n
    v46 = &v605[1];\n
    v47 = v604;\n
    cgc_memcpy(v46, v47, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 10175;\n
    v44 = &v605[1];\n
    v45 = v604;\n
    cgc_memcpy(v44, v45, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9482;\n
    v42 = &v605[1];\n
    v43 = v604;\n
    cgc_memcpy(v42, v43, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9477;\n
    v40 = &v605[1];\n
    v41 = v604;\n
    cgc_memcpy(v40, v41, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9471;\n
    v38 = &v605[1];\n
    v39 = v604;\n
    cgc_memcpy(v38, v39, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9463;\n
    v36 = &v605[1];\n
    v37 = v604;\n
    cgc_memcpy(v36, v37, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9448;\n
    v34 = &v605[1];\n
    v35 = v604;\n
    cgc_memcpy(v34, v35, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9433;\n
    v32 = &v605[1];\n
    v33 = v604;\n
    cgc_memcpy(v32, v33, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9426;\n
    v30 = &v605[1];\n
    v31 = v604;\n
    cgc_memcpy(v30, v31, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9410;\n
    v28 = &v605[1];\n
    v29 = v604;\n
    cgc_memcpy(v28, v29, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9397;\n
    v26 = &v605[1];\n
    v27 = v604;\n
    cgc_memcpy(v26, v27, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9383;\n
    v24 = &v605[1];\n
    v25 = v604;\n
    cgc_memcpy(v24, v25, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9373;\n
    v22 = &v605[1];\n
    v23 = v604;\n
    cgc_memcpy(v22, v23, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9363;\n
    v20 = &v605[1];\n
    v21 = v604;\n
    cgc_memcpy(v20, v21, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9357;\n
    v18 = &v605[1];\n
    v19 = v604;\n
    cgc_memcpy(v18, v19, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9352;\n
    v16 = &v605[1];\n
    v17 = v604;\n
    cgc_memcpy(v16, v17, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9337;\n
    v14 = &v605[1];\n
    v15 = v604;\n
    cgc_memcpy(v14, v15, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9331;\n
    v12 = &v605[1];\n
    v13 = v604;\n
    cgc_memcpy(v12, v13, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9328;\n
    v10 = &v605[1];\n
    v11 = v604;\n
    cgc_memcpy(v10, v11, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9324;\n
    v8 = &v605[1];\n
    v9 = v604;\n
    cgc_memcpy(v8, v9, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9311;\n
    v6 = &v605[1];\n
    v7 = v604;\n
    cgc_memcpy(v6, v7, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 12325;\n
    v4 = &v605[1];\n
    v5 = v604;\n
    cgc_memcpy(v4, v5, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9293;\n
    v2 = &v605[1];\n
    v3 = v604;\n
    cgc_memcpy(v2, v3, cgc_strlen(v604, 0));\n
    cgc_add_dessert(v609);\n
    v605 = cgc_malloc(28);\n
    if (!v605)\n
        cgc__terminate();\n
    cgc_memset(v605, 0, 28);\n
    *(v605) = 2;\n
    v604 = v600 - 9287;\n
    v0 = &v605[1];\n
    v1 = v604;\n
    cgc_memcpy(v0, v1, cgc_strlen(v604, 0));\n
    v611 = v608;\n
    return cgc_add_dessert(v609);\n
}\n
", "4261905:sub_410811": null, "4261920:cgc_add_appetizer": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[20];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
int cgc_add_appetizer(struct_0 *v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    if (!v0)\n
    {\n
        v3 = v1;\n
        v3->field_0 = a0;\n
        return v1;\n
    }\n
    for (v0 = v1->field_0; v0->field_18; v0 = v0->field_18);\n
    v3 = v0;\n
    *((v3 + 24)) = a0;\n
    return v0;\n
}\n
", "4262014:sub_41087e": null, "4262016:cgc_add_meal": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[76];\n
    struct struct_0 *field_54;\n
} struct_0;\n
\n
int cgc_add_meal(struct_0 *v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    if (!v0)\n
    {\n
        v3 = v1;\n
        v3->field_4 = a0;\n
        return v1;\n
    }\n
    for (v0 = v1->field_4; v0->field_54; v0 = v0->field_54);\n
    v3 = v0;\n
    *((v3 + 84)) = a0;\n
    return v0;\n
}\n
", "4262112:cgc_add_dessert": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_0;\n
\n
int cgc_add_dessert(struct_0 *v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    if (!v0)\n
    {\n
        v3 = v1;\n
        v3->field_8 = a0;\n
        return v1;\n
    }\n
    for (v0 = v1->field_8; v0->field_18; v0 = v0->field_18);\n
    v3 = v0;\n
    *((v3 + 24)) = a0;\n
    return v0;\n
}\n
", "4262208:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}