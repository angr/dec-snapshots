{"4202496:_init": "extern struct_0 *g_408118;\n
\n
int _init()\n
{\n
    if (g_408118)\n
    {\n
        g_408118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24623;\n
    v6 = v5 + 31;\n
    v7 = v5 + 31;\n
    if (v7 == v6)\n
        return v5 + 31;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 24559;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 31;\n
    v9 = (v6 + 31 - (v6 + 31) >> 31) + (31 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_bitset_init": "int cgc_bitset_init(unsigned int *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int *v3;  // ecx\n
\n
    v2 = a0;\n
    v3 = v1;\n
    *(v3) = v2;\n
    v0 = v2 + 7 >> 3;\n
    return cgc_memset(v3 + 1, 0);\n
}\n
", "4203028:sub_402214": null, "4203040:cgc_bitset_clear": "int cgc_bitset_clear(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v2;  // eax\n
\n
    v2 = v1;\n
    v0 = *(v2) + 7 >> 3;\n
    return cgc_memset(v2 + 1, 0);\n
}\n
", "4203088:cgc_bitset_set_bit": "int cgc_bitset_set_bit(unsigned int *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int *v2;  // esi\n
    unsigned int v3;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = -1;\n
    if (*(v2) >= v1)\n
    {\n
        *(4 + v2 + v1 / 8) = *(4 + v2 + v1 / 8) | (1 << (v1 & 7 & 31));\n
        v3 = 0;\n
    }\n
    return v3;\n
}\n
", "4203129:sub_402279": null, "4203136:cgc_bitset_clear_bit": "int cgc_bitset_clear_bit(unsigned int *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int *v2;  // esi\n
    unsigned int v3;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = -1;\n
    if (*(v2) >= v1)\n
    {\n
        *(4 + v2 + v1 / 8) = *(4 + v2 + v1 / 8) & ~((1 << (v1 & 7 & 31)));\n
        v3 = 0;\n
    }\n
    return v3;\n
}\n
", "4203179:sub_4022ab": null, "4203184:cgc_bitset_get_bit": "int cgc_bitset_get_bit(unsigned int *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = -1;\n
    if (*(v0) >= a0)\n
        v1 = *(4 + v0 + (a0 >> 3)) >> (a0 & 7 & 31) & 1;\n
    return v1;\n
}\n
", "4203220:sub_4022d4": null, "4203232:cgc_bitset_find_first": "int cgc_bitset_find_first(unsigned int *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // esi\n
    void* v3;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = *(v0);\n
    if (!v1)\n
        return -1;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if ((*(4 + v0 + (v3 >> 3)) >> (v3 & 7 & 31) & 1) == a0)\n
            return v3;\n
        v3 += 1;\n
        if (v1 == v3)\n
            return -1;\n
    }\n
}\n
", "4203304:sub_402328": null, "4203312:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203328:cgc_ishexdigit": "int cgc_ishexdigit(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return (v1 & -33) - 65 < 6 | v1 - 48 < 10;\n
}\n
", "4203359:sub_40235f": null, "4203360:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203379:sub_402373": null, "4203392:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203408:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203424:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 - 32;\n
    return v1;\n
}\n
", "4203441:sub_4023b1": null, "4203456:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 + 32;\n
    return v1;\n
}\n
", "4203473:sub_4023d1": null, "4203488:cgc_todigit": "int cgc_todigit(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    if (v1 >= v2)\n
    {\n
        return 0;\n
    }\n
    else if (v2 - 2 > 14)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        *(&v1) = (v1 <= 9 ? v1 + 87 : v1 + 48);\n
        return v1;\n
    }\n
}\n
", "4203526:sub_402406": null, "4203536:cgc_fromdigit": "int cgc_fromdigit(char v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edx\n
\n
    v1 = a0;\n
    v2 = -1;\n
    if (v1 - 17 >= -15)\n
    {\n
        v3 = v0;\n
        v5 = v3 * 0x1000000;\n
        v6 = (v3 - 91 < -26 ? v5 : v5 + 0x20000000);\n
        v7 = v6 >> 24;\n
        v8 = v7 - 48;\n
        v9 = (v8 < 10 ? v8 : v7 - 87);\n
        v2 = (v9 < 0 ? -1 : (v9 < v1 ? v9 : -1));\n
    }\n
    return v2;\n
}\n
", "4203614:sub_40245e": null, "4203616:cgc_utostr": "int cgc_utostr(unsigned int v1, unsigned int a0, unsigned int a1, char *a2, unsigned int a3)\n
{\n
    char *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    int tmp_2;  // tmp #2\n
    int tmp_3;  // tmp #3\n
    int tmp_0;  // tmp #0\n
    int tmp_6;  // tmp #6\n
    char *v2;  // eax\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
    char *v7;  // edx, Other Possible Types: unsigned int\n
    char v8;  // bl\n
    char *v9;  // ebp, Other Possible Types: unsigned int\n
    char v10;  // bh\n
    void* v11;  // esi, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    char *v14;  // edi\n
    unsigned int v15;  // edx\n
    char v16;  // cl\n
    void* v17;  // eax, Other Possible Types: unsigned int\n
    char *v18;  // ebx, Other Possible Types: unsigned int\n
    char *v19;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // edx\n
    char v22;  // cl\n
    unsigned int v23;  // edx\n
    char v24;  // cl\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // edx\n
    void* v28;  // eax, Other Possible Types: unsigned int\n
    void* v29;  // eax, Other Possible Types: unsigned int\n
    unsigned int v30;  // eax\n
    void* v31;  // edx, Other Possible Types: unsigned int\n
    unsigned int v32;  // eax\n
    void* v33;  // edx, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (v3 - 17 < -15)\n
        return -1;\n
    v4 = a3;\n
    if (v4)\n
    {\n
        v9 = a2;\n
        v5 = v1;\n
        if (v5 < v3)\n
        {\n
            tmp_2 = v4;\n
            if (tmp_2 < 2)\n
                return -1;\n
            v7 = 1;\n
        }\n
        else\n
        {\n
            v10 = 2;\n
            v11 = 0;\n
            v6 = v5;\n
            do\n
            {\n
                v8 = v10;\n
                v6 = (0 CONCAT v6) /m v3;\n
                v9 += 1;\n
                v10 += 1;\n
                v11 -= 1;\n
            } while (v6 >= v3);\n
            v7 = 1 - v11;\n
            if (v7 >= a3)\n
                return -1;\n
            v13 = 0;\n
            if (v11 == 1)\n
            {\n
LABEL_4025f1:\n
                a2[v13] = 0;\n
                return 0;\n
            }\n
            else if (v3 - 2 > 14)\n
            {\n
                v14 = v7;\n
                v15 = -(v11);\n
                v16 = 1 - v11;\n
                v17 = 0;\n
                if (a1)\n
                {\n
                    if (v15 >= 3)\n
                    {\n
                        v28 = 0;\n
                        do\n
                        {\n
                            *((v9 + v28 - 3)) = 0;\n
                            v28 -= 4;\n
                        } while (!(v14 & -0x4) != v28);\n
                        v17 = -(v28);\n
                    }\n
                    if ((v16 & 3))\n
                    {\n
                        v30 = -(v17);\n
                        v31 = 0;\n
                        do\n
                        {\n
                            *((v9 + v30 + v31)) = 0;\n
                            v31 -= 1;\n
                        } while (!(v8 & 3) != v31);\n
                    }\n
                }\n
                else\n
                {\n
                    if (v15 >= 3)\n
                    {\n
                        v29 = 0;\n
                        do\n
                        {\n
                            *((v9 + v29 - 3)) = 0;\n
                            v29 -= 4;\n
                        } while (!(v14 & -0x4) != v29);\n
                        v17 = -(v29);\n
                    }\n
                    if ((v16 & 3))\n
                    {\n
                        v32 = -(v17);\n
                        v33 = 0;\n
                        do\n
                        {\n
                            *((v9 + v32 + v33)) = 0;\n
                            v33 -= 1;\n
                        } while (!(v8 & 3) != v33);\n
                    }\n
                }\n
                v13 = v14;\n
                goto LABEL_4025f1;\n
            }\n
        }\n
        if (a1)\n
        {\n
            v0 = v7;\n
            v18 = v7;\n
            do\n
            {\n
                v20 = (0 CONCAT v5) /m v3;\n
                v21 = (0 CONCAT v5) /m v3 >> 32;\n
                v22 = (v21 < 10 ? 87 : 48);\n
                tmp_0 = v22 + v21;\n
                v23 = v22 + v21;\n
                v24 = tmp_0 - 32;\n
                if (v23 - 123 < -26)\n
                    v24 = v23;\n
                a2[1 + v18] = v24;\n
                v5 = v20;\n
                tmp_3 = v18;\n
                v18 -= 1;\n
            } while (tmp_3 != 1);\n
        }\n
        else\n
        {\n
            v0 = v7;\n
            v19 = v7;\n
            do\n
            {\n
                v25 = (0 CONCAT v5) /m v3;\n
                v26 = (0 CONCAT v5) /m v3 >> 32;\n
                *(&a2[1 + v19]) = (v26 < 10 ? 87 : 48) + v26;\n
                v5 = v25;\n
                tmp_6 = v19;\n
                v19 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
        v13 = v0;\n
        goto LABEL_4025f1;\n
    }\n
}\n
", "4204115:sub_402653": null, "4204128:cgc_itostr": "int cgc_itostr(unsigned int v0, unsigned int a0, unsigned int a1, char *a2, unsigned int a3)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // ecx\n
    char *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // eax\n
\n
    v1 = a3;\n
    v2 = v0;\n
    if ((v2 >> 31) + 1 > v1)\n
        return -1;\n
    v3 = a2;\n
    if (v2 < 0)\n
    {\n
        *(v3) = 45;\n
        v3 += 1;\n
        v1 -= 1;\n
    }\n
    v4 = -(v2);\n
    if (!(v2) < 0)\n
        v4 = v2;\n
    v5 = cgc_utostr(v4, a0, a1, v3, v1);\n
    return v5;\n
}\n
", "4204230:sub_4026c6": null, "4204240:cgc_dtostr": null, "4204920:sub_402978": null, "4204928:cgc_strtou": "int cgc_strtou(char *v0, unsigned int a0, unsigned int *a1)\n
{\n
    int tmp_11;  // tmp #11\n
    int tmp_2;  // tmp #2\n
    unsigned int v1;  // edi\n
    void* v2;  // esi, Other Possible Types: unsigned int\n
    char *v3;  // eax\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ebp\n
    unsigned int v15;  // ecx\n
    void* v16;  // eax, Other Possible Types: unsigned int\n
    void* v17;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v18;  // edx, Other Possible Types: char\n
\n
    v1 = a0;\n
    if (v1 - 17 < -15)\n
        return -1;\n
    v3 = v0;\n
    v18 = *(v3);\n
    if (!*(v3))\n
    {\n
        v2 = 0;\n
        v16 = 0;\n
    }\n
    else\n
    {\n
        v16 = 0;\n
        v17 = 0;\n
        v2 = 0;\n
        while (true)\n
        {\n
            v4 = v18;\n
            v6 = v4 * 0x1000000;\n
            v7 = (v4 - 91 < -26 ? v6 : v6 + 0x20000000);\n
            v8 = v7 >> 24;\n
            v9 = v8 - 48;\n
            v10 = (v9 < 10 ? v9 : v8 - 87);\n
            if (v10 < 0)\n
                break;\n
            if (v10 >= v1)\n
                break;\n
            v11 = v16 * v1 >> 32;\n
            v12 = v16 * v1;\n
            v13 = v1 * v17;\n
            tmp_11 = v13;\n
            if (tmp_11 + v11)\n
            {\n
LABEL_402a17:\n
                return -1;\n
            }\n
            v15 = ~(v10);\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(ebp<4>, Conv(1->32, (ecx<4> < eax<4>))), Conv(1->32, (ecx<4> < eax<4>))))\n
                goto LABEL_402a17;\n
            tmp_2 = v12;\n
            v16 = v12 + v10;\n
            v17 = v13 + v11 + (tmp_2 + v10 < tmp_2);\n
            v18 = v0[1 + v2];\n
            v2 += 1;\n
            if (!v18)\n
                break;\n
        }\n
    }\n
    *(a1) = v16;\n
    return v2;\n
}\n
", "4205091:sub_402a23": null, "4205104:cgc_strtoi": "int cgc_strtoi(char *v2, unsigned int a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_11;  // tmp #11\n
    int tmp_2;  // tmp #2\n
    char *v1;  // [bp-0x14]\n
    unsigned int v3;  // ebp\n
    char *v4;  // eax\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edx\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v17;  // edx\n
    void* v18;  // eax, Other Possible Types: unsigned int\n
    void* v19;  // ecx, Other Possible Types: unsigned int\n
    void* v20;  // edi, Other Possible Types: unsigned int\n
    char v22;  // cl\n
    unsigned int v23;  // edx\n
\n
    v3 = a0;\n
    v4 = v2;\n
    v5 = 0;\n
    v11 = a0 - 17;\n
    if (v11 < -15)\n
        return -1;\n
    v0 = *(v4);\n
    *(&v5) = *(v4) == 45;\n
    *(&v11) = v4[v5];\n
    if (v4[v5])\n
    {\n
        v5 = v5;\n
        v1 = &v4[v5 + 1];\n
        v18 = 0;\n
        v19 = 0;\n
        v20 = 0;\n
    }\n
    else\n
    {\n
        v20 = 0;\n
        v18 = 0;\n
        *(&v11) = v0;\n
LABEL_402b01:\n
        v22 = v11;\n
        v23 = -(v18);\n
        if (v22 != 45)\n
            v23 = v18;\n
        *(a1) = v23;\n
        return v20 + v5;\n
    }\n
    while (true)\n
    {\n
        v6 = v11;\n
        v8 = v6 * 0x1000000;\n
        v9 = (v6 - 91 < -26 ? v8 : v8 + 0x20000000);\n
        v10 = v9 >> 24;\n
        v11 = v10 - 48;\n
        v12 = (v11 < 10 ? v11 : v10 - 87);\n
        if (v12 < 0)\n
        {\n
LABEL_402ad8:\n
            *(&v11) = v0;\n
            v5 = v5;\n
            if (v18 > (v0 == 45) + 2147483647)\n
                return -1;\n
            goto LABEL_402b01;\n
        }\n
        if (!(v12 < v3))\n
            goto LABEL_402ad8;\n
        v13 = v18 * v3 >> 32;\n
        v14 = v18 * v3;\n
        v15 = v3 * v19;\n
        tmp_11 = v15;\n
        if (tmp_11 + v13)\n
            break;\n
        v17 = ~(v12);\n
        if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(ecx<4>, Conv(1->32, (edx<4> < eax<4>))), Conv(1->32, (edx<4> < eax<4>))))\n
            break;\n
        tmp_2 = v14;\n
        v18 = v14 + v12;\n
        v19 = v15 + v13 + (tmp_2 + v12 < tmp_2);\n
        v11 = v1[v20];\n
        v20 += 1;\n
        if (!v11)\n
            goto LABEL_402ad8;\n
    }\n
}\n
", "4205345:sub_402b21": null, "4205360:cgc_strtod": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtod(struct struct_0 **v13, unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    int tmp_38;  // tmp #38\n
    int tmp_12;  // tmp #12\n
    int tmp_2;  // tmp #2\n
    int tmp_13;  // tmp #13\n
    unsigned long v1;  // [bp-0x44]\n
    char *v2;  // [bp-0x38], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0x34]\n
    struct struct_0 **v4;  // [bp-0x30]\n
    struct struct_0 **v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    struct struct_0 **v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    char *v9;  // [bp-0x1c]\n
    void* v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // esi\n
    struct struct_0 **v16;  // esi\n
    char *v17;  // eax\n
    unsigned int v18;  // eax\n
    struct struct_0 **v19;  // eax, Other Possible Types: unsigned int\n
    void* v20;  // esi, Other Possible Types: unsigned int\n
    void* v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int v22;  // ecx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ebx\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // ebx\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // esi\n
    unsigned int v34;  // edx\n
    struct struct_0 **v35;  // ecx, Other Possible Types: unsigned int\n
    struct struct_0 **v37;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v38;  // edi\n
    struct struct_0 **v39;  // ecx, Other Possible Types: unsigned int\n
    struct struct_0 **v40;  // esi, Other Possible Types: unsigned int, void*\n
    void* v41;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v42;  // ecx\n
    unsigned int v44;  // ecx\n
    unsigned int v45;  // ebp\n
    unsigned int v46;  // ebp\n
    unsigned int v47;  // ecx\n
    unsigned int v48;  // ebp\n
    char *v49;  // eax\n
    unsigned int v50;  // edx\n
    unsigned int v51;  // eax\n
    unsigned int v52;  // ebx\n
    unsigned int v54;  // edx\n
    struct struct_0 **v55;  // esi\n
    unsigned int v56;  // esi\n
    struct struct_0 **v57;  // eax\n
\n
    v12 = v14;\n
    v11 = v15;\n
    v16 = v13;\n
    v0 = 46;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v17 = cgc_strrchr(v16);\n
    v21 = 0;\n
    v35 = 0;\n
    if (v17)\n
    {\n
        v35 = v17 + 1;\n
        *(v17) = 0;\n
    }\n
    v5 = v35;\n
    v18 = 0;\n
    *(&v3) = *(v16);\n
    *(&v18) = *(v16) == 45;\n
    v4 = v18;\n
    tmp_38 = *(v16 + v18);\n
    *(&v35) = *(v16 + v18);\n
    v19 = 0;\n
    if (tmp_38)\n
    {\n
        v19 = 0;\n
        v2 = v4 + v16 + 1;\n
        v20 = 0;\n
        v21 = 0;\n
        while (true)\n
        {\n
            v22 = v35;\n
            v24 = v22 * 0x1000000;\n
            v25 = (v22 - 91 < -26 ? v24 : v24 + 0x20000000);\n
            v26 = v25 >> 24;\n
            v27 = v26 - 48;\n
            v28 = (v27 < 10 ? v27 : v26 - 87);\n
            if (v28 > 9)\n
                break;\n
            v29 = v19 * 10 >> 32;\n
            v30 = v19 * 10;\n
            v31 = v20 * 10;\n
            tmp_12 = v31;\n
            if (tmp_12 + v29)\n
                return -1;\n
            v34 = v28 ^ -1;\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(ebx<4>, Conv(1->32, (edx<4> < eax<4>))), Conv(1->32, (edx<4> < eax<4>))))\n
                return -1;\n
            tmp_2 = v30;\n
            v19 = v30 + v28;\n
            v20 = v31 + v29 + (tmp_2 + v28 < tmp_2);\n
            v35 = v2[v21];\n
            v21 += 1;\n
            if (!v35)\n
                break;\n
        }\n
        if (v19 > (v3 == 45) + 2147483647)\n
            return -1;\n
    }\n
    v37 = -(v19);\n
    if (v3 != 45)\n
        v37 = v19;\n
    v38 = v21 + v4;\n
    if (v38 == -1)\n
        return -1;\n
    v2 = 0;\n
    v39 = v5;\n
    if (!v39)\n
    {\n
        v40 = 0;\n
    }\n
    else\n
    {\n
        *(&v39) = *(v39);\n
        v40 = 0;\n
        if (*(&v39))\n
        {\n
            v3 = v37;\n
            v2 = 0;\n
            v41 = 0;\n
            v40 = 0;\n
            while (true)\n
            {\n
                v42 = v39;\n
                v44 = v42 * 0x1000000;\n
                v45 = (v42 - 91 < -26 ? v44 : v44 + 0x20000000);\n
                v46 = v45 >> 24;\n
                v47 = v46 - 48;\n
                v48 = (v47 < 10 ? v47 : v46 - 87);\n
                if (v48 > 9)\n
                    break;\n
                v49 = v2;\n
                v50 = v49 * 10 >> 32;\n
                v51 = v49 * 10;\n
                v52 = v41 * 10;\n
                tmp_13 = v52;\n
                if (tmp_13 + v50)\n
                    return -1;\n
                v4 = v40;\n
                v54 = v48 ^ -1;\n
                if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(ebx<4>, Conv(1->32, (edx<4> < eax<4>))), Conv(1->32, (edx<4> < eax<4>))))\n
                    return -1;\n
                v2 = v51 + v48;\n
                v41 = v52 + v50 + (v51 + v48 < v51);\n
                v55 = v4;\n
                v39 = *((v5 + v55 + 1));\n
                v40 = v55 + 1;\n
                if (!v39)\n
                    break;\n
            }\n
            v37 = v3;\n
        }\n
    }\n
    v9 = v2;\n
    v10 = 0;\n
    if ([D] GetI(136:I8x8)[t25,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t22,0] = t25\n
    [D] PutI(136:I8x8)[t22,0] = 0x01\n
    [D] PutI(72:F64x8)[t31,0] = t32\n
    [D] PutI(136:I8x8)[t31,0] = 0x01\n
    [D] PutI(72:F64x8)[t45,0] = t49\n
    [D] PutI(136:I8x8)[t45,0] = 0x01\n
    [D] PutI(72:F64x8)[t45,1] = t42\n
    [D] PutI(136:I8x8)[t45,1] = 0x01\n
    [D] PutI(72:F64x8)[t60,0] = t61\n
    [D] PutI(136:I8x8)[t60,0] = 0x01\n
    [D] PutI(72:F64x8)[t83,1] = t84\n
    [D] PutI(136:I8x8)[t83,1] = 0x01\n
    [D] PutI(136:I8x8)[t83,0] = 0x00\n
    *(a0) = ([D] GetI(136:I8x8)[t101,0] ? [D] GetI(72:F64x8)[t101,0] : nan);\n
    [D] PutI(136:I8x8)[t101,0] = 0x00\n
    v8 = v40;\n
    [D] PutI(72:F64x8)[t113,0] = t116\n
    [D] PutI(136:I8x8)[t113,0] = 0x01\n
    v1 = ([D] GetI(136:I8x8)[t129,0] ? [D] GetI(72:F64x8)[t129,0] : nan);\n
    [D] PutI(136:I8x8)[t129,0] = 0x00\n
    v0 = 0x40240000;\n
    cgc_pow();\n
    v56 = v40 + 1;\n
    [D] PutI(72:F64x8)[t20,0] = t21\n
    [D] PutI(136:I8x8)[t20,0] = 0x01\n
    v57 = v5;\n
    v7 = v37;\n
    [D] PutI(72:F64x8)[t39,0] = t40\n
    [D] PutI(136:I8x8)[t39,0] = 0x01\n
    *(a0) = ([D] GetI(136:I8x8)[t54,0] ? [D] GetI(72:F64x8)[t54,0] : nan);\n
    [D] PutI(136:I8x8)[t54,0] = 0x00\n
    return (!v57 ? v57 : v56) + v38;\n
}\n
", "4205975:sub_402d97": null, "4205984:cgc_sign": "int cgc_sign()\n
{\n
    return;\n
}\n
", "4205996:sub_402dac": null, "4206000:cgc_exponent": "int cgc_exponent()\n
{\n
    return;\n
}\n
", "4206012:sub_402dbc": null, "4206016:cgc_mantissa": "int cgc_mantissa(unsigned int v0, unsigned int a0)\n
{\n
    return v0;\n
}\n
", "4206030:sub_402dce": null, "4206032:cgc_isnan": "int cgc_isnan(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = a0;\n
    return ((v1 & -1048577) || v0) & !(~(v1) & 0x7ff00000);\n
}\n
", "4206067:sub_402df3": null, "4206080:cgc_isinf": "int cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4206083:sub_402e03": null, "4206096:cgc_abs": null, "4206103:sub_402e17": null, "4206112:cgc_clamp": null, "4206141:sub_402e3d": null, "4206144:cgc_pool_init": "int cgc_pool_init(unsigned int v0[2], unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    unsigned int v2;  // eax\n
    unsigned int v3[2];  // eax\n
\n
    v1 = a0;\n
    v2 = -1;\n
    if (v1 <= 4075)\n
    {\n
        v3 = v0;\n
        v3[0] = v1;\n
        v3[1] = 0;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4206177:sub_402e61": null, "4206192:cgc_pool_destroy": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_pool_destroy(struct_1 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_1 *v2;  // esi\n
    struct struct_0 **v3;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    v3 = v2->field_4;\n
    if (v3)\n
    {\n
        do\n
        {\n
            v0 = 0x1000;\n
            cgc_deallocate(v3);\n
            v3 = *(v3);\n
        } while (v3);\n
    }\n
    v2->field_4 = 0;\n
    v2->field_0 = 0;\n
    return v3;\n
}\n
", "4206266:sub_402eba": null, "4206272:cgc_pool_free_all": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_pool_free_all(struct_1 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_1 *v2;  // esi\n
    struct struct_0 **v3;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    v3 = v2->field_4;\n
    if (v3)\n
    {\n
        do\n
        {\n
            v0 = 0x1000;\n
            cgc_deallocate(v3);\n
            v3 = *(v3);\n
        } while (v3);\n
    }\n
    v2->field_4 = 0;\n
    return v3;\n
}\n
", "4206340:sub_402f04": null, "4206352:cgc_pool_alloc": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_pool_alloc(struct_2 *v3)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    struct_2 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    unsigned int v7[3];  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v14;  // edx\n
    unsigned int v16;  // esi\n
    unsigned int v17[3];  // ecx\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // eax\n
    struct_0 *v24;  // eax\n
\n
    v4 = v3;\n
    v5 = v3->field_4;\n
    if (!v5)\n
    {\n
        v0 = &v1;\n
        if (!(!cgc_allocate(0x1000, 0)))\n
            goto LABEL_403014;\n
        *(v1) = v4->field_4;\n
        v6 = v4->field_0;\n
        v7 = v1;\n
        v7[1] = v6;\n
        v8 = (0 CONCAT 4076) /m v6;\n
        do\n
        {\n
            v9 = v8;\n
            v10 = v8 + 7 >> 3;\n
            v11 = 4076 - v6 * v8;\n
            v8 -= 1;\n
        } while (v10 > v11);\n
        v7[2] = v9;\n
        cgc_bitset_init(&v7[1 + 1], v9);\n
        v5 = v1;\n
        v12 = *((v5 + 8));\n
        *((v5 + 12)) = (v12 + 7 >> 3) + v5 + 20;\n
        v4 = v3;\n
        v3->field_4 = v5;\n
        if (!v12)\n
        {\n
LABEL_402fd0:\n
            v13 = v5;\n
            while (true)\n
            {\n
                v14 = v13;\n
                v13 = *(v13);\n
                if (!v13)\n
                    break;\n
                if (*((v13 + 8)))\n
                {\n
                    v14->field_0 = *(v13);\n
                    *(v13) = v5;\n
                    goto LABEL_403085;\n
                }\n
            }\n
            v0 = &v2;\n
            if (!cgc_allocate(0x1000, 0))\n
            {\n
                *(v2) = *((v4 + 4));\n
                v16 = *(v4);\n
                v17 = v2;\n
                v17[1] = v16;\n
                v18 = (0 CONCAT 4076) /m v16;\n
                do\n
                {\n
                    v19 = v18;\n
                    v20 = v18 + 7 >> 3;\n
                    v21 = 4076 - v16 * v18;\n
                    v18 -= 1;\n
                } while (v20 > v21);\n
                v17[2] = v19;\n
                cgc_bitset_init(&v17[1 + 1], v19);\n
                v13 = v2;\n
                *((v13 + 12)) = (*((v13 + 8)) + 7 >> 3) + v13 + 20;\n
                v4 = v3;\n
LABEL_403085:\n
                *((v4 + 4)) = v13;\n
LABEL_403088:\n
                v22 = cgc_bitset_find_first(v13 + 16, 0);\n
                if (v22 == -1)\n
                    return 0;\n
                if (cgc_bitset_set_bit(*((v4 + 4)) + 16, v22) == -1)\n
                    return 0;\n
                v24 = *((v4 + 4));\n
                v24->field_8 = v24->field_8 - 1;\n
                return *(v4) * v22 + v24->field_c;\n
            }\n
LABEL_403014:\n
            return 0;\n
        }\n
    }\n
    else if (!v5->field_8)\n
    {\n
        goto LABEL_402fd0;\n
    }\n
    v13 = v5;\n
    goto LABEL_403088;\n
}\n
", "4206804:sub_4030d4": null, "4206816:cgc_pool_free": "int cgc_pool_free()\n
{\n
    int tmp_20;  // tmp #20\n
    char v1;  // [bp+0x8]\n
    unsigned int v2[4];  // eax\n
    unsigned int v3[4];  // ecx\n
    unsigned int v4;  // eax\n
\n
    v2 = *(&v1);\n
    v3 = v2 & 4095;\n
    v4 = v2 - v3[3];\n
    tmp_20 = (0 CONCAT v4) /m v3[1];\n
    if (!(tmp_20 >> 32))\n
    {\n
        cgc_bitset_clear_bit(v3 + 1, (0 CONCAT v4) /m v3[1]);\n
        return;\n
    }\n
    return;\n
}\n
", "4206879:sub_40311f": null, "4206880:cgc_read_all": "int cgc_read_all(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    int tmp_5;  // tmp #5\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v3 = a1;\n
    if (v3 >= 0)\n
    {\n
        if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>))\n
            return 0;\n
        v4 = 0;\n
        while (true)\n
        {\n
            v0 = &v1;\n
            if (cgc_receive(v2, a0 + v4, v3))\n
                break;\n
            v5 = *(&v1);\n
            if (!v5)\n
                break;\n
            v4 += v5;\n
            tmp_5 = v3;\n
            v3 -= v5;\n
            if (tmp_5 == v5)\n
                return v4;\n
        }\n
    }\n
    return -1;\n
}\n
", "4206988:sub_40318c": null, "4206992:cgc_read_until": "int cgc_read_until(unsigned int v2, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // edi\n
    char *v6;  // eax\n
    char *v7;  // ebp\n
    unsigned int v8;  // eax\n
    char *v9;  // esi, Other Possible Types: unsigned int\n
\n
    v3 = a2;\n
    if (v3 <= 0)\n
        return -1;\n
    v9 = 0;\n
    if (v3 != 1)\n
    {\n
        v9 = 0;\n
        do\n
        {\n
            v6 = a0;\n
            v7 = &v6[v9];\n
            v0 = &v1;\n
            if (cgc_receive(v2, &v6[v9], 1))\n
            {\n
LABEL_403209:\n
                return -1;\n
            }\n
            v8 = *(&v1);\n
            if (!v8)\n
                goto LABEL_403209;\n
            if (*(v7) == a1)\n
                break;\n
            continue;\n
            v9 += v8;\n
        } while (v9 < v3 - 1);\n
    }\n
    *((a0 + v9)) = 0;\n
    return v9;\n
}\n
", "4207120:cgc_write_all": "int cgc_write_all(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    int tmp_5;  // tmp #5\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v3 = a1;\n
    if (v3 >= 0)\n
    {\n
        if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>))\n
            return 0;\n
        v4 = 0;\n
        while (true)\n
        {\n
            v0 = &v1;\n
            if (cgc_transmit(v2, a0 + v4, v3))\n
                break;\n
            v5 = *(&v1);\n
            if (!v5)\n
                break;\n
            v4 += v5;\n
            tmp_5 = v3;\n
            v3 -= v5;\n
            if (tmp_5 == v5)\n
                return v4;\n
        }\n
    }\n
    return -1;\n
}\n
", "4207228:sub_40327c": null, "4207232:cgc_fdopen": "extern unsigned int file_pool;\n
\n
int cgc_fdopen(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!file_pool && cgc_pool_init(&file_pool, 20))\n
        return 0;\n
    v1 = cgc_pool_alloc(&file_pool);\n
    if (v1)\n
    {\n
        *(v1) = v0;\n
        *((v1 + 4)) = a0;\n
        *((v1 + 8)) = 0;\n
        *((v1 + 12)) = 0;\n
        *((v1 + 16)) = 0;\n
        return v1;\n
    }\n
    return 0;\n
}\n
", "4207353:sub_4032f9": null, "4207360:cgc_fclose": "extern unsigned int file_pool;\n
\n
int cgc_fclose(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v4 = *((*(&v0) + 8));\n
    if (v4)\n
    {\n
        v0 = 0x1000;\n
        cgc_deallocate(v4);\n
    }\n
    v0 = v2;\n
    return cgc_pool_free(&file_pool);\n
}\n
", "4207425:sub_403341": null, "4207440:cgc_fflush": "int cgc_fflush(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4[5];  // eax\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // ebp\n
    unsigned int v7[5];  // eax\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edi\n
    unsigned int v11[5];  // eax\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return -1;\n
    }\n
    else if (!v4[1])\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v6 = v4[2];\n
        if (!v4[2])\n
            return 0;\n
        v10 = v4[3];\n
        if (!v10)\n
            return 0;\n
        if ([D] x86g_calculate_condition(0x8<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>))\n
            return -1;\n
        v7 = v3;\n
        v1 = v7[0];\n
        v8 = v6 + v7[4];\n
        v5 = 0;\n
        while (true)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(v1, v5 + v8, v10))\n
                break;\n
            v9 = *(&v2);\n
            if (!v9)\n
                break;\n
            v5 += v9;\n
            tmp_5 = v10;\n
            v10 -= v9;\n
            if (tmp_5 == v9)\n
            {\n
                v11 = v3;\n
                if (v5 < 0)\n
                    return v5;\n
                v11[3] = 0;\n
                v11[4] = 0;\n
                v5 = 0;\n
            }\n
        }\n
    }\n
}\n
", "4207601:sub_4033f1": null, "4207616:cgc_fread": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_fread(unsigned int v7, unsigned int a0, unsigned int a1[5])\n
{\n
    int tmp_6;  // tmp #6\n
    int tmp_7;  // tmp #7\n
    struct_0 *v0;  // [bp-0x30]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    char v6;  // [bp-0x14]\n
    unsigned int v8;  // ebp\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // edx\n
    unsigned int v12[5];  // ecx, Other Possible Types: unsigned int\n
    void* v13;  // esi, Other Possible Types: unsigned int\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    void* v18;  // esi, Other Possible Types: unsigned int\n
    unsigned int v19[5];  // eax\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // esi\n
    unsigned int v22;  // esi\n
    unsigned int v23[5];  // ecx\n
    unsigned int v24;  // eax\n
\n
    v8 = a0;\n
    if (a0 < 0)\n
        return -1;\n
    v12 = a1;\n
    if (v12[1])\n
        return -1;\n
    if (!v8)\n
        return 0;\n
    v11 = v7;\n
    v13 = v12[3];\n
    if (v13)\n
    {\n
        if (v13 > v8)\n
            v13 = v8;\n
        cgc_memcpy();\n
        v12 = a1;\n
        tmp_6 = *((v12 + 12));\n
        *((v12 + 12)) = *((v12 + 12)) - v13;\n
        if (tmp_6 != v13)\n
        {\n
            *((v12 + 16)) = *((v12 + 16)) + v13;\n
            tmp_7 = v8;\n
            v8 -= v13;\n
            v10 = v7;\n
            if (tmp_7 == v13)\n
                goto LABEL_4035c9;\n
        }\n
        else\n
        {\n
            *((v12 + 16)) = 0;\n
            tmp_6 = v8;\n
            v8 -= v13;\n
            v10 = v7;\n
            if (tmp_6 == v13)\n
                goto LABEL_4035c9;\n
        }\n
        v11 = v10 + v13;\n
        *((v12 + 12)) = 0;\n
        *((v12 + 16)) = 0;\n
        if (!(v8 < 0x1000))\n
            goto LABEL_403552;\n
    }\n
    else\n
    {\n
        v13 = 0;\n
        if (v8 >= 0x1000)\n
        {\n
LABEL_403552:\n
            v1 = v13;\n
            v3 = v8 & -0x1000;\n
            if ((v8 & -0x1000) < 0)\n
                return -1;\n
            if (!([D] x86g_calculate_condition(0x4<32>, 0xf<32>, And(ebp<4>, 0xfffff000<32>), 0x0<32>, 0x0<32>)))\n
            {\n
                v5 = *(v12);\n
                v14 = 0;\n
                v15 = v3;\n
                v2 = v8;\n
                while (true)\n
                {\n
                    v0 = &v6;\n
                    v8 = v2;\n
                    v12 = a1;\n
                    if (cgc_receive(v5, v11 + v14, v15))\n
                        break;\n
                    v16 = *(&v6);\n
                    if (!v16)\n
                        break;\n
                    v14 += v16;\n
                    tmp_5 = v15;\n
                    v15 -= v16;\n
                    if (tmp_5 == v16)\n
                        goto LABEL_4035d2;\n
                }\n
            }\n
            else\n
            {\n
                v14 = 0;\n
LABEL_4035d2:\n
                v4 = v14;\n
                v17 = v3;\n
                if (v14 != v17)\n
                    return -1;\n
                v13 = v1 + v17;\n
                v8 &= 4095;\n
                if (!v8)\n
                {\n
LABEL_4035c9:\n
                    return v13;\n
                }\n
                v2 = v11 + v17;\n
                if (!*((v12 + 8)))\n
                {\n
LABEL_403605:\n
                    if (cgc_allocate(0x1000, 0))\n
                        return -1;\n
                    v1 = v13;\n
                    v19 = a1;\n
                    v19[3] = 0;\n
                    v19[4] = 0;\n
                    v18 = 0;\n
                    v12 = v19;\n
                    for (; v18 < v8; *((v12 + 12)) = v18)\n
                    {\n
                        v20 = 0x1000 - v18;\n
                        v21 = v18 + *((v12 + 16)) + *((v12 + 8));\n
                        v0 = &v4;\n
                        if (cgc_receive(*(v12), v21, v20))\n
                            return -1;\n
                        v22 = v4;\n
                        if (!v22)\n
                            return -1;\n
                        v12 = a1;\n
                        v18 = v22 + *((v12 + 12));\n
                    }\n
                    if (v8 < v18)\n
                        v18 = v8;\n
                    cgc_memcpy();\n
                    v23 = a1;\n
                    tmp_6 = v23[3];\n
                    v23[3] = v23[3] - v18;\n
                    v24 = (tmp_6 == v18 ? v23[4] + v18 : 0);\n
                    v23[4] = v24;\n
                    v13 = v18 + v1;\n
                    goto LABEL_4035c9;\n
                }\n
LABEL_4034a2:\n
                v1 = v13;\n
                v18 = *((v12 + 12));\n
            }\n
        }\n
    }\n
    v2 = v11;\n
    if (!*((v12 + 8)))\n
        goto LABEL_403605;\n
    goto LABEL_4034a2;\n
}\n
", "4208194:sub_403642": null, "4208208:cgc_fread_until": "int cgc_fread_until(char *v8, char a0, unsigned int a1, unsigned int a2[5])\n
{\n
    int tmp_3;  // tmp #3\n
    int tmp_7;  // tmp #7\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    char v7;  // [bp-0x14]\n
    unsigned int v9;  // ebp\n
    unsigned int v10[5];  // esi, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v13;  // ebp\n
    unsigned int v14;  // ecx\n
    void* v15;  // edi, Other Possible Types: unsigned int\n
    unsigned int v16;  // esi\n
    unsigned int v17[5];  // eax\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ecx\n
    unsigned int v21;  // eax\n
    void* v22;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    void* v26;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = a1;\n
    if (a1 > 0)\n
    {\n
        v10 = a2;\n
        if (!v10[1])\n
        {\n
            if (v10[2])\n
            {\n
                v1 = v9;\n
                tmp_3 = v9;\n
                v11 = v9 - 1;\n
                if (!tmp_3 - 1)\n
                    goto LABEL_403675;\n
                goto LABEL_403697;\n
            }\n
            else if (!cgc_allocate(0x1000, 0))\n
            {\n
                v10[3] = 0;\n
                v10[4] = 0;\n
                v1 = v9;\n
                v11 = v9 - 1;\n
                if (!v9 - 1)\n
                    goto LABEL_403675;\n
LABEL_403697:\n
                v4 = &v10[2];\n
                v2 = v8;\n
                v5 = a0;\n
                v26 = 0;\n
                do\n
                {\n
                    v3 = v26;\n
                    v22 = *((v10 + 8));\n
                    v15 = *((v10 + 12));\n
                    if (!v22)\n
                    {\n
                        v22 = 0;\n
                        v13 = v1;\n
                        goto LABEL_403775;\n
                    }\n
                    if (!v15)\n
                    {\n
                        v15 = 0;\n
                        v13 = v1;\n
                        goto LABEL_403775;\n
                    }\n
                    v14 = v22 + *((v10 + 16));\n
                    v6 = cgc_memchr(v14, v5);\n
                    v16 = (!v6 ? v6 - *((v10 + 8)) - *((v10 + 16)) + 1 : *((v10 + 12)));\n
                    if (v11 < v16)\n
                        v16 = v11;\n
                    cgc_memcpy();\n
                    v17 = a2;\n
                    v18 = v17[3];\n
                    tmp_7 = v18;\n
                    v15 = v18 - v16;\n
                    v17[3] = v15;\n
                    v19 = (tmp_7 == v16 ? v17[4] + v16 : 0);\n
                    v17[4] = v19;\n
                    v13 = v1 - v16;\n
                    v2 += v16;\n
                    v21 = v3 + v16;\n
                    if (v1 - v16 == 1)\n
                    {\n
LABEL_403802:\n
                        *(v2) = 0;\n
                        return v3 + v16;\n
                    }\n
                    if (!(!v6))\n
                        goto LABEL_403802;\n
                    v3 = v21;\n
                    v22 = *(v4);\n
                    v10 = v17;\n
LABEL_403775:\n
                    v23 = 0x1000 - v15;\n
                    v24 = v15 + *((v10 + 16)) + v22;\n
                    v0 = &v7;\n
                    if (cgc_receive(*(v10), v24, v23))\n
                        break;\n
                    v25 = *(&v7);\n
                    if (!v25)\n
                        break;\n
                    continue;\n
                    *((v10 + 12)) = *((v10 + 12)) + v25;\n
                    v1 = v13;\n
                    v11 = v13 - 1;\n
                    v26 = v3;\n
                } while (v26 < v11);\n
                goto LABEL_403675;\n
            }\n
        }\n
    }\n
LABEL_403675:\n
    return -1;\n
}\n
", "4208367:sub_4036ef": null, "4208375:sub_4036f7": null, "4208654:sub_40380e": null, "4208656:cgc_fwrite": "int cgc_fwrite(unsigned int v8, unsigned int a0, unsigned int a1[5])\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    char v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x18]\n
    char v7;  // [bp-0x14]\n
    unsigned int v9;  // edi\n
    unsigned int v10[5];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // ebp\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // eax\n
    void* v16;  // esi, Other Possible Types: unsigned int\n
    unsigned int v17;  // eax\n
    void* v18;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
\n
    v9 = a0;\n
    if (v9 < 0)\n
    {\n
LABEL_403a4f:\n
        return -1;\n
    }\n
    v10 = a1;\n
    if (!(a1[1] == 1))\n
        goto LABEL_403a4f;\n
    if (!v9)\n
        return 0;\n
    v11 = v8;\n
    if (!v10[2])\n
    {\n
        v16 = 0;\n
        if (v9 < 0x1000)\n
            goto LABEL_4039ca;\n
        goto LABEL_40391d;\n
    }\n
    v16 = 0x1000 - (v10[3] + v10[4]);\n
    if (v16 > v9)\n
        v16 = v9;\n
    cgc_memcpy();\n
    v12 = v10[3] + v16;\n
    v10[3] = *(&v5);\n
    if (v9 == v16)\n
        return v16;\n
    v1 = v16;\n
    v3 = v9 - v16;\n
    v2 = v10[2] + v10[4];\n
    v13 = -1;\n
    v5 = v12;\n
    if (*(&v5) >= 0)\n
    {\n
        if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, Load(addr=stack_base-28, size=4, endness=Iend_LE), 0x0<32>, 0x0<32>))\n
        {\n
            v9 = v3;\n
            v10 = a1;\n
            goto LABEL_4039a7;\n
        }\n
        else\n
        {\n
            v4 = a1[0];\n
            v13 = 0;\n
            v14 = v5;\n
            do\n
            {\n
                v0 = &v6;\n
                if (cgc_transmit(v4, v2 + v13, v14))\n
                {\n
LABEL_403990:\n
                    v13 = -1;\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = *(&v6);\n
                    if (!v15)\n
                        goto LABEL_403990;\n
                }\n
                v13 += v15;\n
                tmp_5 = v14;\n
                v14 -= v15;\n
            } while (tmp_5 != v15);\n
        }\n
    }\n
    tmp_1 = v13;\n
    v9 = v3;\n
    v10 = a1;\n
    if (*(&v5) != tmp_1)\n
        return -1;\n
LABEL_4039a7:\n
    v16 = v1;\n
    v11 = v8 + v16;\n
    *((v10 + 12)) = 0;\n
    *((v10 + 16)) = 0;\n
    if (v9 < 0x1000)\n
    {\n
LABEL_4039ca:\n
        v17 = *((v10 + 8));\n
        if (!(!v17))\n
            goto LABEL_4039d3;\n
        goto LABEL_403a12;\n
    }\n
LABEL_40391d:\n
    v1 = v16;\n
    v3 = v9;\n
    v4 = v9 & -0x1000;\n
    if ((v9 & -0x1000) >= 0)\n
    {\n
        if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, Load(addr=stack_base-28, size=4, endness=Iend_LE), 0x0<32>, 0x0<32>))\n
        {\n
            v18 = 0;\n
        }\n
        else\n
        {\n
            v2 = a1[0];\n
            v18 = 0;\n
            v19 = v4;\n
            while (true)\n
            {\n
                v0 = &v7;\n
                if (cgc_transmit(v2, v11 + v18, v19))\n
                    break;\n
                v20 = *(&v7);\n
                if (!v20)\n
                    break;\n
                v18 += v20;\n
                tmp_5 = v19;\n
                v19 -= v20;\n
                if (tmp_5 == v20)\n
                    goto LABEL_4039ea;\n
            }\n
        }\n
LABEL_4039ea:\n
        v21 = v4;\n
        if (v18 == v21)\n
        {\n
            v16 = v1 + v21;\n
            v9 = v3 & 4095;\n
            if (!v9)\n
                return v1 + v21;\n
            v11 += v21;\n
            v10 = a1;\n
            v17 = a1[2];\n
            if (!(!v17))\n
                goto LABEL_4039d3;\n
LABEL_403a12:\n
            v2 = v11;\n
            v1 = v16;\n
            if (cgc_allocate(0x1000, 0))\n
                return -1;\n
            *((v10 + 12)) = 0;\n
            *((v10 + 16)) = 0;\n
            v17 = *((v10 + 8));\n
            v16 = v1;\n
            v11 = v2;\n
LABEL_4039d3:\n
            cgc_memcpy(v17, v11);\n
            *((v10 + 12)) = v9;\n
            v16 += v9;\n
            return v16;\n
        }\n
    }\n
    goto LABEL_403a4f;\n
}\n
", "4209246:sub_403a5e": null, "4209248:cgc_fgetc": "int cgc_fgetc(unsigned int v6[4])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x15]\n
    char v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    unsigned int v10[4];  // eax\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // ecx\n
    void* v13;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // ecx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v10 = v6;\n
    if (v10[3])\n
    {\n
        v14 = cgc_fread(&v1, 1, v10);\n
    }\n
    else\n
    {\n
        v11 = v10[0];\n
        v15 = 1;\n
        v13 = 0;\n
        while (true)\n
        {\n
            v0 = &v2;\n
            v14 = -1;\n
            if (cgc_receive(v11, &(&v1)[v13], v15))\n
                break;\n
            v12 = *(&v2);\n
            if (!v12)\n
                break;\n
            v13 += v12;\n
            v14 = v13;\n
            v15 -= v12;\n
            if (v12 == 1)\n
                break;\n
        }\n
    }\n
    v16 = v1;\n
    if (v14 < 0)\n
        v16 = v14;\n
    return v16;\n
}\n
", "4209381:sub_403ae5": null, "4209392:cgc_fputc": "int cgc_fputc()\n
{\n
    unsigned int v0;  // [bp+0x4]\n
    char v1;  // [bp+0x8]\n
\n
    cgc_fwrite(&v0, 1, *(&v1));\n
    return;\n
}\n
", "4209432:sub_403b18": null, "4209440:cgc_vfprintf": "int cgc_vfprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a1;\n
    return cgc_printf_core(v1);\n
}\n
", "4209487:sub_403b4f": null, "4209488:cgc_printf_core": null, "4210006:sub_403d56": null, "4210016:cgc_file_printer": "int cgc_file_printer(char v6, unsigned int a0[5])\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9[5];  // edi\n
    unsigned int v10;  // edi\n
    unsigned int v11[5];  // eax\n
    unsigned int v12;  // edi\n
    unsigned int v13[5];  // eax, Other Possible Types: unsigned int\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // ebp\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v9 = a0;\n
    v2 = v6;\n
    v13 = cgc_fwrite(&v2, 1, v9);\n
    if (v2 != 10)\n
        return v13;\n
    v13 = v9;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v9[1])\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v10 = v9[2];\n
        if (!v10)\n
            return v13;\n
        v15 = *((v13 + 12));\n
        if (!*((v13 + 12)))\n
        {\n
            return v13;\n
        }\n
        else if ([D] x86g_calculate_condition(0x8<32>, 0xf<32>, ebp<4>, 0x0<32>, 0x0<32>))\n
        {\n
            return v13;\n
        }\n
        else\n
        {\n
            v11 = a0;\n
            v1 = v11[0];\n
            v12 = v10 + v11[4];\n
            v14 = 0;\n
            do\n
            {\n
                v0 = &v3;\n
                v13 = cgc_transmit(v1, v12 + v14, v15);\n
                if (v13)\n
                    return v13;\n
                v13 = *(&v3);\n
                if (!v13)\n
                    return v13;\n
                v14 += v13;\n
                tmp_5 = v15;\n
                v15 -= v13;\n
            } while (tmp_5 != v13);\n
            v13 = a0;\n
            if (v14 < 0)\n
                return a0;\n
            *((v13 + 12)) = 0;\n
            *((v13 + 16)) = 0;\n
        }\n
    }\n
}\n
", "4210198:sub_403e16": null, "4210208:cgc_vprintf": "extern unsigned int cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v0, unsigned int a0)\n
{\n
    return cgc_printf_core(cgc_stdout, a0);\n
}\n
", "4210257:sub_403e51": null, "4210272:cgc_vsnprintf": null, "4210727:sub_404027": null, "4210769:sub_404051": null, "4210824:sub_404088": null, "4210893:sub_4040cd": null, "4210896:cgc_vsprintf": "int cgc_vsprintf(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return cgc_vsnprintf(v0, -1, a0, a1);\n
}\n
", "4210936:sub_4040f8": null, "4210944:cgc_fprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_fprintf(unsigned int v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp+0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v0 = &v2;\n
    return cgc_printf_core(v1, &v2);\n
}\n
", "4210996:sub_404134": null, "4211008:cgc_printf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc_stdout;\n
\n
int cgc_printf(unsigned int v1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    char v2;  // [bp+0x8]\n
\n
    v0 = &v2;\n
    return cgc_printf_core(cgc_stdout, &v2);\n
}\n
", "4211062:sub_404176": null, "4211072:cgc_snprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_snprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp+0x10]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v0 = &v2;\n
    return cgc_vsnprintf(v1, a0, a1, &v2);\n
}\n
", "4211121:sub_4041b1": null, "4211136:cgc_sprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_sprintf(unsigned int v1, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    char v2;  // [bp+0xc]\n
\n
    v0 = &v2;\n
    return cgc_vsnprintf(v1, -1, a0, &v2);\n
}\n
", "4211183:sub_4041ef": null, "4211184:cgc_srand": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* g_40819c;\n
extern unsigned int rand_seed;\n
\n
int cgc_srand(unsigned int v0)\n
{\n
    rand_seed = v0;\n
    g_40819c = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4211217:sub_404211": null, "4211232:cgc_rand": "extern unsigned int g_40819c;\n
extern unsigned int rand_seed;\n
\n
int cgc_rand()\n
{\n
    int tmp_27;  // tmp #27\n
    unsigned int v1;  // eax\n
    unsigned int v3;  // ecx\n
\n
    v1 = rand_seed * 1284865837;\n
    tmp_27 = v1;\n
    v3 = g_40819c * 1284865837 + rand_seed * 1481765933 + (rand_seed * 1284865837 >> 32) + 335903614 + (tmp_27 - 144211633 < tmp_27);\n
    rand_seed = v1 - 144211633;\n
    g_40819c = v3;\n
    return g_40819c;\n
}\n
", "4211309:sub_40426d": null, "4211312:cgc_get_flag_byte": "typedef struct struct_0 {\n
    char padding_0[1128775680];\n
    struct struct_0 *field_4347c000;\n
} struct_0;\n
\n
int cgc_get_flag_byte(unsigned int v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = 1023 & v0;\n
    *(&v1) = *((v1 * 4 + 0x4347c000));\n
    return v1;\n
}\n
", "4211329:sub_404281": null, "4211344:cgc_get_flag_byte_unsafe": "typedef struct struct_0 {\n
    char padding_0[1128775680];\n
    struct struct_0 *field_4347c000;\n
} struct_0;\n
\n
int cgc_get_flag_byte_unsafe(unsigned int v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = 4095 & v0;\n
    *(&v1) = v1->field_4347c000;\n
    return v1;\n
}\n
", "4211360:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ebp\n
    char *v2;  // eax\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!a1)\n
        return v0;\n
    v5 = a0;\n
    v3 = v1 - 1;\n
    if (!(v1 & 7))\n
    {\n
        v6 = v2;\n
        if (v3 < 7)\n
            return v0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v2[v4] = *((v5 + v4));\n
            v4 += 1;\n
        } while ((v1 & 7) != v4);\n
        v5 += v4;\n
        v6 = &v2[v4];\n
        v1 -= v4;\n
        if (v3 < 7)\n
            return v0;\n
    }\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = *((v5 + v7));\n
        *((v6 + v7 + 1)) = *((v5 + v7 + 1));\n
        *((v6 + v7 + 2)) = *((v5 + v7 + 2));\n
        *((v6 + v7 + 3)) = *((v5 + v7 + 3));\n
        *((v6 + v7 + 4)) = *((v5 + v7 + 4));\n
        *((v6 + v7 + 5)) = *((v5 + v7 + 5));\n
        *((v6 + v7 + 6)) = *((v5 + v7 + 6));\n
        *((v6 + v7 + 7)) = *((v5 + v7 + 7));\n
        v7 += 8;\n
    } while (v1 != v7);\n
    return v0;\n
}\n
", "4211538:sub_404352": null, "4211552:cgc_memmove": "int cgc_memmove(char *v0, char *a0, char *a1)\n
{\n
    int tmp_7;  // tmp #7\n
    char *v1;  // edi\n
    char *v2;  // eax\n
    char *v3;  // edx\n
    char *v4;  // edi\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    char *v7;  // edi, Other Possible Types: unsigned int\n
    char *v8;  // edi, Other Possible Types: unsigned int\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
    char *v11;  // edi\n
    unsigned int v12;  // edx\n
\n
    v1 = a1;\n
    v2 = v0;\n
    v3 = v1 + 1;\n
    if (v1 < 1)\n
        return v0;\n
    v9 = a0;\n
    if (v2 >= v9)\n
    {\n
        v5 = v3;\n
        v7 = v1 & 3;\n
        if (v7)\n
        {\n
            v5 = v3;\n
            do\n
            {\n
                v2[v5] = *((v9 + v5));\n
                v5 -= 1;\n
                tmp_7 = v7;\n
                v7 -= 1;\n
            } while (tmp_7 != 1);\n
        }\n
        if (v3 < 3)\n
            return v0;\n
        do\n
        {\n
            v2[v5] = *((v9 + v5));\n
            v2[1 + v5] = *((v9 + v5 - 1));\n
            v2[2 + v5] = *((v9 + v5 - 2));\n
            v2[3 + v5] = *((v9 + v5 - 3));\n
            v5 -= 4;\n
        } while (v5 != -1);\n
    }\n
    else\n
    {\n
        v4 = v1 & 7;\n
        if (!v4)\n
        {\n
            v8 = v3;\n
            v10 = v2;\n
            if (v3 < 7)\n
                return v0;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            do\n
            {\n
                v2[v6] = *((v9 + v6));\n
                v6 += 1;\n
            } while (v4 != v6);\n
            v8 = &v3[-1 * v6];\n
            v9 += v6;\n
            v10 = &v2[v6];\n
            if (v3 < 7)\n
                return v0;\n
        }\n
        v11 = v8 + 1;\n
        v12 = 0;\n
        do\n
        {\n
            *((v10 + v12)) = *((v9 + v12));\n
            *((v10 + v12 + 1)) = *((v9 + v12 + 1));\n
            *((v10 + v12 + 2)) = *((v9 + v12 + 2));\n
            *((v10 + v12 + 3)) = *((v9 + v12 + 3));\n
            *((v10 + v12 + 4)) = *((v9 + v12 + 4));\n
            *((v10 + v12 + 5)) = *((v9 + v12 + 5));\n
            *((v10 + v12 + 6)) = *((v9 + v12 + 6));\n
            *((v10 + v12 + 7)) = *((v9 + v12 + 7));\n
            v12 += 8;\n
        } while (v11 != v12);\n
        return v0;\n
    }\n
}\n
", "4211842:sub_404482": null, "4211856:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // ebx\n
    char *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 - 1;\n
    if (!(v1 & 7))\n
    {\n
        v6 = v2;\n
        if (v4 < 7)\n
            return v0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2[v5] = v3;\n
            v5 += 1;\n
        } while ((v1 & 7) != v5);\n
        v6 = &v2[v5];\n
        v1 -= v5;\n
        if (v4 < 7)\n
            return v0;\n
    }\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = v3;\n
        *((v6 + v7 + 1)) = v3;\n
        *((v6 + v7 + 2)) = v3;\n
        *((v6 + v7 + 3)) = v3;\n
        *((v6 + v7 + 4)) = v3;\n
        *((v6 + v7 + 5)) = v3;\n
        *((v6 + v7 + 6)) = v3;\n
        *((v6 + v7 + 7)) = v3;\n
        v7 += 8;\n
    } while (v1 != v7);\n
    return v0;\n
}\n
", "4211962:sub_4044fa": null, "4211968:cgc_strlen": "int cgc_strlen(char *v0)\n
{\n
    char *v1;  // ecx\n
    void* v2;  // edx, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!*(v1))\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = v1[1 + v2];\n
        v2 += 1;\n
    } while (v3);\n
    return v2;\n
}\n
", "4212000:cgc_strnlen": "int cgc_strnlen(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!*((v0 + v2)))\n
            return v2;\n
        v2 += 1;\n
        if (v1 == v2)\n
            return v1;\n
    }\n
}\n
", "4212035:sub_404543": null, "4212048:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // bl\n
    unsigned int v4;  // edx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    v4 = 0;\n
    if (*(v1))\n
    {\n
        do\n
        {\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v2[v4] = 0;\n
    return v0;\n
}\n
", "4212101:sub_404585": null, "4212112:cgc_strncpy": "int cgc_strncpy(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // bl\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        while (true)\n
        {\n
            v3 = *((a0 + v5));\n
            if (!v3)\n
                break;\n
            v2[v5] = v3;\n
            v5 += 1;\n
            if (v1 == v5)\n
                return v0;\n
        }\n
    }\n
    if (v5 >= v1)\n
        return v0;\n
    v4 = ~(v5) + v1;\n
    v6 = v1 - v5 & 7;\n
    if (v6)\n
    {\n
        do\n
        {\n
            v2[v5] = 0;\n
            v5 += 1;\n
            tmp_6 = v6;\n
            v6 -= 1;\n
        } while (tmp_6 != 1);\n
    }\n
    if (v4 < 7)\n
        return v0;\n
    do\n
    {\n
        *(&v2[v5]) = 0;\n
        *(&v2[4 + v5]) = 0;\n
        v5 += 8;\n
    } while (v1 != v5);\n
}\n
", "4212250:sub_40461a": null, "4212256:cgc_strcat": "int cgc_strcat(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    void* v3;  // edi, Other Possible Types: unsigned int\n
    char v4;  // cc_dep1\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    char v7;  // bl\n
    char *v8;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v8 = 0;\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            v5 = v3 + 1;\n
            v4 = v2[1 + v3];\n
            v3 = v5;\n
        } while (v4);\n
    }\n
    v6 = &v2[v5];\n
    v7 = *(v1);\n
    if (*(v1))\n
    {\n
        v8 = 0;\n
        do\n
        {\n
            *((v6 + v8)) = v7;\n
            v7 = v1[1 + v8];\n
            v8 += 1;\n
        } while (v7);\n
    }\n
    *((v6 + v8)) = 0;\n
    return v0;\n
}\n
", "4212343:sub_404677": null, "4212352:cgc_strncat": "int cgc_strncat(char *v0, unsigned int a0, char *a1)\n
{\n
    int tmp_6;  // tmp #6\n
    char *v1;  // ebp, Other Possible Types: unsigned int\n
    char *v2;  // esi\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
    char v4;  // cc_dep1\n
    void* v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // edx\n
    char v8;  // cl\n
    char *v9;  // ecx\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // esi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    v7 = 0;\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            v5 = v3 + 1;\n
            v4 = v2[1 + v3];\n
            v3 = v5;\n
        } while (v4);\n
    }\n
    v6 = &v2[v5];\n
    if (v1)\n
    {\n
        v7 = 0;\n
        while (true)\n
        {\n
            v8 = *((a0 + v7));\n
            if (!v8)\n
                break;\n
            *((v6 + v7)) = v8;\n
            v7 += 1;\n
            if (v1 == v7)\n
                goto LABEL_404727;\n
        }\n
    }\n
    if (v7 >= v1)\n
    {\n
LABEL_404727:\n
        *((v6 + v1)) = 0;\n
        return v6;\n
    }\n
    v9 = v1;\n
    v10 = &v1[-1 * v7];\n
    v11 = &v9[~(v7)];\n
    if ((v10 & 7))\n
    {\n
        do\n
        {\n
            *((v6 + v7)) = 0;\n
            v7 += 1;\n
            tmp_6 = v10;\n
            v10 -= 1;\n
        } while (tmp_6 != 1);\n
    }\n
    v1 = a1;\n
    if (v11 >= 7)\n
    {\n
        v12 = &v2[v5 + 7];\n
        do\n
        {\n
            *((v12 + v7 - 7)) = 0;\n
            *((v12 + v7 - 3)) = 0;\n
            v7 += 8;\n
        } while (v1 != v7);\n
    }\n
}\n
", "4212528:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) != *((a0 + v2)))\n
            return *((v0 + v2)) - *((a0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4212591:sub_40476f": null, "4212592:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    void* v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int v6;  // ecx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        while (true)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (!(v5 == v3))\n
                break;\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
            if (!v5)\n
                goto LABEL_4047a8;\n
        }\n
    }\n
LABEL_4047a8:\n
    v5 = 0;\n
    v6 = *(v1);\n
    return v5 - v6;\n
}\n
", "4212660:sub_4047b4": null, "4212672:cgc_strncmp": "int cgc_strncmp(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_11;  // tmp #11\n
    int tmp_8;  // tmp #8\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // edx\n
    char *v4;  // esi\n
    char *v5;  // edi\n
    char v6;  // bl\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = a1;\n
    tmp_11 = v3;\n
    v7 = v3 - 1;\n
    if (tmp_11 != 1)\n
    {\n
        v4 = &v2[v7];\n
        v5 = &v1[v7];\n
        while (true)\n
        {\n
            v6 = *(v2);\n
            if (!v6)\n
                break;\n
            if (!*(v1))\n
                break;\n
            if (v6 != *(v1))\n
                break;\n
            v2 += 1;\n
            v1 += 1;\n
            tmp_8 = v7;\n
            v7 -= 1;\n
            if (tmp_8 == 1)\n
            {\n
                v2 = v4;\n
                v1 = v5;\n
                break;\n
            }\n
        }\n
    }\n
    v8 = *(v2);\n
    v9 = *(v1);\n
    return v8 - v9;\n
}\n
", "4212748:sub_40480c": null, "4212752:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = v0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
            return v2;\n
        v1 -= 1;\n
        v2 += 1;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4212804:sub_404844": null, "4212816:cgc_strchr": "int cgc_strchr(char v0[2], unsigned int a0)\n
{\n
    char v1[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v2;  // dl, Other Possible Types: char\n
\n
    v1 = v0;\n
    v2 = v1[0];\n
    if (!v1[0])\n
        return 0;\n
    while (true)\n
    {\n
        if (a0 == v2)\n
            return v1;\n
        v2 = *((v1 + 1));\n
        v1 += 1;\n
        if (!v2)\n
            return 0;\n
    }\n
}\n
", "4212874:sub_40488a": null, "4212880:cgc_strpbrk": "int cgc_strpbrk(char v0[2], char *a0)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_5;  // tmp #5\n
    char v1[2];  // ecx\n
    char *v3;  // esi\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char v7;  // bl\n
    char v8;  // dl\n
    char *v9;  // ecx\n
    char *v10;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    v3 = a0;\n
    if (*(v3))\n
    {\n
        do\n
        {\n
            v6 = v3 + 1;\n
            v7 = *(v3);\n
            do\n
            {\n
                if (v1[0] == v7)\n
                    return v1;\n
                v7 = *(v6);\n
                v6 += 1;\n
            } while (v7);\n
            tmp_9 = v1[1];\n
            v8 = v1[1];\n
            v9 = &v1[1];\n
        } while (tmp_9);\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = &v1[1];\n
        do\n
        {\n
            tmp_5 = *(v10);\n
            v10 += 1;\n
        } while (tmp_5);\n
        return 0;\n
    }\n
}\n
", "4212972:sub_4048ec": null, "4212976:cgc_strrchr": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
int cgc_strrchr(char v0[4294967296], unsigned int a0)\n
{\n
    char v1[4294967296];  // ecx\n
    char v2[4294967296];  // eax, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
    unsigned int v4;  // esi\n
    struct_0 *v5;  // ecx, Other Possible Types: unsigned int\n
    char v6;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
    {\n
        v4 = -1;\n
        v6 = v1[-1];\n
        if (!v1[-1])\n
            return 0;\n
    }\n
    else\n
    {\n
        v2 = -1;\n
        do\n
        {\n
            v4 = v2 + 1;\n
            v3 = v1[2 + v2];\n
            v2 = v4;\n
        } while (v3);\n
        v6 = v1[v4];\n
        if (!v1[v4])\n
            return 0;\n
    }\n
    v5 = &v1[v4];\n
    while (true)\n
    {\n
        if (a0 == v6)\n
            return v5;\n
        v6 = *((v5 - 1));\n
        v5 -= 1;\n
        if (!v6)\n
            return 0;\n
    }\n
}\n
", "4213065:sub_404949": null, "4213072:cgc_strstr": "int cgc_strstr(char v1[2], char *a0)\n
{\n
    char v0[2];  // [bp-0x14]\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    char v2[2];  // eax\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4[2];  // esi, Other Possible Types: unsigned int\n
    char v5[3];  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    char v7;  // bl\n
    char v9[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // eax\n
    char v12;  // dl\n
\n
    *(&v0) = v2;\n
    v3 = a0;\n
    v9 = v1;\n
    if (!*(v3))\n
    {\n
        v7 = v9[0];\n
        if (!v9[0])\n
            return 0;\n
        v5 = v3 + 1;\n
        v6 = -1;\n
    }\n
    else\n
    {\n
        v5 = v3 + 1;\n
        v4 = 1;\n
        do\n
        {\n
            v4 -= 1;\n
            tmp_10 = *((v5 + 2));\n
            v5 += 1;\n
        } while (tmp_10);\n
        v7 = v9[0];\n
        if (!v9[0])\n
            return 0;\n
        if (v4)\n
        {\n
            v6 = -(v4);\n
        }\n
        else\n
        {\n
            while (v7 != *(v3))\n
            {\n
                v7 = *((v9 + 1));\n
                v9 += 1;\n
                if (!v7)\n
                    return 0;\n
            }\n
            goto LABEL_404a3c;\n
        }\n
    }\n
    *(&v0) = v6 - 1;\n
    do\n
    {\n
        v10 = 0;\n
        if (!v7 && !(0 == *(v3)))\n
            continue;\n
        do\n
        {\n
            v11 = v3;\n
            v12 = *((v3 + v10));\n
            if (!v12)\n
            {\n
LABEL_404a20:\n
                v3 = v11;\n
                if (!(v7 == *((v10 + v11))))\n
                    goto LABEL_4049d9;\n
                goto LABEL_404a3c;\n
            }\n
            if (!(v7 == v12))\n
                goto LABEL_404a20;\n
            if (v0 == v10)\n
            {\n
                v3 = v11;\n
                if (!(v9[v6] == *(v5)))\n
                    goto LABEL_4049d9;\n
                goto LABEL_404a3c;\n
            }\n
            v7 = v9[1 + v10];\n
            v10 += 1;\n
            v3 = v11;\n
        } while (v7);\n
        if (0 == *((v10 + v11)))\n
            goto LABEL_404a3c;\n
LABEL_4049d9:\n
        tmp_9 = *((v9 + 1));\n
        v7 = *((v9 + 1));\n
        v9 += 1;\n
    } while (tmp_9);\n
LABEL_404a3c:\n
    return v9;\n
}\n
", "4213186:sub_4049c2": null, "4213276:sub_404a1c": null, "4213291:sub_404a2b": null, "4213324:sub_404a4c": null, "4213328:cgc_strcspn": "int cgc_strcspn(char v0[2], char *a0)\n
{\n
    int tmp_5;  // tmp #5\n
    char v1[2];  // ecx\n
    char *v3;  // esi\n
    char v6[2];  // eax\n
    char v7;  // bl\n
    char *v8;  // edi, Other Possible Types: unsigned int\n
    char v9;  // dl\n
    char *v10;  // eax\n
    char *v11;  // eax, Other Possible Types: unsigned int\n
    void* v12;  // edx, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    char v14;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    v3 = a0;\n
    if (*(v3))\n
    {\n
        v6 = v1;\n
        do\n
        {\n
            v8 = v3 + 1;\n
            v7 = *(v3);\n
            do\n
            {\n
                if (v1[0] == v7)\n
                    return v6 - v1;\n
                v7 = *(v8);\n
                v8 += 1;\n
            } while (v7);\n
            v9 = v6[1];\n
            v10 = &v6[1];\n
        } while (v1[1]);\n
    }\n
    else\n
    {\n
        v11 = &v1[1];\n
        do\n
        {\n
            tmp_5 = *(v11);\n
            v11 += 1;\n
        } while (tmp_5);\n
    }\n
    v12 = 0;\n
    do\n
    {\n
        v13 = v12 + 1;\n
        v14 = v1[1 + v12];\n
        v12 = v13;\n
    } while (v14);\n
    return v13;\n
}\n
", "4213438:sub_404abe": null, "4213440:cgc_strspn": "int cgc_strspn(char *v0, char *a0)\n
{\n
    int tmp_19;  // tmp #19\n
    char *v1;  // eax\n
    char *v3;  // edx\n
    char *v6;  // esi, Other Possible Types: unsigned int\n
    char v7;  // bl\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v1 = v0;\n
    tmp_19 = *(v1);\n
    if (!tmp_19)\n
        return 0;\n
    v3 = a0;\n
    if (!*(v3))\n
        return 0;\n
    v9 = 0;\n
    while (true)\n
    {\n
        v6 = v3 + 1;\n
        v7 = *(v3);\n
        while (*(v1) != v7)\n
        {\n
            v7 = *(v6);\n
            v6 += 1;\n
            if (!v7)\n
                return v9;\n
        }\n
        v8 = v9 + 1;\n
    }\n
}\n
", "4213512:sub_404b08": null, "4213520:cgc_strtok": "extern struct_1 *cgc_strtok.last;\n
\n
int cgc_strtok(char v0[2], struct struct_0 **a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v1[2];  // esi\n
    char v2[2];  // edx, Other Possible Types: unsigned int\n
    char v4;  // cc_dep1\n
    struct struct_0 **v5;  // ebp\n
    char *v6;  // eax, Other Possible Types: unsigned int, void*\n
    char v7;  // cc_dep1\n
    char v8;  // bl\n
    struct struct_0 **v9;  // edi, Other Possible Types: unsigned int\n
    char *v10;  // bh, Other Possible Types: char\n
    char v11;  // bl\n
    char v12[2];  // edx\n
\n
    v1 = v0;\n
    v2 = cgc_strtok.last;\n
    if (!v1)\n
    {\n
        if (!cgc_strtok.last)\n
        {\n
            return 0;\n
        }\n
        else if (!cgc_strtok.last->field_0)\n
        {\n
            return 0;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            do\n
            {\n
                v4 = (&cgc_strtok.last->field_1)[v6];\n
                v6 += 1;\n
            } while (v4);\n
            if (!v6)\n
                return 0;\n
        }\n
    }\n
    v5 = a0;\n
    if (cgc_strtok.last)\n
    {\n
        v8 = cgc_strtok.last->field_0;\n
        if (cgc_strtok.last->field_0)\n
        {\n
            v6 = 1;\n
            do\n
            {\n
                v7 = (&cgc_strtok.last->field_0)[v6];\n
                v6 += 1;\n
            } while (v7);\n
            if (!(v6 == 1))\n
                goto LABEL_404b68;\n
        }\n
    }\n
    cgc_strtok.last = &v1[0];\n
    v8 = v1[0];\n
    v2 = v1;\n
LABEL_404b68:\n
    *(&v6) = *(v5);\n
    if (!*(v5))\n
        if (!v8)\n
            goto LABEL_0x404c18;\n
        else\n
            goto LABEL_0x404c0a;\n
LABEL_404b8e:\n
    v9 = v5 + 1;\n
    v10 = v6;\n
    do\n
    {\n
        if (v8 == v10)\n
        {\n
            cgc_strtok.last = v2 + 1;\n
            v11 = *((v2 + 1));\n
            v12 = cgc_strtok.last;\n
            goto LABEL_404b8e;\n
        }\n
        tmp_7 = *(v9);\n
        v10 = *(v9);\n
        v9 += 1;\n
    } while (tmp_7);\n
    if (!v8)\n
        goto LABEL_0x404c18;\n
    else\n
        goto LABEL_0x404bb1;\n
}\n
", "4213624:sub_404b78": null, "4213815:sub_404c37": null, "4213824:cgc_dfa_init": "int cgc_dfa_init(unsigned int v1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3[2];  // esi\n
    unsigned int v4;  // eax\n
    void* v5;  // ecx\n
    void* v6;  // edx, Other Possible Types: unsigned int\n
    unsigned int v7;  // edx\n
    unsigned int v9;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v4 = &v3[2] + 3;\n
    v5 = 0;\n
    do\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            *((v4 + v6 - 3)) = -1;\n
            v6 += 4;\n
        } while (v6 != 0x100);\n
        v7 = v5 * 0x100 + v5 * 8;\n
        *((8 + &v3[0] + v7)) = 0;\n
        *((12 + &v3[0] + v7)) = 0;\n
        v9 = v4 + 264;\n
    } while (v5 + 1 != 255);\n
    v3[0] = 0;\n
    v3[1] = 0;\n
    return cgc_bitset_init(v1 + 8416, 255);\n
}\n
", "4213973:sub_404cd5": null, "4213984:cgc_dfa_reset": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_dfa_reset(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_4 = v1 + 1;\n
    return v0;\n
}\n
", "4213995:sub_404ceb": null, "4214000:cgc_dfa_update_onmatch": "int cgc_dfa_update_onmatch(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    void* v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // edx\n
    unsigned int v4;  // esi\n
\n
    v1 = 0;\n
    v2 = a1;\n
    v3 = a0;\n
    v4 = v0;\n
    while (true)\n
    {\n
        if (*((v4 + v1 + 8)))\n
        {\n
            *((v4 + v1 + 8)) = v3;\n
            *((v4 + v1 + 12)) = v2;\n
        }\n
        if (v1 == 67056)\n
            break;\n
        if (*((v4 + v1 + 272)))\n
        {\n
            *((v4 + v1 + 272)) = v3;\n
            *((v4 + v1 + 276)) = v2;\n
        }\n
        v1 += 528;\n
    }\n
    return v1;\n
}\n
", "4214017:sub_404d01": null, "4214087:sub_404d47": null, "4214096:cgc_dfa_parse_desc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_dfa_parse_desc(struct_0 *v3, char a0[12], unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // edi\n
    char v5[12];  // edi\n
    struct_0 *v6;  // esi\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // esi\n
    char *v16;  // edx\n
    void* v17;  // edi\n
    unsigned int v18;  // eax\n
    unsigned int v25[2];  // ecx\n
    unsigned int v28;  // ecx\n
    struct_0 *v29;  // ebp, Other Possible Types: unsigned int\n
    char v30[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v31;  // edx\n
    unsigned int v32;  // edx\n
    unsigned int v34;  // edx\n
    unsigned int v35[2];  // edi\n
    unsigned int v36;  // ebp\n
\n
    v2 = v4;\n
    v5 = a0;\n
    v6 = v3;\n
    if (!cgc_strncmp(v5, \"state\", 5))\n
    {\n
        v7 = v6->field_4;\n
        v13 = v7 + 33;\n
        if (!v7)\n
            v13 = v6 + 1;\n
        v6->field_4 = v13;\n
        v15 = 0;\n
        if (!cgc_strcmp(&v5[6], \"accept\"))\n
            v25 = v3->field_4;\n
    }\n
    else\n
    {\n
        if (cgc_strcmp(v5, \"done\"))\n
        {\n
            v15 = -1;\n
            if (!cgc_strncmp(v5, \"transition \", 11))\n
            {\n
                v5[10] = 0;\n
                v18 = cgc_strrchr(&v5[11], 32);\n
                if (!v18)\n
                    goto LABEL_0x404f5c;\n
                v1 = v18;\n
                if (cgc_strtou(v18 + 1, 10, &v0) == -1)\n
                    goto LABEL_0x404f5c;\n
                v28 = v0;\n
                if (v28 <= 255)\n
                {\n
                    v15 = 0;\n
                    if (&v5[11] == v1)\n
                        goto LABEL_0x404f5c;\n
                    v29 = v3;\n
                    v30 = v5 + 1;\n
                    *(8 + &v3->field_4->field_0 + v5[11]) = v28;\n
                    v31 = v1;\n
                    if (v30 == v31)\n
                        goto LABEL_0x404f5c;\n
                    v32 = v31 - v5;\n
                    v34 = v32 & 3;\n
                    if (v34)\n
                    {\n
                        do\n
                        {\n
                            v35 = *((v29 + 4));\n
                            v36 = *(v30);\n
                            v30 += 1;\n
                            *(8 + &v35[0] + v36) = v0;\n
                            v29 = v3;\n
                            tmp_10 = v34;\n
                            v34 -= 1;\n
                        } while (tmp_10 != 1);\n
                    }\n
                    if (v32 - 13 < 3)\n
                        goto LABEL_0x404f5c;\n
                    do\n
                    {\n
                        *((*((v29 + 4)) + *(v30) + 8)) = v0;\n
                        *((*((v29 + 4)) + *((v30 + 1)) + 8)) = v0;\n
                        *((*((v29 + 4)) + *((v30 + 2)) + 8)) = v0;\n
                        *((*((v29 + 4)) + *((v30 + 3)) + 8)) = v0;\n
                        v30 += 4;\n
                    } while (v30 != v1);\n
                }\n
            }\n
        }\n
        v8 = v6 + 1;\n
        v9 = v6->field_4 - (v6 + 1);\n
        v10 = v9 / 8;\n
        v11 = v9 * 4;\n
        tmp_21 = v10;\n
        v12 = v10 - v11;\n
        *(&v12) = v12 + 1;\n
        if ([D] x86g_calculate_condition(0x4<32>, 0x10<32>, Conv(8->32, cl<1>), 0x0<32>, Conv(1->32, (t21 < eax<4>))))\n
            goto LABEL_0x404f4e;\n
        v16 = &v6[2].field_0 + 1;\n
        v17 = 0;\n
    }\n
}\n
", "4214642:sub_404f72": null, "4214718:sub_404fbe": null, "4214720:cgc_dfa_process_input": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_dfa_process_input(struct_1 *v0, char a0)\n
{\n
    struct_1 *v1;  // edi\n
    unsigned int v3;  // eax\n
    struct struct_0 **v4;  // ecx\n
\n
    v1 = v0;\n
    if (!v1->field_0)\n
        return -1;\n
    v3 = *(8 + &v1->field_4->field_0 + a0);\n
    if (v3 == 255)\n
        return -1;\n
    v1->field_4 = &v1[1 + 32 * v3 + v3].field_0;\n
    if (cgc_bitset_get_bit(v1 + 8416, v3) != 1)\n
    {\n
        return 0;\n
    }\n
    else if (!v1->field_4->field_0)\n
    {\n
        return 1;\n
    }\n
    else\n
    {\n
        v4();\n
        return 1;\n
    }\n
}\n
", "4214836:sub_405034": null, "4214848:cgc_dfa_give_example": "int cgc_dfa_give_example(unsigned int v4[2], unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    int tmp_2;  // tmp #2\n
    char *v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v5[2];  // esi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int *v8;  // ebp\n
    void* v9;  // edi, Other Possible Types: unsigned int\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    void* v12;  // ecx, Other Possible Types: unsigned int\n
    void* v13;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // edi\n
    char *v17;  // edx, Other Possible Types: unsigned int\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    char *v20;  // ecx, Other Possible Types: unsigned int\n
\n
    v5 = v4;\n
    v6 = v5[1];\n
    v3 = v5 + 1;\n
    v5[1] = v3;\n
    v7 = -1;\n
    if (!v5[0])\n
    {\n
LABEL_40520b:\n
        v5[1] = v6;\n
        return v7;\n
    }\n
    v0 = v6;\n
    v1 = a1;\n
    v8 = v5 + 8416;\n
    v9 = 0;\n
    while (true)\n
    {\n
        if (cgc_bitset_get_bit(v8, v9) != 1)\n
        {\n
            v9 += 1;\n
            if (v9 == 255)\n
                goto LABEL_4050ad;\n
        }\n
        else\n
        {\n
            tmp_2 = v1;\n
            v1 += 1;\n
            continue;\n
            if (tmp_2 == 1)\n
            {\n
                v20 = 0;\n
                goto LABEL_4051d5;\n
            }\n
            else\n
            {\n
                v19 = v5[1];\n
                v17 = 0;\n
                break;\n
            }\n
        }\n
    }\n
    do\n
    {\n
        v2 = v17;\n
        if (cgc_bitset_get_bit(v8, (v19 - v3 >> 3) * 1041204193))\n
        {\n
            v20 = v2;\n
LABEL_4051d5:\n
            *((a0 + v20)) = 0;\n
            v7 = -(cgc_bitset_get_bit(v8, (v5[1] - v3 >> 3) * 1041204193) != 1);\n
            v6 = v0;\n
            goto LABEL_40520b;\n
        }\n
        v10 = v5[1];\n
        v11 = 0;\n
        v12 = 0;\n
        do\n
        {\n
            v11 = (*((v10 + v12 + 11)) != 255) + (*((v10 + v12 + 10)) != 255) + (*((v10 + v12 + 9)) != 255) + (*((v10 + v12 + 8)) != 255) + v11;\n
            v12 += 4;\n
        } while (v12 != 0x100);\n
        if (!v11)\n
        {\n
LABEL_4050ad:\n
            v6 = v0;\n
            v7 = -1;\n
            goto LABEL_40520b;\n
        }\n
        v13 = 0;\n
        v14 = (0 CONCAT cgc_rand()) /m v11 >> 32;\n
        v15 = v5[1];\n
        while (true)\n
        {\n
            if (*((v15 + v13 + 8)) != 255)\n
            {\n
                if (!v14)\n
                    goto LABEL_405190;\n
                v14 -= 1;\n
            }\n
            if (*((v15 + v13 + 9)) != 255)\n
                break;\n
LABEL_405160:\n
            v13 += 2;\n
            if (v13 == 0x100)\n
                goto LABEL_4050ad;\n
        }\n
        if (v14)\n
        {\n
            v14 -= 1;\n
            goto LABEL_405160;\n
        }\n
        v13 += 1;\n
LABEL_405190:\n
        if (!v13)\n
            goto LABEL_4050ad;\n
        v16 = v2;\n
        *((a0 + v16)) = v13;\n
        v17 = v16 + 1;\n
        v18 = *((v5[1] + v13 + 8));\n
        v19 = &v5[32 * v18 + 2 * v18 + 2];\n
        v5[1] = v19;\n
    } while (v17 != v1);\n
    v20 = v1;\n
    goto LABEL_4051d5;\n
}\n
", "4215125:sub_405155": null, "4215326:sub_40521e": null, "4215328:main": "typedef struct struct_0 {\n
    char field_-7;\n
    char field_-6;\n
    char field_-5;\n
    char field_-4;\n
    char field_-3;\n
    char padding_-2[1];\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc_stdin[5];\n
extern char g_4081b1;\n
extern struct_0 g_4081b7;\n
extern char g_4081b8;\n
extern unsigned int g_410544[2];\n
extern char state;\n
\n
int main()\n
{\n
    void* v0;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v2[5];  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // edi\n
    unsigned int v9[2];  // edi, Other Possible Types: unsigned int\n
    char *v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // cl, Other Possible Types: char\n
    char *v14;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    void* v17;  // ebp, Other Possible Types: unsigned int\n
    void* v18;  // edi, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // eax\n
    void* v22;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v23;  // ecx, Other Possible Types: unsigned int\n
    char *v24;  // eax\n
    unsigned int v25;  // ecx\n
\n
    v6 = v8;\n
    v9 = &g_410544[0];\n
    cgc_dfa_init(&g_410544[0]);\n
    cgc_memset(&state, 0, 33682);\n
    v2 = &cgc_stdin[0];\n
    if (cgc_fread_until(&state, 10, 33682, cgc_stdin) == -1)\n
        return -1;\n
    v0 = 1;\n
    v5 = cgc_default_onmatch;\n
    while (true)\n
    {\n
        v10 = cgc_strchr(&state, 10);\n
        if (!v10)\n
            break;\n
        *(v10) = 0;\n
        if (!cgc_strcmp(&state, \"quit\"))\n
            return 0;\n
        if (!cgc_strcmp(&state, \"reset\"))\n
        {\n
            cgc_printf(\"Please re-enter state machine\\n
\");\n
            cgc_dfa_init(v9);\n
            cgc_memset(&state, 0, 33682);\n
            v0 = 1;\n
            if (cgc_fread_until(&state, 10, 33682, *(v2)) == -1)\n
                break;\n
            continue;\n
        }\n
        if (!cgc_strcmp(&state, \"example\"))\n
        {\n
            v19 = (!cgc_dfa_give_example(v9, &state, 0x28) ? \"Error, are you done initializing?\\n
\" : \"Here\\'s an example: \\\"%s\\\"\\n
\");\n
LABEL_4052b0:\n
            cgc_printf(v19);\n
            cgc_memset(&state, 0, 33682);\n
            if (cgc_fread_until(&state, 10, 33682, *(v2)) == -1)\n
                break;\n
            continue;\n
        }\n
        if (!cgc_strncmp(&state, \"onmatch \", 8))\n
        {\n
            if (!cgc_strcmp(&g_4081b8, \"default\"))\n
            {\n
                v15 = cgc_default_onmatch;\n
                goto LABEL_4054ea;\n
            }\n
            if (!cgc_strcmp(&g_4081b8, \"length\"))\n
            {\n
                v15 = cgc_length_onmatch;\n
                goto LABEL_4054ea;\n
            }\n
            if (!cgc_strcmp(&g_4081b8, \"xor\"))\n
            {\n
                v15 = cgc_xor_onmatch;\n
                goto LABEL_4054ea;\n
            }\n
            if (cgc_strcmp(&g_4081b8, \"magic\"))\n
            {\n
                v19 = \"Unrecognized action\\n
\";\n
                goto LABEL_4052b0;\n
            }\n
            else\n
            {\n
                v15 = cgc_magic_onmatch;\n
LABEL_4054ea:\n
                v5 = v15;\n
                cgc_dfa_update_onmatch(v9, v15, &state);\n
                cgc_printf(\"Match action updated\\n
\");\n
                cgc_memset(&state, 0, 33682);\n
                if (cgc_fread_until(&state, 10, 33682, *(v2)) == -1)\n
                    break;\n
            }\n
        }\n
        else\n
        {\n
            if (v0)\n
            {\n
                v11 = cgc_dfa_parse_desc(v9, &state, v5, &state);\n
                if (v11 == 1)\n
                {\n
                    cgc_printf(\"Ok, matching input now\\n
\");\n
                    v0 = 0;\n
                    v1 = 1;\n
                }\n
                else\n
                {\n
                    v0 = 1;\n
                    if (v11 == -1)\n
                    {\n
                        cgc_printf(\"Invalid\\n
\");\n
                        v1 = -1;\n
                    }\n
                    else\n
                    {\n
                        v1 = v11;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                cgc_dfa_reset(v9);\n
                *(&v13) = state;\n
                v12 = v1;\n
                if (state)\n
                {\n
                    v14 = &g_4081b1;\n
                    while (true)\n
                    {\n
                        v12 = cgc_dfa_process_input(v9, v13);\n
                        if (v12)\n
                            break;\n
                        v13 = *(v14);\n
                        v14 += 1;\n
                        if (!v13)\n
                        {\n
                            v1 = 0;\n
                            goto LABEL_405595;\n
                        }\n
                    }\n
                }\n
                v1 = v12;\n
                if (v12 + 1 >= 2)\n
                {\n
                    v4 = v9;\n
                    v17 = 0;\n
                    v18 = 0;\n
                    do\n
                    {\n
                        v17 ^= cgc_get_flag_byte(v18);\n
                        v18 += 1;\n
                    } while (v18 != 0x400);\n
                    v3 = cgc_strlen(&state);\n
                    if (!v3)\n
                    {\n
                        v9 = v4;\n
                    }\n
                    else\n
                    {\n
                        v20 = v3;\n
                        v0 = v20 & 7;\n
                        v22 = 0;\n
                        if (v20 - 1 >= 7)\n
                        {\n
                            v3 &= -8;\n
                            v22 = 0;\n
                            v23 = &g_4081b7.field_-7;\n
                            do\n
                            {\n
                                v17 = *(v23) ^ *((v23 - 1)) ^ *((v23 - 2)) ^ *((v23 - 3)) ^ *((v23 - 4)) ^ *((v23 - 5)) ^ *((v23 - 6)) ^ *((v23 - 7)) ^ v17;\n
                                v22 += 8;\n
                                v23 += 8;\n
                            } while (v3 != v22);\n
                        }\n
                        v9 = v4;\n
                        if (v0)\n
                        {\n
                            v24 = &(&state)[v22];\n
                            v25 = 0;\n
                            do\n
                            {\n
                                v17 ^= v24[v25];\n
                                v25 += 1;\n
                            } while (v0 != v25);\n
                        }\n
                    }\n
                    v16 = \"%x\\n
\";\n
                }\n
LABEL_405595:\n
                v16 = \"No match :( \\\"%s\\\"\\n
\";\n
            }\n
            cgc_memset(&state, 0, 33682);\n
            if (cgc_fread_until(&state, 10, 33682, *(v2)) == -1)\n
                break;\n
        }\n
    }\n
    return -1;\n
}\n
", "4215794:sub_4053f2": null, "4216570:sub_4056fa": null, "4216576:cgc_default_onmatch": "int cgc_default_onmatch()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    return cgc_printf(\"Got a match! \\\"%s\\\"\\n
\");\n
}\n
", "4216613:sub_405725": null, "4216624:cgc_length_onmatch": "int cgc_length_onmatch()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = cgc_strlen(v2);\n
    return cgc_printf(\"Got a match of length %u\\n
\");\n
}\n
", "4216671:sub_40575f": null, "4216672:cgc_xor_onmatch": "int cgc_xor_onmatch()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v2;  // eax\n
    unsigned int v3;  // dl, Other Possible Types: char\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    void* v5;  // ecx, Other Possible Types: unsigned int\n
\n
    v3 = *(v2);\n
    if (!*(v2))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v2 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            v5 ^= v3;\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v0 = v5;\n
    return cgc_printf(\"Checksum: %u\\n
\");\n
}\n
", "4216744:sub_4057a8": null, "4216752:cgc_magic_onmatch": "extern unsigned int cgc_stdin[5];\n
extern char state;\n
\n
int cgc_magic_onmatch()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v5;  // eax\n
    unsigned int v6;  // cl, Other Possible Types: char\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    void* v8;  // esi, Other Possible Types: unsigned int\n
    char *v9;  // eax, Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
\n
    v0 = -1;\n
    v6 = *(v5);\n
    if (!*(v5))\n
    {\n
        cgc_printf(\"I'm thinking of a magic number, can you guess it?!?!\\n
\");\n
        v8 = 0;\n
    }\n
    else\n
    {\n
        v7 = v5 + 1;\n
        v8 = 0;\n
        do\n
        {\n
            v8 ^= v6;\n
            v6 = *(v7);\n
            v7 += 1;\n
        } while (v6);\n
        v9 = cgc_printf(\"I'm thinking of a magic number, can you guess it?!?!\\n
\");\n
        if (v8 == -1)\n
            return v9;\n
    }\n
    v3 = \"WRONG!\\n
\";\n
    v2 = \"Haha, too small!\\n
\";\n
    v1 = \"Whoa, too big\\n
\";\n
    while (true)\n
    {\n
        if (cgc_fread_until(&state, 10, 33682, cgc_stdin) != -1)\n
        {\n
            v9 = cgc_strchr(&state, 10);\n
            if (!v9)\n
                return v9;\n
            *(v9) = 0;\n
            if (cgc_strtou(&state, 10, &v0) != -1)\n
            {\n
                v10 = v2;\n
                if (v0 >= v8)\n
                {\n
                    v10 = v1;\n
                    if ([D] x86g_calculate_condition(0x6<32>, 0x6<32>, Load(addr=stack_base-32, size=4, endness=Iend_LE), esi<4>, 0x0<32>))\n
                    {\n
                        v9 = cgc_printf(\"Just right!\\n
\");\n
                        return v9;\n
                    }\n
                }\n
                cgc_printf(v10);\n
            }\n
        }\n
        v9 = cgc_printf(v3);\n
        if (v0 == v8)\n
            return v9;\n
    }\n
}\n
", "4216899:sub_405843": null, "4217068:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}