{"4198400:_init": "extern struct_0 *g_405118;\n
\n
int _init()\n
{\n
    if (g_405118)\n
    {\n
        g_405118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198496:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198512:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198528:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 16431;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 16367;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_receive(v5, a0 + v3, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a1 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199029:sub_401275": null, "4199040:cgc_write_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(v5, a0 + v3, a1))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        a1 -= *(&v2);\n
        v3 = *(&v2) + v3;\n
    }\n
}\n
", "4199189:sub_401315": null, "4199200:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v0;\n
}\n
", "4199270:sub_401366": null, "4199280:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4199363:sub_4013c3": null, "4199376:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        v1[v2] = 0;\n
    }\n
    return v2;\n
}\n
", "4199531:sub_40146b": null, "4199536:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v3 = cgc_strlen() + v3;\n
    cgc_strcpy(v3, a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4199617:sub_4014c1": null, "4199632:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199688:sub_401508": null, "4199696:cgc_strncat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncat(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v3 = &v3[cgc_strlen(v3)];\n
    cgc_strncpy(v3, a0, a1);\n
    v3[a1] = 0;\n
    v5 = v2;\n
    return v1;\n
}\n
", "4199797:sub_401575": null, "4199808:cgc_strnlen": "int cgc_strnlen(char *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
    char *v4;  // eax\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v3 = a0;\n
        a0 = v3 - 1;\n
        v0 = 0;\n
        if (v3)\n
        {\n
            v4 = v2;\n
            v2 = v4 + 1;\n
            v0 = *(v4);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4199913:sub_4015e9": null, "4199920:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        v1 = 0;\n
        if (a1)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4200059:sub_40167b": null, "4200064:cgc_itoa": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoa(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0xd]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v6;  // eax\n
    char *v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // eax\n
    char *v10;  // eax\n
    char *v11;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = a0;\n
    v1 = a0;\n
    if (!v5)\n
    {\n
        v4 = cgc_strcpy(a0, v0 - 4380);\n
        return v4;\n
    }\n
    if (v5 < 0)\n
    {\n
        a0 += 1;\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        *(v6) = 45;\n
        v5 = -(v5);\n
    }\n
    for (; v5; v5 = (v8 >> 31 CONCAT v8) /m 10)\n
    {\n
        v7 = v2;\n
        v2 = v7 + 1;\n
        *(v7) = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
        v8 = v5;\n
    }\n
    v9 = v2;\n
    v2 = v9 + 1;\n
    for (*(v9) = 0; v2 - a0 > 0; *(v11) = v3)\n
    {\n
        v3 = *(a0);\n
        v10 = a0;\n
        a0 = v10 + 1;\n
        *(v10) = *(v2);\n
        v11 = v2;\n
        v2 = v11 + 1;\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4200347:sub_40179b": null, "4200352:cgc_pool_init": "int cgc_pool_init(unsigned int v1[3], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a0 <= 8)\n
        v0 = 8;\n
    else\n
        v0 = a0;\n
    v1[0] = v0;\n
    v1[2] = 0;\n
    v1[1] = 0;\n
    return v1;\n
}\n
", "4200429:sub_4017ed": null, "4200432:cgc_pool_destroy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_destroy(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v5 = *((v7 + 4));\n
    while (v5)\n
    {\n
        if ((v5 & 4095))\n
        {\n
LABEL_401986:\n
            v5 = *(v5);\n
        }\n
        else\n
        {\n
            if (*((v5 + 4)))\n
                *(*((v5 + 4))) = *(v5);\n
            else\n
                *((v7 + 4)) = *(v5);\n
            if (*(v5))\n
                *((*(v5) + 4)) = *((v5 + 4));\n
            else\n
                *((v7 + 8)) = *((v5 + 4));\n
            *((v5 + 4)) = 0;\n
            *(v5) = 0;\n
            if (!v2 && !v3)\n
            {\n
                v3 = v5;\n
                v2 = v3;\n
                goto LABEL_401977;\n
            }\n
            if (!v2)\n
            {\n
                *((v5 + 4)) = v3;\n
                *(v3) = v5;\n
                *(v5) = 0;\n
                v3 = v5;\n
            }\n
            else\n
            {\n
                *(v5) = v2;\n
                *((v2 + 4)) = v5;\n
                *((v5 + 4)) = 0;\n
                v2 = v5;\n
            }\n
LABEL_401977:\n
            goto LABEL_401986;\n
        }\n
    }\n
    v5 = v2;\n
    while (true)\n
    {\n
        if (!v5)\n
            return v6;\n
        v4 = v5;\n
        v5 = *(v5);\n
        v0 = 0x1000;\n
        v6 = cgc_deallocate(v4);\n
        if (v6)\n
            return v6;\n
    }\n
}\n
", "4200939:sub_4019eb": null, "4200944:cgc_pool_alloc": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_alloc(struct_3 *v4)\n
{\n
    struct_3 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    struct_1 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4->field_4)\n
    {\n
        v0 = v4;\n
        if (cgc_pool_grow())\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    v2 = v4->field_4;\n
    if (v2)\n
    {\n
        if (!v2->field_4)\n
            v4->field_4 = &v2->field_0->padding_0;\n
        else\n
            v2->field_4->field_0 = v2->field_0;\n
        if (!v2->field_0)\n
            v4->field_8 = v2->field_4;\n
        else\n
            v2->field_0->field_4 = v2->field_4;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4201168:cgc_pool_grow": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_pool_grow(struct_2 *v6)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1[2];  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7[2];  // ecx\n
\n
    v4 = 0;\n
    v2 = (0 CONCAT 0x1000) /m v6->field_0;\n
    v0 = 0;\n
    v4 = cgc_allocate(0x1000, 0, &v0, 0, 0, v2, 0);\n
    if (v4)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    for (v3 = 0; v3 < v2; v3 += 1)\n
    {\n
        v1[0] = v0 + v6->field_0 * v3;\n
        v1[1] = 0;\n
        v1[0] = 0;\n
        if (!v6->field_4 && !v6->field_8)\n
        {\n
            v7 = v1;\n
            v6->field_8 = &v7[0];\n
            v6->field_4 = &v7[0];\n
            goto LABEL_401c5f;\n
        }\n
        if (!v6->field_4)\n
        {\n
            v1[1] = v6->field_8;\n
            v6->field_8->field_0 = v1;\n
            v1[0] = 0;\n
            v6->field_8 = &v1[0];\n
        }\n
        else if (v6->field_4 == v6->field_4)\n
        {\n
            v1[0] = v6->field_4;\n
            v6->field_4->field_4 = &v1[0];\n
            v1[1] = 0;\n
            v6->field_4 = &v1[0];\n
        }\n
        else\n
        {\n
            v1[1] = v6->field_4->field_4;\n
            v1[0] = v6->field_4;\n
            v6->field_4->field_4->field_0 = v1;\n
            v6->field_4->field_4 = &v1[0];\n
        }\n
LABEL_401c5f:\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4201611:sub_401c8b": null, "4201616:cgc_pool_free": "int cgc_pool_free(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    unsigned int v2;  // eax\n
\n
    *((a0 + 4)) = 0;\n
    *(a0) = 0;\n
    *((a0 + 4)) = 0;\n
    *(a0) = 0;\n
    if (!*((v0 + 4)) && !*((v0 + 8)))\n
    {\n
        v1 = a0;\n
        *((v0 + 8)) = v1;\n
        v2 = v0;\n
        *((v2 + 4)) = v1;\n
        return v0;\n
    }\n
    if (!*((v0 + 4)))\n
    {\n
        *((a0 + 4)) = *((v0 + 8));\n
        *(*((v0 + 8))) = a0;\n
        *(a0) = 0;\n
        v2 = v0;\n
        *((v2 + 8)) = a0;\n
    }\n
    else\n
    {\n
        if (*((v0 + 4)) == *((v0 + 4)))\n
        {\n
            *(a0) = *((v0 + 4));\n
            *((*((v0 + 4)) + 4)) = a0;\n
            *((a0 + 4)) = 0;\n
            v2 = v0;\n
        }\n
        else\n
        {\n
            *((a0 + 4)) = *((*((v0 + 4)) + 4));\n
            *(a0) = *((v0 + 4));\n
            *(*((*((v0 + 4)) + 4))) = a0;\n
            v2 = *((v0 + 4));\n
        }\n
        *((v2 + 4)) = a0;\n
    }\n
    return v2;\n
}\n
", "4201907:sub_401db3": null, "4201920:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    char v2;  // [bp-0x34]\n
    void* v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    memset(&v2, 0, 20);\n
    cgc_stock_init(v1 + 48, 0);\n
    while (true)\n
    {\n
        do\n
        { } while (cgc_read_all(0, &v2, 20) != 20);\n
        v0 = *(&v2);\n
        if (v0 <= 5)\n
            break;\n
        v4 = -1;\n
        cgc_write_all(1, &v4, 4);\n
    }\n
    goto *(((stack_base)[56] + (stack_base)[60] * 4 - 4376)) + (stack_base)[56];\n
}\n
", "4202095:sub_401e6f": "int sub_401e6f()\n
{\n
    char v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp+0x0]\n
\n
    v2 = *(&v0) + 48;\n
    v1 = cgc_cmd_list_stocks();\n
}\n
", "4202120:sub_401e88": "int sub_401e88()\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v3 = &v1;\n
    v2 = cgc_cmd_list_orders(*(&v0) + 48);\n
}\n
", "4202155:sub_401eab": "int sub_401eab()\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x28]\n
    char v3;  // [bp-0x24]\n
    char v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // [bp+0x10]\n
\n
    v7 = *(&v4);\n
    v5 = cgc_cmd_place_order(*(&v0) + 48, &v1, *(&v2), *(&v3));\n
}\n
", "4202211:sub_401ee3": "int sub_401ee3()\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v3 = *(&v1);\n
    v2 = cgc_cmd_check_order(*(&v0) + 48);\n
}\n
", "4202243:sub_401f03": "int sub_401f03()\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v3 = *(&v1);\n
    v2 = cgc_cmd_cancel_order(*(&v0) + 48);\n
}\n
", "4202275:sub_401f23": "int sub_401f23()\n
{\n
    char v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp+0x0]\n
    char v3;  // [bp+0x4c]\n
    char v4;  // [bp+0x50]\n
    char v5;  // [bp+0x54]\n
    char v6;  // [bp+0x58]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebp\n
\n
    v1 = *(&v0) + 48;\n
    cgc_stock_destroy();\n
    v7 = *(&v3);\n
    v8 = *(&v4);\n
    v9 = *(&v5);\n
    v10 = *(&v6);\n
    return;\n
}\n
", "4202349:sub_401f6d": null, "4202352:cgc_cmd_list_stocks": "typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char padding_20[4];\n
    unsigned int field_24;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_list_stocks(struct_1 *v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    struct_0 *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    memset(&v1, 0, 5);\n
    v3 = v7->field_c;\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            v3 = v7->field_c;\n
            while (true)\n
            {\n
                if (v3)\n
                {\n
                    v4 = cgc_strnlen(v3 + 4, 4);\n
                    cgc_strncpy(&v1, v3 + 4, v4);\n
                    v9 = v4;\n
                    v4 = v9 + 1;\n
                    (&v1)[v9] = 10;\n
                    if (cgc_write_all(1, &v1, v4) != v4)\n
                    {\n
                        v5 = -1;\n
                        return v5;\n
                    }\n
                    v3 = *((v3 + 20));\n
                }\n
                else\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3->field_1c && !v3->field_24)\n
        {\n
            cgc_remove_stock(v7);\n
            goto LABEL_402023;\n
        }\n
        if (v3->field_18 != v2)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v2 = v3;\n
LABEL_402023:\n
        v3 = v3->field_14;\n
    }\n
}\n
", "4202724:sub_4020e4": null, "4202736:cgc_remove_stock": "typedef struct struct_2 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_stock(unsigned int v3, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    v1[0] = cgc_get_bucket(v3);\n
    if (!a0->field_10)\n
        v1[0] = a0->field_c;\n
    else\n
        a0->field_10->field_c = a0->field_c;\n
    if (!a0->field_c)\n
    {\n
        v1[1] = a0->field_10;\n
        return cgc_pool_free(v3, a0);\n
    }\n
    a0->field_c->field_10 = a0->field_10;\n
    return cgc_pool_free(v3, a0);\n
}\n
", "4202916:sub_4021a4": null, "4202928:cgc_cmd_list_orders": "typedef struct struct_0 {\n
    char padding_0[28];\n
    struct struct_0 *field_1c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_list_orders(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xe4]\n
    char v1;  // [bp-0xe0]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct struct_0 *v3[10];  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3[0] = 0;\n
    v2 = 0;\n
    memset(&v1, 0, 200);\n
    v3[0] = cgc_lookup_stock(v7);\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    cgc_strcpy(&v1, v0 - 0x1100);\n
    cgc_strncat(&v1, &v3[1], 4);\n
    cgc_strcat(&v1, v0 - 4336);\n
    v2 = cgc_strlen(&v1);\n
    if (cgc_write_all(1, &v1, v2) != v2)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v4 = v3[9];\n
    while (true)\n
    {\n
        if (v4)\n
        {\n
            cgc_order_to_str(v4);\n
            v2 = cgc_strlen(&v1);\n
            if (cgc_write_all(1, &v1, v2) != v2)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v4 = *((v4 + 28));\n
        }\n
        else\n
        {\n
            v4 = v3[7];\n
            while (true)\n
            {\n
                if (v4)\n
                {\n
                    cgc_order_to_str(v4);\n
                    v2 = cgc_strlen(&v1);\n
                    if (cgc_write_all(1, &v1, v2) != v2)\n
                    {\n
                        v5 = -1;\n
                        return v5;\n
                    }\n
                    v4 = *((v4 + 28));\n
                }\n
                else\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4203547:sub_40241b": null, "4203552:cgc_lookup_stock": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lookup_stock(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct struct_0 **v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = cgc_get_bucket(v5);\n
    v2 = *(v1);\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!cgc_strncmp(v2 + 4, a0, 4))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = *((v2 + 12));\n
    }\n
}\n
", "4203713:sub_4024c1": null, "4203728:cgc_order_to_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_order_to_str(unsigned int v8[10], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v5;  // [bp-0x5c]\n
    char v6;  // [bp-0x58]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v6, 0, 80);\n
    v5 = a0;\n
    cgc_strcpy(v5, cgc_itoa(v8[2], &v6));\n
    if (!v8[9])\n
    {\n
        cgc_strcat(a0, v4 - 4307);\n
        v2 = a0;\n
        cgc_strcat(v2, cgc_itoa(v8[4], &v6));\n
        cgc_strcat(a0, v4 - 4294);\n
        v3 = a0;\n
        cgc_strcat(v3, cgc_itoa(v8[3], &v6));\n
        v10 = cgc_strcat(a0, v4 - 4301);\n
        return v10;\n
    }\n
    cgc_strcat(a0, v4 - 4296);\n
    v0 = a0;\n
    cgc_strcat(v0, cgc_itoa(v8[3], &v6));\n
    cgc_strcat(a0, v4 - 4294);\n
    v1 = a0;\n
    cgc_strcat(v1, cgc_itoa(v8[4], &v6));\n
    v10 = cgc_strcat(a0, v4 - 4292);\n
    return v10;\n
}\n
", "4204193:sub_4026a1": null, "4204208:cgc_cmd_place_order": "int cgc_cmd_place_order(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v6;  // edx\n
\n
    v6 = (!a1 ? 1 : 0);\n
    v0 = v5;\n
    v1 = a0;\n
    v2 = v6;\n
    v3 = a2;\n
    v4 = a3;\n
    return cgc_insert_order();\n
}\n
", "4204304:cgc_insert_order": "typedef struct struct_1 {\n
    char padding_0[28];\n
    struct struct_1 *field_1c;\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_6 {\n
    char padding_0[20];\n
    struct struct_5 *field_14;\n
    struct struct_4 *field_18;\n
} struct_6;\n
\n
typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    char padding_0[24];\n
    struct struct_4 *field_18;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_4;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_order(struct_6 *v9, char *a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0[11];  // [bp-0x34]\n
    struct_2 *v1;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x20]\n
    struct_2 *v3;  // [bp-0x1c]\n
    struct_3 *v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6[11];  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11[11];  // ecx\n
    unsigned int v12[11];  // ecx\n
    struct_3 *v13;  // eax\n
\n
    v8 = v10;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6[0] = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!cgc_strnlen(a0, 4))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v4 = cgc_lookup_stock(v9, a0);\n
    if (!v4 && cgc_insert_stock(v9))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    if (!v4)\n
    {\n
        v4 = cgc_lookup_stock(v9, a0);\n
        if (!v4)\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
    }\n
    v6[0] = cgc_pool_alloc(v9);\n
    if (!v6)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6[2] = cgc_get_next_id(v9);\n
    v6[9] = a1;\n
    v6[4] = a2;\n
    v6[3] = a3;\n
    v6[10] = v4;\n
    v6[1] = v2 - 7508;\n
    v6[6] = 0;\n
    v6[5] = 0;\n
    v6[8] = 0;\n
    v6[7] = 0;\n
    if (!a1)\n
        v1 = v4 + 28;\n
    else\n
        v1 = v4 + 36;\n
    v3 = v1;\n
    for (v5 = v3->field_0; v5; v5 = v5->field_1c)\n
    {\n
        if (cgc_order_cmp(v5) >= 0)\n
            break;\n
    }\n
    v6[8] = 0;\n
    v6[7] = 0;\n
    if (!v3->field_0 && !v3->field_4)\n
    {\n
        v11 = v6;\n
        v3->field_4 = &v11[0];\n
        v3->field_0 = &v11[0];\n
        goto LABEL_4029f6;\n
    }\n
    if (!v5)\n
    {\n
        v6[8] = v3->field_4;\n
        v3->field_4->field_1c = v6;\n
        v6[7] = 0;\n
        v3->field_4 = &v6[0];\n
    }\n
    else if (v5 == v3->field_0)\n
    {\n
        v6[7] = v3->field_0;\n
        v3->field_0->field_20 = &v6[0];\n
        v6[8] = 0;\n
        v3->field_0 = &v6[0];\n
    }\n
    else\n
    {\n
        v6[8] = *((v5 + 32));\n
        v6[7] = v5;\n
        *((*((v5 + 32)) + 28)) = v6;\n
        *((v5 + 32)) = v6;\n
    }\n
LABEL_4029f6:\n
    v6[6] = 0;\n
    v6[5] = 0;\n
    if (!v9->field_14 && !v9->field_18)\n
    {\n
        v12 = v6;\n
        v9->field_18 = &v12[0];\n
        v9->field_14 = &v12[0];\n
        goto LABEL_402b01;\n
    }\n
    if (!v9->field_14)\n
    {\n
        v6[6] = v9->field_18;\n
        v9->field_18->field_14 = v6;\n
        v6[5] = 0;\n
        v9->field_18 = &v6[0];\n
    }\n
    else if (v9->field_14 == v9->field_14)\n
    {\n
        v6[5] = v9->field_14;\n
        v9->field_14->field_18 = &v6[0];\n
        v6[6] = 0;\n
        v9->field_14 = &v6[0];\n
    }\n
    else\n
    {\n
        v6[6] = v9->field_14->field_18;\n
        v6[5] = v9->field_14;\n
        v9->field_14->field_18->field_14 = v6;\n
        v9->field_14->field_18 = &v6[0];\n
    }\n
LABEL_402b01:\n
    v13 = v4;\n
    v13->field_8 = v13->field_8 + 1;\n
    v0[0] = v6;\n
    if (!cgc_match_order(v9, v4))\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v7 = v6[2];\n
    return v7;\n
}\n
", "4205402:sub_402b5a": null, "4205408:cgc_cmd_check_order": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_check_order(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xe0]\n
    char v1;  // [bp-0xdc]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    memset(&v1, 0, 200);\n
    v3 = cgc_lookup_order(v6);\n
    if (!v3)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (v3->field_8 == v3)\n
    {\n
        cgc_order_to_str(v3, &v1);\n
        v2 = cgc_strlen(&v1);\n
        if (cgc_write_all(1, &v1, v2) != v2)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4205690:sub_402c7a": null, "4205696:cgc_lookup_order": "int cgc_lookup_order(unsigned int v0, unsigned int a0)\n
{\n
    return a0;\n
}\n
", "4205710:sub_402c8e": null, "4205712:cgc_cmd_cancel_order": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[8];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_cancel_order(struct_1 *v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v2 = v4->field_14; v2; v2 = v2->field_14)\n
    {\n
        if (v2->field_8 == a0)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v0 = v2;\n
    cgc_remove_order(v4);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4205864:sub_402d28": null, "4205872:cgc_remove_order": "typedef struct struct_5 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    struct struct_4 *field_18;\n
    struct struct_3 *field_1c;\n
    struct struct_0 *field_20;\n
    unsigned int field_24;\n
    struct struct_6 *field_28;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_6 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[16];\n
    unsigned int field_1c;\n
    char padding_20[4];\n
    unsigned int field_24;\n
} struct_6;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_order(unsigned int v3[7], struct_5 *a0)\n
{\n
    unsigned int v0[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v4[10];  // eax\n
    struct_5 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = 0;\n
    if (!a0->field_24)\n
        v0[0] = &a0->field_28->field_1c;\n
    else\n
        v0 = &a0->field_28->field_24;\n
    v2[0] = v0;\n
    if (!a0->field_18)\n
        v3[5] = a0->field_14;\n
    else\n
        a0->field_18->field_14 = a0->field_14;\n
    if (!a0->field_14)\n
        v3[6] = a0->field_18;\n
    else\n
        a0->field_14->field_18 = a0->field_18;\n
    if (!a0->field_20)\n
        v2[0] = a0->field_1c;\n
    else\n
        a0->field_20->field_1c = a0->field_1c;\n
    if (!a0->field_1c)\n
        v2[1] = a0->field_20;\n
    else\n
        a0->field_1c->field_20 = a0->field_20;\n
    v4 = a0->field_28;\n
    v4[2] = v4[2] - 1;\n
    if (!a0->field_28->field_1c && !a0->field_28->field_24)\n
        cgc_remove_stock(v3, a0->field_28);\n
    v5 = a0;\n
    if (!v5->field_10)\n
        v5 = a0->field_4();\n
    return v5;\n
}\n
", "4206256:cgc_stock_init": "int cgc_stock_init(unsigned int v2[7])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[7];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3[7];  // eax, Other Possible Types: unsigned int\n
\n
    v1[0] = 0;\n
    v0 = 44;\n
    cgc_pool_init(v2, v0);\n
    v2[4] = 0;\n
    v2[3] = 0;\n
    v2[6] = 0;\n
    v3 = v2;\n
    v3[5] = 0;\n
    for (v1[0] = 0; v1 < 251; v1 = v3)\n
    {\n
        *((32 + &v2[0] + 0x8 * v1)) = 0;\n
        *((28 + &v2[0] + 0x8 * v1)) = 0;\n
        v3 = &v1[0] + 1;\n
    }\n
    return v3;\n
}\n
", "4206433:sub_402f61": null, "4206448:cgc_stock_destroy": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_stock_destroy(struct_1 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = v3->field_14;\n
    while (v2)\n
    {\n
        v1 = v2;\n
        v2 = v2->field_14;\n
        cgc_remove_order(v3, v1);\n
    }\n
    return cgc_pool_destroy(v3);\n
}\n
", "4206567:sub_402fe7": null, "4206576:cgc_get_bucket": "int cgc_get_bucket(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = v2 + 28;\n
    v0 = 4;\n
    v3 = cgc_strhash(a0);\n
    return v1 + ((v3 >> 31 CONCAT v3) /m 251 >> 32) * 8;\n
}\n
", "4206651:sub_40303b": null, "4206656:cgc_strhash": "int cgc_strhash(char *v3, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v1 = v3;\n
    while (true)\n
    {\n
        v4 = a0;\n
        a0 = v4 - 1;\n
        v0 = 0;\n
        if (v4)\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 = v2 * 0x100 + *(v1);\n
        v1 += 1;\n
    }\n
    return v2;\n
}\n
", "4206783:sub_4030bf": null, "4206784:cgc_insert_stock": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    char padding_0[12];\n
    struct struct_4 *field_c;\n
    struct struct_3 *field_10;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[24];\n
    struct struct_3 *field_18;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_stock(struct_5 *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_2 *v1;  // [bp-0x14]\n
    unsigned int v2[11];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7[11];  // ecx\n
    unsigned int v8[11];  // ecx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = 0;\n
    v1 = 0;\n
    v1 = cgc_get_bucket(v5, a0);\n
    v2[0] = cgc_pool_alloc(v5);\n
    if (!v2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2[8] = 0;\n
    v2[7] = 0;\n
    v2[10] = 0;\n
    v2[9] = 0;\n
    v2[6] = 0;\n
    v2[5] = 0;\n
    v2[4] = 0;\n
    v2[3] = 0;\n
    v2[6] = 0;\n
    v2[5] = 0;\n
    if (!v5->field_c && !v5->field_10)\n
    {\n
        v7 = v2;\n
        v5->field_10 = &v7[0];\n
        v5->field_c = &v7[0];\n
        goto LABEL_40328a;\n
    }\n
    if (!v5->field_c)\n
    {\n
        v2[6] = v5->field_10;\n
        v5->field_10->field_14 = v2;\n
        v2[5] = 0;\n
        v5->field_10 = &v2[0];\n
    }\n
    else if (v5->field_c == v5->field_c)\n
    {\n
        v2[5] = v5->field_c;\n
        v5->field_c->field_18 = &v2[0];\n
        v2[6] = 0;\n
        v5->field_c = &v2[0];\n
    }\n
    else\n
    {\n
        v2[6] = v5->field_c->field_18;\n
        v2[5] = v5->field_c;\n
        v5->field_c->field_18->field_14 = v2;\n
        v5->field_c->field_18 = &v2[0];\n
    }\n
LABEL_40328a:\n
    v2[4] = 0;\n
    v2[3] = 0;\n
    if (!v1->field_0 && !v1->field_4)\n
    {\n
        v8 = v2;\n
        v1->field_4 = &v8[0];\n
        v1->field_0 = &v8[0];\n
        goto LABEL_403389;\n
    }\n
    if (!v1->field_0)\n
    {\n
        v2[4] = v1->field_4;\n
        v1->field_4->field_c = v2;\n
        v2[3] = 0;\n
        v1->field_4 = &v2[0];\n
    }\n
    else if (v1->field_0 == v1->field_0)\n
    {\n
        v2[3] = v1->field_0;\n
        v1->field_0->field_10 = &v2[0];\n
        v2[4] = 0;\n
        v1->field_0 = &v2[0];\n
    }\n
    else\n
    {\n
        v2[4] = v1->field_0->field_10;\n
        v2[3] = v1->field_0;\n
        v1->field_0->field_10->field_c = v2;\n
        v1->field_0->field_10 = &v2[0];\n
    }\n
LABEL_403389:\n
    cgc_strcpy(&v2[1], a0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4207547:sub_4033bb": null, "4207552:cgc_get_next_id": "int cgc_get_next_id(unsigned int v0, unsigned int a0)\n
{\n
    return a0;\n
}\n
", "4207566:sub_4033ce": null, "4207568:cgc_on_complete": "int cgc_on_complete(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4207576:sub_4033d8": null, "4207584:cgc_order_cmp": "int cgc_order_cmp(unsigned int v2[10], unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2[3] != a0[3])\n
    {\n
        v1 = a0[3] - v2[3];\n
        return v1;\n
    }\n
    if (!v2[9])\n
        v0 = a0[2] - v2[2];\n
    else\n
        v0 = v2[2] - a0[2];\n
    v1 = v0;\n
    return v1;\n
}\n
", "4207696:cgc_match_order": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[12];\n
    struct struct_0 *field_20;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_match_order(unsigned int v6[7], struct struct_0 *a0[11], unsigned int a1[10])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8[10];  // eax\n
    struct_0 *v9;  // eax\n
    unsigned int v10[10];  // eax\n
    struct_0 *v11;  // eax\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a1[9])\n
    {\n
        for (v4 = a0[8]; v4; v4 = *((v4 + 32)))\n
        {\n
            if (a1[3] <= *((v4 + 12)))\n
            {\n
                if (a1[4] >= *((v4 + 16)))\n
                    v0 = *((v4 + 16));\n
                else\n
                    v0 = a1[4];\n
                v3 = v0;\n
                v10 = a1;\n
                v10[4] = v10[4] - v3;\n
                v11 = v4;\n
                v11->field_10 = v11->field_10 - v3;\n
                if (!v4->field_10)\n
                    cgc_remove_order(v6, v4);\n
                if (!a1[4])\n
                {\n
                    cgc_remove_order(v6, a1);\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        for (v4 = a0[10]; v4; v4 = v4->field_20)\n
        {\n
            if (a1[3] >= v4->field_c)\n
            {\n
                if (a1[4] >= *((v4 + 16)))\n
                    v1 = v4->field_10;\n
                else\n
                    v1 = a1[4];\n
                v3 = v1;\n
                v8 = a1;\n
                v8[4] = v8[4] - v3;\n
                v9 = v4;\n
                v9->field_10 = v9->field_10 - v3;\n
                if (!v4->field_10)\n
                    cgc_remove_order(v6, v4);\n
                if (!a1[4])\n
                {\n
                    cgc_remove_order(v6, a1);\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    return (!a1[4] ? -1 : 0);\n
}\n
", "4208208:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:memset": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}