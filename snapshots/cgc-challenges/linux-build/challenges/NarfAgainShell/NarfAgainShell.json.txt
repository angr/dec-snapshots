{"4198400:_init": "extern struct_0 *g_406d08;\n
\n
int _init()\n
{\n
    if (g_406d08)\n
    {\n
        g_406d08();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198496:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198512:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198528:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198544:sub_401090": "int sub_401090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198550:sub_401096": null, "4198560:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198603:sub_4010cb": null, "4198604:sub_4010cc": "int sub_4010cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198608:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198612:sub_4010d4": null, "4198624:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 23599;\n
    v6 = v5 + 18;\n
    v7 = v5 + 18;\n
    if (v7 == v6)\n
        return v5 + 18;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198675:sub_401113": "int sub_401113()\n
{\n
}\n
", "4198681:sub_401119": "int sub_401119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198688:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 23535;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 18;\n
    v9 = (v6 + 18 - (v6 + 18) >> 31) + (18 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198759:sub_401167": "int sub_401167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198768:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406d04;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406d04)\n
    {\n
        v0 = __dso_handle;\n
        sub_401090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198843:sub_4011bb": "int sub_4011bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198848:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198857:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198861:sub_4011cd": null, "4198864:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_receive(v5, a0 + v3, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a1 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199013:sub_401265": null, "4199024:cgc_write_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(v5, a0 + v3, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a1 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199173:sub_401305": null, "4199184:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v1;\n
}\n
", "4199254:sub_401356": null, "4199264:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4199350:sub_4013b6": null, "4199360:cgc_memmove": "int cgc_memmove(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
    char *v7;  // eax\n
\n
    v1 = v3;\n
    v0 = a0;\n
    if (v1 == v0)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    if (v0 < v1)\n
    {\n
        while (true)\n
        {\n
            v4 = a1;\n
            a1 = v4 + 1;\n
            if (!v4)\n
                break;\n
            v1[a1] = *((v0 + a1));\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v5 = a1;\n
            a1 = v5 + 1;\n
            if (!v5)\n
                break;\n
            v6 = v0;\n
            v0 = v6 + 1;\n
            tmp_19 = *(v6);\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            *(v7) = tmp_19;\n
        }\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4199555:sub_401483": null, "4199568:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199624:sub_4014c8": null, "4199632:cgc_strnlen": "int cgc_strnlen(char *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
    char *v4;  // eax\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v3 = a0;\n
        a0 = v3 - 1;\n
        v0 = 0;\n
        if (v3)\n
        {\n
            v4 = v2;\n
            v2 = v4 + 1;\n
            v0 = *(v4);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4199737:sub_401539": null, "4199744:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4199857:sub_4015b1": null, "4199872:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        v1 = 0;\n
        if (a1)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4200011:sub_40164b": null, "4200016:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4200099:sub_4016a3": null, "4200112:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        v1[v2] = 0;\n
    }\n
    return v2;\n
}\n
", "4200267:sub_40174b": null, "4200272:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v3 = &v3[cgc_strlen(v3)];\n
    cgc_strcpy(v3, a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4200353:sub_4017a1": null, "4200368:cgc_strncat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncat(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    v3 = &v3[cgc_strlen(v3)];\n
    cgc_strncpy(v3, a0, a1);\n
    v3[a1] = 0;\n
    v5 = v2;\n
    return v1;\n
}\n
", "4200469:sub_401815": null, "4200480:cgc_strchr": "int cgc_strchr(char *v1, char a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4200565:sub_401875": null, "4200576:cgc_strrchr": "int cgc_strrchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v2); v2 += 1);\n
    while (true)\n
    {\n
        if (v2 < v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v2) != a0)\n
        {\n
            v2 -= 1;\n
        }\n
        else\n
        {\n
            v1 = v2;\n
            return v1;\n
        }\n
    }\n
}\n
", "4200705:sub_401901": null, "4200720:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[76];\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v4)\n
    {\n
LABEL_40196c:\n
        if (v0->field_4c && !(!cgc_strlen(v0->field_4c)))\n
            goto LABEL_4019a2;\n
        v0->field_4c = v4;\n
LABEL_4019a2:\n
        for (; v0->field_4c->field_0 == a0; v5->field_4c = v5->field_4c + 1)\n
        {\n
            v5 = v0;\n
        }\n
        if (!cgc_strlen(v0->field_4c))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v6 = v0;\n
        v1 = &v6->field_4c->field_0;\n
        v2 = cgc_strchr(v6->field_4c, a0);\n
        if (!v2)\n
        {\n
            v0->field_4c = 0;\n
        }\n
        else\n
        {\n
            *(v2) = 0;\n
            v0->field_4c = &v2[1];\n
        }\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        if (v0->field_4c && !(!cgc_strlen(v0->field_4c)))\n
            goto LABEL_40196c;\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4201056:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x29]\n
    unsigned int v5;  // [bp-0x28]\n
    struct_0 *v6;  // [bp-0x24]\n
    unsigned int *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int *v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < v6->field_28)\n
        v13 = v6->field_28;\n
    if (v13 > 4095)\n
    {\n
        v12 = cgc_allocate_large_chunk();\n
        return v12;\n
    }\n
    v5 = cgc_log_base_two();\n
    v10 = v5 - cgc_log_base_two();\n
    if (v10 >= 8)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (!v11)\n
            v4 = v10 < 8;\n
        if (!(v4 & 1))\n
            break;\n
        v14 = v6;\n
        v15 = v10;\n
        v10 = v15 + 1;\n
        v0 = v13;\n
        v9 = ::0x401d50::cgc_list_find(&v14[1].padding_0[36 + 8 * v15], &v14[461].padding_0[8]);\n
        if (!v9)\n
            v3 = 0;\n
        else\n
            v3 = -5 + v9;\n
        v8 = v3;\n
        v11 = v8;\n
    }\n
    if (!v11)\n
    {\n
        v11 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v7 = v11;\n
        v2 = &v6[1].padding_0[36 + 8 + 8 * v10];\n
        if (!v7)\n
            v1 = 0;\n
        else\n
            v1 = v7 + 1;\n
        ::0x401eb0::cgc_list_remove(v2);\n
    }\n
    cgc_mark_allocated();\n
    if ((*(v11) & -2) > v13)\n
        v11 = cgc_split_chunk(v11);\n
    v12 = cgc_chunk_to_ptr();\n
    return v12;\n
}\n
", "4201614:sub_401c8e": null, "4201616:cgc_allocate_large_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_large_chunk(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = v5;\n
    cgc_mark_allocated();\n
    v3 = cgc_chunk_to_ptr();\n
    return v3;\n
}\n
", "4201738:sub_401d0a": null, "4201744:cgc_log_base_two": "int cgc_log_base_two(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4201798:sub_401d46": null, "4201808:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            v0 = a1;\n
            if (a0(v2))\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4201932:sub_401dcc": null, "4201936:cgc_find_fit": "int cgc_find_fit(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v4 = a0;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4202036:sub_401e34": null, "4202048:cgc_grow_heap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_grow_heap()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0x1000;\n
    cgc_mark_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4202158:sub_401eae": null, "4202160:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4202270:sub_401f1e": null, "4202272:cgc_mark_allocated": "int cgc_mark_allocated(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) | 1;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4202310:sub_401f46": null, "4202320:cgc_split_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_sizes;\n
\n
int cgc_split_chunk(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4 + a0;\n
    v1 = *(v4) & -2;\n
    if ((*(v4) & -2) <= a0 + size_class_sizes)\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
    *(v4) = a0;\n
    cgc_mark_allocated(v4);\n
    *(v2) = v1 - a0;\n
    cgc_mark_allocated(v2);\n
    cgc_chunk_to_ptr();\n
    cgc_free();\n
    v3 = v4;\n
    return v3;\n
}\n
", "4202491:sub_401ffb": null, "4202496:cgc_chunk_to_ptr": "int cgc_chunk_to_ptr(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4202514:sub_402012": null, "4202528:cgc_free": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc_ptr_to_chunk();\n
    v4 = v8;\n
    if (!v6)\n
        return v8;\n
    cgc_mark_free();\n
    v4 = cgc_coalesce();\n
    v1 = cgc_log_base_two(*(v4) & -2);\n
    v3 = v1 - cgc_log_base_two(v2->field_28);\n
    if (v3 >= 8)\n
        v3 = 7;\n
    v9 = v2;\n
    v0 = &v9[423].padding_0[32];\n
    v8 = cgc_list_insert_in_order(&v9[1].padding_0[36 + 8 * v3], v4 + 1);\n
    return v8;\n
}\n
", "4202730:sub_4020ea": null, "4202736:cgc_ptr_to_chunk": "int cgc_ptr_to_chunk(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4202805:sub_402135": null, "4202816:cgc_mark_free": "int cgc_mark_free(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) & -2;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4202854:sub_402166": null, "4202864:cgc_coalesce": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_1 *v12)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v12 & 4095))\n
        v10 = v12 + -(v12->field_0 & -2);\n
    if (((v12 + (v12->field_-4 & -2)) & 4095))\n
        v11 = v12 + (v12->field_-4 & -2);\n
    if (v10 && !(*(v10) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v10) & -2);\n
        v9 = v5 - cgc_log_base_two(v6->field_28);\n
        if (v9 < 8)\n
        {\n
            v8 = v10;\n
            v4[0] = &v6[1].padding_0[36 + 8 * v9];\n
            if (!v8)\n
                v3 = 0;\n
            else\n
                v3 = v8 + 1;\n
            ::0x401eb0::cgc_list_remove(v4, v3);\n
            *(v10) = (v12->field_-4 & -2) + (*(v10) & -2);\n
            cgc_mark_free(v10);\n
            v12 = v10;\n
        }\n
    }\n
    if (!v11)\n
    {\n
        return v12;\n
    }\n
    else if ((*(v11) & 1))\n
    {\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v11) & -2);\n
        v9 = v2 - cgc_log_base_two(v6->field_28);\n
        if (v9 >= 8)\n
            return v12;\n
        v7 = v11;\n
        v1[0] = &v6[1].padding_0[36 + 8 * v9];\n
        if (!v7)\n
            v0 = 0;\n
        else\n
            v0 = v7 + 1;\n
        ::0x401eb0::cgc_list_remove(v1, v0);\n
        *(v12) = (*(v12) & -2) + (*(v11) & -2);\n
        cgc_mark_free(v12);\n
    }\n
}\n
", "4203417:sub_402399": null, "4203424:cgc_list_insert_in_order": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_in_order(struct struct_0 **v3, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = cgc_list_push_back(v3);\n
            return v4;\n
        }\n
        else if (a1(a0) < 0)\n
        {\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v0 = a0;\n
            v4 = ::0x402620::cgc_list_insert_before(v3, v2);\n
            return v4;\n
        }\n
    }\n
}\n
", "4203581:sub_40243d": null, "4203584:cgc_size_cmp": "int cgc_size_cmp(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
\n
    v6 = v8;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4203735:sub_4024d7": null, "4203744:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc(v3);\n
    if (v1)\n
    {\n
        cgc_memset(v1, 0, v3);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4203833:sub_402539": null, "4203840:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = cgc_malloc(a0);\n
        return v6;\n
    }\n
    v5 = (*(cgc_ptr_to_chunk(v7)) & -2) - 8;\n
    if (a0 == v5)\n
    {\n
        v6 = v7;\n
        return v6;\n
    }\n
    v4 = cgc_malloc(a0);\n
    v1 = v4;\n
    v2 = v7;\n
    if (a0 < v5)\n
        v0 = a0;\n
    else\n
        v0 = v5;\n
    cgc_memcpy(v1, v2, v0);\n
    cgc_free(v7);\n
    v6 = v4;\n
    return v6;\n
}\n
", "4204063:sub_40261f": null, "4204064:cgc_list_insert_before": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_insert_before(struct_1 *v0, struct_3 *a0, unsigned int a1[2])\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4204320:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push_back(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_list_insert_after(v1, v1->field_4);\n
}\n
", "4204379:sub_40275b": null, "4204384:cgc_list_insert_after": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_after(void* *v1, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0)\n
    {\n
        v2 = ::0x402620::cgc_list_insert_before(v1, *(a0), a1);\n
        return v2;\n
    }\n
    v2 = ::0x402620::cgc_list_insert_before(v1, *(v1), a1);\n
    return v2;\n
}\n
", "4204496:cgc_vfs_init": "int cgc_vfs_init(struct struct_0 **v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v2 = cgc_calloc(48);\n
    *(v1) = v2;\n
    if (!v2)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    *(v1)->field_10 = 0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4204584:sub_402828": null, "4204592:cgc_vfs_destroy": "int cgc_vfs_destroy(unsigned int *v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return cgc_directory_destroy(*(v1), *(&v0));\n
}\n
", "4204631:sub_402857": null, "4204640:cgc_directory_destroy": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_directory_destroy(unsigned int v27[9])\n
{\n
    struct_0 *v0;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x70], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x6c], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x68], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v5[10];  // [bp-0x60], Other Possible Types: unsigned int\n
    unsigned int v6[10];  // [bp-0x5c], Other Possible Types: unsigned int\n
    unsigned int v7[10];  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int v8[10];  // [bp-0x54], Other Possible Types: unsigned int\n
    unsigned int v9[10];  // [bp-0x50], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x4c]\n
    struct_0 *v11;  // [bp-0x48]\n
    unsigned int v12;  // [bp-0x44]\n
    struct_0 *v13;  // [bp-0x40]\n
    unsigned int v14;  // [bp-0x3c]\n
    struct_0 *v15;  // [bp-0x38]\n
    unsigned int v16;  // [bp-0x34]\n
    unsigned int v17[10];  // [bp-0x30]\n
    unsigned int v18;  // [bp-0x2c]\n
    unsigned int v19[10];  // [bp-0x28]\n
    unsigned int v20;  // [bp-0x24]\n
    unsigned int v21[10];  // [bp-0x20]\n
    unsigned int v22;  // [bp-0x1c]\n
    struct_0 *v23;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v24;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v25[10];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v26[10];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v10 = &_GLOBAL_OFFSET_TABLE_;\n
    v22 = v27[8];\n
    if (!v22)\n
        v9 = 0;\n
    else\n
        v9[0] = -37 + v22;\n
    v21[0] = v9;\n
    v26[0] = v21;\n
    if (!v26)\n
    {\n
        v7[0] = 0;\n
    }\n
    else\n
    {\n
        v20 = v26[9];\n
        if (!v20)\n
            v8 = 0;\n
        else\n
            v8[0] = -37 + v20;\n
        v19[0] = v8;\n
        v7 = v19;\n
    }\n
    for (v25[0] = v7; v26; v25 = v5)\n
    {\n
        cgc_free(v26[8]);\n
        cgc_free(v26);\n
        v26 = v25;\n
        if (!v26)\n
        {\n
            v5[0] = 0;\n
        }\n
        else\n
        {\n
            v18 = *((v26 + 36));\n
            if (!v18)\n
                v6 = 0;\n
            else\n
                v6[0] = -37 + v18;\n
            v17[0] = v6;\n
            v5 = v17;\n
        }\n
    }\n
    v16 = v27[6];\n
    if (!v16)\n
        v4 = 0;\n
    else\n
        v4 = -41 + v16;\n
    v15 = v4;\n
    v24 = v15;\n
    if (!v24)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v14 = v24->field_28;\n
        if (!v14)\n
            v3 = 0;\n
        else\n
            v3 = -41 + v14;\n
        v13 = v3;\n
        v2 = v13;\n
    }\n
    for (v23 = v2; v24; v23 = v0)\n
    {\n
        cgc_directory_destroy(v24);\n
        v24 = v23;\n
        if (!v24)\n
        {\n
            v0 = 0;\n
        }\n
        else\n
        {\n
            v12 = *((v24 + 40));\n
            if (!v12)\n
                v1 = 0;\n
            else\n
                v1 = -41 + v12;\n
            v11 = v1;\n
            v0 = v11;\n
        }\n
    }\n
    return cgc_free(v27);\n
}\n
", "4205262:sub_402ace": null, "4205264:cgc_lookup_dir": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lookup_dir(struct struct_0 **v16, char *a0, unsigned int a1)\n
{\n
    unsigned int v0[9];  // [bp-0x44], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3[9];  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    struct_0 *v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    char *v7;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10[9];  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    struct_0 *v12;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v13;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
\n
    v15 = v17;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = 0;\n
    v12 = *(v16);\n
    v9 = cgc_strlen(a0);\n
    if (!v9)\n
    {\n
        v14 = *(v16);\n
        return v14;\n
    }\n
    v8 = cgc_calloc(v9 + 1);\n
    if (!v8)\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    cgc_strncpy(v8, a0, v9);\n
    v7 = cgc_strtok(v8, 47);\n
    while (true)\n
    {\n
        if (!v7)\n
        {\n
LABEL_402d27:\n
            v13 = v12;\n
            break;\n
        }\n
        else\n
        {\n
            if (!v12)\n
                goto LABEL_402d27;\n
            if (!cgc_strcmp(v7, v2 - 7435))\n
            {\n
LABEL_402d06:\n
                v7 = cgc_strtok(0, 47);\n
            }\n
            else\n
            {\n
                if (!cgc_strcmp(v7, v2 - 7436))\n
                {\n
                    v12 = *((v12 + 20));\n
                    goto LABEL_402d06;\n
                }\n
                v11 = v12 + 32;\n
                v6 = ::0x402d50::cgc_list_find(v12 + 24, v2 - 16196);\n
                if (!v6)\n
                    v1 = 0;\n
                else\n
                    v1 = -41 + v6;\n
                v5 = v1;\n
                v12 = v5;\n
                if (v12)\n
                {\n
LABEL_402d01:\n
                    goto LABEL_402d06;\n
                }\n
                else\n
                {\n
                    if (a1)\n
                    {\n
                        v4 = ::0x402d50::cgc_list_find(v11, v2 - 16052);\n
                        if (!v4)\n
                            v0 = 0;\n
                        else\n
                            v0[0] = -37 + v4;\n
                        v3[0] = v0;\n
                        v10[0] = v3;\n
                        if (v10 && v10[5])\n
                        {\n
                            v12 = cgc_lookup_dir(v16, v10[8], a1);\n
                            goto LABEL_402d01;\n
                        }\n
                    }\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    cgc_free(v8);\n
    v14 = v13;\n
    return v14;\n
}\n
", "4205898:sub_402d4a": null, "4205904:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            v0 = a1;\n
            if (a0(v2))\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206028:sub_402dcc": null, "4206032:cgc_dir_eq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dir_eq(unsigned int v6, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (!v4)\n
        v0 = 0;\n
    else\n
        v0 = -41 + v4;\n
    v3 = v0;\n
    v5 = v3;\n
    v2 = a0;\n
    return !cgc_strncmp(v5, v2, 16);\n
}\n
", "4206170:sub_402e5a": null, "4206176:cgc_file_eq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_file_eq(unsigned int v6, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (!v4)\n
        v0 = 0;\n
    else\n
        v0 = -37 + v4;\n
    v3 = v0;\n
    v5 = v3;\n
    v2 = a0;\n
    return !cgc_strncmp(v5, v2, 16);\n
}\n
", "4206314:sub_402eea": null, "4206320:cgc_lookup_file": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lookup_file(unsigned int *v12, char *a0, unsigned int a1)\n
{\n
    unsigned int v0[9];  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1[9];  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3[9];  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    char *v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9[9];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10[9];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    char *v14;  // eax\n
\n
    v11 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v9[0] = 0;\n
    v8 = *(v12);\n
    v7 = cgc_strlen(a0);\n
    if (a0[1 + v7] == 47)\n
    {\n
        v10[0] = 0;\n
        return v10;\n
    }\n
    v6 = cgc_calloc(v7 + 1);\n
    if (!v6)\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
    cgc_strncpy(v6, a0, v7 + 1);\n
    v5 = cgc_strrchr(v6, 47);\n
    if (!v5)\n
    {\n
        v5 = v6;\n
    }\n
    else\n
    {\n
        v14 = v5;\n
        v5 = v14 + 1;\n
        *(v14) = 0;\n
        v8 = cgc_lookup_dir(v12, v6, a1);\n
    }\n
    if (v8)\n
    {\n
        v4 = ::0x402d50::cgc_list_find(v8 + 32, v2 - 16052, v5);\n
        if (!v4)\n
            v1 = 0;\n
        else\n
            v1[0] = -37 + v4;\n
        v3[0] = v1;\n
        v9 = v3;\n
    }\n
    cgc_free(v6);\n
    if (v9 && a1 && *((v9 + 20)))\n
    {\n
        v0 = cgc_lookup_file(v12, *((v9 + 32)), a1);\n
        goto LABEL_4030af;\n
    }\n
    v0[0] = v9;\n
LABEL_4030af:\n
    v10 = v0;\n
    return v10;\n
}\n
", "4206782:sub_4030be": null, "4206784:cgc_get_path_from_dir": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_path_from_dir(unsigned int *v8, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10]\n
    char *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 1;\n
    v1 = a0;\n
    if (!v4)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    for (v4 = cgc_calloc(1); v1 != *(v8); v1 = *((v1 + 20)))\n
    {\n
        v3 = cgc_strnlen(v1, 16);\n
        v5 = cgc_realloc(v4, v2 + v3 + 1);\n
        if (!v5)\n
        {\n
            cgc_free(v4);\n
            v6 = 0;\n
            return v6;\n
        }\n
        v4 = v5;\n
        cgc_memmove(v4 + v3 + 1, v4, v2);\n
        *((v4 + v3)) = 47;\n
        cgc_memcpy(v4, v1, v3);\n
        v2 = v3 + 1 + v2;\n
    }\n
    if (v2 <= 0)\n
    {\n
        v4 = cgc_calloc(2);\n
        if (!v4)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
    else\n
    {\n
        v5 = cgc_realloc(v4, v2 + 1);\n
        if (!v5)\n
        {\n
            cgc_free(v4);\n
            v6 = 0;\n
            return v6;\n
        }\n
        v4 = v5;\n
        cgc_memmove(v4 + 1, v4, v2);\n
    }\n
    *(v4) = 47;\n
    v6 = v4;\n
    return v6;\n
}\n
", "4207253:sub_403295": null, "4207264:cgc_get_path_from_file": "typedef struct struct_0 {\n
    char padding_0[24];\n
    void* field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_path_from_file(unsigned int *v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_strnlen(a0, 16);\n
    v3 = cgc_get_path_from_dir(v7, a0->field_18);\n
    if (!v3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = v3;\n
    v4 = cgc_realloc(v0, cgc_strlen(v3) + v2 + 1);\n
    if (!v4)\n
    {\n
        cgc_free(v3);\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = v4;\n
    cgc_strncat(v3, a0, v2);\n
    v5 = v3;\n
    return v5;\n
}\n
", "4207493:sub_403385": null, "4207504:cgc_get_owner": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_owner(struct struct_0 **v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_lookup_dir(v5, a0, 0);\n
    if (v2)\n
    {\n
        v3 = v2->field_10;\n
        return v3;\n
    }\n
    v1 = cgc_lookup_file(v5, a0, 0);\n
    if (!v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = v1->field_10;\n
    return v3;\n
}\n
", "4207664:cgc_read_file": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
} struct_0;\n
\n
int cgc_read_file(unsigned int *v2, unsigned int a0, char *a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = cgc_lookup_file(v2, a1, 1);\n
    if (!v0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (a2)\n
        *(a2) = v0->field_20;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4207782:sub_4034a6": null, "4207792:cgc_write_file": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_file(unsigned int *v4, unsigned int a0, char *a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[9];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_lookup_file(v4, a1, 1);\n
    if (!v1)\n
    {\n
        v1 = cgc_create_file(v4);\n
        if (v1 && a0 != *((v1 + 16)) && a0)\n
        {\n
            cgc_delete_file(v4, 0);\n
            v2 = -1;\n
            return v2;\n
        }\n
    }\n
    if (!v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (a0 != *((v1 + 16)) && a0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    cgc_free(*((v1 + 32)));\n
    *((v1 + 32)) = a2;\n
    *((v1 + 28)) = a3;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4208083:sub_4035d3": null, "4208096:cgc_create_file": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_file(unsigned int *v8, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    char *v10;  // eax\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = *(v8);\n
    v3 = cgc_strlen(a0);\n
    if (a0[1 + v3] == 47)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v2 = cgc_calloc(v3 + 1);\n
    if (!v2)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    cgc_strncpy(v2, a0, v3 + 1);\n
    v1 = cgc_strrchr(v2, 47);\n
    if (!v1)\n
    {\n
        v1 = v2;\n
    }\n
    else\n
    {\n
        v10 = v1;\n
        v1 = v10 + 1;\n
        *(v10) = 0;\n
        v4 = cgc_lookup_dir(v8, v2, 1);\n
    }\n
    if (v4)\n
        v5 = cgc_create_file_in_dir(v8, v4);\n
    cgc_free(v2);\n
    v6 = v5;\n
    return v6;\n
}\n
", "4208420:sub_403724": null, "4208432:cgc_delete_file": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_file(unsigned int v6, unsigned int a0, unsigned int a1[9])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[9];  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 != a1[4] && a0)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v4[0] = a1;\n
    v2 = a1[6] + 32;\n
    if (!v4)\n
        v1 = 0;\n
    else\n
        v1 = v4 + 1;\n
    v0 = v1;\n
    ::0x403e40::cgc_list_remove(v2);\n
    cgc_free(a1[8]);\n
    cgc_free(a1);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4208620:sub_4037ec": null, "4208624:cgc_create_dir": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_dir(unsigned int *v8, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ecx\n
    char *v11;  // eax\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = *(v8);\n
    v3 = cgc_strlen(a0);\n
    v2 = cgc_calloc(v3 + 1);\n
    if (!v2)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    cgc_strncpy(v2, a0, v3 + 1);\n
    for (; v2[1 + v3] == 47; v2[1 + v10] = 0)\n
    {\n
        v10 = v3;\n
        v3 = v10 - 1;\n
    }\n
    v1 = cgc_strrchr(v2, 47);\n
    if (!v1)\n
    {\n
        v1 = v2;\n
    }\n
    else\n
    {\n
        v11 = v1;\n
        v1 = v11 + 1;\n
        *(v11) = 0;\n
        v4 = cgc_lookup_dir(v8, v2, 1);\n
    }\n
    if (v4)\n
        v5 = cgc_create_dir_in_dir(v8, v4);\n
    cgc_free(v2);\n
    v6 = v5;\n
    return v6;\n
}\n
", "4208962:sub_403942": null, "4208976:cgc_create_dir_in_dir": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_dir_in_dir(unsigned int v7, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0[6];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[6];  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[6];  // [bp-0x10]\n
    unsigned int v5[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (::0x402d50::cgc_list_find(&a0[1].padding_0[12], cgc_file_eq, a1))\n
    {\n
        v5[0] = 0;\n
        return v5;\n
    }\n
    v3 = ::0x402d50::cgc_list_find(&a0[1].padding_0[4], v1 - 16196, a1);\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0[0] = -41 + v3;\n
    v2[0] = v0;\n
    v4[0] = v2;\n
    if (v4)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    v4[0] = cgc_calloc(48);\n
    if (v4)\n
    {\n
        cgc_strncpy(v4, a1, 16);\n
        v4[4] = a0->field_10;\n
        v4[5] = a0;\n
        cgc_list_push_front(&a0[1].padding_0[4]);\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4209287:sub_403a87": null, "4209296:cgc_list_push_front": "int cgc_list_push_front(unsigned int *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return ::0x403eb0::cgc_list_insert_before(v1, *(v1));\n
}\n
", "4209354:sub_403aca": null, "4209360:cgc_create_file_in_dir": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_file_in_dir(unsigned int v7, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0[7];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[7];  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[7];  // [bp-0x10]\n
    unsigned int v5[7];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (::0x402d50::cgc_list_find(&a0[1].padding_0[4], cgc_dir_eq, a1))\n
    {\n
        v5[0] = 0;\n
        return v5;\n
    }\n
    v3 = ::0x402d50::cgc_list_find(&a0[1].padding_0[12], v1 - 16052, a1);\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0[0] = -37 + v3;\n
    v2[0] = v0;\n
    v4[0] = v2;\n
    if (v4)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    v4[0] = cgc_calloc(44);\n
    if (v4)\n
    {\n
        cgc_strncpy(v4, a1, 16);\n
        v4[4] = a0->field_10;\n
        v4[6] = a0;\n
        cgc_list_push_front(&a0[1].padding_0[12], &v4[1 + 2]);\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4209671:sub_403c07": null, "4209680:cgc_create_symlink": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_symlink(struct struct_0 **v12, unsigned int a0, char *a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8[9];  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    char *v14;  // eax\n
\n
    v11 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = -1;\n
    v6 = *(v12);\n
    v5 = cgc_strlen(a1);\n
    if (a1[1 + v5] == 47)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (!cgc_lookup_file(v12, a1, 0))\n
    {\n
        v3 = cgc_calloc(v5 + 1);\n
        if (!v3)\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
        cgc_strncpy(v3, a1, v5 + 1);\n
        v2 = cgc_strrchr(v3, 47);\n
        if (!v2)\n
        {\n
            v2 = v3;\n
            v1 = *(v12)->field_10;\n
        }\n
        else\n
        {\n
            v14 = v2;\n
            v2 = v14 + 1;\n
            *(v14) = 0;\n
            v1 = cgc_get_owner(v12, v3);\n
            if (v1 == -1)\n
                goto LABEL_403e1d;\n
        }\n
        if (a0 != v1 && !(!a0))\n
            goto LABEL_403e1d;\n
        v4 = cgc_strlen(a2);\n
        v7 = cgc_calloc(v4 + 1);\n
        if (v7)\n
        {\n
            cgc_strncpy(v7, a2, v4 + 1);\n
            v8[0] = cgc_create_file(v12, a1);\n
            if (v8)\n
            {\n
                v8[4] = a0;\n
                v8[5] = 1;\n
                v8[7] = v4 + 1;\n
                v8[8] = v7;\n
                v9 = 0;\n
            }\n
        }\n
LABEL_403e1d:\n
        cgc_free(v3);\n
        v10 = v9;\n
        return v10;\n
    }\n
    else\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
}\n
", "4210234:sub_403e3a": null, "4210240:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4210350:sub_403eae": null, "4210352:cgc_list_insert_before": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_insert_before(struct_1 *v0, struct_3 *a0, unsigned int a1[2])\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4210608:main": "typedef struct struct_1 {\n
    char padding_0[148];\n
    unsigned int field_94;\n
    struct struct_0 *field_98;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *vfs;\n
\n
int main()\n
{\n
}\n
", "4211041:sub_404161": null, "4211056:cgc_do_cron": "typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char padding_18[4];\n
    unsigned int field_1c;\n
    char *field_20;\n
    unsigned int field_24;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *crond;\n
\n
int cgc_do_cron()\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    char *v1;  // [bp-0x48]\n
    unsigned int v2[10];  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v3[10];  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5[10];  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7[10];  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9[10];  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_2 *v10;  // [bp-0x14]\n
    struct struct_0 **v11;  // [bp-0x10]\n
    char v12;  // [bp-0xc]\n
    unsigned int v14[10];  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 0;\n
    v8 = crond->field_20;\n
    if (!v8)\n
        v3 = 0;\n
    else\n
        v3[0] = -37 + v8;\n
    v7[0] = v3;\n
    v14 = v7;\n
    while (true)\n
    {\n
        v10 = v14;\n
        if (!v10)\n
            break;\n
        if (!v10->field_14)\n
        {\n
            v9[0] = v10;\n
        }\n
        else\n
        {\n
            v9 = cgc_lookup_file(v4 + 144, v10->field_20, 1);\n
            if (!v9)\n
                goto LABEL_404297;\n
        }\n
        if (!cgc_allocate(*((v9 + 28)), 1))\n
        {\n
            v0 = *(&v12);\n
            v1 = *((v9 + 32));\n
            cgc_memcpy(v0, v1, *((v9 + 28)));\n
            v11 = *(&v12);\n
            v11(v0, v1);\n
            cgc_deallocate(*(&v12));\n
        }\n
LABEL_404297:\n
        v6 = v10->field_24;\n
        if (!v6)\n
            v2 = 0;\n
        else\n
            v2[0] = -37 + v6;\n
        v5[0] = v2;\n
        v14 = v5;\n
    }\n
    return v14;\n
}\n
", "4211423:sub_4042df": null, "4211424:cgc_do_cd": "typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[152];\n
    void* field_98;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_cd()\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x21]\n
    char v4;  // [bp-0x11]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    struct_1 *v10;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = -1;\n
    if (cgc_read_all(0, &v3, 16) != 16)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v10 = v0;\n
    v4 = 0;\n
    v2 = cgc_get_path_from_dir(&v10->padding_0[144], v10->field_98);\n
    if (!v2)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v2 = cgc_append_to_path(v2);\n
    if (v2)\n
    {\n
        v1 = cgc_lookup_dir(&v0->padding_0[144], v2, 1);\n
        if (v1)\n
        {\n
            v0->field_98 = v1;\n
            v5 = 0;\n
        }\n
    }\n
    cgc_free(v2);\n
    v6 = v5;\n
    return v6;\n
}\n
", "4211693:sub_4043ed": null, "4211696:cgc_do_read": "typedef struct struct_1 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[152];\n
    void* field_98;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_read()\n
{\n
    struct_1 *v0;  // [bp-0x34]\n
    struct_2 *v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x28]\n
    char v4;  // [bp-0x21]\n
    char v5;  // [bp-0x11]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_0 *v11;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = -1;\n
    if (cgc_read_all(0, &v4, 16) != 16)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v11 = v0;\n
    v5 = 0;\n
    v2 = cgc_get_path_from_dir(&v11->padding_0[144], v11->field_98);\n
    if (!v2)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v2 = cgc_append_to_path(v2);\n
    if (v2)\n
    {\n
        v1 = cgc_lookup_file(&v0->padding_0[144], v2, 1);\n
        if (v1 && !cgc_read_file(&v0->padding_0[144], 1000, v2, &v3))\n
        {\n
            cgc_write_all(1, v3, v1->field_1c);\n
            v6 = 0;\n
        }\n
    }\n
    cgc_free(v2);\n
    v7 = v6;\n
    return v7;\n
}\n
", "4212038:sub_404546": null, "4212048:cgc_do_write": "typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[152];\n
    void* field_98;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_write()\n
{\n
    struct_0 *v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    char *v2;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x30]\n
    char v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x25]\n
    char v6;  // [bp-0x15]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    struct_1 *v12;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = -1;\n
    if (cgc_read_all(0, &v5, 16) != 16)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v6 = 0;\n
    if (cgc_read_all(0, &v4, 4) != 4)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    else if (*(&v4) <= 4088)\n
    {\n
        v3 = cgc_calloc(*(&v4));\n
        if (!v3)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        if (cgc_read_all(0, v3, *(&v4)) == *(&v4))\n
        {\n
            v12 = v0;\n
            v2 = cgc_get_path_from_dir(&v12->padding_0[144], v12->field_98);\n
            if (v2)\n
            {\n
                v2 = cgc_append_to_path(v2);\n
                if (v2)\n
                {\n
                    v1 = cgc_create_file(&v0->padding_0[144], v2);\n
                    if (v1 && !cgc_write_file(&v0->padding_0[144], 1000, v2, v3, *(&v4)))\n
                    {\n
                        cgc_free(v2);\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                }\n
                cgc_free(v2);\n
            }\n
        }\n
        cgc_free(v3);\n
        v8 = v7;\n
        return v8;\n
    }\n
    else\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
}\n
", "4212546:sub_404742": null, "4212560:cgc_do_ln": "typedef struct struct_0 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[152];\n
    void* field_98;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_ln()\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x28]\n
    char v4;  // [bp-0x21]\n
    char v5;  // [bp-0x11]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_1 *v11;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = -1;\n
    if (cgc_read_all(0, &v4, 16) != 16)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = 0;\n
    if (cgc_read_all(0, &v3, 4) != 4)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    else if (*(&v3) <= 4088)\n
    {\n
        v1 = cgc_calloc(*(&v3) + 1);\n
        if (!v1)\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
        if (cgc_read_all(0, v1, *(&v3)) == *(&v3))\n
        {\n
            v11 = v0;\n
            v2 = cgc_get_path_from_dir(&v11->padding_0[144], v11->field_98);\n
            if (v2)\n
            {\n
                v2 = cgc_append_to_path(v2);\n
                if (v2 && !cgc_create_symlink(&v0->padding_0[144], 1000, v2, v1))\n
                    v6 = 0;\n
                cgc_free(v2);\n
            }\n
        }\n
        cgc_free(v1);\n
        v7 = v6;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
}\n
", "4212992:cgc_do_rm": "typedef struct struct_1 {\n
    char padding_0[152];\n
    unsigned int field_98;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[152];\n
    void* field_98;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_rm()\n
{\n
    struct_1 *v0;  // [bp-0x30]\n
    unsigned int v1[9];  // [bp-0x2c]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x21]\n
    char v4;  // [bp-0x11]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    struct_0 *v10;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = -1;\n
    if (cgc_read_all(0, &v3, 16) != 16)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v10 = v0;\n
    v4 = 0;\n
    v2 = cgc_get_path_from_dir(&v10->padding_0[144], v10->field_98);\n
    if (!v2)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v2 = cgc_append_to_path(v2);\n
    if (v2)\n
    {\n
        v1[0] = cgc_lookup_file(&v0->padding_0[144], v2, 1);\n
        if (v1 && !cgc_delete_file(&v0->padding_0[144], 1000, v1))\n
            v5 = 0;\n
    }\n
    cgc_free(v2);\n
    v6 = v5;\n
    return v6;\n
}\n
", "4213295:sub_404a2f": null, "4213296:cgc_append_to_path": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_append_to_path(char *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_strlen(v5);\n
    v2 = cgc_realloc(v5, v1 + 18);\n
    if (!v2)\n
    {\n
        cgc_free(v5);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5 = v2;\n
    cgc_strcat(v5, v0 - 7379);\n
    cgc_strncat(v5, a0, 16);\n
    v5[17 + v1] = 0;\n
    v3 = v5;\n
    return v3;\n
}\n
", "4213488:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:cgc_deallocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}