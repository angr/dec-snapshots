{"4202496:_init": "extern struct_0 *g_40936c;\n
\n
int _init()\n
{\n
    if (g_40936c)\n
    {\n
        g_40936c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202704:sub_4020d0": "int sub_4020d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202710:sub_4020d6": null, "4202720:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202763:sub_40210b": null, "4202764:sub_40210c": "int sub_40210c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202768:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202772:sub_402114": null, "4202784:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29267;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202835:sub_402153": "int sub_402153()\n
{\n
}\n
", "4202841:sub_402159": "int sub_402159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202848:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 29203;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202919:sub_4021a7": "int sub_4021a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202928:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_409368;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_409368)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203003:sub_4021fb": "int sub_4021fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203008:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203017:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203021:sub_40220d": null, "4203024:cgc_floor": null, "4203188:sub_4022b4": null, "4203200:cgc_round_away_from_zero": null, "4203354:sub_40235a": null, "4203360:cgc_round": null, "4203504:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203596:sub_40244c": null, "4203600:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4203809:sub_402521": null, "4203824:cgc_float_to_str": null, "4204682:sub_40288a": null, "4204688:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v11, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    struct_1 *v3;  // [bp-0x68], Other Possible Types: unsigned int\n
    unsigned long v4;  // [bp-0x64]\n
    struct_1 *v5;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x58]\n
    char *v7;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x50]\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0xc]\n
    struct struct_0 **v12;  // eax\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    struct struct_0 **v18;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    if (!v11)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    while (true)\n
    {\n
        if (!*(v11))\n
        {\n
            v10 = v9;\n
            return v10;\n
        }\n
        else if (*(v11) != 64)\n
        {\n
            cgc_putc(*(v11));\n
            v11 += 1;\n
            v9 += 1;\n
        }\n
        else\n
        {\n
            v11 += 1;\n
            v1 = *(v11);\n
            if (!v1)\n
            {\n
                v10 = -1;\n
                return v10;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v12 = a0;\n
                a0 = v12 + 1;\n
                v6 = &*(v12)->field_0;\n
                cgc_int_to_str(v6, &v8);\n
                for (v5 = &v8; v5->field_0; v5 += 1)\n
                {\n
                    cgc_putc(v5->field_0);\n
                    v9 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v4 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v15 = ftop<4> - 1 + 1;\n
                v16 = v15 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v8;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v17 = v16 + 1;\n
                cgc_float_to_str();\n
                for (v3 = &v8; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v9 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v18 = a0;\n
                a0 = v18 + 1;\n
                for (v7 = &*(v18)->field_0; *(v7); v7 += 1)\n
                {\n
                    cgc_putc(*(v7));\n
                    v9 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v10 = -1;\n
                return v10;\n
            }\n
            v11 += 1;\n
        }\n
    }\n
}\n
", "4205262:sub_402ace": null, "4205264:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4205322:sub_402b0a": null, "4205328:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4205422:sub_402b6e": null, "4205424:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205478:sub_402ba6": null, "4205488:cgc_isnan": null, "4205511:sub_402bc7": null, "4205520:cgc_isinf": null, "4205567:sub_402bff": null, "4205568:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_402e32:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_402e0b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_402e0b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_402e0b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_402e32;\n
                if (!v4)\n
                {\n
LABEL_402d87:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_402e0b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_402d87;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_402e0b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4206156:sub_402e4c": null, "4206160:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4206564:sub_402fe4": null, "4206576:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4206667:sub_40304b": null, "4206672:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4206780:sub_4030bc": null, "4206784:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4206892:sub_40312c": null, "4206896:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4207091:sub_4031f3": null, "4207104:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4207181:sub_40324d": null, "4207184:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        *((v5 + v4)) = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == a0)\n
            return v4;\n
        *((v5 + v4)) = v2;\n
        v4 += 1;\n
    }\n
}\n
", "4207376:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207535:sub_4033af": null, "4207536:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4207735:sub_403477": null, "4207744:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 7831, 1);\n
}\n
", "4207867:sub_4034fb": null, "4207872:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_24;  // tmp #24\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1; a1 -= 1)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_24 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = tmp_24;\n
    }\n
    return v0;\n
}\n
", "4207949:sub_40354d": null, "4207952:cgc_memset": "int cgc_memset(char *v1, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v0;\n
}\n
", "4208020:sub_403594": null, "4208032:cgc_strchr": "int cgc_strchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a0)\n
            break;\n
    }\n
    if (!*(v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4208140:sub_40360c": null, "4208144:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc();\n
    cgc_memset(v1, 0, v3 * a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4208234:sub_40366a": null, "4208240:cgc_malloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_heap_manager;\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_heap_manager)\n
    {\n
        cgc_allocate(0x1000, 0);\n
        v7 = v1;\n
        *((v7 + 60)) = *(&v3);\n
        *(*((v7 + 60))) = 0x1000;\n
        *((*((v7 + 60)) + 8)) = 4;\n
        *((*((v7 + 60)) + 4)) = 0x1000 - *((*((v7 + 60)) + 8));\n
        cgc_allocate(0x1000, 0);\n
        cgc_memset(*((*((v1 + 60)) + 12)), 0, 0x1000);\n
        v4 = *((*((v1 + 60)) + 12));\n
        *(v4) = 4084;\n
        *((v4 + 4)) = 0;\n
    }\n
    v4 = *((*((v1 + 60)) + 12));\n
    if (v6 > *(v4))\n
    {\n
        cgc_allocate(0x1000, 0);\n
        if (*((v4 + 4)))\n
        {\n
            v4 = *((v4 + 4));\n
            *(v4) = 4084;\n
            v5 = 0;\n
            return v5;\n
        }\n
        cgc_puts(v1 - 9008);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v8 = v4;\n
        *(v8) = *(v8) - v6;\n
        v2 = v4 + 8;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if ((*((v2 + 4)) & 1))\n
                v0 = *(v2) < v6 + 8;\n
            if (!(v0 & 1))\n
                break;\n
            v2 = v2 + 8 + *(v2);\n
        }\n
        *(v2) = v6;\n
        *((v2 + 4)) = 1;\n
        v5 = v2 + 8;\n
        return v5;\n
    }\n
}\n
", "4208750:sub_40386e": null, "4208752:cgc_free": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v1 = v2 - 8;\n
    v1->field_4 = 2;\n
    v0 = &v2 & -0x1000;\n
    v3 = v0;\n
    *(&v3) = v1->field_0 + *(&v3);\n
    return v0;\n
}\n
", "4208805:sub_4038a5": null, "4208816:cgc_get_last_element_s": "typedef struct struct_0 {\n
    char padding_0[4080];\n
    struct struct_0 *field_ff0;\n
} struct_0;\n
\n
int cgc_get_last_element_s(struct struct_0 **v2)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v0 = 0;\n
    for (v1 = *(v2); v1; v1 = v1->field_ff0)\n
    {\n
        v0 = v1;\n
    }\n
    return v0;\n
}\n
", "4208888:sub_4038f8": null, "4208896:cgc_get_last_element_d": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_get_last_element_d(struct struct_0 **v2)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v0 = 0;\n
    for (v1 = *(v2); v1; v1 = v1->field_4)\n
    {\n
        v0 = v1;\n
    }\n
    return v0;\n
}\n
", "4208965:sub_403945": null, "4208976:cgc_create_single_list": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_single_list()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    if (cgc_allocate(12, 0, v1, &_GLOBAL_OFFSET_TABLE_, 0, v4))\n
    {\n
        cgc_puts(v0 - 8948);\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1, 12);\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v1;\n
}\n
", "4209125:sub_4039e5": null, "4209136:cgc_create_double_list": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_double_list()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    if (cgc_allocate(8, 0, v1, &_GLOBAL_OFFSET_TABLE_, 0, v4))\n
    {\n
        cgc_puts(v0 - 8948);\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1, 8);\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v1;\n
}\n
", "4209285:sub_403a85": null, "4209296:cgc_insert_double_list_node": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_double_list_node(unsigned int v3[2], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[2];  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_allocate(140, 0, &v1, &_GLOBAL_OFFSET_TABLE_, 0, v4))\n
    {\n
        cgc_puts(v0 - 8948);\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1, 140);\n
    if (!a0)\n
    {\n
        v1->field_4 = v3[0];\n
        v3[0] = v1;\n
    }\n
    else\n
    {\n
        v1->field_4 = a0->field_4;\n
    }\n
    v1->field_0 = a0;\n
    if (v1->field_4)\n
        v1->field_4->field_0 = v1;\n
    if (v1->field_0)\n
        v1->field_0->field_4 = v1;\n
    v5 = v3;\n
    v5[1] = v5[1] + 1;\n
    return v1;\n
}\n
", "4209545:sub_403b89": null, "4209552:cgc_delete_double_list_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_double_list_node(unsigned int v4[2], struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (a0 && v4[1])\n
    {\n
        if (a0 == v4[0])\n
            v4[0] = a0->field_4;\n
        else\n
            a0->field_0->field_4 = a0->field_4;\n
        if (a0->field_4)\n
            a0->field_4->field_0 = a0->field_0;\n
        v2 = a0->field_0;\n
        v0 = 140;\n
        cgc_deallocate(a0);\n
        v5 = v4;\n
        v5[1] = v5[1] - 1;\n
        v3 = v2;\n
        return v3;\n
    }\n
    cgc_puts(v1 - 8916);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4209766:sub_403c66": null, "4209776:cgc_insert_single_list_node": "typedef struct struct_0 {\n
    char padding_0[4080];\n
    unsigned int field_ff0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_single_list_node(unsigned int v5[2], struct_0 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7[2];  // eax\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v0 = &v3;\n
    if (cgc_allocate(4088, 0))\n
    {\n
        cgc_puts(v1 - 8948);\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v3, 4088);\n
    if (!a0)\n
    {\n
        v3->field_ff0 = v5[0];\n
        v5[0] = v3;\n
    }\n
    else\n
    {\n
        v3->field_ff0 = a0->field_ff0;\n
        a0->field_ff0 = v3;\n
    }\n
    v7 = v5;\n
    v7[1] = v7[1] + 1;\n
    return v3;\n
}\n
", "4209998:sub_403d4e": null, "4210000:cgc_init_map": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_map(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_allocate(36, 0, &v1))\n
    {\n
        cgc_puts(v0 - 8948);\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(*(&v1), v3);\n
    *((*(&v1) + 31)) = 0;\n
    *((*(&v1) + 32)) = cgc_create_double_list();\n
    return *(&v1);\n
}\n
", "4210148:sub_403de4": null, "4210160:cgc_add_road": null, "4210375:sub_403ec7": null, "4210384:cgc_print_roads": null, "4210614:sub_403fb6": null, "4210624:cgc_add_address": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[31];\n
    char field_2f;\n
    unsigned int field_30;\n
    unsigned int field_34;\n
    unsigned long long field_38;\n
    unsigned int field_40;\n
    unsigned long long field_44;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_address()\n
{\n
    unsigned int v0;  // [bp-0x7c]\n
    struct_1 *v1;  // [bp-0x78], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0x74], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x70], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x6c], Other Possible Types: unsigned int\n
    struct_2 *v5;  // [bp-0x68]\n
    char v6;  // [bp-0x64]\n
    unsigned long v7;  // [bp-0x14]\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v10;  // [bp+0x4]\n
    char v11;  // [bp+0x8]\n
    char v12;  // [bp+0xc]\n
    char v13;  // [bp+0x10]\n
    char v14;  // [bp+0x1c]\n
    unsigned int v15;  // ebx\n
    struct_2 *v16;  // eax\n
    struct_2 *v17;  // eax\n
\n
    v9 = v15;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t15,0] = t16\n
    [D] PutI(136:I8x8)[t15,0] = 0x01\n
    [D] PutI(136:I8x8)[t15,0] = 0x00\n
    v7 = ([D] GetI(136:I8x8)[t44,0] ? [D] GetI(72:F64x8)[t44,0] : nan);\n
    [D] PutI(136:I8x8)[t44,0] = 0x00\n
    v5 = &v6;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_bzero(v5, 76);\n
    if (*(*((*(&v12) + 52))))\n
        v2 = *(*((*(&v12) + 52))) + 12;\n
    while (v2)\n
    {\n
        if (*((v2 + 12)) > v10)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v1 = v2;\n
            if (!*((*((v2 + 8)) + 4)))\n
                v2 = 0;\n
            else\n
                v2 = *((*((v2 + 8)) + 4)) + 12;\n
        }\n
    }\n
    if (v1)\n
        v3 = *((v1 + 8));\n
    v4 = cgc_insert_double_list_node(*((*(&v12) + 52)), v3);\n
    if (!v4)\n
    {\n
        cgc_puts(v0 - 8827);\n
        v8 = 0;\n
        return;\n
    }\n
    v5->field_c = v10;\n
    cgc_strcpy(&v5->padding_10, *(&v11));\n
    v5->field_2f = 0;\n
    v5->field_30 = *(&v12);\n
    v5->field_34 = *(&v13);\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v16 = v5;\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        *(&v16->field_38) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        v16->field_38 = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v5->field_40 = *(&v14);\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v17 = v5;\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        (&v17->field_40)[1] = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&(&v17->field_40)[1]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v5->field_8 = v4;\n
    cgc_memcpy(v4 + 12, v5, 76);\n
    v8 = v4 + 12;\n
    return;\n
}\n
", "4211090:sub_404192": null, "4211104:cgc_print_addresses": "typedef struct struct_0 {\n
    char padding_0[52];\n
    struct struct_1 *field_34;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    struct struct_2 *field_8;\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_addresses(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    struct_3 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v8;  // eax, Other Possible Types: unsigned int, struct_3 *\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7->field_34->field_0)\n
        v6 = 0;\n
    else\n
        v6 = v7->field_34->field_0 + 12;\n
    v0 = &v7->padding_0[20];\n
    v1 = v7->field_34->field_4;\n
    v8 = cgc_printf(v4 - 8794);\n
    v5 = 1;\n
    while (v6)\n
    {\n
        v0 = v5;\n
        v1 = v6 + 16;\n
        v2 = *((v6 + 12));\n
        v3 = &v7->padding_0[20];\n
        cgc_printf(v4 - 8758);\n
        v5 += 1;\n
        v8 = *((v6 + 8));\n
        if (!v8->field_4)\n
        {\n
            v6 = 0;\n
        }\n
        else\n
        {\n
            v8 = *((*((v6 + 8)) + 4)) + 12;\n
            v6 = v8;\n
        }\n
    }\n
    return v8;\n
}\n
", "4211348:sub_404294": null, "4211360:cgc_add_intersection": null, "4211643:sub_4043bb": null, "4211648:cgc_print_intersections": null, "4212000:cgc_find_pintersection": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
    char padding_24[4];\n
    unsigned int field_28;\n
    char padding_2c[8];\n
    unsigned int field_34;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[56];\n
    struct struct_3 *field_38;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_pintersection(struct_2 *v3, unsigned int a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v3->field_38->field_4)\n
    {\n
        cgc_puts(v0 - 8574);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (a1)\n
        v1 = a1;\n
    else\n
        v1 = v3->field_38->field_0 + 12;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*((v1 + 40)) == a0)\n
            break;\n
        if (*((v1 + 52)) == a0)\n
            break;\n
        if (!*((*((v1 + 32)) + 4)))\n
            v1 = 0;\n
        else\n
            v1 = *((*((v1 + 32)) + 4)) + 12;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4212238:sub_40460e": null, "4212240:cgc_find_pintersection_addresses": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[40];\n
    unsigned int field_34;\n
    char padding_38[8];\n
    unsigned int field_40;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[52];\n
    struct struct_3 *field_34;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_pintersection_addresses(struct_2 *v3, unsigned int a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (a1)\n
    {\n
        v1 = a1;\n
    }\n
    else if (v3->field_34->field_4)\n
    {\n
        v1 = v3->field_34->field_0 + 12;\n
    }\n
    else\n
    {\n
        cgc_puts(v0 - 8547);\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*((v1 + 52)) == a0)\n
            break;\n
        if (*((v1 + 64)) == a0)\n
            break;\n
        if (!*((*((v1 + 8)) + 4)))\n
            v1 = 0;\n
        else\n
            v1 = *((*((v1 + 8)) + 4)) + 12;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4212478:sub_4046fe": null, "4212480:cgc_delete_intersection": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38[2];\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_2 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_intersection(struct_0 *v8, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[17];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2[14];  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2[0] = cgc_find_pintersection(v8, a0, NULL); v2; v2 = cgc_find_pintersection(v8, a0, v2))\n
    {\n
        if (*((v2 + 40)) != a0)\n
        {\n
            if (!a0->field_20->field_4)\n
                *((v2 + 52)) = 0;\n
            else\n
                *((v2 + 52)) = a0->field_20->field_4 + 12;\n
        }\n
        else\n
        {\n
            if (!a0->field_20->field_0)\n
                *((v2 + 40)) = 0;\n
            else\n
                *((v2 + 40)) = a0->field_20->field_0 + 12;\n
        }\n
    }\n
    for (v1[0] = cgc_find_pintersection_addresses(v8, a0, NULL); v1; v1 = cgc_find_pintersection_addresses(v8, a0, v1))\n
    {\n
        if (v1[13] != a0)\n
        {\n
            if (!a0->field_20->field_4)\n
                v1[16] = 0;\n
            else\n
                v1[16] = a0->field_20->field_4 + 12;\n
        }\n
        else\n
        {\n
            if (!a0->field_20->field_0)\n
                v1[13] = 0;\n
            else\n
                v1[13] = a0->field_20->field_0 + 12;\n
        }\n
    }\n
    v3 = cgc_delete_double_list_node(v8->field_38, a0->field_20);\n
    if (!v3)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = v3 + 12;\n
    return v6;\n
}\n
", "4212998:sub_404906": null, "4213008:cgc_is_in_turn_list": "int cgc_is_in_turn_list(struct struct_0 **v3, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!*(v3))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*(v0) != a0)\n
        {\n
            v0 = &(*(v3))[32 * v1];\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4213149:sub_40499d": null, "4213152:cgc_init_turnList": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_turnList()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int [2]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1[0] = cgc_create_single_list();\n
    cgc_insert_single_list_node(v1, NULL);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4213222:sub_4049e6": null, "4213232:cgc_push_to_turn_list": "typedef struct struct_0 {\n
    char padding_0[4084];\n
    unsigned int field_ff4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_push_to_turn_list(unsigned int v3, struct struct_0 **a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    if (*(a0)->field_ff4 > 29)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = &*(a0)->padding_0[128 * *(a0)->field_ff4];\n
    cgc_bzero(v1, 128);\n
    v1[0] = a1;\n
    v1[1] = a2;\n
    v4 = *(a0);\n
    v4->field_ff4 = v4->field_ff4 + 1;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4213401:sub_404a99": null, "4213408:cgc_get_route": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    struct struct_2 *field_20;\n
    unsigned int field_24;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_route(unsigned int v9, struct struct_4 **a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    struct_3 *v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x1c]\n
    struct struct_0 **v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_4 **v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    *(a0)->field_ff4 = 0;\n
    cgc_bzero(*(a0), 4080);\n
    v5 = cgc_push_to_turn_list(v9, a0, a2, 0);\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; *(v5); v5 += 32)\n
    {\n
        v4 = *(v5);\n
        if (v4->field_38->field_0)\n
            v2 = v4->field_38->field_0 + 12;\n
        else\n
            v2 = 0;\n
        while (v2)\n
        {\n
            v3 = *((v2 + 36));\n
            if (!cgc_is_in_turn_list(a0, v3))\n
            {\n
                v1 = cgc_push_to_turn_list(v9, a0, v3, v5);\n
                if (!v1)\n
                {\n
                    v7 = 0;\n
                    return v7;\n
                }\n
                else if (v3 == a1)\n
                {\n
                    v7 = a0;\n
                    return v7;\n
                }\n
            }\n
            if (!*((*((v2 + 32)) + 4)))\n
                v2 = 0;\n
            else\n
                v2 = *((*((v2 + 32)) + 4)) + 12;\n
        }\n
        v6 += 1;\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4213841:sub_404c51": null, "4213856:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = cgc_init_turnList();\n
    v2 = cgc_init_map(v1 - 8524);\n
    cgc_puts(v1 - 8515);\n
    v0 = v3;\n
    cgc_prompt_loop(v2);\n
    v8 = v5;\n
    return 1;\n
}\n
", "4213968:cgc_name_map": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_name_map(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"Name:\\n
\");\n
    v1 = cgc_receive_until(&v2, 10, 31);\n
    if (v1 <= 0)\n
    {\n
        v6 = cgc_puts(v0 - 8367);\n
        return v6;\n
    }\n
    (&v2)[v1] = 0;\n
    cgc_printf(v0 - 8392);\n
    v6 = cgc_strcpy(v4, &v2);\n
    return v6;\n
}\n
", "4214138:sub_404d7a": null, "4214144:cgc_get_positive_float": null, "4214294:sub_404e16": null, "4214304:cgc_get_positive_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_positive_int()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x15]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = cgc_receive_until(&v3, 10, 8);\n
    (&v3)[v1] = 0;\n
    v2 = cgc_atoi(&v3);\n
    if (v2 <= 0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4214425:sub_404e99": null, "4214432:cgc_get_char32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_char32(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&v2, 0, 32);\n
    v1 = cgc_receive_until(&v2, 10, 31);\n
    (&v2)[v1] = 0;\n
    cgc_memset(v4, 0, 32);\n
    v6 = cgc_strlen(&v2);\n
    if (v6 > 0)\n
    {\n
        v6 = cgc_strcpy(v4, &v2);\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4214609:sub_404f51": null, "4214624:cgc_print_map_info": null, "4214952:sub_4050a8": null, "4214960:cgc_add_new_road": null, "4215239:sub_4051c7": null, "4215248:cgc_select_road": "typedef struct struct_3 {\n
    char padding_0[16];\n
    struct struct_2 *field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_select_road(struct_0 *v10)\n
{\n
    struct_4 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x13]\n
    struct_3 *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_3 *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v6 = 1;\n
    if (v10->field_20->field_4 == 1)\n
    {\n
        cgc_puts(v2 - 8181);\n
        v8 = v10->field_20->field_0 + 12;\n
        v9 = v8;\n
        return v9;\n
    }\n
    else if (v10->field_20->field_4)\n
    {\n
        while (v6)\n
        {\n
            v0 = &v7;\n
            cgc_memset(&v7, 0, 3);\n
            cgc_puts(v2 - 8161);\n
            cgc_printf(v2 - 8114);\n
            v5 = cgc_receive_until(v0, 10, 2);\n
            v1 = v7;\n
            if (v1 == 48)\n
            {\n
                v6 = 0;\n
                v8 = 0;\n
            }\n
            else if (v1 == 76)\n
            {\n
                cgc_print_roads(v10);\n
            }\n
            else if (v1 == 78)\n
            {\n
                cgc_printf(v2 - 8105);\n
                v4 = cgc_get_positive_int();\n
                if (!v4)\n
                {\n
                    cgc_puts(v2 - 8098);\n
                }\n
                else if (v10->field_20->field_4 < v4)\n
                {\n
                    cgc_puts(v2 - 8078);\n
                }\n
                else\n
                {\n
                    v8 = v10->field_20->field_0 + 12;\n
                    for (v3 = 1; v3 < v4; v3 += 1)\n
                    {\n
                        v8 = *((*((v8 + 16)) + 4)) + 12;\n
                    }\n
                    v6 = 0;\n
                }\n
            }\n
        }\n
        v9 = v8;\n
        return v9;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4215793:sub_4053f1": null, "4215808:cgc_select_address": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[52];\n
    struct struct_3 *field_34;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_select_address(struct_2 *v10)\n
{\n
    struct_4 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    char v7;  // [bp-0x13]\n
    struct_1 *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v6 = 1;\n
    if (v10->field_34->field_4 == 1)\n
    {\n
        cgc_puts(v2 - 8047);\n
        v8 = v10->field_34->field_0 + 12;\n
        v9 = v8;\n
        return v9;\n
    }\n
    else if (v10->field_34->field_4)\n
    {\n
        while (true)\n
        {\n
            if (!v6)\n
            {\n
                v9 = v8;\n
                return v9;\n
            }\n
            v0 = &v7;\n
            cgc_memset(&v7, 0, 3);\n
            cgc_puts(v2 - 8013);\n
            v5 = cgc_receive_until(v0, 10, 2);\n
            v1 = v7;\n
            if (v1 == 48)\n
            {\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (v1 == 76)\n
            {\n
                cgc_print_addresses(v10);\n
            }\n
            else if (v1 == 78)\n
            {\n
                break;\n
            }\n
        }\n
        cgc_printf(v2 - 8105);\n
        v4 = cgc_get_positive_int();\n
        if (!v4)\n
        {\n
            cgc_puts(v2 - 8098);\n
            v9 = 0;\n
            return v9;\n
        }\n
        else if (v10->field_34->field_4 < v4)\n
        {\n
            cgc_puts(v2 - 8078);\n
            v9 = 0;\n
            return v9;\n
        }\n
        else\n
        {\n
            v8 = v10->field_34->field_0 + 12;\n
            for (v3 = 1; v3 < v4; v3 += 1)\n
            {\n
                v8 = v8->field_8->field_4 + 12;\n
            }\n
            v9 = v8;\n
            return v9;\n
        }\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4216341:sub_405615": null, "4216352:cgc_select_intersection": "typedef struct struct_4 {\n
    char padding_0[32];\n
    struct struct_3 *field_20;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_select_intersection(struct_0 *v10)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    struct_4 *v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v8;  // [bp-0xf]\n
    struct_4 *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 1;\n
    v6 = 0;\n
    if (!v10->field_38->field_4)\n
    {\n
        cgc_puts(v2 - 7969);\n
        v9 = 0;\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        if (v7)\n
        {\n
            v0 = &v8;\n
            cgc_memset(&v8, 0, 3);\n
            cgc_puts(v2 - 7927);\n
            cgc_printf(v2 - 8114);\n
            v5 = cgc_receive_until(v0, 10, 2);\n
            v1 = v8;\n
            if (v1 == 76)\n
            {\n
                cgc_print_intersections(v10);\n
            }\n
            else if (v1 == 78)\n
            {\n
                cgc_printf(v2 - 8105);\n
                v4 = cgc_get_positive_int();\n
                if (!v4)\n
                {\n
                    cgc_puts(v2 - 7862);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                if (v10->field_38->field_4 < v4)\n
                {\n
                    cgc_puts(v2 - 7862);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                v6 = v10->field_38->field_0 + 12;\n
                for (v3 = 1; v3 < v4; v3 += 1)\n
                {\n
                    v6 = v6->field_20->field_4 + 12;\n
                }\n
                v7 = 0;\n
            }\n
            else if (v1 == 79)\n
            {\n
                v7 = 0;\n
                v6 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v9 = v6;\n
            return v9;\n
        }\n
    }\n
}\n
", "4216875:sub_40582b": null, "4216880:cgc_add_new_address": null, "4217506:sub_405aa2": null, "4217520:cgc_add_new_intersection": null, "4218268:sub_405d9c": null, "4218272:cgc_show_route": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_show_route(void* v9, struct struct_4 **a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x24]\n
    struct struct_1 **v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // eax\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(\"from address \");\n
    v11 = cgc_select_road(v9);\n
    v7 = v11;\n
    if (!v7)\n
        return v11;\n
    v11 = cgc_select_address(v7);\n
    v6 = v11;\n
    if (!v6)\n
        return v11;\n
    cgc_puts(v0 - 7520);\n
    v11 = cgc_select_road(v9);\n
    v5 = v11;\n
    if (!v5)\n
        return v11;\n
    v11 = cgc_select_address(v5);\n
    v4 = v11;\n
    if (!v4)\n
    {\n
        return v11;\n
    }\n
    else if (v7 != v5)\n
    {\n
        v3 = cgc_get_route(v9, a0, v7, v5);\n
        if (!v3)\n
        {\n
            cgc_puts(v0 - 7479);\n
            v11 = cgc_puts(v0 - 7437);\n
            return v11;\n
        }\n
        else if (*(v3)->field_ff4 < 1)\n
        {\n
            v11 = cgc_puts(v0 - 7407);\n
            return v11;\n
        }\n
        else\n
        {\n
            v2 = &*(v3)->padding_0[128 + 128 * *(v3)->field_ff4];\n
            v1 = v2->field_4;\n
            cgc_printf(v0 - 7395);\n
            for (; v1; v1 = v1->field_4)\n
            {\n
                cgc_printf(v0 - 7378);\n
                v2 = v1;\n
            }\n
            cgc_puts(v0 - 7342);\n
            v11 = cgc_puts(v0 - 7437);\n
            return v11;\n
        }\n
    }\n
    else\n
    {\n
        v11 = cgc_puts(v0 - 7508);\n
        return v11;\n
    }\n
}\n
", "4218798:sub_405fae": null, "4218800:cgc_prompt_loop": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prompt_loop()\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char v5;  // [bp-0xb]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 1;\n
    while (true)\n
    {\n
        if (!v4)\n
            return;\n
        v0 = &v5;\n
        cgc_memset(&v5, 0, 3);\n
        cgc_printf(v2 - 8114);\n
        v3 = cgc_receive_until(v0, 10, 2);\n
        v1 = v5 - 48;\n
        if (v1 <= 25)\n
            goto *(((stack_base)[24] + (stack_base)[28] * 4 - 8496)) + (stack_base)[24];\n
        else\n
            cgc_puts(v2 - 7295);\n
    }\n
}\n
", "4219144:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_deallocate": null, "5242908:cgc_log10": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}