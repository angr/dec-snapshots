{"4198400:_init": "extern struct_0 *g_40487c;\n
\n
int _init()\n
{\n
    if (g_40487c)\n
    {\n
        g_40487c();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198560:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198576:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198592:sub_4010c0": "int sub_4010c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198598:sub_4010c6": null, "4198608:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198651:sub_4010fb": null, "4198652:sub_4010fc": "int sub_4010fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198656:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198660:sub_401104": null, "4198672:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 14195;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198723:sub_401143": "int sub_401143()\n
{\n
}\n
", "4198729:sub_401149": "int sub_401149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198736:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 14131;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198807:sub_401197": "int sub_401197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198816:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_404878;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_404878)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198891:sub_4011eb": "int sub_4011eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198896:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198905:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198909:sub_4011fd": null, "4198912:cgc_list_create": "int cgc_list_create()\n
{\n
    unsigned int v0[3];  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0[0] = 0;\n
    if (cgc_allocate(12, 0, v0))\n
    {\n
        v1[0] = 0;\n
        return v1;\n
    }\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4199035:sub_40127b": null, "4199040:cgc_list_push": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push(struct_1 *v1, unsigned int a0[3])\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    struct_1 *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    a0[1] = 0;\n
    a0[2] = v1->field_4;\n
    if (!v1->field_0)\n
        v1->field_0 = a0;\n
    else\n
        v1->field_4->field_4 = a0;\n
    v1->field_4 = &a0[0];\n
    v3 = v1;\n
    v3->field_8 = v3->field_8 + 1;\n
    return v0;\n
}\n
", "4199155:sub_4012f3": null, "4199168:cgc_node_create": "int cgc_node_create(unsigned int v2)\n
{\n
    unsigned int v0[3];  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0[0] = 0;\n
    if (cgc_allocate(12, 0, v0))\n
    {\n
        v1[0] = 0;\n
        return v1;\n
    }\n
    v0[0] = v2;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4199293:sub_40137d": null, "4199296:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = \"lG\";\n
    v0 = a0;\n
    if (cgc_sendall(1, v3))\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4199382:sub_4013d6": null, "4199392:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \"lG\";\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4199596:sub_4014ac": null, "4199600:cgc_recv_all": "int cgc_recv_all(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_read_all(0, v1);\n
}\n
", "4199659:sub_4014eb": null, "4199664:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
    char *v6;  // ecx\n
\n
    v1 = \"lG\";\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v5, &v4, 1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        v6[a0] = v4;\n
        a1 -= 1;\n
    }\n
    return v3;\n
}\n
", "4199817:sub_401589": null, "4199824:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = \"lG\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -7;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 7)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 7)\n
        {\n
            v4 = -77;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
}\n
", "4200087:sub_401697": null, "4200096:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *(v1); v1 += 1)\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4200156:sub_4016dc": null, "4200160:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4200230:sub_401726": null, "4200240:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4200328:sub_401788": null, "4200336:cgc_rand": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_rand(unsigned int v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = &v1;\n
    return cgc_random(v2, a0);\n
}\n
", "4200399:sub_4017cf": null, "4200400:cgc_vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsnprintf(unsigned int v11, unsigned int a0, char *a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    void* v2;  // [bp-0x4c], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x48]\n
    char v4;  // [bp-0x44]\n
    struct_0 *v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x1d]\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x15]\n
    char *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v12;  // eax\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // eax\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
\n
    v1 = \"lG\";\n
    v10 = 0;\n
    v9 = a1;\n
    if (!v9)\n
        v9 = v1 - 6200;\n
    for (; *(v9); LABEL_401a84:\n
)\n
    {\n
        if (*(v9) != 126)\n
        {\n
            if (v10 < a0)\n
            {\n
                v12 = v9;\n
                v9 = v12 + 1;\n
                v13 = v10;\n
                v10 = v13 + 1;\n
                *((v11 + v13)) = *(v12);\n
            }\n
            else\n
            {\n
                v10 += 1;\n
                v9 += 1;\n
            }\n
            goto LABEL_401a84;\n
        }\n
        v8 = 0;\n
        v7 = 0;\n
        v6 = 0;\n
        v5 = 0;\n
        v3 = 0;\n
        v2 = 0;\n
        v9 += 1;\n
        v8 = *(v9);\n
        v0 = v8;\n
        if (v0 == 99)\n
        {\n
            v14 = a2;\n
            a2 = v14 + 1;\n
            v5 = *(v14);\n
            if (!v5)\n
                v7 = 0;\n
            else\n
                v7 = cgc_strlen(v5);\n
        }\n
        else if (v0 == 110)\n
        {\n
            v15 = a2;\n
            a2 = v15 + 1;\n
            v3 = *(v15);\n
            cgc_int2str(&v4, 32);\n
            v5 = &v4;\n
            v7 = cgc_strlen(v5);\n
        }\n
        else if (v0 == 111)\n
        {\n
            v16 = a2;\n
            a2 = v16 + 1;\n
            v6 = *(v16);\n
            if (v5)\n
                v7 = 1;\n
            else\n
                v7 = 0;\n
        }\n
        if (v8 != 110 && !(v8 == 99))\n
            goto LABEL_401a2b;\n
        v2 = a0 - v10;\n
        if (v7 <= v2)\n
        {\n
            cgc_memcpy(&v10[v11], v5, v7);\n
            v10 = &v10[v7];\n
        }\n
        else\n
        {\n
            cgc_memcpy(&v10[v11], v5, v2);\n
            v10 = &v10[v2];\n
        }\n
LABEL_401a2b:\n
        if (v8 == 111)\n
        {\n
            v2 = a0 - v10;\n
            if (v7 <= v2)\n
            {\n
                *((v11 + v10)) = v6;\n
                v10 += 1;\n
            }\n
        }\n
        if (*(v9))\n
            v9 += 1;\n
    }\n
    if (a0 <= 0)\n
        return v10;\n
    if (v10 < a0)\n
        *((v11 + v10)) = 0;\n
    else\n
        *((v11 + a0 - 1)) = 0;\n
    return v10;\n
}\n
", "4201167:sub_401acf": null, "4201168:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4201441:sub_401be1": null, "4201456:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, char *a1)\n
{\n
    char **v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vsnprintf(v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4201536:cgc_recv_uint32": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_uint32()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"lG\";\n
    memset(&v1, 0, 4);\n
    if (cgc_recv_all(&v1, 4) != 4)\n
    {\n
        cgc__terminate();\n
        return *(&v1);\n
    }\n
    return *(&v1);\n
}\n
", "4201648:cgc_recv_uint16": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_uint16()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"lG\";\n
    memset(&v1, 0, 2);\n
    if (cgc_recv_all(&v1, 2) != 2)\n
    {\n
        cgc__terminate();\n
        return *(&v1);\n
    }\n
    return *(&v1);\n
}\n
", "4201761:sub_401d21": null, "4201776:cgc_haiku_list_exists": "extern unsigned int cgc_haiku_list;\n
\n
int cgc_haiku_list_exists()\n
{\n
    char v0;  // [bp-0x5]\n
\n
    if (!cgc_haiku_list)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4201830:sub_401d66": null, "4201840:cgc_is_haiku_list_empty": "extern struct_0 *cgc_haiku_list;\n
\n
int cgc_is_haiku_list_empty()\n
{\n
    char v0;  // [bp-0x5]\n
\n
    if (!cgc_haiku_list->field_8)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201897:sub_401da9": null, "4201904:cgc_init_haiku_list": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_haiku_list()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // eax\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v0 = &\"lG\";\n
    if (!cgc_haiku_list_exists())\n
    {\n
        v0->field_3c = cgc_list_create();\n
        return v0;\n
    }\n
    return 0;\n
}\n
", "4201967:sub_401def": null, "4201968:cgc_get_count": "typedef struct struct_1 {\n
    char padding_0[60];\n
    struct struct_0 *field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_count()\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &\"lG\";\n
    if (cgc_haiku_list_exists() != 1)\n
    {\n
        v1 = -2222;\n
        return v1;\n
    }\n
    v1 = v0->field_3c->field_8;\n
    return v1;\n
}\n
", "4202047:sub_401e3f": null, "4202048:cgc_get_id_from_haiku": "int cgc_get_id_from_haiku(struct struct_0 **v2)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (!*(v2))\n
    {\n
        v1 = -2345;\n
        return v1;\n
    }\n
    v0 = &*(v2)->field_0;\n
    v1 = *(v0);\n
    return v1;\n
}\n
", "4202106:sub_401e7a": null, "4202112:cgc_get_next_haiku_id": "extern unsigned int next_haiku_id;\n
\n
int cgc_get_next_haiku_id()\n
{\n
    next_haiku_id = next_haiku_id + 1;\n
    return next_haiku_id - 1;\n
}\n
", "4202153:sub_401ea9": null, "4202160:cgc_get_random_idx": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_random_idx(unsigned int *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = \"lG\";\n
    v3 = 0;\n
    v2 = 0;\n
    v2 = cgc_rand(&v3, 4);\n
    v1 = cgc_get_count();\n
    if (v1 == -2222)\n
    {\n
        v4 = v1;\n
        return v4;\n
    }\n
    else if (!v1)\n
    {\n
        v4 = -1111;\n
        return v4;\n
    }\n
    else if (!v2)\n
    {\n
        *(v6) = (0 CONCAT v3) /m v1 >> 32;\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -912;\n
        return v4;\n
    }\n
}\n
", "4202332:sub_401f5c": null, "4202336:cgc_populate_array_with_haiku_ids": "typedef struct struct_3 {\n
    char padding_0[60];\n
    struct struct_2 *field_3c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_populate_array_with_haiku_ids(unsigned int *v7, unsigned int a0)\n
{\n
    char v0;  // [bp-0x1d]\n
    struct_3 *v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &\"lG\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (cgc_haiku_list_exists() != 1)\n
    {\n
        v5 = -2222;\n
        return v5;\n
    }\n
    v4 = v1->field_3c->field_4;\n
    if (a0 && v4)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (0 < a0)\n
                v0 = 0 != v4;\n
            if (!(v0 & 1))\n
                break;\n
            v3 = &v4->field_0->field_0;\n
            v7[1 + a0] = *(v3);\n
            a0 -= 1;\n
            v4 = v4->field_8;\n
        }\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = -1111;\n
    return v5;\n
}\n
", "4202584:sub_402058": null, "4202592:cgc_find_haiku_with_id": "typedef struct struct_2 {\n
    char padding_0[60];\n
    struct struct_3 *field_3c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_haiku_with_id(unsigned int *v7, unsigned int a0)\n
{\n
    struct_2 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &\"lG\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_get_count();\n
    if (0 < v2)\n
    {\n
        for (v4 = v0->field_3c->field_0; v4; v4 = v4->field_4)\n
        {\n
            v3 = &v4->field_0->field_0;\n
            if (a0 == *(v3))\n
            {\n
                *(v7) = v3;\n
                v1 = 1;\n
                break;\n
            }\n
        }\n
        if (v1 == 1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v5 = -3456;\n
        return v5;\n
    }\n
    else if (v2)\n
    {\n
        v5 = -2222;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1111;\n
        return v5;\n
    }\n
}\n
", "4202835:sub_402153": null, "4202848:cgc_send_haiku": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_haiku(unsigned int v5[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned short v1;  // [bp-0x12]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"lG\";\n
    v3 = v5[0];\n
    v2 = v5 + 1;\n
    v1 = v5[1];\n
    cgc_send(&v3, 4);\n
    cgc_send(&v1, 2);\n
    v7 = v4;\n
    return cgc_send(v2, v1);\n
}\n
", "4202969:sub_4021d9": null, "4202976:cgc_send_easter_egg_haiku": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_403008;\n
\n
int cgc_send_easter_egg_haiku()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned short v1;  // [bp-0x12]\n
    char *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"lG\";\n
    v3 = 31337;\n
    v2 = &g_403008;\n
    v1 = cgc_strlen(v2);\n
    cgc_send(&v3, 4);\n
    cgc_send(&v1, 2);\n
    v7 = v4;\n
    return cgc_send(v2, v1);\n
}\n
", "4203101:sub_40225d": null, "4203104:cgc_send_haiku_id": "int cgc_send_haiku_id(unsigned int v0)\n
{\n
    return cgc_send(&v0, 4);\n
}\n
", "4203151:sub_40228f": null, "4203152:cgc_add_haiku_to_list": "typedef struct struct_1 {\n
    char padding_0[60];\n
    void* field_3c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_haiku_to_list(unsigned int v3)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &\"lG\";\n
    v1[0] = cgc_node_create(v3);\n
    v5 = v2;\n
    return cgc_list_push(v0->field_3c, v1);\n
}\n
", "4203221:sub_4022d5": null, "4203232:cgc_recv_haiku_line": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_haiku_line(unsigned int v7, unsigned short a0)\n
{\n
    struct_0 *v0;  // [bp-0x570]\n
    unsigned int v1;  // [bp-0x56c]\n
    unsigned short v2;  // [bp-0x566]\n
    unsigned short v3;  // [bp-0x564]\n
    char v4;  // [bp-0x562]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"lG\";\n
    memset(&v4, 0, 1362);\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = cgc_recvline(0, &v4, 1362);\n
    if (0 > v3)\n
    {\n
        v5 = -4568;\n
        return v5;\n
    }\n
    v0 = &v4;\n
    v2 = cgc_snprintf(v7, a0 + 1, v1 - 6203);\n
    v5 = v2;\n
    return v5;\n
}\n
", "4203470:sub_4023ce": null, "4203472:cgc_recv_haiku": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_haiku(unsigned short v8)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x18]\n
    unsigned short v3;  // [bp-0x16]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5[2];  // [bp-0x10]\n
    unsigned int v6[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = \"lG\";\n
    v5[0] = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = v8;\n
    v0 = &v5[0];\n
    if (cgc_allocate(v8 + 9, 0))\n
        cgc__terminate();\n
    v4 = v5 + 1;\n
    while (true)\n
    {\n
        if (0 < v3)\n
        {\n
            v2 = cgc_recv_haiku_line(v4, v3);\n
            if (0 > v2)\n
            {\n
                v6[0] = 0;\n
                return v6;\n
            }\n
            v4 = v2 + v4;\n
            v3 -= v2;\n
        }\n
        else\n
        {\n
            v5[0] = cgc_get_next_haiku_id();\n
            v5[1] = v8;\n
            v6 = v5;\n
            return v6;\n
        }\n
    }\n
}\n
", "4203738:sub_4024da": null, "4203744:cgc_recv_haiku_size": "int cgc_recv_haiku_size()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    return cgc_recv_uint16();\n
}\n
", "4203775:sub_4024ff": null, "4203776:cgc_add_haiku": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_haiku()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0xe]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"lG\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_haiku_list_exists())\n
        cgc_init_haiku_list();\n
    v2 = cgc_recv_haiku_size();\n
    if (0 < v2 && 4087 > v2)\n
    {\n
        v1 = cgc_recv_haiku(v2);\n
        if (!v1)\n
        {\n
            v3 = -4568;\n
        }\n
        else\n
        {\n
            v3 = cgc_add_haiku_to_list(v1);\n
            cgc_send_haiku_id(*(v1));\n
        }\n
        return v3;\n
    }\n
    v3 = -4567;\n
    return v3;\n
}\n
", "4203982:sub_4025ce": null, "4203984:cgc_get_haiku_by_id": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_haiku_by_id()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"lG\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (cgc_haiku_list_exists() != 1)\n
    {\n
        v1 = -2222;\n
        return v1;\n
    }\n
    v2 = cgc_recv_uint32();\n
    if (v2 == 31337)\n
    {\n
        cgc_send_easter_egg_haiku();\n
    }\n
    else\n
    {\n
        v1 = cgc_find_haiku_with_id(&v3, v2);\n
        if (!v1)\n
            cgc_send_haiku(v3);\n
    }\n
    return v1;\n
}\n
", "4204161:sub_402681": null, "4204176:cgc_get_haiku_cgc_random": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_haiku_cgc_random()\n
{\n
    struct struct_0 **v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v1 = \"lG\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (cgc_haiku_list_exists() != 1)\n
    {\n
        v2 = -2222;\n
    }\n
    else\n
    {\n
        v5 = cgc_get_count();\n
        if (!v5)\n
        {\n
            v7 = -1111;\n
            return v7;\n
        }\n
        v0 = &v4;\n
        if (cgc_allocate(v5 << 2, 0))\n
            cgc__terminate();\n
        v2 = cgc_populate_array_with_haiku_ids(v4, v5);\n
        v2 = cgc_get_random_idx(&v6);\n
        if (v2 != -912)\n
            v2 = cgc_find_haiku_with_id(&v3, *((v4 + v6 * 4)));\n
        if (cgc_deallocate(v4))\n
            cgc__terminate();\n
        if (!v2)\n
            cgc_send_haiku(v3);\n
    }\n
    v7 = v2;\n
    return v7;\n
}\n
", "4204537:sub_4027f9": null, "4204544:cgc_get_haiku_count": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_haiku_count()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"lG\";\n
    v1 = 0;\n
    if (cgc_haiku_list_exists() != 1)\n
    {\n
        v2 = -2222;\n
        return v2;\n
    }\n
    v1 = cgc_get_count();\n
    cgc_send(&v1, 4);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4204655:sub_40286f": null, "4204656:cgc_get_haiku_ids": "typedef struct struct_1 {\n
    char padding_0[60];\n
    struct struct_2 *field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_haiku_ids()\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &\"lG\";\n
    if (cgc_haiku_list_exists() != 1)\n
    {\n
        v4 = -2222;\n
        return v4;\n
    }\n
    v3 = cgc_get_count();\n
    cgc_send(&v3, 4);\n
    for (v2 = v0->field_3c->field_0; v2; v2 = v2->field_4)\n
    {\n
        v1 = cgc_get_id_from_haiku(v2);\n
        cgc_send(&v1, 4);\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4204843:sub_40292b": null, "4204848:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: char\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = \"lG\";\n
    v4 = 0;\n
    memset(&v3, 0, 4);\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (cgc_recv_all(&v3, 4) != 4)\n
            cgc__terminate();\n
        v0 = *(&v3);\n
        if (v0 == 1492)\n
        {\n
            v2 = cgc_add_haiku();\n
        }\n
        else if (v0 == 1999)\n
        {\n
            v2 = cgc_get_haiku_by_id();\n
        }\n
        else if (v0 == 200042)\n
        {\n
            v2 = cgc_get_haiku_cgc_random();\n
        }\n
        else if (v0 == 1210000)\n
        {\n
            v2 = cgc_get_haiku_count();\n
        }\n
        else if (v0 != 8675309)\n
        {\n
            v2 = -999;\n
        }\n
        else\n
        {\n
            v2 = cgc_get_haiku_ids();\n
        }\n
        if (v2 < 0)\n
            break;\n
        v3 = 0;\n
    }\n
    cgc_send(&v2, 4);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4205212:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:memset": null, "5242904:cgc_deallocate": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}