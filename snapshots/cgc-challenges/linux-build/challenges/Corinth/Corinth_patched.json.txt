{"4202496:_init": "extern struct_0 *g_40da58;\n
\n
int _init()\n
{\n
    if (g_40da58)\n
    {\n
        g_40da58();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4202576:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202592:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_tan": "// attributes: PLT stub\n
int cgc_tan()\n
{\n
    ::libc.so.0::cgc_tan();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202720:cgc_sqrt": "// attributes: PLT stub\n
int cgc_sqrt()\n
{\n
    ::libc.so.0::cgc_sqrt();\n
    return;\n
}\n
", "4202736:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202752:sub_402100": "int sub_402100()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202758:sub_402106": null, "4202768:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202811:sub_40213b": null, "4202812:sub_40213c": "int sub_40213c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202816:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202820:sub_402144": null, "4202832:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 47375;\n
    v6 = v5 + 23;\n
    v7 = v5 + 23;\n
    if (v7 == v6)\n
        return v5 + 23;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202883:sub_402183": "int sub_402183()\n
{\n
}\n
", "4202889:sub_402189": "int sub_402189()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202896:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 47311;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 23;\n
    v9 = (v6 + 23 - (v6 + 23) >> 31) + (23 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202967:sub_4021d7": "int sub_4021d7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202976:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40da54;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40da54)\n
    {\n
        v0 = __dso_handle;\n
        sub_402100();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203051:sub_40222b": "int sub_40222b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203056:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203065:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203069:sub_40223d": null, "4203072:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203254:sub_4022f6": null, "4203264:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203360:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203456:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203510:sub_4023f6": null, "4203520:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203594:sub_40244a": null, "4203600:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203674:sub_40249a": null, "4203680:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203774:sub_4024fe": null, "4203776:cgc_SetFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetFsError(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = FS_ERROR;\n
    if (!FS_ERROR)\n
    {\n
        v0 = 63;\n
        v3 = cgc_strncpy(v1 + 620, v2);\n
    }\n
    return v3;\n
}\n
", "4203855:sub_40254f": null, "4203856:cgc_ClearFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClearFsError()\n
{\n
    FS_ERROR = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4203880:sub_402568": null, "4203888:cgc_FsError": "extern char FS_ERROR;\n
\n
int cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4203911:sub_402587": null, "4203920:cgc_DestroyFilesystem": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DestroyFilesystem()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct struct_2 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[108].padding_0[44]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < v0->field_60->field_4; v1 += 1)\n
    {\n
        if (*((v0->field_60->field_8 + (v1 << 2))))\n
        {\n
            if (*(*((v0->field_60->field_8 + (v1 << 2)))))\n
            {\n
                cgc_free();\n
                *(*((v0->field_60->field_8 + v1 * 4))) = 0;\n
            }\n
            if (*((*((v0->field_60->field_8 + (v1 << 2))) + 4)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_60->field_8 + v1 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((v0->field_60->field_8 + (v1 << 2))) + 16)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_60->field_8 + v1 * 4)) + 16)) = 0;\n
            }\n
            cgc_free();\n
            *((v0->field_60->field_8 + v1 * 4)) = 0;\n
        }\n
    }\n
    cgc_free();\n
    v0->field_60 = 0;\n
    cgc_ClearFsError();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4204393:sub_402769": null, "4204400:cgc_InitFilesystem": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int FS_ERROR;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitFilesystem(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = 64;\n
    cgc_bzero(&FS_ERROR);\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[108].padding_0[18]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_60)\n
        cgc_DestroyFilesystem();\n
    v6 = cgc_calloc();\n
    v1->field_60 = v6;\n
    if (!v6)\n
    {\n
        cgc_SetFsError(&v1[107].padding_0[95]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v7 = cgc_calloc();\n
    v1->field_60->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_SetFsError(&v1[107].padding_0[95]);\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1->field_60->field_4 = v4;\n
    if (!cgc_Login())\n
    {\n
        cgc_SetFsError(&v1[107].padding_0[81]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_InitPasswd())\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(&v1[107].padding_0[68]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        cgc_bzero(&v1[6].padding_0[84]);\n
        cgc_ClearFsError();\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4204888:sub_402958": null, "4204896:cgc_Login": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Login(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[98].padding_0[48]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strlen();\n
    v2 = cgc_calloc();\n
    if (!v2)\n
    {\n
        cgc_SetFsError(&v1[103].padding_0[83]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v4;\n
    cgc_strcpy(v2);\n
    if (v1->field_64)\n
    {\n
        cgc_free();\n
        v1->field_64 = 0;\n
    }\n
    v1->field_64 = v2;\n
    cgc_ClearFsError();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4205121:sub_402a41": null, "4205136:cgc_InitPasswd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPasswd(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v2 - 10223);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fopen(v2 - 10100);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v2 - 10199);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_fwrite(v2 - 10172, 5, 1);\n
    v1 = v5;\n
    v6 = cgc_strlen(v5, 5, 1);\n
    v0 = v3;\n
    cgc_fwrite(v1, v6, 1);\n
    cgc_fclose(v3, v6, 1);\n
    cgc_ClearFsError();\n
    v4 = 1;\n
    return v4;\n
}\n
", "4205393:sub_402b51": null, "4205408:cgc_Logout": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Logout()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_64;\n
        cgc_free();\n
    }\n
    v1->field_64 = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4205489:sub_402bb1": null, "4205504:cgc_FindFile": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_60->field_4)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_60->field_8 + (v2 << 2))) && *(*((v1->field_60->field_8 + (v2 << 2)))))\n
        {\n
            v0 = v4;\n
            if (!cgc_strcmp(*(*((v1->field_60->field_8 + (v2 << 2))))))\n
            {\n
                v3 = *((v1->field_60->field_8 + v2 * 4));\n
                return v3;\n
            }\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4205719:sub_402c97": null, "4205728:cgc_CreateEmptyFile": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateEmptyFile(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct struct_2 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[103].padding_0[25]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v1->field_64)\n
    {\n
        cgc_SetFsError(&v1[103].padding_0[8]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((a0 & 153))\n
    {\n
        cgc_SetFsError(&v1[102].padding_0[95]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (cgc_FindFile(v4))\n
    {\n
        cgc_SetFsError(&v1[102].padding_0[82]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_60->field_4)\n
        {\n
LABEL_402fc7:\n
            if (v2 != v1->field_60->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v3 = *((v1->field_60->field_8 + v2 * 4));\n
                return v3;\n
            }\n
            cgc_SetFsError(&v1[102].padding_0[62]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_60->field_8 + (v2 << 2))))\n
        {\n
            v2 = v2 + 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_calloc();\n
            *((v1->field_60->field_8 + v2 * 4)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(&v1[103].padding_0[83]);\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_strlen();\n
            v6 = cgc_calloc();\n
            *(*((v1->field_60->field_8 + v2 * 4))) = v6;\n
            if (!v6)\n
            {\n
                cgc_SetFsError(&v1[103].padding_0[83]);\n
                cgc_free();\n
                *((v1->field_60->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v4;\n
            cgc_strcpy(*(*((v1->field_60->field_8 + v2 * 4))));\n
            v7 = cgc_calloc(5);\n
            *((*((v1->field_60->field_8 + v2 * 4)) + 4)) = v7;\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v1[103].padding_0[83]);\n
                cgc_free();\n
                *(*((v1->field_60->field_8 + v2 * 4))) = 0;\n
                cgc_free();\n
                *((v1->field_60->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v8 = v1;\n
            v0 = v8->field_64;\n
            cgc_strcpy(*((*((v8->field_60->field_8 + v2 * 4)) + 4)));\n
            v9 = v1;\n
            *((*((v9->field_60->field_8 + v2 * 4)) + 8)) = a0;\n
            *((*((v9->field_60->field_8 + v2 * 4)) + 12)) = 0;\n
            *((*((v9->field_60->field_8 + v2 * 4)) + 16)) = 0;\n
            goto LABEL_402fc7;\n
            goto LABEL_402fc7;\n
        }\n
    }\n
}\n
", "4206624:cgc_fopen": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_fopen(unsigned int v5, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18]\n
    struct_1 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[104].padding_0[28]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v5 && a0)\n
    {\n
        if (cgc_strlen() > 1)\n
        {\n
            cgc_SetFsError(&v0[102].padding_0[95]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            cgc_SetFsError(&v0[102].padding_0[95]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v0->field_64)\n
        {\n
            cgc_SetFsError(&v0[103].padding_0[8]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_FindFile(v5);\n
        if (!v2 && *(a0) == 114)\n
        {\n
            cgc_SetFsError(&v0[102].padding_0[22]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2)\n
        {\n
            for (v3 = 0; v3 < 8; v3 += 1)\n
            {\n
                if (*(&v0[6].padding_0[60 + 4 * v3]) && *(*(&v0[6].padding_0[60 + 4 * v3])) == v2)\n
                {\n
                    cgc_SetFsError(v0 + 102);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (v2 && cgc_strcmp(v0->field_64))\n
        {\n
            if (cgc_strcmp(v2->field_4))\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 64))\n
                {\n
                    cgc_SetFsError(&v0[101].padding_0[83]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 96))\n
                {\n
                    cgc_SetFsError(&v0[101].padding_0[83]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 4))\n
                {\n
                    cgc_SetFsError(&v0[101].padding_0[83]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 6))\n
                {\n
                    cgc_SetFsError(&v0[101].padding_0[83]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v1 = cgc_calloc();\n
        if (!v1)\n
        {\n
            cgc_SetFsError(&v0[103].padding_0[83]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 += 1)\n
        {\n
            if (!*(&v0[6].padding_0[60 + 4 * v3]))\n
            {\n
                *(&v0[6].padding_0[60 + 4 * v3]) = v1;\n
                break;\n
            }\n
        }\n
        if (v3 == 8)\n
        {\n
            cgc_SetFsError(&v0[101].padding_0[65]);\n
            cgc_free();\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 4;\n
            v1->field_8 = 0;\n
        }\n
        else if (v2)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
            v1->field_0->field_c = 0;\n
            if (v1->field_0->field_10)\n
            {\n
                cgc_free();\n
                v1->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v2 = cgc_CreateEmptyFile(v5, 6);\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[101].padding_0[40]);\n
                *(&v0[6].padding_0[60 + 4 * v3]) = 0;\n
                cgc_free();\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
        }\n
        cgc_ClearFsError();\n
        v4 = v1;\n
        return v4;\n
    }\n
    cgc_SetFsError(&v0[102].padding_0[47]);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207928:sub_403538": null, "4207936:cgc_fclose": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 10522);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 684)) == v3)\n
            *((v0 + v1 * 4 + 684)) = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4208109:sub_4035ed": null, "4208112:cgc_fread": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            cgc_SetFsError(v1 - 10470);\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v4 = a2;\n
            v4->field_8 = a2->field_0->field_c - a2->field_8 + v4->field_8;\n
            cgc_ClearFsError();\n
            v2 = a2->field_0->field_c - a2->field_8;\n
            return v2;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a1 * a0 + v5->field_8;\n
            cgc_ClearFsError();\n
            v2 = a1 * a0;\n
            return v2;\n
        }\n
    }\n
    cgc_SetFsError(v1 - 10501);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4208459:sub_40374b": null, "4208464:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v4, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[5];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a2)\n
    {\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(v1 - 10795);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            cgc_memcpy(v2, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        cgc_memcpy(v2 + *(a2)->field_c, v4);\n
        v5 = *(a2);\n
        v5[3] = a1 * a0 + v5[3];\n
        if (*(a2)->field_10)\n
            cgc_free();\n
        *(a2)->field_10 = v2;\n
        cgc_ClearFsError();\n
        v3 = a1 * a0;\n
        return v3;\n
    }\n
    cgc_SetFsError(v1 - 10501);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4208799:sub_40389f": null, "4208800:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    struct_2 *v6;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        cgc_SetFsError(v1 - 10458);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(v1 - 10443);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        cgc_SetFsError(v1 - 10470);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v2 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = a1->field_0->field_10;\n
            v6 = a1;\n
            v7 = v6->field_8;\n
            v6->field_8 = v7 + 1;\n
            tmp_50 = v5[v7];\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            *((v4 + v8)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v4 + v2)) = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(v1 - 10470);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209181:sub_403a1d": null, "4209184:cgc_ListFiles": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_ListFiles(unsigned int *v16)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1d]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x1b]\n
    char v12;  // [bp-0x1a]\n
    char v13;  // [bp-0x19]\n
    struct struct_2 **v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x11]\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // eax\n
    struct_0 *v25;  // eax\n
    struct_0 *v26;  // ebx\n
    struct_0 *v27;  // eax\n
    struct_0 *v28;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[108].padding_0[44]);\n
        v15 = 0;\n
        return v15;\n
    }\n
    if (v16)\n
    {\n
        v8 = 79;\n
        for (v14 = 0; v14 < v1->field_60->field_4; v14 += 1)\n
        {\n
            if (*((v1->field_60->field_8 + (v14 << 2))))\n
            {\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v4 = *((*((v1->field_60->field_8 + v14 * 4)) + 12));\n
                v5 = 0;\n
                v18 = ftop<4> - 1;\n
                if ([D] GetI(136:I8x8)[t47,0])\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(136:I8x8)[t6,0] = 0x00\n
                v20 = v19 + 1;\n
                cgc_log10();\n
                [D] PutI(72:F64x8)[t18,0] = t21\n
                [D] PutI(136:I8x8)[t18,0] = 0x01\n
                [D] PutI(72:F64x8)[t28,1] = t29\n
                [D] PutI(136:I8x8)[t28,1] = 0x01\n
                [D] PutI(136:I8x8)[t28,0] = 0x00\n
                v22 = v20 - 1 + 1;\n
                v3 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-62, size=2, endness=Iend_LE)))));\n
                v2 = v3 | 0xc00;\n
                v6 = ([D] GetI(136:I8x8)[t74,0] ? [D] GetI(72:F64x8)[t74,0] : nan);\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v23 = v22 + 1;\n
                v7 = v6;\n
                if (v7 >= 8)\n
                    v8 = v7 + v8;\n
                else\n
                    v8 += 8;\n
                v8 += 6;\n
            }\n
        }\n
        v24 = cgc_calloc();\n
        *(v16) = v24;\n
        if (!v24)\n
        {\n
            cgc_SetFsError(&v1[107].padding_0[95]);\n
            v15 = 0;\n
            return v15;\n
        }\n
    }\n
    if (!v16)\n
    {\n
        v26 = v1;\n
        cgc_printf(&v26[104].padding_0[30], &v26[104].padding_0[7], &v26[103].field_60 + 2, &v26[103].padding_0[92]);\n
    }\n
    else\n
    {\n
        v25 = v1;\n
        v0 = &v25[103].padding_0[87];\n
        cgc_sprintf(*(v16), &v25[104].padding_0[30], &v25[104].padding_0[7], &v25[103].field_60 + 2, &v25[103].padding_0[92]);\n
    }\n
    for (v14 = 0; v14 < v1->field_60->field_4; v14 += 1)\n
    {\n
        if (*((v1->field_60->field_8 + (v14 << 2))))\n
        {\n
            if (v16)\n
            {\n
                v27 = v1;\n
                v0 = *((*((v27->field_60->field_8 + v14 * 4)) + 12));\n
                cgc_sprintf(*(v16), &v1[103].padding_0[82], *(v16), *(*((v27->field_60->field_8 + v14 * 4))), *((*((v27->field_60->field_8 + v14 * 4)) + 4)));\n
            }\n
            else\n
            {\n
                v28 = v1;\n
                cgc_printf(&v28[103].padding_0[80], *(*((v28->field_60->field_8 + v14 * 4))), *((*((v28->field_60->field_8 + v14 * 4)) + 4)));\n
            }\n
            cgc_memset(&v9, 45);\n
            v13 = 0;\n
            if ((*((*((v1->field_60->field_8 + (v14 << 2))) + 8)) & 4))\n
                v9 = 114;\n
            if ((*((*((v1->field_60->field_8 + (v14 << 2))) + 8)) & 6))\n
                v10 = 119;\n
            if ((*((*((v1->field_60->field_8 + (v14 << 2))) + 8)) & 64))\n
                v11 = 114;\n
            if ((*((*((v1->field_60->field_8 + (v14 << 2))) + 8)) & 96))\n
                v12 = 119;\n
            if (!v16)\n
                cgc_printf(&v1[104].padding_0[13]);\n
            else\n
                cgc_sprintf(*(v16), &v1[103].padding_0[62], *(v16));\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v15 = 1;\n
    return v15;\n
}\n
", "4210374:sub_403ec6": null, "4210384:cgc_DeleteFile": "typedef struct struct_1 {\n
    char padding_0[96];\n
    struct struct_2 *field_60;\n
    unsigned int field_64;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DeleteFile(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    struct struct_0 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_1 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[104].padding_0[28]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6)\n
    {\n
        cgc_SetFsError(&v1[103].padding_0[25]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v1->field_64)\n
    {\n
        cgc_SetFsError(&v1[103].padding_0[8]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v4 = 0; v4 < v1->field_60->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_60->field_8 + (v4 << 2))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_60->field_8 + (v4 << 2))))))\n
                {\n
                    v2[0] = *((v1->field_60->field_8 + v4 * 4));\n
                    v3 = v4;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v4 == v1->field_60->field_4)\n
        {\n
            cgc_SetFsError(&v1[102].padding_0[22]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v4 = 0; v4 < 8; v4 = v4 + 1)\n
        {\n
            if (*((684 + &v1->padding_0[0] + 0x4 * v4)) && *(*((684 + &v1->padding_0[0] + 0x4 * v4))) == v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        v7 = v1;\n
        v0 = &v7[98].padding_0[53];\n
        if (cgc_strcmp(v7->field_64))\n
        {\n
            v0 = v2[1];\n
            if (cgc_strcmp(v1->field_64))\n
            {\n
                cgc_SetFsError(&v1[101].padding_0[83]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_free();\n
        if (v2[1])\n
            cgc_free();\n
        if (v2[4])\n
            cgc_free();\n
        cgc_free();\n
        *((v1->field_60->field_8 + v3 * 4)) = 0;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4211049:sub_404169": null, "4211056:cgc_RenameFile": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RenameFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    if (v6 && a0)\n
    {\n
        for (v4 = 0; v4 < v1->field_60->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_60->field_8 + (v4 << 2))) && *(*((v1->field_60->field_8 + (v4 << 2)))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_60->field_8 + (v4 << 2))))))\n
                    v3[0] = *((v1->field_60->field_8 + v4 * 4));\n
                v0 = a0;\n
                if (!cgc_strcmp(*(*((v1->field_60->field_8 + (v4 << 2))))))\n
                {\n
                    cgc_SetFsError(&v1[99].padding_0[58]);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[99].padding_0[26]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v1;\n
        v0 = &v7[98].padding_0[53];\n
        if (cgc_strcmp(v7->field_64))\n
        {\n
            v0 = *((v3 + 4));\n
            if (cgc_strcmp(v1->field_64))\n
            {\n
                cgc_SetFsError(&v1[101].padding_0[83]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_strlen();\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[103].padding_0[83]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a0;\n
        cgc_strcpy(v2);\n
        cgc_free(*(v3));\n
        *(v3) = v2;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_SetFsError(&v1[103].padding_0[25]);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211643:sub_4043bb": null, "4211648:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeMode(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[99].padding_0[4]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v2 = cgc_FindFile(v4);\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[98].padding_0[95]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v1;\n
        v0 = &v5[98].padding_0[53];\n
        if (cgc_strcmp(v5->field_64))\n
        {\n
            v0 = v2->field_4;\n
            if (cgc_strcmp(v1->field_64))\n
            {\n
                cgc_SetFsError(&v1[101].padding_0[83]);\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        v2->field_8 = a0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[102].padding_0[95]);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4211937:sub_4044e1": null, "4211952:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeOwner(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_0 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        cgc_SetFsError(&v1[103].padding_0[25]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v6 = v1;\n
        v0 = &v6[98].padding_0[53];\n
        if (cgc_strcmp(v6->field_64))\n
        {\n
            cgc_SetFsError(&v1[98].padding_0[61]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_FindFile(v5);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[98].padding_0[95]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_UserExists())\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v1[103].padding_0[83]);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = a0;\n
            cgc_strcpy(v2);\n
            if (v3->field_4)\n
                cgc_free();\n
            v3->field_4 = v2;\n
            cgc_ClearFsError();\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(&v1[99].padding_0[4]);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[98].padding_0[75]);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4212362:sub_40468a": null, "4212368:cgc_UserExists": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UserExists(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    char v2;  // [bp-0x90]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v0 - 0x2800);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v3 = cgc_fopen(v6 - 10100, v6 - 10445);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 10199);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (cgc_fgets(&v2, 127, v3))\n
        {\n
            v1 = cgc_strtok(&v2);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(v0 - 10166);\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (!cgc_strcmp(v1))\n
            {\n
                cgc_fclose(v3);\n
                v4 = 1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            cgc_fclose(v3);\n
            cgc_ClearFsError();\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4212744:sub_404808": null, "4212752:cgc_Uid": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Uid()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_64;\n
        v3 = cgc_puts();\n
    }\n
    return v3;\n
}\n
", "4212810:sub_40484a": null, "4212816:cgc_AddUser": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddUser(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct_1 *v2;  // [bp-0xa8]\n
    struct_1 *v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    struct_0 *v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x98]\n
    struct struct_0 **v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v5[98].padding_0[48]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v5[97].padding_0[50]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v5->field_64))\n
    {\n
        cgc_SetFsError(&v5[98].padding_0[61]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[98].padding_0[48]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[97].padding_0[50]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!cgc_UserExists(v10))\n
    {\n
        v11 = v5;\n
        v8 = cgc_fopen(&v11[97].padding_0[12], &v11[100].padding_0[45]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v5[98].padding_0[7]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v5;\n
        v7 = cgc_fopen(&v12[97].padding_0[13], &v12[98].padding_0[9]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v5[97].padding_0[5]);\n
            cgc_fclose(v8);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (cgc_fgets(&v6, 127, v8))\n
            {\n
                v3 = &v6;\n
                v0 = cgc_strlen();\n
                v4 = cgc_fwrite(v3, v0, 1, v7);\n
                if (v4 != cgc_strlen(&v6, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[96].padding_0[78]);\n
                    cgc_DeleteFile(&v5[97].padding_0[13]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                else if (*(&v5 + cgc_strlen()) != 10 && cgc_fwrite(&v5[95].padding_0[13], 1, 1, v7) != 1)\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[96].padding_0[78]);\n
                    cgc_DeleteFile(&v5[97].padding_0[13]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v5[96].padding_0[46];\n
                v1 = v10;\n
                cgc_sprintf(&v6, v0, v1);\n
                v2 = &v6;\n
                cgc_fwrite(v2, cgc_strlen(&v6, v0, v1), 1, v7);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v5[97].padding_0[12]);\n
                v13 = v5;\n
                cgc_RenameFile(&v13[97].padding_0[13], &v13[97].padding_0[12]);\n
                cgc_ClearFsError();\n
                v9 = 1;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v5[97].padding_0[33]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4213982:sub_404cde": null, "4213984:cgc_DeleteUser": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteUser(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    struct_1 *v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    struct_0 *v3;  // [bp-0xa0]\n
    struct struct_0 **v4;  // [bp-0x9c]\n
    void* v5;  // [bp-0x98]\n
    char v6;  // [bp-0x91]\n
    unsigned int v7;  // [bp-0x90]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v3[98].padding_0[48]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v3->field_64))\n
    {\n
        cgc_SetFsError(&v3[98].padding_0[61]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v10))\n
    {\n
        v11 = v3;\n
        v5 = cgc_fopen(&v11[97].padding_0[12], &v11[100].padding_0[45]);\n
        if (!v5)\n
        {\n
            cgc_SetFsError(&v3[98].padding_0[7]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v3;\n
        v4 = cgc_fopen(&v12[97].padding_0[13], &v12[98].padding_0[9]);\n
        if (!v4)\n
        {\n
            cgc_SetFsError(&v3[97].padding_0[5]);\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v3[96].padding_0[17]);\n
                        cgc_fclose(v5);\n
                        cgc_fclose(v4);\n
                        cgc_DeleteFile(&v3[97].padding_0[13]);\n
                        v9 = 0;\n
                        return v9;\n
                    }\n
                    cgc_DeleteFile(&v3[97].padding_0[12]);\n
                    v13 = v3;\n
                    cgc_RenameFile(&v13[97].padding_0[13], &v13[97].padding_0[12]);\n
                    cgc_ClearFsError();\n
                    v9 = 1;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen());\n
            v7 = cgc_strtok(&v8);\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v3[97].padding_0[78]);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(&v3[97].padding_0[13]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (cgc_strcmp(v7))\n
            {\n
                (&v8)[cgc_strlen()] = 58;\n
                v1 = &v8;\n
                v0 = cgc_strlen();\n
                v2 = cgc_fwrite(v1, v0, 1, v4);\n
                if (v2 != cgc_strlen(&v8, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v6 = 1;\n
            }\n
        }\n
        cgc_fclose(v5);\n
        cgc_fclose(v4);\n
        cgc_SetFsError(&v3[96].padding_0[78]);\n
        cgc_DeleteFile(&v3[97].padding_0[13]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v3[96].padding_0[40]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4215090:sub_405132": null, "4215104:cgc_ChangePasswd": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangePasswd(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    struct_1 *v2;  // [bp-0xb4]\n
    unsigned int v3;  // [bp-0xb0]\n
    struct_1 *v4;  // [bp-0xac]\n
    unsigned int v5;  // [bp-0xa8]\n
    struct_0 *v6;  // [bp-0xa4]\n
    struct struct_0 **v7;  // [bp-0xa0]\n
    void* v8;  // [bp-0x9c]\n
    char v9;  // [bp-0x95]\n
    unsigned int v10;  // [bp-0x94]\n
    char v11;  // [bp-0x8d]\n
    char v12;  // [bp-0xd]\n
    struct_0 *v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        cgc_SetFsError(&v6[98].padding_0[48]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v6[97].padding_0[50]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (cgc_strlen() <= 32)\n
    {\n
        if (cgc_strcmp(v6->field_64) && cgc_strcmp(v6->field_64))\n
        {\n
            cgc_SetFsError(&v6[96].padding_0[2]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v14 = v6;\n
        v8 = cgc_fopen(&v14[97].padding_0[12], &v14[100].padding_0[45]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v6[98].padding_0[7]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v15 = v6;\n
        v7 = cgc_fopen(&v15[97].padding_0[13], &v15[98].padding_0[9]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v6[97].padding_0[5]);\n
            cgc_fclose(v8);\n
            v12 = 0;\n
            return v12;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v11, 127, v8))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    if (!v9)\n
                    {\n
                        cgc_SetFsError(&v6[96].padding_0[17]);\n
                        cgc_fclose(v8);\n
                        cgc_fclose(v7);\n
                        cgc_DeleteFile(&v6[97].padding_0[13]);\n
                        v12 = 0;\n
                        return v12;\n
                    }\n
                    cgc_DeleteFile(&v6[97].padding_0[12]);\n
                    v16 = v6;\n
                    cgc_RenameFile(&v16[97].padding_0[13], &v16[97].padding_0[12]);\n
                    cgc_ClearFsError();\n
                    v12 = 1;\n
                    return v12;\n
                }\n
            } while (!cgc_strlen());\n
            v10 = cgc_strtok(&v11);\n
            if (!v10)\n
            {\n
                cgc_SetFsError(&v6[97].padding_0[78]);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v6[97].padding_0[13]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (!cgc_strcmp(v10))\n
            {\n
                v0 = &v6[95].padding_0[67];\n
                v1 = v13;\n
                cgc_sprintf(&v11, v0, v1);\n
                v4 = &v11;\n
                v0 = cgc_strlen(&v11, v0, v1);\n
                v5 = cgc_fwrite(v4, v0, 1, v7);\n
                if (v5 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v6[96].padding_0[78]);\n
                    cgc_DeleteFile(&v6[97].padding_0[13]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                (&v11)[cgc_strlen()] = 58;\n
                v2 = &v11;\n
                v0 = cgc_strlen();\n
                v3 = cgc_fwrite(v2, v0, 1, v7);\n
                if (v3 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_SetFsError(&v6[96].padding_0[78]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[97].padding_0[13]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v6[97].padding_0[50]);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4216524:sub_4056cc": null, "4216528:cgc_CheckPasswd": "typedef struct struct_0 {\n
    char padding_0[100];\n
    unsigned int field_64;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckPasswd(unsigned int v9, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xa8]\n
    char v1;  // [bp-0xa1]\n
    void* v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x9c]\n
    char v4;  // [bp-0x95]\n
    unsigned int v5;  // [bp-0x94]\n
    unsigned int v6;  // [bp-0x90]\n
    char v7;  // [bp-0x89]\n
    char v8;  // [bp-0x9]\n
    struct_0 *v10;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v9)\n
    {\n
        cgc_SetFsError(&v0[98].padding_0[48]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v0[97].padding_0[50]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v0[97].padding_0[50]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (!v0->field_64)\n
        {\n
            cgc_Login(&v0[98].padding_0[53]);\n
            v1 = 1;\n
        }\n
        else if (cgc_strcmp(v0->field_64))\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[103].padding_0[83]);\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_strcpy(v2);\n
            cgc_Logout();\n
            cgc_Login(&v0[98].padding_0[53]);\n
        }\n
        v10 = v0;\n
        v3 = cgc_fopen(&v10[97].padding_0[12], &v10[100].padding_0[45]);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v0[98].padding_0[7]);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v7, 127, v3))\n
                        {\n
                            cgc_fclose(v3);\n
                            if (!v4)\n
                            {\n
                                cgc_SetFsError(&v0[96].padding_0[17]);\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                        }\n
                    } while (!cgc_strlen());\n
                    v6 = cgc_strtok(&v7);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v0[97].padding_0[78]);\n
                        cgc_fclose(v3);\n
                        if (v2)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v2);\n
                            cgc_free();\n
                        }\n
                        if (v1)\n
                            cgc_Logout();\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                } while (cgc_strcmp(v6));\n
                v5 = cgc_strtok(0);\n
                if (!v5)\n
                {\n
                    cgc_SetFsError(&v0[97].padding_0[78]);\n
                    cgc_fclose(v3);\n
                    if (v2)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v2);\n
                        cgc_free();\n
                    }\n
                    if (v1)\n
                        cgc_Logout();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (cgc_strcmp(v5));\n
            cgc_ClearFsError();\n
            cgc_fclose(v3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4218039:sub_405cb7": null, "4218048:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4218252:sub_405d8c": null, "4218256:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 104));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 104)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4218593:sub_405ee1": null, "4218608:cgc_add_freelist_block": "typedef struct struct_1 {\n
    char padding_0[104];\n
    unsigned int field_68;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[92].padding_0[4]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_68)\n
    {\n
        v7 = v1;\n
        v7->field_68 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4218833:sub_405fd1": null, "4218848:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4218919:sub_406027": null, "4218928:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[104];\n
    struct struct_1 *field_68;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_68);\n
    v3[0] = v1->field_68;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4219145:sub_406109": null, "4219152:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4219236:sub_406164": null, "4219248:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[104];\n
    struct struct_0 *field_68;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_68; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4219529:sub_406289": null, "4219536:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4219644:sub_4062fc": null, "4219648:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 104)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 104));\n
        *((v6 + v3 * 4 + 104)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4219933:sub_40641d": null, "4219936:cgc_round": null, "4220082:sub_4064b2": null, "4220096:cgc_floor": null, "4220252:sub_40655c": null, "4220256:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[844];\n
    unsigned int field_34c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_34c = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[716 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[716 + 4 * (v2 + 1 & 31)]);\n
        *((716 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4220479:sub_40663f": null, "4220480:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4220527:sub_40666f": null, "4220528:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[716 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4220811:sub_40678b": null, "4220816:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4221004:sub_40684c": null, "4221008:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4221109:sub_4068b5": null, "4221120:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4221154:sub_4068e2": null, "4221168:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // esi\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (true)\n
    {\n
        if (v3->field_100 < 0x100)\n
        {\n
            v7 = v3;\n
            v7->field_100 = v7->field_100 + 1;\n
            (&v3->field_0)[v9] = a0;\n
            v4 = a1 + 1;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(1, v3, v3->field_100))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        else if (*(&v2))\n
        {\n
            v6 = v3;\n
            v6->field_100 = v6->field_100 - *(&v2);\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4221399:sub_4069d7": null, "4221408:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4221500:sub_406a3c": null, "4221504:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221692:sub_406afc": null, "4221696:cgc_vprintf_buffered": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x130]\n
    unsigned int v2;  // [bp-0x128]\n
    void* v3;  // [bp-0x124]\n
    struct_0 *v4;  // [bp-0x120]\n
    char v5;  // [bp-0x11c]\n
    unsigned short v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // esi\n
\n
    v11 = v13;\n
    v10 = v14;\n
    v9 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v0 = a0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, v12);\n
    if (v6 > 0)\n
    {\n
        if (cgc_transmit(1, &v5, v6))\n
        {\n
            v8 = -1;\n
            goto LABEL_406bdb;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
        }\n
    }\n
    v8 = v2;\n
LABEL_406bdb:\n
    return v8;\n
}\n
", "4221929:sub_406be9": null, "4221936:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_407129:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_407129;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 9852)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4223292:sub_40713c": null, "4223296:cgc_printf": "int cgc_printf(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0x8]\n
\n
    v2 = &v4;\n
    v0 = v2;\n
    v1 = cgc_vprintf(v3);\n
    return v1;\n
}\n
", "4223354:sub_40717a": null, "4223360:cgc_vprintf": "int cgc_vprintf(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = cgc_WRAPPER_PUTC;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = a0;\n
    return cgc_wrapper_output(v2, v3, v1, v6);\n
}\n
", "4223457:sub_4071e1": null, "4223472:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4223541:sub_407235": null, "4223552:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4223691:sub_4072cb": null, "4223696:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4223968:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4224624:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4227040:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4227706:sub_40827a": null, "4227712:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if ((a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4228252:sub_40849c": null, "4228256:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4228303:sub_4084cf": null, "4228304:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4228341:sub_4084f5": null, "4228352:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4228589:sub_4085ed": null, "4228592:cgc_atof": null, "4228877:sub_40870d": null, "4228880:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4228956:sub_40875c": null, "4228960:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4229097:sub_4087e9": null, "4229104:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4229240:sub_408878": null, "4229248:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_40899a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_40899a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4089ed;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_4089ed;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4089ed:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_40899a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (cgc_isupper(v1))\n
                v1 -= 55;\n
            else\n
                v1 -= 87;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_408b25:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_408b2a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = v7 + 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_408b2a;\n
            goto LABEL_408b25;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4230019:sub_408b83": null, "4230032:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4230091:sub_408bcb": null, "4230096:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4230151:sub_408c07": null, "4230160:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4230315:sub_408cab": null, "4230320:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v4[v2] == a0)\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4230478:sub_408d4e": null, "4230480:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[616];\n
    struct struct_1 *field_268;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_268)\n
        {\n
            v6 = v1->field_268;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_268 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_268 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_268 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_268 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4230999:sub_408f57": null, "4231008:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4231358:sub_4090be": null, "4231360:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4231543:sub_409177": null, "4231552:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = *((v4 + v2));\n
            v0 = *((a0 + v2));\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4231705:sub_409219": null, "4231712:_Block_object_assign": "int _Block_object_assign()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4231717:sub_409225": null, "4231728:_Block_object_dispose": "int _Block_object_dispose()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4231733:sub_409235": null, "4231744:cgc_run_loop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_run_loop()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v0 = v1 - 304;\n
        cgc_protocol_with_recv_frame();\n
    }\n
}\n
", "4231793:sub_409271": null, "4231808:__cgc_run_loop_block_invoke": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int __cgc_run_loop_block_invoke()\n
{\n
    char v7;  // [bp+0xfffff]\n
\n
    cgc_handle_query();\n
    v7 = 1;\n
    return;\n
}\n
", "4231985:sub_409331": null, "4232000:cgc_handle_check": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_check(unsigned int v11)\n
{\n
    struct_0 *v0;  // [bp-0x4c], Other Possible Types: unsigned long, unsigned int\n
    unsigned long v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    struct_0 *v5;  // [bp-0x28]\n
    char v6;  // [bp-0x24]\n
    unsigned long v7;  // [bp-0x1c]\n
    unsigned long v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
\n
    v10 = v12;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v11;\n
    v9 = cgc_extract_check_req();\n
    [D] PutI(72:F64x8)[t22,0] = t25\n
    [D] PutI(136:I8x8)[t22,0] = 0x01\n
    v8 = ([D] GetI(136:I8x8)[t37,0] ? [D] GetI(72:F64x8)[t37,0] : nan);\n
    [D] PutI(136:I8x8)[t37,0] = 0x00\n
    [D] PutI(72:F64x8)[t49,0] = t52\n
    [D] PutI(136:I8x8)[t49,0] = 0x01\n
    v7 = ([D] GetI(136:I8x8)[t64,0] ? [D] GetI(72:F64x8)[t64,0] : nan);\n
    [D] PutI(136:I8x8)[t64,0] = 0x00\n
    [D] PutI(72:F64x8)[t73,0] = t76\n
    [D] PutI(136:I8x8)[t73,0] = 0x01\n
    [D] PutI(72:F64x8)[t85,0] = t88\n
    [D] PutI(136:I8x8)[t85,0] = 0x01\n
    v1 = ([D] GetI(136:I8x8)[t101,0] ? [D] GetI(72:F64x8)[t101,0] : nan);\n
    [D] PutI(136:I8x8)[t101,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t111,0] ? [D] GetI(72:F64x8)[t111,0] : nan);\n
    [D] PutI(136:I8x8)[t111,0] = 0x00\n
    cgc_monte_adjust();\n
    v6 = cgc_monte_happy();\n
    v3 = 11;\n
    v4 = 1;\n
    v5 = &v6;\n
    v0 = &v3;\n
    v13 = v10;\n
    return cgc_protocol_send();\n
}\n
", "4232125:sub_4093bd": null, "4232128:cgc_handle_double": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
    char padding_-c[4294967296];\n
    unsigned int field_fffffff4;\n
    unsigned int field_fffffff8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409428;\n
\n
int cgc_handle_double(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0xa]\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_monte_happy() * 2;\n
    v4 = v5 & 248;\n
    v3 = &v0;\n
    v2 = v4;\n
    v1 = &v0 - (v2 + 15 & -0x10);\n
    *(&v1->padding_-c[8]) = v7;\n
    *(&v1->padding_-c[4]) = v1;\n
    *(&v1->padding_-c[0]) = v4;\n
    *(&v1->padding_-c[12]) = &g_409428;\n
    cgc_double_body();\n
    v9 = v6;\n
    return v3;\n
}\n
", "4232246:sub_409436": null, "4232256:cgc_handle_unrecognized_id": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_unrecognized_id()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0x12]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    char v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x4]\n
    unsigned int v7;  // ebp\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v7 = &v5;\n
    v4 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 1;\n
    cgc_protocol_send(&v1, &_GLOBAL_OFFSET_TABLE_, 1, &v3, v6, v8);\n
    v9 = v0;\n
    cgc__terminate(-1, &_GLOBAL_OFFSET_TABLE_, 1, &v3, *(&v3), v4);\n
    cgc_handle_query();\n
    return;\n
}\n
", "4232336:cgc_handle_query": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_unrecognized_id()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0x12]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    char v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x4]\n
    unsigned int v7;  // ebp\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v7 = &v5;\n
    v4 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 1;\n
    cgc_protocol_send(&v1, &_GLOBAL_OFFSET_TABLE_, 1, &v3, v6, v8);\n
    v9 = v0;\n
    cgc__terminate(-1, &_GLOBAL_OFFSET_TABLE_, 1, &v3, *(&v3), v4);\n
    cgc_handle_query();\n
    return;\n
}\n
", "4232402:sub_4094d2": null, "4232416:cgc_bufcpy": "int cgc_bufcpy(char v2, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x9]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        a1[v1] = a0[v1];\n
        a1[v2 + v1] = a0[v1];\n
    }\n
    return v1;\n
}\n
", "4232515:sub_409543": null, "4232528:cgc_double_body": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_double_body(struct_0 *v7, char *a0, char a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned short v3;  // [bp-0x16]\n
    char v4;  // [bp-0x14]\n
    unsigned short v5;  // [bp-0x12]\n
    unsigned int v6;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7->field_2;\n
    v4 = 21;\n
    v5 = v3 * 2;\n
    v6 = a0;\n
    if (a1 < v3)\n
        cgc__terminate();\n
    if (a1 < v3 << 1)\n
        cgc__terminate();\n
    v2 = v7->field_4;\n
    v0 = v2;\n
    cgc_bufcpy(v3, v0, a0);\n
    return cgc_protocol_send(&v4, v0);\n
}\n
", "4232719:sub_40960f": null, "4232720:cgc_extract_hello": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_hello(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_2 != 8)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4232818:sub_409672": null, "4232832:cgc_extract_unrecognized_id_error": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_unrecognized_id_error(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 1)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_2 != 1)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4232930:sub_4096e2": null, "4232944:cgc_extract_terminate": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_terminate(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 9)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_2)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233042:sub_409752": null, "4233056:cgc_extract_check_req": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_check_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 10)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_2 != 16)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233154:sub_4097c2": null, "4233168:cgc_extract_check_resp": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_check_resp(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 11)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_2 != 1)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233266:sub_409832": null, "4233280:cgc_extract_double_req": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_double_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 20)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233347:sub_409883": null, "4233360:cgc_extract_double_resp": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_double_resp(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 21)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233427:sub_4098d3": null, "4233440:cgc_extract_query_req": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_query_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 30)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233507:sub_409923": null, "4233520:cgc_extract_query_resp": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_query_resp(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 31)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_2 != 8)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4233618:sub_409992": null, "4233632:cgc_monte_initialize": "typedef struct struct_0 {\n
    char padding_0[1116];\n
    unsigned long long field_45c;\n
    unsigned int field_464;\n
    unsigned int field_468;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *random_page;\n
\n
int cgc_monte_initialize()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    struct_0 *v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2[0] = random_page;\n
    v6 = v2;\n
    v0 = v6[1];\n
    cgc_kajigger_from_random_int(v6[0]);\n
    v7 = v1;\n
    if ([D] GetI(136:I8x8)[t10,0])\n
    {\n
        *(&(&v7->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&(&v7->padding_0)[1]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v7->field_464 = 0;\n
    *((&v7->field_45c + 4)) = 0;\n
    return v1;\n
}\n
", "4233718:sub_4099f6": null, "4233728:cgc_kajigger_from_random_int": null, "4233835:sub_409a6b": null, "4233840:cgc_monte_adjust": "extern char scaler;\n
extern char splatter;\n
\n
int cgc_monte_adjust()\n
{\n
    char v0;  // [bp-0x4]\n
    unsigned int v2;  // ebp\n
\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t9,0] = t10\n
    [D] PutI(136:I8x8)[t9,0] = 0x01\n
    [D] PutI(136:I8x8)[t9,0] = 0x00\n
    [D] PutI(72:F64x8)[t23,0] = t26\n
    [D] PutI(136:I8x8)[t23,0] = 0x01\n
    [D] PutI(72:F64x8)[t33,0] = t34\n
    [D] PutI(136:I8x8)[t33,0] = 0x01\n
    [D] PutI(136:I8x8)[t33,0] = 0x00\n
    [D] PutI(72:F64x8)[t47,0] = t50\n
    [D] PutI(136:I8x8)[t47,0] = 0x01\n
    *(&splatter) = ([D] GetI(136:I8x8)[t62,0] ? [D] GetI(72:F64x8)[t62,0] : nan);\n
    [D] PutI(136:I8x8)[t62,0] = 0x00\n
    [D] PutI(72:F64x8)[t71,0] = t74\n
    [D] PutI(136:I8x8)[t71,0] = 0x01\n
    *(&scaler) = ([D] GetI(136:I8x8)[t86,0] ? [D] GetI(72:F64x8)[t86,0] : nan);\n
    [D] PutI(136:I8x8)[t86,0] = 0x00\n
    v2 = *(&v0);\n
    return;\n
}\n
", "4233885:sub_409a9d": null, "4233888:cgc_monte_gen_step": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_monte_gen_step()\n
{\n
    unsigned long v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned long v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x8]\n
    char v7;  // [bp-0x4]\n
    char v9;  // [bp+0xc]\n
    char v10;  // [bp+0x10]\n
    unsigned int v11;  // ebx\n
    unsigned int v13;  // ebp\n
\n
    v6 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t21,0] = t22\n
    [D] PutI(136:I8x8)[t21,0] = 0x01\n
    [D] PutI(136:I8x8)[t21,0] = 0x00\n
    [D] PutI(72:F64x8)[t35,0] = t38\n
    [D] PutI(136:I8x8)[t35,0] = 0x01\n
    [D] PutI(72:F64x8)[t45,0] = t46\n
    [D] PutI(136:I8x8)[t45,0] = 0x01\n
    [D] PutI(136:I8x8)[t45,0] = 0x00\n
    [D] PutI(72:F64x8)[t59,0] = t62\n
    [D] PutI(136:I8x8)[t59,0] = 0x01\n
    [D] PutI(72:F64x8)[t69,0] = t70\n
    [D] PutI(136:I8x8)[t69,0] = 0x01\n
    [D] PutI(136:I8x8)[t69,0] = 0x00\n
    [D] PutI(72:F64x8)[t83,0] = t86\n
    [D] PutI(136:I8x8)[t83,0] = 0x01\n
    [D] PutI(72:F64x8)[t95,0] = t98\n
    [D] PutI(136:I8x8)[t95,0] = 0x01\n
    v4 = *(&v10);\n
    v3 = *(&v9);\n
    [D] PutI(72:F64x8)[t130,0] = t133\n
    [D] PutI(136:I8x8)[t130,0] = 0x01\n
    [D] PutI(72:F64x8)[t148,0] = t151\n
    [D] PutI(136:I8x8)[t148,0] = 0x01\n
    [D] PutI(72:F64x8)[t159,1] = t160\n
    [D] PutI(136:I8x8)[t159,1] = 0x01\n
    [D] PutI(136:I8x8)[t159,0] = 0x00\n
    v2 = ([D] GetI(136:I8x8)[t184,0] ? [D] GetI(72:F64x8)[t184,0] : nan);\n
    [D] PutI(136:I8x8)[t184,0] = 0x00\n
    [D] PutI(72:F64x8)[t193,0] = t196\n
    [D] PutI(136:I8x8)[t193,0] = 0x01\n
    [D] PutI(72:F64x8)[t203,1] = t204\n
    [D] PutI(136:I8x8)[t203,1] = 0x01\n
    [D] PutI(136:I8x8)[t203,0] = 0x00\n
    [D] PutI(72:F64x8)[t223,1] = t224\n
    [D] PutI(136:I8x8)[t223,1] = 0x01\n
    [D] PutI(136:I8x8)[t223,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t247,0] ? [D] GetI(72:F64x8)[t247,0] : nan);\n
    [D] PutI(136:I8x8)[t247,0] = 0x00\n
    cgc_sin();\n
    v0 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t12,1] = t13\n
    [D] PutI(136:I8x8)[t12,1] = 0x01\n
    [D] PutI(136:I8x8)[t12,0] = 0x00\n
    v5 = ([D] GetI(136:I8x8)[t37,0] ? [D] GetI(72:F64x8)[t37,0] : nan);\n
    [D] PutI(136:I8x8)[t37,0] = 0x00\n
    [D] PutI(72:F64x8)[t46,0] = t49\n
    [D] PutI(136:I8x8)[t46,0] = 0x01\n
    [D] PutI(72:F64x8)[t56,0] = t59\n
    [D] PutI(136:I8x8)[t56,0] = 0x01\n
    [D] PutI(72:F64x8)[t66,1] = t67\n
    [D] PutI(136:I8x8)[t66,1] = 0x01\n
    [D] PutI(136:I8x8)[t66,0] = 0x00\n
    [D] PutI(72:F64x8)[t88,0] = t91\n
    [D] PutI(136:I8x8)[t88,0] = 0x01\n
    [D] PutI(72:F64x8)[t98,1] = t99\n
    [D] PutI(136:I8x8)[t98,1] = 0x01\n
    [D] PutI(136:I8x8)[t98,0] = 0x00\n
    v13 = *(&v7);\n
    return;\n
}\n
", "4234027:sub_409b2b": null, "4234032:cgc_monte_gen": null, "4234197:sub_409bd5": null, "4234208:cgc_monte_happy": null, "4234586:sub_409d5a": null, "4234592:cgc_check_random_params": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned long long field_4c;\n
    unsigned long long field_54;\n
    char padding_5c[1024];\n
    unsigned long long field_45c;\n
    unsigned int field_464;\n
    unsigned int field_468;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int counter;\n
extern unsigned int g_40decc;\n
extern char kajigger;\n
extern char scaler;\n
extern char splatter;\n
\n
int cgc_check_random_params()\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    int tmp_7;  // tmp #7\n
    char v1;  // [bp-0x2d]\n
    unsigned long v2;  // [bp-0x2c]\n
    unsigned long v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned long v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x8]\n
    char v8;  // [bp-0x4]\n
    char v10;  // [bp+0xc]\n
    char v11;  // [bp+0x10]\n
    unsigned int v12;  // ebx\n
    struct_0 *v13;  // eax\n
    unsigned int v15;  // ebp\n
\n
    v7 = v12;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t23,0] = t24\n
    [D] PutI(136:I8x8)[t23,0] = 0x01\n
    [D] PutI(136:I8x8)[t23,0] = 0x00\n
    [D] PutI(72:F64x8)[t37,0] = t40\n
    [D] PutI(136:I8x8)[t37,0] = 0x01\n
    [D] PutI(72:F64x8)[t47,0] = t48\n
    [D] PutI(136:I8x8)[t47,0] = 0x01\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t61,0] = t64\n
    [D] PutI(136:I8x8)[t61,0] = 0x01\n
    [D] PutI(72:F64x8)[t71,0] = t72\n
    [D] PutI(136:I8x8)[t71,0] = 0x01\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    [D] PutI(72:F64x8)[t85,0] = t88\n
    [D] PutI(136:I8x8)[t85,0] = 0x01\n
    v6 = ([D] GetI(136:I8x8)[t100,0] ? [D] GetI(72:F64x8)[t100,0] : nan);\n
    [D] PutI(136:I8x8)[t100,0] = 0x00\n
    [D] PutI(72:F64x8)[t109,0] = t112\n
    [D] PutI(136:I8x8)[t109,0] = 0x01\n
    *(&kajigger) = ([D] GetI(136:I8x8)[t124,0] ? [D] GetI(72:F64x8)[t124,0] : nan);\n
    [D] PutI(136:I8x8)[t124,0] = 0x00\n
    v5 = g_40decc;\n
    v4 = counter;\n
    g_40decc = *(&v11);\n
    counter = *(&v10);\n
    [D] PutI(72:F64x8)[t157,0] = t160\n
    [D] PutI(136:I8x8)[t157,0] = 0x01\n
    v3 = ([D] GetI(136:I8x8)[t172,0] ? [D] GetI(72:F64x8)[t172,0] : nan);\n
    [D] PutI(136:I8x8)[t172,0] = 0x00\n
    [D] PutI(72:F64x8)[t181,0] = t184\n
    [D] PutI(136:I8x8)[t181,0] = 0x01\n
    v2 = ([D] GetI(136:I8x8)[t196,0] ? [D] GetI(72:F64x8)[t196,0] : nan);\n
    [D] PutI(136:I8x8)[t196,0] = 0x00\n
    [D] PutI(72:F64x8)[t205,0] = t208\n
    [D] PutI(136:I8x8)[t205,0] = 0x01\n
    *(&splatter) = ([D] GetI(136:I8x8)[t220,0] ? [D] GetI(72:F64x8)[t220,0] : nan);\n
    [D] PutI(136:I8x8)[t220,0] = 0x00\n
    [D] PutI(72:F64x8)[t229,0] = t232\n
    [D] PutI(136:I8x8)[t229,0] = 0x01\n
    *(&scaler) = ([D] GetI(136:I8x8)[t244,0] ? [D] GetI(72:F64x8)[t244,0] : nan);\n
    [D] PutI(136:I8x8)[t244,0] = 0x00\n
    tmp_7 = cgc_monte_happy();\n
    v13 = v0;\n
    v1 = tmp_7;\n
    v13->field_464 = v5;\n
    *((&v13->field_45c + 4)) = v4;\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *(&v13->padding_5c[1020]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&v13->padding_5c[1020]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *(&(&v13->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&(&v13->padding_0)[1]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *((&v13->field_4c + 4)) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *((&v13->field_4c + 4)) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v15 = *(&v8);\n
    return;\n
}\n
", "4234793:sub_409e29": null, "4234800:cgc_protocol_send": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_protocol_send(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc_tx(v3);\n
    v0 = 2;\n
    cgc_tx(&v3->field_2);\n
    v5 = v3->field_2;\n
    if (v5)\n
    {\n
        v0 = v3->field_2;\n
        v5 = cgc_tx(v3->field_4);\n
        return v5;\n
    }\n
    return v3->field_2;\n
}\n
", "4234924:sub_409eac": null, "4234928:cgc_tx": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tx(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a0; v4 = v3 + v4)\n
    {\n
        v3 = 0;\n
        v0 = &v3;\n
        v2 = cgc_transmit(1, v5 + v4, a0 - v4);\n
        if (v2)\n
            cgc__terminate();\n
        if (!v3)\n
            cgc__terminate();\n
    }\n
    return v4;\n
}\n
", "4235097:sub_409f59": null, "4235104:cgc_protocol_with_recv_frame": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
    char padding_-c[4294967296];\n
    unsigned int field_fffffff4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409fd9;\n
\n
int cgc_protocol_with_recv_frame(struct_2 *v13)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    struct_3 *v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x17]\n
    char v7;  // [bp-0x16]\n
    char v8;  // [bp-0x14]\n
    unsigned short v9;  // [bp-0x12]\n
    struct_3 *v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0x8]\n
    struct_2 *v12;  // [bp+0x0]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ebx\n
\n
    v11 = v14;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &v6;\n
    v0 = 3;\n
    cgc_rx(v5);\n
    v8 = v6;\n
    v9 = *(&v7);\n
    v15 = v9;\n
    v4 = &v1;\n
    v2 = &v1 - (v15 + 15 & -0x10);\n
    v3 = v15;\n
    *(&v2->padding_-c[8]) = v2;\n
    *(&v2->padding_-c[4]) = v9;\n
    *(&v2->padding_-c[12]) = &g_409fd9;\n
    cgc_rx();\n
    v10 = v2;\n
    v12 = v13;\n
    v13 = &v8;\n
    v12->field_c(v12);\n
    v16 = v11;\n
    return v4;\n
}\n
", "4235272:sub_40a008": null, "4235280:cgc_rx": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rx(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a0; v4 = v3 + v4)\n
    {\n
        v3 = 0;\n
        v0 = &v3;\n
        v2 = cgc_receive(0, v5 + v4, a0 - v4);\n
        if (v2)\n
            cgc__terminate();\n
        if (!v3)\n
            cgc__terminate();\n
    }\n
    return v4;\n
}\n
", "4235451:sub_40a0bb": null, "4235456:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_types_check();\n
    cgc_monte_initialize();\n
    cgc_say_hello();\n
    cgc_run_loop(); /* do not return */\n
}\n
", "4235520:sub_40a100": "int sub_40a100()\n
{\n
    char v1;  // [bp+0x14]\n
    char v2;  // [bp+0x18]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebp\n
\n
    v3 = *(&v1);\n
    v4 = *(&v2);\n
    return;\n
}\n
", "4235531:sub_40a10b": null, "4235536:cgc_say_hello": null, "4235602:sub_40a152": null, "4235616:cgc_types_check": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_types_check()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc_chk(1);\n
    v0 = 1;\n
    cgc_chk(1);\n
    v0 = 2;\n
    cgc_chk(2);\n
    v0 = 2;\n
    cgc_chk(2);\n
    v0 = 4;\n
    cgc_chk(4);\n
    v0 = 4;\n
    cgc_chk(4);\n
    v0 = 8;\n
    cgc_chk(8);\n
    v0 = 8;\n
    cgc_chk(8);\n
    v0 = 4;\n
    cgc_chk(4);\n
    v0 = 8;\n
    v5 = v2;\n
    return cgc_chk(8);\n
}\n
", "4235871:sub_40a25f": null, "4235872:cgc_chk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_chk(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 == a0)\n
        return v2;\n
    v0 = -1;\n
    cgc__terminate();\n
}\n
", "4235936:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_fabs": null, "5242884:cgc_pow": null, "5242888:__libc_start_main": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_tan": null, "5242912:cgc_log10": null, "5242916:cgc_sin": null, "5242920:cgc_sqrt": null, "5242924:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}