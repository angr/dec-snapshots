{"4202496:_init": "extern struct_0 *g_4094d4;\n
\n
int _init()\n
{\n
    if (g_4094d4)\n
    {\n
        g_4094d4();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202678:sub_4020b6": null, "4202688:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202731:sub_4020eb": null, "4202732:sub_4020ec": "int sub_4020ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202736:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202740:sub_4020f4": null, "4202752:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29659;\n
    v6 = v5 + 54;\n
    v7 = v5 + 54;\n
    if (v7 == v6)\n
        return v5 + 54;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202803:sub_402133": "int sub_402133()\n
{\n
}\n
", "4202809:sub_402139": "int sub_402139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202816:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 29595;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 54;\n
    v9 = (v6 + 54 - (v6 + 54) >> 31) + (54 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202887:sub_402187": "int sub_402187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4094d0;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4094d0)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202971:sub_4021db": "int sub_4021db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202976:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (v4)\n
    {\n
        v5 = a0;\n
        if (v5)\n
        {\n
            tmp_2 = v5;\n
            if (!([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>)))\n
            {\n
                v7 = v5 * v4;\n
                v8 = cgc_malloc();\n
                if (v8)\n
                {\n
                    v0 = v7;\n
                    return cgc_memset(v8, 0);\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4203070:sub_40223e": null, "4203072:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4203105:sub_402261": null, "4203120:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203139:sub_402283": null, "4203152:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203168:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203184:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203200:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4203214:sub_4022ce": null, "4203216:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4203238:sub_4022e6": null, "4203248:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4203270:sub_402306": null, "4203280:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4203302:sub_402326": null, "4203312:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4203334:sub_402346": null, "4203344:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[13528 + v0];\n
}\n
", "4203369:sub_402369": null, "4203376:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4203401:sub_402389": null, "4203408:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[13400 + v0];\n
}\n
", "4203433:sub_4023a9": null, "4203440:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203448:sub_4023b8": null, "4203456:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4203475:sub_4023d3": null, "4203488:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4203507:sub_4023f3": null, "4203520:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4203599:sub_40244f": null, "4203600:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_409638;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct_2 *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v12[6];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        if (v10 <= 31)\n
        {\n
            do\n
            {\n
                v11 = *(&(&cgc_free_lists)[4 * v10]);\n
                if (*(&(&cgc_free_lists)[4 * v10]))\n
                {\n
                    while (*(v11) < v9)\n
                    {\n
                        v11 = *((v11 + 8));\n
                        if (!v11)\n
                            goto LABEL_402502;\n
                    }\n
                }\n
LABEL_402502:\n
                v10 += 1;\n
            } while (v10 != 32);\n
            goto LABEL_402598;\n
        }\n
        v0 = &v2;\n
        if (cgc_allocate(0x40000, 0))\n
            return 0;\n
        v12 = *(&v2);\n
        if (!v12)\n
            return 0;\n
        v12[0] = 0x40000;\n
        v12[1] = 1;\n
        v12[3] = 0;\n
        v12[2] = 0;\n
        v12[5] = 0;\n
        v12[4] = 0;\n
        cgc_insert_into_flist();\n
        v11 = g_409638;\n
LABEL_402598:\n
        cgc_remove_from_flist();\n
        v13 = *(v11) - v9;\n
        if (v13 < 49)\n
            return v11 + 24;\n
        v14 = v9 + v11;\n
        *((&v9->field_0 + v11)) = v13;\n
        *(&v9->padding_4[v11]) = 1;\n
        *((8 + &v9->field_0 + v11)) = 0;\n
        *(&v9->padding_c[v11]) = 0;\n
        *(v11) = v9;\n
        *((20 + &v9->field_0 + v11)) = v11;\n
        *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
        v15 = *((v11 + 16));\n
        if (v15)\n
            v15->field_14 = v14;\n
        *((v11 + 16)) = v14;\n
        cgc_insert_into_flist();\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            return v8 + 1;\n
        }\n
        return 0;\n
    }\n
}\n
", "4204026:sub_4025fa": null, "4204032:cgc_get_size_class": "extern unsigned int g_409514;\n
extern unsigned int g_409518;\n
extern unsigned int g_40951c;\n
extern unsigned int g_409520;\n
extern unsigned int g_409524;\n
extern unsigned int g_409528;\n
extern unsigned int g_40952c;\n
extern unsigned int g_409530;\n
extern unsigned int g_409534;\n
extern unsigned int g_409538;\n
extern unsigned int g_40953c;\n
extern unsigned int g_409540;\n
extern unsigned int g_409544;\n
extern unsigned int g_409548;\n
extern unsigned int g_40954c;\n
extern unsigned int g_409550;\n
extern unsigned int g_409554;\n
extern unsigned int g_409558;\n
extern unsigned int g_40955c;\n
extern unsigned int g_409560;\n
extern unsigned int g_409564;\n
extern unsigned int g_409568;\n
extern unsigned int g_40956c;\n
extern unsigned int g_409570;\n
extern unsigned int g_409574;\n
extern unsigned int g_409578;\n
extern unsigned int g_40957c;\n
extern unsigned int g_409580;\n
extern unsigned int g_409584;\n
extern unsigned int g_409588;\n
extern unsigned int g_40958c;\n
extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (size_class_limits >= v1)\n
        return v2;\n
    v2 = 1;\n
    if (g_409514 < v1)\n
    {\n
        v2 = 2;\n
        if (g_409518 < v1)\n
        {\n
            v2 = 3;\n
            if (g_40951c < v1)\n
            {\n
                v2 = 4;\n
                if (g_409520 < v1)\n
                {\n
                    v2 = 5;\n
                    if (g_409524 < v1)\n
                    {\n
                        v2 = 6;\n
                        if (g_409528 < v1)\n
                        {\n
                            v2 = 7;\n
                            if (g_40952c < v1)\n
                            {\n
                                v2 = 8;\n
                                if (g_409530 < v1)\n
                                {\n
                                    v2 = 9;\n
                                    if (g_409534 < v1)\n
                                    {\n
                                        v2 = 10;\n
                                        if (g_409538 < v1)\n
                                        {\n
                                            v2 = 11;\n
                                            if (g_40953c < v1)\n
                                            {\n
                                                v2 = 12;\n
                                                if (g_409540 < v1)\n
                                                {\n
                                                    v2 = 13;\n
                                                    if (g_409544 < v1)\n
                                                    {\n
                                                        v2 = 14;\n
                                                        if (g_409548 < v1)\n
                                                        {\n
                                                            v2 = 15;\n
                                                            if (g_40954c < v1)\n
                                                            {\n
                                                                v2 = 16;\n
                                                                if (g_409550 < v1)\n
                                                                {\n
                                                                    v2 = 17;\n
                                                                    if (g_409554 < v1)\n
                                                                    {\n
                                                                        v2 = 18;\n
                                                                        if (g_409558 < v1)\n
                                                                        {\n
                                                                            v2 = 19;\n
                                                                            if (g_40955c < v1)\n
                                                                            {\n
                                                                                v2 = 20;\n
                                                                                if (g_409560 < v1)\n
                                                                                {\n
                                                                                    v2 = 21;\n
                                                                                    if (g_409564 < v1)\n
                                                                                    {\n
                                                                                        v2 = 22;\n
                                                                                        if (g_409568 < v1)\n
                                                                                        {\n
                                                                                            v2 = 23;\n
                                                                                            if (g_40956c < v1)\n
                                                                                            {\n
                                                                                                v2 = 24;\n
                                                                                                if (g_409570 < v1)\n
                                                                                                {\n
                                                                                                    v2 = 25;\n
                                                                                                    if (g_409574 < v1)\n
                                                                                                    {\n
                                                                                                        v2 = 26;\n
                                                                                                        if (g_409578 < v1)\n
                                                                                                        {\n
                                                                                                            v2 = 27;\n
                                                                                                            if (g_40957c < v1)\n
                                                                                                            {\n
                                                                                                                v2 = 28;\n
                                                                                                                if (g_409580 < v1)\n
                                                                                                                {\n
                                                                                                                    v2 = 29;\n
                                                                                                                    if (g_409584 < v1)\n
                                                                                                                    {\n
                                                                                                                        v2 = 30;\n
                                                                                                                        if (g_409588 < v1)\n
                                                                                                                            v2 = 31 + (g_40958c < v1);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4204551:sub_402807": null, "4204560:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1[0]);\n
    v1[1] = 1;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[220 + 4 * v2]);\n
    if (!v3)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[220 + 4 * v2]) = v1;\n
        return v2;\n
    }\n
    v1[2] = v3;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[220 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[220 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return v2;\n
}\n
", "4204649:sub_402869": null, "4204656:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct_1 *v3;  // ecx\n
    struct_0 *v4;  // edx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1->field_0);\n
    v3 = v1->field_c;\n
    if (v3)\n
        v3->field_8 = v1->field_8;\n
    v4 = v1->field_8;\n
    if (v4)\n
        v4->field_c = v3;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[220 + 4 * v2]) == v1)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[220 + 4 * v2]) = v4;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v2;\n
}\n
", "4204751:sub_4028cf": null, "4204752:cgc_coalesce": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(unsigned int v0)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // ebp\n
    unsigned int v31;  // edi\n
    unsigned int v32;  // eax\n
    unsigned int v33;  // edx\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // ecx\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // ecx\n
    unsigned int v38;  // ebp\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // edi\n
    unsigned int v41;  // eax\n
    unsigned int v42;  // ecx\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // eax\n
    unsigned int v45;  // ecx\n
\n
    v1 = v0;\n
    v2 = *((v1 + 20));\n
    if (!*((v1 + 20)))\n
        return v36;\n
    v12 = *((v1 + 16));\n
    if (!*((v2 + 4)))\n
    {\n
        if (!v12)\n
        {\n
            return v36;\n
        }\n
        else if (!*((v12 + 4)))\n
        {\n
            return v36;\n
        }\n
        else\n
        {\n
            v4 = cgc_get_size_class(*(v12));\n
            v6 = *((v12 + 12));\n
            if (v6)\n
                *((v6 + 8)) = *((v12 + 8));\n
            v10 = *((v12 + 8));\n
            if (v10)\n
                *((v10 + 12)) = v6;\n
            if ((&_GLOBAL_OFFSET_TABLE_)[55 + v4] == v12)\n
                (&_GLOBAL_OFFSET_TABLE_)[55 + v4] = v10;\n
            *((v12 + 8)) = 0;\n
            *((v12 + 12)) = 0;\n
            *((v12 + 4)) = 0;\n
            v14 = *(v1);\n
            v15 = cgc_get_size_class(v14);\n
            v17 = *((v1 + 12));\n
            if (v17)\n
                *((v17 + 8)) = *((v1 + 8));\n
            v22 = *((v1 + 8));\n
            if (v22)\n
                *((v22 + 12)) = v17;\n
            if ((&_GLOBAL_OFFSET_TABLE_)[55 + v15] == v1)\n
                (&_GLOBAL_OFFSET_TABLE_)[55 + v15] = v22;\n
            *((v1 + 8)) = 0;\n
            *((v1 + 12)) = 0;\n
            *((v1 + 4)) = 0;\n
            v26 = v14 + *(*((v1 + 16)));\n
            *(v1) = v26;\n
            v27 = cgc_get_size_class(v26);\n
            *((v1 + 4)) = 1;\n
            v29 = (&_GLOBAL_OFFSET_TABLE_)[55 + v27];\n
            if (!v29)\n
            {\n
                (&_GLOBAL_OFFSET_TABLE_)[55 + v27] = v1;\n
            }\n
            else\n
            {\n
                *((v1 + 8)) = v29;\n
                *(((&_GLOBAL_OFFSET_TABLE_)[55 + v27] + 12)) = v1;\n
                (&_GLOBAL_OFFSET_TABLE_)[55 + v27] = v1;\n
                *((v1 + 12)) = 0;\n
            }\n
            v35 = *((v1 + 16));\n
            v36 = *((v35 + 20));\n
            if (v36)\n
                *((v36 + 16)) = *((v35 + 16));\n
            v37 = *((v35 + 16));\n
            if (!v37)\n
                return v36;\n
        }\n
        goto LABEL_402c30;\n
    }\n
    if (v12 && *((v12 + 4)))\n
    {\n
        v3 = cgc_get_size_class(*(v2));\n
        v5 = *((v2 + 12));\n
        if (v5)\n
            *((v5 + 8)) = *((v2 + 8));\n
        v8 = *((v2 + 8));\n
        if (v8)\n
            *((v8 + 12)) = v5;\n
        if ((&_GLOBAL_OFFSET_TABLE_)[55 + v3] == v2)\n
        {\n
            (&_GLOBAL_OFFSET_TABLE_)[55 + v3] = v8;\n
            v12 = *((v1 + 16));\n
        }\n
        *((v2 + 8)) = 0;\n
        *((v2 + 12)) = 0;\n
        *((v2 + 4)) = 0;\n
        v13 = cgc_get_size_class(*(v12));\n
        v16 = *((v12 + 12));\n
        if (v16)\n
            *((v16 + 8)) = *((v12 + 8));\n
        v20 = *((v12 + 8));\n
        if (v20)\n
            *((v20 + 12)) = v16;\n
        if ((&_GLOBAL_OFFSET_TABLE_)[55 + v13] == v12)\n
            (&_GLOBAL_OFFSET_TABLE_)[55 + v13] = v20;\n
        *((v12 + 8)) = 0;\n
        *((v12 + 12)) = 0;\n
        *((v12 + 4)) = 0;\n
        v24 = *(v1);\n
        v25 = cgc_get_size_class(v24);\n
        v28 = *((v1 + 12));\n
        if (v28)\n
            *((v28 + 8)) = *((v1 + 8));\n
        v33 = *((v1 + 8));\n
        if (v33)\n
            *((v33 + 12)) = v28;\n
        if ((&_GLOBAL_OFFSET_TABLE_)[55 + v25] == v1)\n
            (&_GLOBAL_OFFSET_TABLE_)[55 + v25] = v33;\n
        *((v1 + 8)) = 0;\n
        *((v1 + 12)) = 0;\n
        *((v1 + 4)) = 0;\n
        v38 = *((v1 + 20));\n
        v39 = v24 + *(*((v1 + 20)));\n
        *(*((v1 + 20))) = v39;\n
        v40 = v39 + *(*((v1 + 16)));\n
        *(v38) = v40;\n
        v41 = cgc_get_size_class(v40);\n
        *((v38 + 4)) = 1;\n
        v42 = (&_GLOBAL_OFFSET_TABLE_)[55 + v41];\n
        if (!v42)\n
        {\n
            (&_GLOBAL_OFFSET_TABLE_)[55 + v41] = v38;\n
        }\n
        else\n
        {\n
            *((v38 + 8)) = v42;\n
            *(((&_GLOBAL_OFFSET_TABLE_)[55 + v41] + 12)) = v38;\n
            (&_GLOBAL_OFFSET_TABLE_)[55 + v41] = v38;\n
            *((v38 + 12)) = 0;\n
        }\n
        v43 = *((v1 + 16));\n
        v44 = *((v43 + 20));\n
        if (v44)\n
            *((v44 + 16)) = *((v43 + 16));\n
        v45 = *((v43 + 16));\n
        if (v45)\n
        {\n
            *((v45 + 20)) = v44;\n
            goto LABEL_402c1c;\n
        }\n
    }\n
    v36 = *((v1 + 16));\n
    if (!v36)\n
        return *((v1 + 16));\n
    if (*((v36 + 4)))\n
        return *((v1 + 16));\n
    v7 = cgc_get_size_class(*(v2));\n
    v9 = *((v2 + 12));\n
    if (v9)\n
        *((v9 + 8)) = *((v2 + 8));\n
    v11 = *((v2 + 8));\n
    if (v11)\n
        *((v11 + 12)) = v9;\n
    if ((&_GLOBAL_OFFSET_TABLE_)[55 + v7] == v2)\n
        (&_GLOBAL_OFFSET_TABLE_)[55 + v7] = v11;\n
    *((v2 + 8)) = 0;\n
    *((v2 + 12)) = 0;\n
    *((v2 + 4)) = 0;\n
    v18 = *(v1);\n
    v19 = cgc_get_size_class(v18);\n
    v21 = *((v1 + 12));\n
    if (v21)\n
        *((v21 + 8)) = *((v1 + 8));\n
    v23 = *((v1 + 8));\n
    if (v23)\n
        *((v23 + 12)) = v21;\n
    if ((&_GLOBAL_OFFSET_TABLE_)[55 + v19] == v1)\n
        (&_GLOBAL_OFFSET_TABLE_)[55 + v19] = v23;\n
    *((v1 + 8)) = 0;\n
    *((v1 + 12)) = 0;\n
    *((v1 + 4)) = 0;\n
    v30 = *((v1 + 20));\n
    v31 = v18 + *(*((v1 + 20)));\n
    *(*((v1 + 20))) = v31;\n
    v32 = cgc_get_size_class(v31);\n
    *((v30 + 4)) = 1;\n
    v34 = (&_GLOBAL_OFFSET_TABLE_)[55 + v32];\n
    if (!v34)\n
    {\n
        (&_GLOBAL_OFFSET_TABLE_)[55 + v32] = v30;\n
    }\n
    else\n
    {\n
        *((v30 + 8)) = v34;\n
        *(((&_GLOBAL_OFFSET_TABLE_)[55 + v32] + 12)) = v30;\n
        (&_GLOBAL_OFFSET_TABLE_)[55 + v32] = v30;\n
        *((v30 + 12)) = 0;\n
    }\n
LABEL_402c1c:\n
    v36 = *((v1 + 20));\n
    if (v36)\n
        *((v36 + 16)) = *((v1 + 16));\n
    v37 = *((v1 + 16));\n
    if (!v37)\n
        return *((v1 + 20));\n
LABEL_402c30:\n
    *((v37 + 20)) = v36;\n
    return v36;\n
}\n
", "4205668:sub_402c64": null, "4205680:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4205736:sub_402ca8": null, "4205744:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebx\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v3 != v4)\n
                return v3 - v4;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4205805:sub_402ced": null, "4205808:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4205938:sub_402d72": null, "4205952:cgc_memmove": "int cgc_memmove(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // edx\n
    char *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ebx\n
    char *v10;  // edx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    if (v3 < a0)\n
    {\n
        if (!v1)\n
            return v0;\n
        v4 = v1 & 3;\n
        v7 = 0;\n
        if (v1 - 1 >= 3)\n
        {\n
            v5 = v1 & -0x4;\n
            v7 = 0;\n
            do\n
            {\n
                *((v3 + v7)) = v2[v7];\n
                *((v3 + v7 + 1)) = v2[1 + v7];\n
                *((v3 + v7 + 2)) = v2[2 + v7];\n
                *((v3 + v7 + 3)) = v2[3 + v7];\n
                v7 += 4;\n
            } while (v5 != v7);\n
        }\n
        if (!v4)\n
            return v0;\n
        v10 = v3 + v7;\n
        v11 = &v2[v7];\n
        v12 = 0;\n
        do\n
        {\n
            v10[v12] = *((v11 + v12));\n
            v12 += 1;\n
        } while (v4 != v12);\n
        return v0;\n
    }\n
    else\n
    {\n
        if ([D] x86g_calculate_condition(0x6<32>, 0x6<32>, eax<4>, ebp<4>, 0x0<32>))\n
        {\n
            return v0;\n
        }\n
        else if (!v1)\n
        {\n
            return v0;\n
        }\n
        else\n
        {\n
            v6 = v1 - 1;\n
            v9 = v1 & 3;\n
            if (!(v1 & 3))\n
            {\n
                v8 = v1;\n
                if (v6 < 3)\n
                    return v0;\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v8 = v1 - 1;\n
                    *((v3 + v1 - 1)) = v2[1 + v1];\n
                    v1 = v8;\n
                    tmp_5 = v9;\n
                    v9 -= 1;\n
                } while (tmp_5 != 1);\n
                if (v6 < 3)\n
                    return v0;\n
            }\n
            v13 = v8;\n
            do\n
            {\n
                *((v3 + v8 - 1)) = v2[1 + v8];\n
                *((v3 + v8 - 2)) = v2[2 + v8];\n
                *((v3 + v8 - 3)) = v2[3 + v8];\n
                *((v3 + v8 - 4)) = v2[4 + v8];\n
                v13 -= 4;\n
                v8 = v13;\n
            } while (v13 != 4);\n
            return v0;\n
        }\n
    }\n
}\n
", "4206208:cgc_memset": "int cgc_memset(char v0[8], unsigned int a0, unsigned int a1)\n
{\n
    int tmp_13;  // tmp #13\n
    char v1[8];  // eax\n
    unsigned int v2;  // edi\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edi\n
    char v6[8];  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = a0;\n
    v4 = v2 & 7;\n
    v6 = v1;\n
    if (v2 - 1 >= 7)\n
    {\n
        v5 = v2 & -8;\n
        v6 = v1;\n
        do\n
        {\n
            *(v6) = v3;\n
            *((v6 + 1)) = v3;\n
            *((v6 + 2)) = v3;\n
            *((v6 + 3)) = v3;\n
            *((v6 + 4)) = v3;\n
            *((v6 + 5)) = v3;\n
            *((v6 + 6)) = v3;\n
            *((v6 + 7)) = v3;\n
            v6 += 8;\n
            tmp_13 = v5;\n
            v5 -= 8;\n
        } while (tmp_13 != 8);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = v3;\n
        v7 += 1;\n
    } while (v4 != v7);\n
    return v0;\n
}\n
", "4206318:sub_402eee": null, "4206320:cgc_output_number_printf": "int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    char v12;  // al\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    char v16;  // al\n
\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v14 = v5;\n
    if (v9 < v8)\n
    {\n
        v3 = v9;\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v9) /m v8;\n
        v3 = tmp_9 >> 32;\n
        v14 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v9) /m v8, v8, v7 - 1, v6);\n
    }\n
    v12 = v6;\n
    if (v7 > 0 && !v2)\n
    {\n
        tmp_2 = v7;\n
        v13 = v7 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                if ((v12 & 1))\n
                    v1 = 48;\n
                else\n
                    v1 = 32;\n
                v0 = &v4;\n
                cgc_transmit(v14, &v1, 1);\n
                v12 = v6;\n
                v14 = v5;\n
                tmp_6 = v13;\n
                v13 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
    }\n
    if (!(v12 & 2))\n
    {\n
        v15 = v3;\n
        v16 = v15 + 87;\n
    }\n
    else\n
    {\n
        v15 = v3;\n
        v16 = v15 + 55;\n
    }\n
    if (v15 < 10)\n
        v16 = v15 + 48;\n
    v1 = v16;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4206441:sub_402f69": null, "4206561:sub_402fe1": null, "4206576:cgc_fdprintf": "int cgc_fdprintf(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x30]\n
    char v6;  // [bp-0x1d]\n
    char v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    char v11;  // [bp+0xc]\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edi\n
\n
    v12 = a0;\n
    v8 = &v11;\n
    if (!*(v12))\n
        return 0;\n
    v13 = v10;\n
    v14 = &v7;\n
    v15 = &v6;\n
    do\n
    {\n
        v20 = v12 + 1;\n
        a0 = v20;\n
        *(&v12) = *(v12);\n
        if (v6 == 37)\n
        {\n
            v9 = 0;\n
            v18 = 0;\n
            v19 = v20;\n
            while (true)\n
            {\n
                v20 = v19 + 1;\n
                a0 = v20;\n
                v16 = *(v19);\n
                v17 = v16;\n
                if (v17 - 49 >= 9)\n
                    break;\n
                v18 = cgc_strtol(v19, &a0);\n
                v19 = a0;\n
            }\n
            switch (v17)\n
            {\n
            case 88:\n
                v21 = v9 | 2;\n
                goto LABEL_4031a9;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
                v6 = v16;\n
                break;\n
            case 99:\n
                v22 = v8;\n
                v8 = v22 + 4;\n
                v6 = *(v22);\n
                break;\n
            case 100:\n
                v23 = v8;\n
                v8 = v23 + 4;\n
                v24 = *(v23);\n
                if (v24 >= 0)\n
                {\n
                    v28 = v10;\n
                }\n
                else\n
                {\n
LABEL_4031e7:\n
                    v6 = 45;\n
                    v5 = &v7;\n
                    v28 = v10;\n
                    cgc_transmit(v10, &v6, 1);\n
                    v24 = -(v24);\n
                }\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                v0 = v24;\n
                goto LABEL_403212;\n
            case 115:\n
                v25 = v8;\n
                v8 = v25 + 4;\n
                v9 = *(v25);\n
                v27 = v10;\n
                v14 = &v7;\n
                v15 = &v6;\n
                if (cgc_strlen())\n
                {\n
                    v29 = 0;\n
                    do\n
                    {\n
                        v6 = *((v9 + v29));\n
                        v5 = v14;\n
                        v4 = v15;\n
                        cgc_transmit(v27, v15, 1);\n
                        v29 += 1;\n
                        v15 = &v6;\n
                        v14 = &v7;\n
                    } while (v29 < cgc_strlen(v9, v4, 1));\n
                }\n
                goto LABEL_403047;\n
            case 117:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                goto LABEL_4031bb;\n
            case 120:\n
                v21 = v9;\n
LABEL_4031a9:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v21;\n
                v2 = v18;\n
                v1 = 16;\n
LABEL_4031bb:\n
                v0 = *(v26);\n
                v28 = v10;\n
LABEL_403212:\n
                cgc_output_number_printf(v28, v0, v1, v2, v3);\n
                v27 = v28;\n
                v14 = &v7;\n
                v15 = &v6;\n
                goto LABEL_403047;\n
            default:\n
                if (v17 == 37)\n
                    goto LABEL_4031c3;\n
                else\n
                    goto LABEL_0x4030b1;\n
            }\n
LABEL_4031c3:\n
            v6 = 37;\n
            v5 = &v7;\n
            v15 = &v6;\n
            cgc_transmit(v10, &v6, 1);\n
            v27 = v10;\n
            goto LABEL_4031e7;\n
        }\n
        v6 = v12;\n
        v5 = v14;\n
        cgc_transmit(v13, v15, 1);\n
        v27 = v13;\n
        v14 = &v7;\n
LABEL_403047:\n
        v13 = v27;\n
        v12 = a0;\n
    } while (*(v12));\n
    return 0;\n
}\n
", "4206630:sub_403026": null, "4207156:sub_403234": null, "4207168:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v5, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    int tmp_20;  // tmp #20\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ecx\n
    struct struct_0 **v11;  // ebp\n
    unsigned int *v12;  // edi\n
    unsigned int v13;  // ecx\n
    char v14;  // dl\n
    char v15[2];  // ebx\n
    void* v16;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // esi\n
    unsigned int v19;  // eax\n
\n
    v4 = v6;\n
    v3 = v7;\n
    v2 = v8;\n
    v9 = a3;\n
    v10 = a2;\n
    v11 = a0;\n
    v12 = v5;\n
    v16 = 0;\n
    if (*(&v0) < v10)\n
    {\n
        v0 = a1;\n
        if (v9 <= 0)\n
            goto LABEL_403310;\n
    }\n
    else\n
    {\n
        v1 = v9 - 1;\n
        v0 = (0 CONCAT *(&v0)) /m v10 >> 32;\n
        v16 = cgc_output_number_sprintf(v12, v11, (0 CONCAT *(&v0)) /m v10, v10, v1, a4);\n
        if (v9 <= 0)\n
            goto LABEL_403310;\n
    }\n
    if (!v16)\n
    {\n
        v13 = v9 - 1;\n
        if (v9 != 1)\n
        {\n
            if ((v13 & 1))\n
            {\n
                *(v11)->field_0 = ((a4 & 1) * 16) | 32;\n
                *(v11) = &*(v11)->field_1;\n
                *(v12) = *(v12) + 1;\n
                v13 = v9 - 2;\n
            }\n
            if (v9 != 2)\n
            {\n
                v14 = ((a4 & 1) * 16) | 32;\n
                do\n
                {\n
                    *(v11)->field_0 = v14;\n
                    v15 = *(v11);\n
                    *(v11) = &v15[1];\n
                    *(v12) = *(v12) + 1;\n
                    v15[1] = v14;\n
                    *(v11) = &*(v11)->field_1;\n
                    *(v12) = *(v12) + 1;\n
                    tmp_20 = v13;\n
                    v13 -= 2;\n
                } while (tmp_20 != 2);\n
            }\n
        }\n
    }\n
LABEL_403310:\n
    v17 = v0;\n
    *(&*(v11)) = (!(v17 < 10) ? 48 : ((!(a4 & 2)) * 32 + 55)) + v17;\n
    *(v11) = &*(v11)->field_1;\n
    *(v12) = *(v12) + 1;\n
    v19 = v16 + 1;\n
    return v19;\n
}\n
", "4207434:sub_40334a": null, "4207440:cgc_sprintf": "typedef struct struct_1 {\n
    char field_-1;\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
int cgc_sprintf(char v8[2], struct_1 *a0)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp+0xc]\n
    struct_1 *v10;  // eax, Other Possible Types: unsigned int\n
    char *v11;  // ecx, Other Possible Types: unsigned int\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx\n
    unsigned int v14;  // eax\n
    char v15;  // dl\n
    struct_1 *v16;  // ecx, Other Possible Types: unsigned int\n
    void* v17;  // esi, Other Possible Types: unsigned int\n
    unsigned int v18;  // ecx\n
    struct_1 *v19;  // ecx, Other Possible Types: unsigned int\n
    char *v20;  // eax, Other Possible Types: unsigned int\n
    unsigned int v21;  // edi\n
    struct struct_0 **v22;  // ecx\n
    char *v23;  // ecx, Other Possible Types: unsigned int\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v26;  // edi\n
    struct struct_0 **v27;  // ecx\n
    char *v28;  // edx\n
    unsigned int v29;  // edi\n
\n
    v10 = a0;\n
    v11 = v8;\n
    v5 = 0;\n
    v7 = &v9;\n
    if (!v10->field_-1)\n
    {\n
        v12 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v19 = v10 + 1;\n
            a0 = v19;\n
            *(&v10) = *(v10);\n
            if (*(&v10) != 37)\n
            {\n
                v13 = v8;\n
                *(v13) = v10;\n
                *(&v8) = v13 + 1;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                v17 = 0;\n
                while (true)\n
                {\n
                    v14 = v17 | 1;\n
                    v16 = v19 + 1;\n
                    do\n
                    {\n
                        v21 = v17;\n
                        a0 = v16;\n
                        v15 = *((v16 - 1));\n
                        v16 += 1;\n
                        v17 = v14;\n
                    } while (v15 == 48);\n
                    switch (v15)\n
                    {\n
                    case 37:\n
                        v20 = v8;\n
                        *(v20) = 37;\n
                        goto LABEL_4034f7;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v18 = v16 - 2;\n
                        v4 = 10;\n
                        v6 = cgc_strtol(v18, &a0);\n
                        v19 = a0;\n
                        v17 = v21;\n
                        continue;\n
                    case 100:\n
                        v22 = v7;\n
                        v7 = v22 + 1;\n
                        v23 = *(v22);\n
                        if (v23 < 0)\n
                        {\n
                            v28 = v8;\n
                            *(v28) = 45;\n
                            v8 = v28 + 1;\n
                            v5 += 1;\n
                            v23 = -(v23);\n
                        }\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 10;\n
                        v0 = v23;\n
LABEL_403477:\n
                        cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                        break;\n
                    case 115:\n
                        v24 = v7;\n
                        v7 = v24 + 1;\n
                        v25 = v8;\n
                        v26 = v5;\n
                        if (cgc_strlen())\n
                        {\n
                            v6 = v26;\n
                            v29 = 0;\n
                            do\n
                            {\n
                                v25[v29] = (*(v24))[v29].field_0;\n
                                v29 += 1;\n
                            } while (v29 < cgc_strlen());\n
                            v25 = &v25[v29];\n
                            v26 = v6 + v29;\n
                        }\n
                        v8 = v25;\n
                        v5 = v26;\n
                        break;\n
                    case 88:\n
                        v21 |= 2;\n
                    case 120:\n
                        v27 = v7;\n
                        v7 = v27 + 1;\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 16;\n
                        v0 = &*(v27)->field_0;\n
                        goto LABEL_403477;\n
                    default:\n
                        v20 = v8;\n
                        *(v20) = v15;\n
LABEL_4034f7:\n
                        v8 = v20 + 1;\n
                        goto LABEL_40339d;\n
                    }\n
                }\n
            }\n
LABEL_40339d:\n
            v5 += 1;\n
            v10 = a0;\n
        } while (*(v10));\n
        v11 = v8;\n
        v12 = v5;\n
    }\n
    *(v11) = 0;\n
    return v12;\n
}\n
", "4207494:sub_403386": null, "4207893:sub_403515": null, "4207904:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_40358a;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_40358a:\n
    return v5;\n
}\n
", "4208020:sub_403594": null, "4208032:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    void* v2;  // al, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    unsigned int v5;  // eax\n
    struct_0 *v7;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v7 = v0 + 1;\n
        while (true)\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                break;\n
            if (v2 != v3)\n
            {\n
                v5 = cgc_tolower(v2);\n
                v2 = cgc_tolower(*(v1));\n
                if (v5 != v2)\n
                {\n
                    *(&v2) = *((v7 - 1));\n
                    break;\n
                }\n
            }\n
            v1 += 1;\n
            v2 = *(v7);\n
            v7 += 1;\n
            if (!v2)\n
                goto LABEL_40360a;\n
        }\n
    }\n
LABEL_40360a:\n
    v2 = 0;\n
    v8 = cgc_tolower(v2);\n
    return v8 - cgc_tolower(*(v1));\n
}\n
", "4208071:sub_4035c7": null, "4208176:cgc_strcat": "int cgc_strcat(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v4 = cgc_strlen() + v2;\n
    v0 = a0;\n
    cgc_strcpy(v4);\n
    return v2;\n
}\n
", "4208233:sub_403669": null, "4208240:cgc_strchr": "int cgc_strchr(char v0[2], unsigned int a0)\n
{\n
    unsigned int v1;  // ecx\n
    char v2[2];  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // dl, Other Possible Types: char\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v2[0];\n
    if (v2[0])\n
    {\n
        do\n
        {\n
            if (v3 == v1)\n
                return v2;\n
            v3 = *((v2 + 1));\n
            v2 += 1;\n
        } while (v3);\n
    }\n
    if (!v1)\n
        return v2;\n
    return 0;\n
}\n
", "4208282:sub_40369a": null, "4208288:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4208356:sub_4036e4": null, "4208368:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v3);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4208428:sub_40372c": null, "4208432:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
\n
    v1 = cgc_strlen() + 1;\n
    v2 = cgc_malloc(v1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4208508:sub_40377c": null, "4208512:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4208539:sub_40379b": null, "4208544:cgc_strncasecmp": "int cgc_strncasecmp(char v0[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    unsigned int v5;  // eax\n
    char v6[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax, Other Possible Types: char\n
\n
    v1 = a1;\n
    if (!v1)\n
        return a1;\n
    v2 = a0;\n
    v6 = v0;\n
    if (v1 != 1)\n
    {\n
        for (v7 = v6[0]; v7; v6 += 1)\n
        {\n
            v3 = *(v2);\n
            if (!v3)\n
                break;\n
            if (v7 != v3)\n
            {\n
                v5 = cgc_tolower(v7);\n
                if (v5 != cgc_tolower(*(v2)))\n
                    break;\n
            }\n
            v2 += 1;\n
            v7 = *((v6 + 1));\n
        }\n
    }\n
    v1 = cgc_tolower(*(v6)) - cgc_tolower(*(v2));\n
    return v1;\n
}\n
", "4208626:sub_4037f2": null, "4208695:sub_403837": null, "4208704:cgc_strncmp": "int cgc_strncmp(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx, Other Possible Types: unsigned int\n
    char *v3;  // esi\n
    char *v4;  // edi\n
    char v5;  // bl\n
    unsigned int v6;  // edx\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    v7 = v0;\n
    tmp_4 = v1;\n
    v6 = v1 - 1;\n
    if (tmp_4 != 1)\n
    {\n
        v3 = &v7[v6];\n
        v4 = &v2[v6];\n
        while (true)\n
        {\n
            v5 = *(v7);\n
            if (!v5)\n
                break;\n
            if (!*(v2))\n
                break;\n
            if (v5 != *(v2))\n
                break;\n
            v7 += 1;\n
            v2 += 1;\n
            tmp_8 = v6;\n
            v6 -= 1;\n
            if (tmp_8 == 1)\n
            {\n
                v7 = v3;\n
                v2 = v4;\n
                break;\n
            }\n
        }\n
    }\n
    v8 = *(v7) - *(v2);\n
    return v8;\n
}\n
", "4208784:cgc_strncpy": "int cgc_strncpy(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // bl\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        while (true)\n
        {\n
            v3 = *((a0 + v5));\n
            v2[v5] = v3;\n
            if (!v3)\n
                break;\n
            v5 += 1;\n
            if (v1 == v5)\n
                return v0;\n
        }\n
    }\n
    if (v5 >= v1)\n
        return v0;\n
    v4 = ~(v5) + v1;\n
    v6 = v1 - v5 & 7;\n
    if (v6)\n
    {\n
        do\n
        {\n
            v2[v5] = 0;\n
            v5 += 1;\n
            tmp_6 = v6;\n
            v6 -= 1;\n
        } while (tmp_6 != 1);\n
    }\n
    if (v4 < 7)\n
        return v0;\n
    do\n
    {\n
        *(&v2[v5]) = 0;\n
        *(&v2[4 + v5]) = 0;\n
        v5 += 8;\n
    } while (v1 != v5);\n
}\n
", "4208922:sub_40391a": null, "4208928:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v0, char a0[2])\n
{\n
    struct struct_0 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_40398d;\n
                }\n
            }\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_40398d:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4209047:sub_403997": null, "4209056:cgc_strtol": "int cgc_strtol(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    void* v4;  // ebp, Other Possible Types: unsigned int\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char v6;  // bl\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebp\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = 0;\n
    if (v1 > 36)\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
        if (v1 != 1)\n
        {\n
            v7 = v3;\n
            while (true)\n
            {\n
                v6 = *(v7);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v6 != 32)\n
                    break;\n
                v7 += 1;\n
            }\n
            v8 = 0;\n
            *(&v8) = v6 == 45;\n
            v9 = (*((v7 + v8)) == 43) + v8;\n
            v10 = v7 + v9;\n
            if (!v1)\n
            {\n
                v1 = 10;\n
                if (*(v10) == 48)\n
                {\n
                    if ((*((v7 + v9 + 1)) | 32) == 120)\n
                    {\n
                        v10 = v7 + v9 + 2;\n
                        v1 = 16;\n
                    }\n
                    else\n
                    {\n
                        v10 = v7 + v9 + 1;\n
                        v1 = 8;\n
                    }\n
                }\n
            }\n
            else if (v1 == 16)\n
            {\n
                v1 = 16;\n
                if (*(v10) == 48 && (*((v7 + v9 + 1)) | 32) == 120)\n
                    v10 = v7 + v9 + 2;\n
            }\n
            v11 = 0;\n
            v12 = 0;\n
            while (true)\n
            {\n
                v13 = *((v10 + v12));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v14 = v13 - 48;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v15 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v15 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v14 = v13 + v15 + 10;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                v11 = v1 * v11 + v14;\n
                v12 += 1;\n
            }\n
            v4 = -(v11);\n
            if (v6 != 45)\n
                v4 = v11;\n
            v5 = v10 + v12;\n
            v2 = a0;\n
            v3 = v0;\n
        }\n
    }\n
    if (!v2)\n
        return v4;\n
    if (!v12)\n
        v5 = v3;\n
    *(v2) = v5;\n
    return v4;\n
}\n
", "4209099:sub_4039cb": null, "4209271:sub_403a77": null, "4209367:sub_403ad7": null, "4209376:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4209417:sub_403b09": null, "4209424:cgc_readline": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_readline(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x430]\n
    int tmp_2;  // tmp #2\n
    unsigned int v1;  // [bp-0x420], Other Possible Types: char\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v3;  // [bp-0x418]\n
    char v4;  // [bp-0x411]\n
    unsigned int *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
    char v8[8];  // ebp\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // edx\n
    unsigned int *v15;  // edi\n
    char *v16;  // esi\n
\n
    v6 = a2;\n
    *(v6) = 0;\n
    if (!a1)\n
        return 0;\n
    v2 = a0;\n
    v7 = &v4;\n
    while (true)\n
    {\n
        v0 = &v1;\n
        v8 = v7;\n
        v9 = cgc_receive(v5, v7, 0x400);\n
        if (v9 < 0)\n
            return -1;\n
        v10 = *(&v1);\n
        if (!v9 && !v10)\n
            break;\n
        if (v9)\n
        {\n
            v7 = ebp<4>;\n
        }\n
        else\n
        {\n
            tmp_2 = v10;\n
            v7 = ebp<4>;\n
            if (tmp_2)\n
            {\n
                v11 = cgc_strchr(ebp<4>, 10);\n
                v12 = *(v6);\n
                if (!v12 && v8 == v11)\n
                    return -1;\n
                if (!v11)\n
                {\n
                    v13 = v1;\n
                }\n
                else\n
                {\n
                    v13 = v11 - v8;\n
                    v1 = v13;\n
                }\n
                v3 = v11;\n
                v14 = v13 + v12;\n
                if (v14 > a1)\n
                {\n
                    v14 = a1;\n
                    v13 = v14 - v12;\n
                    v1 = v13;\n
                }\n
                v15 = a2;\n
                *(v15) = v14;\n
                v16 = v2;\n
                cgc_memcpy(v16, v8, v13);\n
                v2 = &v16[v1];\n
                cgc_memset(v8, 0, 1025);\n
                v7 = ebp<4>;\n
                v6 = v15;\n
                if (v3)\n
                    break;\n
            }\n
        }\n
        if (*(v6) >= a1)\n
            break;\n
    }\n
}\n
", "4209490:sub_403b52": null, "4209687:sub_403c17": null, "4209759:sub_403c5f": null, "4209760:cgc__error": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__error()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    unsigned int v15;  // edx\n
\n
    v3 = v7;\n
    v2 = v8;\n
    v1 = v9;\n
    v10 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = *(&v5);\n
    v13 = v4;\n
    v15 = (v13 - 1 <= 4 ? \"%s:%d - unknown error\\n
\" : *(&(&_GLOBAL_OFFSET_TABLE_)[392 + 4 * v13]));\n
    v0 = *(&v6);\n
    cgc_fdprintf(2, v15);\n
    cgc__terminate(1, v15, v12);\n
    cgc_init_list();\n
    return;\n
}\n
", "4209840:cgc_init_list": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_init_list(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v2;  // eax\n
\n
    v2 = cgc_calloc(1, 12);\n
    if (!v2)\n
    {\n
        v0 = 36;\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/list.c\");\n
    }\n
    v2->field_8 = v1;\n
    return v2;\n
}\n
", "4209911:sub_403cf7": null, "4209920:cgc_append_list": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    char *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_append_list(struct struct_0 **v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v2;  // ebp\n
    struct struct_0 **v3;  // edi\n
    struct_1 *v4;  // esi, Other Possible Types: unsigned int\n
    struct_2 *v5;  // esi\n
    unsigned int v6[3];  // esi\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int, struct_2 *\n
    struct_0 *v8;  // ecx, Other Possible Types: unsigned int\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v4 = *(v3);\n
    if (!v4)\n
    {\n
        v7 = cgc_calloc(1, 12);\n
        v5 = v7;\n
        if (!v7)\n
        {\n
            v0 = 36;\n
            v7 = cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/list.c\");\n
        }\n
        v5->field_8 = v2;\n
        *(v3) = &v5->padding_0;\n
        return v7;\n
    }\n
    else\n
    {\n
        if (!a1)\n
        {\n
            do\n
            {\n
                v7 = cgc_strcmp(v2, *((v4 + 8)));\n
                if (!v7)\n
                    return v7;\n
                v4 = *(v4);\n
            } while (v4);\n
        }\n
        v6 = cgc_calloc(1, 12);\n
        if (!v6)\n
        {\n
            v0 = 36;\n
            cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/list.c\");\n
        }\n
        v6[2] = v2;\n
        v8 = *(v3);\n
        do\n
        {\n
            v7 = v8;\n
            v8 = *(v8);\n
        } while (v8);\n
        *(v7) = v6;\n
        v6[1] = v7;\n
        v6[0] = 0;\n
        return v7;\n
    }\n
}\n
", "4210125:sub_403dcd": null, "4210128:cgc_concat_list": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_concat_list(struct_0 *v3, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // ebp\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // edi\n
    struct_0 *v8;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v9;  // eax\n
\n
    v4 = a0;\n
    if (!v3)\n
        return a0;\n
    if (!v4)\n
        return v3;\n
    v2 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/list.c\";\n
    v1 = v3;\n
    do\n
    {\n
        v5 = *((v4 + 8));\n
        v6 = cgc_calloc(1, 12);\n
        v7 = v6;\n
        if (v1)\n
        {\n
            if (!v6)\n
            {\n
                v0 = 36;\n
                cgc__error(1, v2);\n
            }\n
            v6->field_8 = v5;\n
            v8 = v1;\n
            do\n
            {\n
                v9 = v8;\n
                v8 = *(v8);\n
            } while (v8);\n
            v9->field_0 = v7;\n
            v7->field_4 = v9;\n
            v7->field_0 = 0;\n
        }\n
        else\n
        {\n
            if (!v6)\n
            {\n
                v0 = 36;\n
                cgc__error(1, v2);\n
            }\n
            v6->field_8 = v5;\n
            v1 = v6;\n
        }\n
        v4 = *(v4);\n
    } while (v4);\n
}\n
", "4210190:sub_403e0e": null, "4210328:sub_403e98": null, "4210336:cgc_len_list": "int cgc_len_list(struct struct_0 **v0)\n
{\n
    struct struct_0 **v1;  // ecx, Other Possible Types: unsigned int\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1)\n
    {\n
        do\n
        {\n
            v2 += 1;\n
            v1 = *(v1);\n
        } while (v1);\n
    }\n
    return v2;\n
}\n
", "4210362:sub_403eba": null, "4210368:cgc_lindex": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_lindex(struct_0 *v0, unsigned int a0)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_3;  // tmp #3\n
    struct_0 *v1;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    if (v2 < 0)\n
    {\n
        v3 = v1;\n
        do\n
        {\n
            v3 = *(v3);\n
            v2 += 1;\n
        } while (v3);\n
    }\n
    v4 = 0;\n
    v5 = v1;\n
    do\n
    {\n
        v4 += 1;\n
        v5 = *(v5);\n
    } while (v5);\n
    if (v2 >= v4)\n
        return 0;\n
    if (!v2)\n
        return *((v1 + 8));\n
    v7 = v2 & 7;\n
    if (v2 - 1 >= 7)\n
    {\n
        v8 = v2 & -8;\n
        do\n
        {\n
            v1 = *(*(*(*(*(*(*(*(v1))))))));\n
            tmp_10 = v8;\n
            v8 -= 8;\n
        } while (tmp_10 != 8);\n
    }\n
    if (v7)\n
    {\n
        do\n
        {\n
            v1 = *(v1);\n
            tmp_3 = v7;\n
            v7 -= 1;\n
        } while (tmp_3 != 1);\n
    }\n
}\n
", "4210512:cgc_copy_list": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_copy_list(struct_1 *v5, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_3;  // tmp #3\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    struct_1 *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ebp\n
    void* v9;  // ecx, Other Possible Types: unsigned int\n
    struct_1 *v10;  // edx, Other Possible Types: unsigned int\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edi\n
    struct_0 *v16;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v17;  // eax\n
\n
    v6 = v5;\n
    if (!v6)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v7 = a1;\n
    v8 = a0;\n
    v9 = 0;\n
    v10 = v6;\n
    do\n
    {\n
        v9 += 1;\n
        v10 = *(v10);\n
    } while (v10);\n
    v11 = (v9 < v7 ? v7 : v9);\n
    if (!v7)\n
        v11 = v9;\n
    v1 = 0;\n
    v4 = v11;\n
    if (v11 <= v8)\n
        return v1;\n
    if (v8)\n
    {\n
        v12 = v8 & 7;\n
        if (v8 - 1 >= 7)\n
        {\n
            v13 = v8 & -8;\n
            do\n
            {\n
                v6 = *(*(*(*(*(*(*(*(v6))))))));\n
                tmp_10 = v13;\n
                v13 -= 8;\n
            } while (tmp_10 != 8);\n
        }\n
        if (v12)\n
        {\n
            do\n
            {\n
                v6 = *(v6);\n
                tmp_3 = v12;\n
                v12 -= 1;\n
            } while (tmp_3 != 1);\n
        }\n
    }\n
    v1 = 0;\n
    v2 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/list.c\";\n
    do\n
    {\n
        v3 = *((v6 + 8));\n
        v14 = cgc_calloc(1, 12);\n
        v15 = v14;\n
        if (!v1)\n
        {\n
            if (!v14)\n
            {\n
                v0 = 36;\n
                cgc__error(1, v2);\n
            }\n
            v14->field_8 = v3;\n
            v1 = v14;\n
        }\n
        else\n
        {\n
            if (!v14)\n
            {\n
                v0 = 36;\n
                cgc__error(1, v2);\n
            }\n
            v14->field_8 = v3;\n
            v16 = v1;\n
            do\n
            {\n
                v17 = v16;\n
                v16 = *(v16);\n
            } while (v16);\n
            v17->field_0 = v15;\n
            v15->field_4 = v17;\n
            v15->field_0 = 0;\n
        }\n
        v8 += 1;\n
        v6 = *(v6);\n
    } while (v8 != v4);\n
    return v1;\n
}\n
", "4210683:sub_403ffb": null, "4210849:sub_4040a1": null, "4210864:cgc_free_list": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    void* field_8;\n
} struct_1;\n
\n
int cgc_free_list(struct_0 *v0, unsigned int a0)\n
{\n
    struct_1 *v1;  // esi, Other Possible Types: unsigned int\n
    void* v2;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
        return cgc_free(NULL);\n
    do\n
    {\n
        if (!a0)\n
            cgc_free(*((v1 + 8)));\n
        v2 = *((v1 + 4));\n
        if (v2)\n
            cgc_free(v2);\n
        v1 = *(v1);\n
    } while (v1);\n
    return cgc_free(NULL);\n
}\n
", "4210953:sub_404109": null, "4210960:cgc_free_list_of_lists": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    unsigned int field_4;\n
    void* field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_free_list_of_lists(struct_1 *v0, unsigned int a0)\n
{\n
    struct_1 *v1;  // ebp\n
    struct_2 *v2;  // esi, Other Possible Types: unsigned int\n
    void* v3;  // eax\n
    void* v4;  // eax\n
\n
    if (!v0)\n
        return cgc_free(NULL);\n
    v1 = v0;\n
    do\n
    {\n
        for (v2 = v0->field_8; v2; v2 = *(v2))\n
        {\n
            if (a0 == 1)\n
                cgc_free(*((v2 + 8)));\n
            v3 = *((v2 + 4));\n
            if (v3)\n
                cgc_free(v3);\n
        }\n
        cgc_free(NULL);\n
        v4 = v1->field_4;\n
        if (v4)\n
            cgc_free(v4);\n
    } while (v1->field_0);\n
    return cgc_free(NULL);\n
}\n
", "4210996:sub_404134": null, "4211063:sub_404177": null, "4211121:sub_4041b1": null, "4211136:cgc_random_element": "int cgc_random_element(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_10;  // tmp #10\n
    int tmp_3;  // tmp #3\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // edx\n
\n
    v4 = v3;\n
    v5 = 0;\n
    if (v4)\n
    {\n
        v6 = v4;\n
        do\n
        {\n
            v5 += 1;\n
            v6 = *(v6);\n
        } while (v6);\n
    }\n
    v0 = &v1;\n
    if (cgc_random(&v2, 4) < 0)\n
    {\n
        v0 = 179;\n
        cgc__error(5, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/list.c\");\n
    }\n
    if (*(&v1) != 4)\n
        return 0;\n
    v7 = (0 CONCAT *(&v2)) /m v5 >> 32;\n
    if (!v4)\n
        return 0;\n
    if (v7 < 0)\n
    {\n
        v8 = 0;\n
        v9 = v4;\n
        do\n
        {\n
            v8 += 1;\n
            v9 = *(v9);\n
        } while (v9);\n
        v7 += v8;\n
    }\n
    v10 = 0;\n
    v11 = v4;\n
    do\n
    {\n
        v10 += 1;\n
        v11 = *(v11);\n
    } while (v11);\n
    if (v7 >= v10)\n
        return 0;\n
    if (!v7)\n
        return *((v4 + 8));\n
    v13 = v7 & 7;\n
    if (v7 - 1 >= 7)\n
    {\n
        v14 = v7 & -8;\n
        do\n
        {\n
            v4 = *(*(*(*(*(*(*(*(v4))))))));\n
            tmp_10 = v14;\n
            v14 -= 8;\n
        } while (tmp_10 != 8);\n
    }\n
    if (v13)\n
    {\n
        do\n
        {\n
            v4 = *(v4);\n
            tmp_3 = v13;\n
            v13 -= 1;\n
        } while (tmp_3 != 1);\n
    }\n
}\n
", "4211379:sub_4042b3": null, "4211392:cgc_hello_cmd": "int cgc_hello_cmd()\n
{\n
    cgc_fdprintf(1, \"case > Hello, you.\\n
\");\n
    return 0;\n
}\n
", "4211435:sub_4042eb": null, "4211440:cgc_int_cmd": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_0 **field_8;\n
} struct_0;\n
\n
int cgc_int_cmd()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_1 *v3;  // eax\n
    struct_0 *v4;  // esi, Other Possible Types: unsigned int\n
    void* v5;  // edi, Other Possible Types: unsigned int\n
\n
    v3 = cgc_tree_to_list();\n
    if (!v3)\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        v5 = 0;\n
        do\n
        {\n
            v5 += cgc_len_list(*((v4 + 8)));\n
            v4 = *(v4);\n
        } while (v4);\n
    }\n
    v1 = cgc_num_nodes() * 8;\n
    v0 = v5;\n
    cgc_fdprintf(1, \"case > I have an intelligence rating of: %u / %u\\n
\");\n
    return 0;\n
}\n
", "4211559:sub_404367": null, "4211568:cgc_rev_cmd": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
int cgc_rev_cmd(unsigned int v2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_1;  // tmp #1\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // edi\n
    char *v4;  // edi\n
    char *v5;  // esi\n
    char *v6;  // eax, Other Possible Types: unsigned int\n
    char v7;  // dl\n
    struct_0 *v8;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_calloc(1, cgc_strlen(v4) + 1);\n
    cgc_strcpy(v5, v4);\n
    if (!cgc_strchr(v5, 0))\n
        return -1;\n
    v6 = cgc_strchr(v5, 0) - 1;\n
    if (v5 < v6)\n
    {\n
        v8 = v5 + 1;\n
        do\n
        {\n
            v7 = *((v8 - 1));\n
            tmp_1 = v7 ^ *(v6);\n
            *((v8 - 1)) = v7 ^ *(v6);\n
            tmp_6 = tmp_1 ^ *(v6);\n
            *(v6) = tmp_1 ^ *(v6);\n
            *((v8 - 1)) = *((v8 - 1)) ^ tmp_6;\n
            v6 -= 1;\n
            tmp_21 = v8;\n
            v8 += 1;\n
        } while (tmp_21 < v6);\n
    }\n
    v0 = v5;\n
    cgc_fdprintf(1, \"case > %s\\n
\");\n
    cgc_free(v5);\n
    return 0;\n
}\n
", "4211758:sub_40442e": null, "4211760:cgc_pont_cmd": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char g_409370;\n
\n
int cgc_pont_cmd(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v4;  // eax\n
    struct_0 *v7;  // eax\n
    void* v8;  // esi, Other Possible Types: unsigned int\n
    unsigned int v9;  // edi\n
\n
    v4 = v3;\n
    if (!v4)\n
        return -1;\n
    v7 = cgc_new_string(\"Hmm, I think that \");\n
    v2 = cgc_split_words(v4);\n
    if (!v2)\n
    {\n
        return -1;\n
    }\n
    else if (!v7)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        v9 = &g_409370;\n
        do\n
        {\n
            v0 = 321;\n
            if (((*(&v0 + ((v8 & 31) >> 3)) >> (v8 & 31 & 7)) & 1) == 1 && !cgc_random_element(v2))\n
                return -1;\n
            cgc_append_string(v7);\n
            v8 += 1;\n
            v9 += 4;\n
        } while (v8 != 10);\n
        if (cgc_new_string())\n
        {\n
            cgc_free_string();\n
            v1 = v7->field_4;\n
            cgc_fdprintf(1, \"molly > %s\\n
\");\n
            cgc_free_string(v7, \"molly > %s\\n
\");\n
            cgc_free_list(v2, 0);\n
            return 0;\n
        }\n
        return -1;\n
    }\n
}\n
", "4211860:sub_404494": null, "4212029:sub_40453d": null, "4212032:cgc_part_cmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_part_cmd()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // ebx\n
\n
    v0 = v2;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"BYE!\\n
\");\n
    cgc__terminate(0, \"BYE!\\n
\");\n
    cgc_is_command();\n
    return;\n
}\n
", "4212096:cgc_is_command": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_is_command(unsigned int v0, struct_0 *a0)\n
{\n
    char *v1;  // esi\n
    struct_0 *v3;  // edi, Other Possible Types: unsigned int\n
    char **v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(v1))\n
    {\n
        v3 = a0;\n
        if (!v3)\n
            return 0;\n
        while (true)\n
        {\n
            v4 = *((v3 + 8));\n
            v5 = cgc_strncmp(v1, *(v4), cgc_strlen(*(v4)));\n
            if (!v5)\n
                break;\n
            v3 = *(v3);\n
            if (!v3)\n
                break;\n
        }\n
        return !v5;\n
    }\n
    else\n
    {\n
        return 0;\n
    }\n
}\n
", "4212220:sub_4045fc": null, "4212224:cgc_get_command": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_get_command(char *v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v2;  // esi\n
    char *v3;  // edi\n
\n
    if (v0)\n
    {\n
        v1 = a0;\n
        if (a0)\n
        {\n
            do\n
            {\n
                v2 = *((v1 + 8));\n
                v3 = *(v2);\n
                if (!cgc_strncmp(v0, v3, cgc_strlen(v3)))\n
                    return *((v1 + 8));\n
                v1 = *(v1);\n
            } while (v1);\n
        }\n
    }\n
    return 0;\n
}\n
", "4212326:sub_404666": null, "4212336:cgc_will_chat": "int cgc_will_chat(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xc]\n
    char v2;  // [bp-0x8]\n
\n
    v0 = &v1;\n
    if (cgc_random(&v2, 4) < 0)\n
        return 0;\n
    if (!(*(&v1) == 4 && *(&v2) - (*(&v2) * 1374389535 >> 32 >> 5) * 100 <= v3))\n
        return 0;\n
    return 1;\n
}\n
", "4212428:sub_4046cc": null, "4212432:cgc_follow_chain": "typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned int cgc_ct;\n
\n
int cgc_follow_chain(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    void* v13;  // eax, Other Possible Types: unsigned int\n
\n
    if (!v5)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
        v7 = cgc_upto_last();\n
        if (!v7)\n
            return 0;\n
        v3 = v7;\n
        v12 = cgc_key_from_wordlist();\n
        if (!v12 && !v8)\n
            return 0;\n
        v13 = 0;\n
        do\n
        {\n
            v4 = v13;\n
            v0 = cgc_copy_list(v3, 0, 0);\n
            v1 = 0;\n
            cgc_append_list(&v1, cgc_lindex(v0, 0), 1);\n
            v11 = cgc_get_tree(cgc_ct, v12);\n
            if (v11)\n
            {\n
                v10 = 15;\n
                while (true)\n
                {\n
                    v9 = cgc_random_element(v11);\n
                    if (!v9)\n
                        cgc__error(3, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/main.c\");\n
                    v0 = cgc_copy_list(v0, 1, 0);\n
                    cgc_append_list(&v0, v9, 1);\n
                    v12 = cgc_key_from_wordlist(v0, v9);\n
                    v10 -= 1;\n
                    if (false)\n
                        break;\n
                    cgc_append_list(&v1, cgc_lindex(v0, 0), 1);\n
                    v11 = cgc_get_tree(cgc_ct, v12);\n
                    if (!v11)\n
                        break;\n
                }\n
            }\n
            cgc_append_list(&v2, v1, 1);\n
            v13 = v4 + 1;\n
        } while (v13 != a0);\n
        return v2;\n
    }\n
}\n
", "4212546:sub_404742": null, "4212890:sub_40489a": null, "4212896:cgc_gen_msg": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    struct struct_0 **field_8;\n
} struct_1;\n
\n
int cgc_gen_msg(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct_0 *v2;  // eax, Other Possible Types: unsigned int\n
    void* v3;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v4;  // edi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    for (v3 = 0; v2; v2 = v0->field_0)\n
    {\n
        v0 = v2;\n
        v4 = cgc_follow_chain(*((v2 + 8)), 5);\n
        if (v4)\n
        {\n
            do\n
            {\n
                if (v3 && cgc_len_list(*((v4 + 8))) <= cgc_len_list(v3))\n
                    continue;\n
                v3 = *((v4 + 8));\n
                v4 = *(v4);\n
            } while (v4);\n
        }\n
    }\n
    return v3;\n
}\n
", "4212923:sub_4048bb": null, "4212969:sub_4048e9": null, "4213026:sub_404922": null, "4213040:cgc_wordlist_to_string": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_wordlist_to_string(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v2;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v4;  // edi\n
\n
    v2 = v1;\n
    if (!v1)\n
        return 0;\n
    v4 = cgc_new_string();\n
    while (true)\n
    {\n
        v0 = *((v2 + 8));\n
        if (cgc_append_string(v4) < 0)\n
            break;\n
        v0 = \" \";\n
        if (cgc_append_string(v4) < 0)\n
            break;\n
        v2 = *(v2);\n
        if (!v2)\n
            return v4;\n
    }\n
    cgc_free_string();\n
    return 0;\n
}\n
", "4213168:cgc_tick_common": "typedef struct struct_5 {\n
    struct struct_5 *field_0;\n
    char padding_4[4];\n
    struct struct_4 *field_8;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    struct struct_0 *field_0;\n
    struct struct_3 *field_4;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    char padding_4[4];\n
    struct struct_0 **field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
} struct_3;\n
\n
extern struct_1 *cgc_crosstalk;\n
\n
int cgc_tick_common(unsigned int v6, struct_5 *a0, unsigned int a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    struct_0 *v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    char *v7;  // esi\n
    struct_5 *v9;  // ebp, Other Possible Types: unsigned int\n
    struct_5 *v10;  // ebp, Other Possible Types: unsigned int\n
    struct struct_3 **v11;  // esi, Other Possible Types: unsigned int\n
    struct_2 *v12;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v13;  // eax, Other Possible Types: unsigned int\n
    struct_4 *v14;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v15;  // eax, Other Possible Types: unsigned int\n
    struct_4 *v16;  // edi\n
    char v17[2];  // esi\n
    unsigned int v18;  // esi\n
    struct_1 *v19;  // edi\n
\n
    v7 = v6;\n
    if (v7 && a0 && cgc_strlen(v7))\n
    {\n
        v9 = a0;\n
        do\n
        {\n
            v0 = *(*((v9 + 8)));\n
            if (!cgc_strncmp(v7, *(*((v9 + 8))), cgc_strlen(v0)))\n
            {\n
                v10 = a0;\n
                while (true)\n
                {\n
                    v14 = *((v10 + 8));\n
                    v2 = v14->field_0;\n
                    if (!cgc_strncmp(v7, v2, cgc_strlen(v2)))\n
                    {\n
LABEL_404bf0:\n
                        v16 = v14;\n
                        v17 = v6;\n
                        v18 = (!cgc_strchr(v17, 32) ? cgc_strchr(v17, 32) + 1 : &v17[cgc_strlen(v16->field_0)]);\n
                        v16->field_4();\n
                        goto LABEL_404c33;\n
                    }\n
                    else\n
                    {\n
                        v10 = *(v10);\n
                        if (!v10)\n
                        {\n
                            cgc__error(4, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/main.c\");\n
                            v14 = 0;\n
                            goto LABEL_404bf0;\n
                        }\n
                    }\n
                }\n
            }\n
            v9 = *(v9);\n
        } while (v9);\n
        goto LABEL_404c33;\n
    }\n
    v13 = cgc_str_to_wordlists();\n
    if (v13)\n
    {\n
        v11 = 0;\n
        v3 = v13;\n
        do\n
        {\n
            v2 = v13;\n
            v12 = cgc_follow_chain(*((v13 + 8)), 5);\n
            if (v12)\n
            {\n
                do\n
                {\n
                    if (v11 && cgc_len_list(*((v12 + 8))) <= cgc_len_list(v11))\n
                        continue;\n
                    v11 = *((v12 + 8));\n
                    v12 = *(v12);\n
                } while (v12);\n
            }\n
            v13 = v2->field_0;\n
        } while (v13);\n
        v15 = 0;\n
        if (v11)\n
        {\n
            v19 = cgc_new_string();\n
            do\n
            {\n
                if (cgc_append_string(v19) < 0)\n
                {\n
LABEL_404b61:\n
                    cgc_free_string();\n
                    v15 = 0;\n
                    goto LABEL_404b6b;\n
                }\n
                if (cgc_append_string(v19) < 0)\n
                    goto LABEL_404b61;\n
                v11 = *(v11);\n
            } while (v11);\n
            v15 = 0;\n
            if (v19)\n
            {\n
                if (cgc_random(&v5, 4) >= 0 && *(&v4) == 4 && *(&v5) - (*(&v5) * 1374389535 >> 32 >> 5) * 100 <= a2)\n
                {\n
                    v1 = v19->field_4;\n
                    cgc_fdprintf(1, \"%s > %s\\n
\");\n
                }\n
                v15 = v19;\n
            }\n
        }\n
LABEL_404b6b:\n
        cgc_crosstalk = v15;\n
        return cgc_insert_wordlists(v3) >> 31;\n
    }\n
LABEL_404c33:\n
    return 0;\n
}\n
", "4213304:sub_404a38": null, "4213353:sub_404a69": null, "4213821:sub_404c3d": null, "4213824:cgc_tick_main_bot": "extern void* cgc_b1_cmds;\n
\n
int cgc_tick_main_bot(unsigned int v0)\n
{\n
    return cgc_tick_common(v0, cgc_b1_cmds, \"case\", 33);\n
}\n
", "4213869:sub_404c6d": null, "4213872:cgc_tick_buddy_bot": "extern void* cgc_b2_cmds;\n
\n
int cgc_tick_buddy_bot(unsigned int v0)\n
{\n
    return cgc_tick_common(v0, cgc_b2_cmds, \"molly\", 10);\n
}\n
", "4213917:sub_404c9d": null, "4213920:cgc_print_prompt": "int cgc_print_prompt()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = \"you > \";\n
    return cgc_fdprintf(1, \"%s\");\n
}\n
", "4213965:sub_404ccd": null, "4213968:cgc_load_corpus": "extern unsigned int g_40939c;\n
\n
int cgc_load_corpus()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // edi, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v3 = \"the dog is dumb\";\n
    v4 = &g_40939c;\n
    v1 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/main.c\";\n
    do\n
    {\n
        v5 = cgc_split_words(v3);\n
        if (!v5)\n
        {\n
            v0 = 347;\n
            cgc__error(3, v1);\n
        }\n
        if (cgc_insert_wordlist(v5) < 0)\n
        {\n
            v0 = 350;\n
            cgc__error(3, v1);\n
        }\n
        v3 = *(v4);\n
        v4 += 4;\n
    } while (v3);\n
    return v3;\n
}\n
", "4214017:sub_404d01": null, "4214132:sub_404d74": null, "4214144:cgc_init": "extern unsigned int _int;\n
extern struct_0 *cgc_b1_cmds;\n
extern struct_0 *cgc_b2_cmds;\n
extern void* cgc_crosstalk;\n
extern unsigned int cgc_ct;\n
extern unsigned int g_40939c;\n
extern unsigned int hello;\n
extern unsigned int part;\n
extern unsigned int pont;\n
extern unsigned int rev;\n
\n
int cgc_init()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // edx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    cgc_append_list(&cgc_b1_cmds, &hello, 0);\n
    cgc_append_list(&cgc_b1_cmds, &_int, 0);\n
    cgc_append_list(&cgc_b1_cmds, &rev, 0);\n
    cgc_append_list(&cgc_b1_cmds, &part, 0);\n
    cgc_append_list(&cgc_b2_cmds, &pont, 0);\n
    cgc_ct = cgc_init_tree(cgc_hash_str(\"ROOT NODE\", &pont), v3);\n
    cgc_crosstalk = 0;\n
    v5 = \"the dog is dumb\";\n
    v7 = &g_40939c;\n
    do\n
    {\n
        v6 = cgc_split_words(v5);\n
        if (!v6)\n
            cgc__error(3, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/main.c\");\n
        if (cgc_insert_wordlist(v6) < 0)\n
            cgc__error(3, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/main.c\");\n
        v5 = *(v7);\n
        v7 += 4;\n
    } while (v5);\n
    return cgc_fdprintf(1, \"%s\");\n
}\n
", "4214330:sub_404e3a": null, "4214460:sub_404ebc": null, "4214464:main": "extern void* cgc_b1_cmds;\n
extern void* cgc_b2_cmds;\n
extern struct_0 *cgc_crosstalk;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    cgc_init();\n
    v1 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/main.c\";\n
    v2 = \"case\";\n
    v0 = \"molly\";\n
    while (true)\n
    {\n
        v5 = cgc_calloc(1, 8127);\n
        if (!v5)\n
            cgc__error(1, v1);\n
        cgc_fdprintf(1, \"%s\");\n
        cgc_memset(v5, 0, 8127);\n
        if (cgc_readline(1, v5, 8126, &v3) >= 0)\n
        {\n
            v6 = v3;\n
            if (v6)\n
            {\n
                v5[v6] = 0;\n
                if (cgc_tick_common(v5, cgc_b1_cmds, v2, 33) < 0)\n
                    break;\n
                if (cgc_crosstalk)\n
                {\n
                    v7 = cgc_crosstalk->field_4;\n
                    if (v7)\n
                    {\n
                        cgc_tick_common(v7, cgc_b2_cmds, v0, 10);\n
                        cgc_crosstalk = 0;\n
                    }\n
                }\n
            }\n
        }\n
        cgc_free(v5);\n
    }\n
    cgc_free(v5);\n
    return 0;\n
}\n
", "4214532:sub_404f04": null, "4214778:sub_404ffa": null, "4214784:cgc_new_string": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char *field_4;\n
} struct_0;\n
\n
int cgc_new_string(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v2;  // esi\n
    char *v3;  // edi\n
    unsigned int v4;  // eax\n
\n
    v2 = cgc_calloc(1, 8);\n
    if (!v2)\n
    {\n
        v0 = 35;\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/string.c\");\n
    }\n
    v3 = v1;\n
    v4 = cgc_calloc(1, 128);\n
    v2->field_4 = v4;\n
    if (!v4)\n
    {\n
        v0 = 39;\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/string.c\");\n
    }\n
    v2->field_0 = 128;\n
    if (v3)\n
    {\n
        cgc_strcpy(v2->field_4, v3);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4214924:sub_40508c": null, "4214928:cgc_set_string": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4[8];\n
} struct_0;\n
\n
int cgc_set_string(unsigned int v0[2], unsigned int a0)\n
{\n
    struct_0 *v1;  // edi\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
        return -1;\n
    v3 = a0;\n
    if (!a0)\n
        return -1;\n
    cgc_memset(v1->field_4, 0, v1->field_0);\n
    if (cgc_strlen(v3) + 1 > v1->field_0)\n
    {\n
        v4 = (cgc_strlen(v1->field_4) + cgc_strlen(v3)) * 2 + 2;\n
        v1->field_0 = v4;\n
        v5 = cgc_realloc(v1->field_4, v4);\n
        v1->field_4 = v5;\n
        if (!v5)\n
            cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/string.c\");\n
    }\n
    cgc_strncpy(v1->field_4, v3, v1->field_0);\n
    return 0;\n
}\n
", "4215118:sub_40514e": null, "4215120:cgc_append_string": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    void* field_4;\n
} struct_0;\n
\n
int cgc_append_string(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v2;  // edi\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
        return -1;\n
    v4 = a0;\n
    if (!a0)\n
        return -1;\n
    if (cgc_strlen(v2->field_4) + cgc_strlen(v4) + 1 > v2->field_0)\n
    {\n
        v5 = (cgc_strlen(v2->field_4) + cgc_strlen(v4)) * 2 + 2;\n
        v2->field_0 = v5;\n
        v6 = cgc_realloc(v2->field_4, v5);\n
        v2->field_4 = v6;\n
        if (!v6)\n
        {\n
            v0 = 84;\n
            cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/string.c\");\n
        }\n
    }\n
    cgc_strcat(v2->field_4, v4);\n
    return 0;\n
}\n
", "4215305:sub_405209": null, "4215312:cgc_contains_string": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_contains_string(struct_0 *v1, char *a0)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_0 *v2;  // ecx\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
    char *v4;  // edi\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ebp\n
\n
    v2 = v1;\n
    if (!v2)\n
        return 0;\n
    v4 = a0;\n
    if (!v4)\n
        return 0;\n
    v7 = v2->field_4;\n
    v5 = cgc_strlen(v4);\n
    v3 = cgc_strlen(v1->field_4);\n
    if (v3 >= v5)\n
    {\n
        if (v3 && v5)\n
        {\n
            if (v3 == v5)\n
            {\n
                v3 = cgc_strcmp(v7, v4);\n
                *(&v3) = !v3;\n
                goto LABEL_4052c7;\n
            }\n
            else\n
            {\n
                while (true)\n
                {\n
                    v0 = *(v7);\n
                    if (!*(v7))\n
                        break;\n
                    v3 = cgc_strlen(v7);\n
                    v6 = 0;\n
                    if (v3)\n
                    {\n
                        while (v4[v6] == *((v7 + v6)))\n
                        {\n
                            v6 += 1;\n
                            if (v6 >= v5)\n
                                break;\n
                            if (v6 >= v3)\n
                                break;\n
                        }\n
                    }\n
                    v7 += 1;\n
                    if (v6 == v5)\n
                        break;\n
                }\n
                *(&v3) = v0;\n
                goto LABEL_4052c7;\n
            }\n
        }\n
        if (v3 == v5)\n
        {\n
            *(&v3) = *(v7) == *(v4);\n
            goto LABEL_4052c7;\n
        }\n
    }\n
    v3 = 0;\n
LABEL_4052c7:\n
    return v3;\n
}\n
", "4215420:sub_40527c": null, "4215516:sub_4052dc": null, "4215520:cgc_free_string": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_free_string(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (v1)\n
    {\n
        v1 = v1->field_4;\n
        if (v1)\n
            v1 = cgc_free(v1);\n
    }\n
    return v1;\n
}\n
", "4215564:sub_40530c": null, "4215568:cgc_init_tree": "int cgc_init_tree(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // edi\n
    unsigned int v3;  // ebp\n
    unsigned int v4[3];  // esi\n
    unsigned int v5;  // eax\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v4 = cgc_calloc(1, 20);\n
    if (!v4)\n
    {\n
        v0 = 34;\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/tree.c\");\n
    }\n
    if (!v3 && !v2)\n
        return v4;\n
    v5 = a1;\n
    if (v5)\n
    {\n
        v4[0] = v3;\n
        v4[1] = v2;\n
        v4[2] = cgc_init_list(v5);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4215682:sub_405382": null, "4215696:cgc_get_tree": "int cgc_get_tree(unsigned int v0[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1[3];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v3;  // edx\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edi\n
    struct struct_0 **v7;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v3 = a1;\n
    v4 = a0;\n
    while (true)\n
    {\n
        v5 = *(v1);\n
        v6 = *((v1 + 4));\n
        if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edx<4>, Xor(edi<4>, Conv(1->32, (esi<4> < ebx<4>))), Conv(1->32, (esi<4> < ebx<4>))))\n
        {\n
            v7 = v1 + 12;\n
        }\n
        else if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edx<4>, Xor(edi<4>, Conv(1->32, (esi<4> < ebx<4>))), Conv(1->32, (esi<4> < ebx<4>))))\n
        {\n
            v7 = v1 + 16;\n
        }\n
        else\n
        {\n
            return *((v1 + 8));\n
        }\n
        v1 = *(v7);\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4215720:sub_4053a8": null, "4215769:sub_4053d9": null, "4215776:cgc_ins_tree": "int cgc_ins_tree(unsigned int v1[2], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0[3];  // [bp-0x14]\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // ecx\n
    struct struct_0 **v6;  // eax, Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // esi\n
    unsigned int v8[2];  // eax, Other Possible Types: unsigned int\n
    unsigned int v9[3];  // eax\n
    unsigned int v11[3];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v12;  // eax\n
\n
    v2 = a1;\n
    v3 = a0;\n
    v8 = v1;\n
    do\n
    {\n
        if (!v8)\n
            return -1;\n
        v4 = *(v8);\n
        v5 = *((v8 + 4));\n
        if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, ebp<4>, Xor(ecx<4>, Conv(1->32, (edi<4> < edx<4>))), Conv(1->32, (edi<4> < edx<4>))))\n
        {\n
            v6 = v8 + 12;\n
        }\n
        else if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, ebp<4>, Xor(ecx<4>, Conv(1->32, (edi<4> < edx<4>))), Conv(1->32, (edi<4> < edx<4>))))\n
        {\n
            v6 = v8 + 16;\n
        }\n
        else\n
        {\n
            cgc_append_list(v8 + 8, a2, 0);\n
            goto LABEL_4054b0;\n
        }\n
        v7 = v6;\n
        v8 = *(v6);\n
    } while (v8);\n
    v9 = cgc_calloc(1, 20);\n
    v11 = v9;\n
    if (!v9)\n
    {\n
        v0[0] = v9;\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/tree.c\");\n
        v11 = v0;\n
    }\n
    v12 = a2;\n
    if ((!(!v3) || !(!v2)) && v12)\n
    {\n
        *(v11) = v3;\n
        *((v11 + 4)) = v2;\n
        *((v11 + 8)) = cgc_init_list(v12);\n
    }\n
    *(v7) = v11;\n
LABEL_4054b0:\n
    return 0;\n
}\n
", "4215809:sub_405401": null, "4215994:sub_4054ba": null, "4216000:cgc_num_nodes": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int cgc_num_nodes(struct_0 *v0)\n
{\n
    struct_0 *v1;  // edi, Other Possible Types: unsigned int\n
    void* v2;  // esi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (!v1)\n
        return 0;\n
    do\n
    {\n
        v3 = cgc_num_nodes(*((v1 + 12)));\n
        v1 = *((v1 + 16));\n
        v2 = v2 + v3 + 1;\n
    } while (v1);\n
    return v2;\n
}\n
", "4216064:cgc__tree_to_list": "typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc__tree_to_list(unsigned int v1[5], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3[5];  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (v3)\n
    {\n
        cgc_append_list(&a0, v3[2], 1);\n
        cgc__tree_to_list(v3[3], a0);\n
        cgc__tree_to_list(v3[4], a0);\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4216146:sub_405552": null, "4216160:cgc_tree_to_list": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c[5];\n
    unsigned int field_10[5];\n
} struct_0;\n
\n
int cgc_tree_to_list(unsigned int v0[5])\n
{\n
    struct_0 *v1;  // edi\n
    unsigned int v2;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v2 = cgc_init_list(v1->field_8);\n
    cgc__tree_to_list(v1->field_c, v2);\n
    cgc__tree_to_list(v1->field_10, v2);\n
    return v2;\n
}\n
", "4216242:sub_4055b2": null, "4216256:cgc_word_list_to_str": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_406709;\n
\n
int cgc_word_list_to_str(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct_0 *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // ebp\n
\n
    v7 = v6;\n
    if (!v7)\n
        return 0;\n
    v8 = cgc_calloc(1, 128);\n
    if (!v8)\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\");\n
    v2 = 128;\n
    v13 = &g_406709;\n
    v3 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\";\n
    v0 = &g_406709;\n
    while (true)\n
    {\n
        if (!*((v7 + 8)))\n
            return v8;\n
        v4 = cgc_strlen(v8);\n
        v5 = cgc_strlen(v8);\n
        v1 = v8;\n
        if (cgc_strlen(v13) + cgc_strlen(*((v7 + 8))) + v5 + 1 <= v2)\n
        {\n
            v8 = v1;\n
        }\n
        else\n
        {\n
            v9 = cgc_strlen(*((v7 + 8))) + cgc_strlen(v1);\n
            v10 = cgc_strlen(v0) + v9;\n
            v11 = v10 * 2 + 2;\n
            v8 = cgc_realloc(v1, v10 * 2 + 2);\n
            if (!v8)\n
                cgc__error(1, v3);\n
            v12 = v4;\n
            v2 = v11;\n
            cgc_memset(v8 + v12, 0, v11 - v12);\n
        }\n
        v13 = v0;\n
        cgc_strcat(v8, *((v7 + 8)));\n
        cgc_strcat(v8, v13);\n
        v7 = *(v7);\n
        if (!v7)\n
            return v8;\n
    }\n
}\n
", "4216373:sub_405635": null, "4216655:sub_40574f": null, "4216656:cgc_hash_str": "int cgc_hash_str(char *v0)\n
{\n
    int tmp_38;  // tmp #38\n
    int tmp_29;  // tmp #29\n
    char *v1;  // esi\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // edx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    char *v10;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = 3740118253;\n
    v8 = -87105875;\n
    if (!*(v1))\n
        return -87105875;\n
    v10 = v1 + 1;\n
    v9 = 3740118253;\n
    do\n
    {\n
        v3 = v8 * 33 >> 32;\n
        v4 = v8 * 33;\n
        v5 = v9 * 32 + v2 + v3;\n
        v6 = *(v10);\n
        v7 = v6 >> 31;\n
        tmp_29 = v4;\n
        v8 = v4 + v6;\n
        v9 = v5 + v7 + (tmp_29 + v6 < tmp_29);\n
        v10 += 1;\n
        tmp_38 = v7 | v6;\n
        v2 = v9;\n
    } while (tmp_38);\n
    return v8;\n
}\n
", "4216731:sub_40579b": null, "4216736:cgc_split_words": "extern char g_40670c;\n
\n
int cgc_split_words(unsigned int v3, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x1c]\n
    int tmp_5;  // tmp #5\n
    char *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v4;  // esi\n
    char *v6;  // edi\n
    unsigned int v7;  // eax\n
    char *v8;  // ebp\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edi\n
    char *v11;  // esi, Other Possible Types: unsigned int\n
    char *v12;  // eax\n
    char *v13;  // edi, Other Possible Types: unsigned int\n
    char *v14;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = v3;\n
    v0 = 0;\n
    if (!v4)\n
        return 0;\n
    v6 = cgc_calloc(1, cgc_strlen(v4) + 1);\n
    if (!v6)\n
        cgc__error(1, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\");\n
    v1 = v6;\n
    cgc_strncpy(v6, v4, cgc_strlen(v4));\n
    v7 = cgc_strlen(v4);\n
    if (v7 > 0)\n
    {\n
        v14 = v1;\n
        v13 = &v14[v7];\n
        v2 = v13;\n
        while (true)\n
        {\n
            v8 = v14;\n
            v9 = cgc_isspace(*(v14));\n
            v14 += 1;\n
            if (!v9)\n
            {\n
                v11 = v8;\n
                if (v8 < v13)\n
                {\n
                    v10 = v13 - v8;\n
                    v11 = v8;\n
                    while (cgc_isprint(*(v11)))\n
                    {\n
                        if (cgc_isspace(*(v11)))\n
                            break;\n
                        v11 += 1;\n
                        tmp_5 = v10;\n
                        v10 -= 1;\n
                        if (tmp_5 == 1)\n
                        {\n
                            v11 = v2;\n
                            break;\n
                        }\n
                    }\n
                }\n
                *(v11) = 0;\n
                v12 = cgc_calloc(1, cgc_strlen(v8) + 1);\n
                cgc_strcpy(v12, v8);\n
                v13 = v2;\n
                cgc_append_list(&v0, v12, 1);\n
                v14 = v11 + 1;\n
                if (v14 >= v13)\n
                    break;\n
            }\n
        }\n
    }\n
    if (a0)\n
    {\n
        cgc_strcpy(cgc_calloc(1, cgc_strlen(&g_40670c) + 1), &g_40670c);\n
        cgc_append_list(&v0, &g_40670c, 1);\n
    }\n
    cgc_free(v1);\n
    return v0;\n
}\n
", "4217163:sub_40594b": null, "4217168:cgc_chunk_words": "int cgc_chunk_words(void* v3, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x1c]\n
    int tmp_9;  // tmp #9\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    void* v10;  // ebp, Other Possible Types: unsigned int\n
\n
    v4 = a0;\n
    v5 = cgc_len_list(v3);\n
    v0 = 0;\n
    tmp_9 = v5;\n
    if (tmp_9 <= v4)\n
    {\n
        return 0;\n
    }\n
    else if ([D] x86g_calculate_condition(0x4<32>, 0x6<32>, ecx<4>, edi<4>, 0x0<32>))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        v1 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\";\n
        v2 = v5 - v4;\n
        do\n
        {\n
            v8 = v10;\n
            v10 += 1;\n
            v9 = cgc_copy_list(v3, v8, v4 + 1 + v8);\n
            if (!v9)\n
                cgc__error(1, v1);\n
            cgc_append_list(&v0, v9, 1);\n
        } while (v2 != v10);\n
        return v0;\n
    }\n
}\n
", "4217244:sub_40599c": null, "4217345:sub_405a01": null, "4217360:cgc_upto_last": "int cgc_upto_last(unsigned int v0)\n
{\n
    void* v1;  // esi\n
\n
    v1 = v0;\n
    if (v1 && cgc_len_list(v1) >= 2)\n
        return cgc_copy_list(v1, 0, cgc_len_list(v1) - 1);\n
    return 0;\n
}\n
", "4217439:sub_405a5f": null, "4217440:cgc_key_from_wordlist": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_key_from_wordlist(void* v2)\n
{\n
    char *v0;  // [bp-0x18]\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp-0x14]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    char *v11;  // ebp, Other Possible Types: unsigned int\n
\n
    v3 = cgc_word_list_to_str(v2);\n
    if (!v3)\n
        return 0;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 3740118253;\n
    v9 = -87105875;\n
    v0 = v3;\n
    if (*(v3))\n
    {\n
        v11 = v3 + 1;\n
        v10 = 3740118253;\n
        do\n
        {\n
            v5 = v9 * 33;\n
            v6 = v10 * 32 + v4 + (v9 * 33 >> 32);\n
            v7 = *(v11);\n
            v8 = v7 >> 31;\n
            v9 = v5 + v7;\n
            v10 = v6 + v8 + (v5 + v7 < v5);\n
            v11 += 1;\n
            tmp_38 = v8 | v7;\n
            v4 = v10;\n
        } while (tmp_38);\n
    }\n
    cgc_free(v0);\n
    return v9;\n
}\n
", "4217596:sub_405afc": null, "4217600:cgc_insert_wordlist": "int cgc_insert_wordlist(unsigned int v1, unsigned int *a0)\n
{\n
    char *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    int tmp_29;  // tmp #29\n
    int tmp_4;  // tmp #4\n
    void* v2;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v4;  // edi, Other Possible Types: unsigned int\n
    void* v5;  // eax\n
    char *v6;  // eax\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // edx\n
    char *v14;  // eax, Other Possible Types: unsigned int\n
    char *v15;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v16;  // ebp\n
    unsigned int v17[2];  // eax\n
\n
    v2 = v1;\n
    if (!v1)\n
        return -1;\n
    v4 = a0;\n
    if (!v4)\n
        return -1;\n
    if (cgc_len_list(v2) < 2)\n
        return 0;\n
    v5 = cgc_copy_list(v2, 0, cgc_len_list(v2) - 1);\n
    if (v5)\n
    {\n
        v6 = cgc_word_list_to_str(v5);\n
        if (!v6)\n
            return -1;\n
        if (!*(v6))\n
        {\n
            v8 = 3740118253;\n
            v0 = -87105875;\n
            cgc_free(v6);\n
        }\n
        else\n
        {\n
            v8 = 3740118253;\n
            v14 = -87105875;\n
            v0 = v6;\n
            v15 = v0 + 1;\n
            do\n
            {\n
                v9 = v14 * 33 >> 32;\n
                v10 = v14 * 33;\n
                v11 = 33 * v8 + v9;\n
                v12 = *(v15);\n
                v13 = v12 >> 31;\n
                tmp_29 = v10;\n
                v14 = v10 + v12;\n
                v8 = v11 + v13 + (tmp_29 + v12 < tmp_29);\n
                v15 += 1;\n
            } while (!(!v13) || !(!v12));\n
            cgc_free(v0);\n
            v0 = v14;\n
            tmp_4 = v14 | v8;\n
            v4 = a0;\n
            v2 = v1;\n
            if (!tmp_4)\n
                return -1;\n
        }\n
        v16 = cgc_lindex(v2, -1);\n
        if (!v16)\n
            cgc__error(3, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\");\n
        v17 = *(v4);\n
        if (!v17)\n
        {\n
            *(v4) = cgc_init_tree(v0, v8, v16);\n
        }\n
        else if (cgc_ins_tree(v17, v0, v8, v16) < 0)\n
        {\n
            cgc__error(2, \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\");\n
        }\n
    }\n
}\n
", "4218003:sub_405c93": null, "4218016:cgc_insert_wordlists": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_insert_wordlists(struct_0 *v0, unsigned int *a0)\n
{\n
    struct_0 *v1;  // esi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    if (!v1)\n
        return -1;\n
    while (true)\n
    {\n
        v3 = cgc_insert_wordlist(*((v1 + 8)), a0);\n
        if (v3 < 0)\n
            break;\n
        v1 = *(v1);\n
        if (!v1)\n
            break;\n
    }\n
    return v3 >> 31;\n
}\n
", "4218087:sub_405ce7": null, "4218096:cgc_str_to_wordlists": "int cgc_str_to_wordlists(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v4;  // esi\n
    unsigned int v5;  // edi\n
    void* **v6;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // eax\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = cgc_strlen(v3);\n
    v5 = cgc_calloc(1, v4 + 1);\n
    cgc_strncpy(v5, v3, v4);\n
    v4[v5] = 0;\n
    v6 = cgc_split_words(v5, 1);\n
    if (!v6)\n
        return 0;\n
    cgc_free(v5);\n
    v8 = cgc_len_list(v6);\n
    v0 = 0;\n
    if (v8 < 3)\n
        return 0;\n
    v12 = 0;\n
    v1 = \"/home/user/src/cb-multios/challenges/Enslavednode_chat/src/wl.c\";\n
    v2 = v8 - 2;\n
    do\n
    {\n
        v10 = v12 + 3;\n
        v11 = cgc_copy_list(v6, v12, v10);\n
        if (!v11)\n
            cgc__error(1, v1);\n
        cgc_append_list(&v0, v11, 1);\n
        v12 = v10 - 2;\n
    } while (v12 != v2);\n
    return v0;\n
}\n
", "4218252:sub_405d8c": null, "4218356:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}